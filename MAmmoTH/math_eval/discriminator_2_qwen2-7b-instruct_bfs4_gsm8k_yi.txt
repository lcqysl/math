INFO 09-22 14:45:16 llm_engine.py:174] Initializing an LLM engine (v0.5.4) with config: model='/cpfs/29f69eb5e2e60f26/user/sft_intern/slz/Qwen2-7B-Instruct', speculative_config=None, tokenizer='/cpfs/29f69eb5e2e60f26/user/sft_intern/slz/Qwen2-7B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None), seed=0, served_model_name=/cpfs/29f69eb5e2e60f26/user/sft_intern/slz/Qwen2-7B-Instruct, use_v2_block_manager=False, enable_prefix_caching=False)
INFO 09-22 14:45:17 model_runner.py:720] Starting to load model /cpfs/29f69eb5e2e60f26/user/sft_intern/slz/Qwen2-7B-Instruct...
INFO 09-22 14:45:24 model_runner.py:732] Loading model weights took 14.2487 GB
INFO 09-22 14:45:25 gpu_executor.py:102] # GPU blocks: 61183, # CPU blocks: 4681
INFO 09-22 14:45:27 model_runner.py:1024] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 09-22 14:45:27 model_runner.py:1028] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 09-22 14:45:35 model_runner.py:1225] Graph capturing finished in 7 secs.
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1151
1152
1153
1154
1155
1156
1157
1158
1159
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
1185
1186
1187
1188
1189
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
1204
1205
1206
1207
1208
1209
1210
1211
1212
1213
1214
1215
1216
1217
1218
1219
1220
1221
1222
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1237
1238
1239
1240
1241
1242
1243
1244
1245
1246
1247
1248
1249
1250
1251
1252
1253
1254
1255
1256
1257
1258
1259
1260
1261
1262
1263
1264
1265
1266
1267
1268
1269
1270
1271
1272
1273
1274
1275
1276
1277
1278
1279
1280
1281
1282
1283
1284
1285
1286
1287
1288
1289
1290
1291
1292
1293
1294
1295
1296
1297
1298
1299
1300
1301
1302
1303
1304
1305
1306
1307
1308
1309
1310
1311
1312
1313
1314
1315
1316
1317
1318
{'question': "Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", 'tree_solution': [["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "STEP: Begin by calculating the total number of eggs laid by Janet's ducks per day. Janet's ducks lay 16 eggs per day.\n\nSTEP: Next, calculate the number of eggs used by Janet for breakfast and baking muffins. Janet eats 3 eggs for breakfast and uses 4 eggs for baking muffins.\n\nSTEP: Determine the total number of eggs used by Janet for both breakfast and baking. Add the eggs eaten for breakfast (3 eggs) to the eggs used for baking (4 eggs).\n\nSTEP: Calculate the remaining eggs by subtracting the eggs used from the total eggs laid. Subtract the total eggs used (7 eggs) from the total eggs laid (16 eggs).\n\nSTEP: Convert the remaining eggs into dollars by multiplying the number of remaining eggs by the selling price per egg. Janet sells her eggs at $2 per egg.\n\nSTEP: The final answer is the total amount Janet makes at the farmers' market every day. This is found by multiplying the number of remaining eggs (remaining eggs from the previous step) by the selling price per egg ($2).", "STEP: Janet's ducks lay 16 eggs per day.\n\nSTEP: Janet uses 3 eggs for breakfast and 4 eggs for baking, totaling 7 eggs used.\n\nSTEP: Subtracting the eggs used from the total laid, we get 16 eggs laid - 7 eggs used = 9 eggs remaining.\n\nSTEP: To find out how much Janet makes at the farmers' market, we multiply the remaining eggs (9) by the selling price per egg ($2).\n\nSTEP: Therefore, Janet makes 9 eggs * $2/egg = $18 every day at the farmers' market.", "STEP: Janet's ducks lay 16 eggs per day.", "STEP: Janet's ducks lay 16 eggs per day.", "STEP: Janet's ducks lay 16 eggs per day.", "Let's think step by step. Janet's ducks lay 16 eggs per day.\n\nNext, calculate the number of eggs used by Janet for breakfast and baking muffins. Janet eats 3 eggs for breakfast and uses 4 eggs for baking muffins.\n\nDetermine the total number of eggs used by Janet for both breakfast and baking. Add the eggs eaten for breakfast (3 eggs) to the eggs used for baking (4 eggs).\n\nCalculate the remaining eggs by subtracting the eggs used from the total eggs laid. Subtract the total eggs used (7 eggs) from the total eggs laid (16 eggs).\n\nConvert the remaining eggs into dollars by multiplying the number of remaining eggs by the selling price per egg. Janet sells her eggs at $2 per egg.\n\nThe final answer is the total amount Janet makes at the farmers' market every day. This is found by multiplying the number of remaining eggs (remaining eggs from the previous step) by the selling price per egg ($2).\n\nJanet's ducks lay 16 eggs per day.\nJanet uses 3 eggs for breakfast and 4 eggs for baking, totaling 7 eggs used.\nSubtracting the eggs used from the total laid, we get 16 eggs laid - 7 eggs used = 9 eggs remaining.\nTo find out how much Janet makes at the farmers' market, we multiply the remaining eggs (9) by the selling price per egg ($2).\n\nTherefore, Janet makes 9 eggs * $2/egg = $18 every day at the farmers' market. The answer is: $18."], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "STEP: Begin by calculating the total number of eggs laid by Janet's ducks per day. Janet's ducks lay 16 eggs per day.\n\nSTEP: Next, calculate the number of eggs used by Janet for breakfast and baking muffins. Janet eats 3 eggs for breakfast and uses 4 eggs for baking muffins.\n\nSTEP: Determine the total number of eggs used by Janet for both breakfast and baking. Add the eggs eaten for breakfast (3 eggs) to the eggs used for baking (4 eggs).\n\nSTEP: Calculate the remaining eggs by subtracting the eggs used from the total eggs laid. Subtract the total eggs used (7 eggs) from the total eggs laid (16 eggs).\n\nSTEP: Convert the remaining eggs into dollars by multiplying the number of remaining eggs by the selling price per egg. Janet sells her eggs at $2 per egg.\n\nSTEP: The final answer is the total amount Janet makes at the farmers' market every day. This is found by multiplying the number of remaining eggs (remaining eggs from the previous step) by the selling price per egg ($2).", "STEP: Janet's ducks lay 16 eggs per day.\n\nSTEP: Janet uses 3 eggs for breakfast and 4 eggs for baking, totaling 7 eggs used.\n\nSTEP: Subtracting the eggs used from the total laid, we get 16 eggs laid - 7 eggs used = 9 eggs remaining.\n\nSTEP: To find out how much Janet makes at the farmers' market, we multiply the remaining eggs (9) by the selling price per egg ($2).\n\nSTEP: Therefore, Janet makes 9 eggs * $2/egg = $18 every day at the farmers' market.", "STEP: Janet's ducks lay 16 eggs per day.", "STEP: Janet's ducks lay 16 eggs per day.", "Let's think step by step. Janet's ducks lay 16 eggs per day.\n\nNext, calculate the number of eggs used by Janet for breakfast and baking. Janet eats 3 eggs for breakfast and uses 4 eggs for baking muffins.\n\nDetermine the total number of eggs used by Janet for both breakfast and baking. Add the eggs eaten for breakfast (3 eggs) to the eggs used for baking (4 eggs).\n\nCalculate the remaining eggs by subtracting the eggs used from the total eggs laid. Subtract the total eggs used (7 eggs) from the total eggs laid (16 eggs).\n\nConvert the remaining eggs into dollars by multiplying the number of remaining eggs by the selling price per egg. Janet sells her eggs at $2 per egg.\n\nThe final answer is the total amount Janet makes at the farmers' market every day. This is found by multiplying the number of remaining eggs (remaining eggs from the previous step) by the selling price per egg ($2).\n\nJanet's ducks lay 16 eggs per day.\nJanet uses 3 eggs for breakfast and 4 eggs for baking, totaling 7 eggs used.\nSubtracting the eggs used from the total laid, we get 16 eggs laid - 7 eggs used = 9 eggs remaining.\nTo find out how much Janet makes at the farmers' market, we multiply the remaining eggs (9) by the selling price per egg ($2).\n\nTherefore, Janet makes 9 eggs * $2/egg = $18 every day at the farmers' market. The answer is: $18."], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "STEP: Begin by calculating the total number of eggs laid by Janet's ducks per day. Janet's ducks lay 16 eggs per day.\n\nSTEP: Next, calculate the number of eggs used by Janet for breakfast and baking muffins. Janet eats 3 eggs for breakfast and uses 4 eggs for baking muffins.\n\nSTEP: Determine the total number of eggs used by Janet for both breakfast and baking. Add the eggs eaten for breakfast (3 eggs) to the eggs used for baking (4 eggs).\n\nSTEP: Calculate the remaining eggs by subtracting the eggs used from the total eggs laid. Subtract the total eggs used (7 eggs) from the total eggs laid (16 eggs).\n\nSTEP: Convert the remaining eggs into dollars by multiplying the number of remaining eggs by the selling price per egg. Janet sells her eggs at $2 per egg.\n\nSTEP: The final answer is the total amount Janet makes at the farmers' market every day. This is found by multiplying the number of remaining eggs (remaining eggs from the previous step) by the selling price per egg ($2).", "STEP: Janet's ducks lay 16 eggs per day.\n\nSTEP: Janet uses 3 eggs for breakfast and 4 eggs for baking, totaling 7 eggs used.\n\nSTEP: Subtracting the eggs used from the total laid, we get 16 eggs laid - 7 eggs used = 9 eggs remaining.\n\nSTEP: To find out how much Janet makes at the farmers' market, we multiply the remaining eggs (9) by the selling price per egg ($2).\n\nSTEP: Therefore, Janet makes 9 eggs * $2/egg = $18 every day at the farmers' market.", "STEP: Janet's ducks lay 16 eggs per day.", "Let's think step by step. Janet's ducks lay 16 eggs per day.\n\nNext, calculate the number of eggs used by Janet for breakfast and baking. Janet eats 3 eggs for breakfast and uses 4 eggs for baking muffins.\n\nDetermine the total number of eggs used by Janet for both breakfast and baking. Add the eggs eaten for breakfast (3 eggs) to the eggs used for baking (4 eggs).\n\nCalculate the remaining eggs by subtracting the eggs used from the total eggs laid. Subtract the total eggs used (7 eggs) from the total eggs laid (16 eggs).\n\nConvert the remaining eggs into dollars by multiplying the number of remaining eggs by the selling price per egg. Janet sells her eggs at $2 per egg.\n\nThe final answer is the total amount Janet makes at the farmers' market every day. This is found by multiplying the number of remaining eggs (remaining eggs from the previous step) by the selling price per egg ($2).\n\nJanet's ducks lay 16 eggs per day.\n\nJanet uses 3 eggs for breakfast and 4 eggs for baking, totaling 7 eggs used.\n\nSubtracting the eggs used from the total laid, we get 16 eggs laid - 7 eggs used = 9 eggs remaining.\n\nTo find out how much Janet makes at the farmers' market, we multiply the remaining eggs (9) by the selling price per egg ($2).\n\nTherefore, Janet makes 9 eggs * $2/egg = $18 every day at the farmers' market. The answer is: $18."], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "STEP: Begin by calculating the total number of eggs laid by Janet's ducks per day. Janet's ducks lay 16 eggs per day.\n\nSTEP: Next, calculate the number of eggs used by Janet for breakfast and baking muffins. Janet eats 3 eggs for breakfast and uses 4 eggs for baking muffins.\n\nSTEP: Determine the total number of eggs used by Janet for both breakfast and baking. Add the eggs eaten for breakfast (3 eggs) to the eggs used for baking (4 eggs).\n\nSTEP: Calculate the remaining eggs by subtracting the eggs used from the total eggs laid. Subtract the total eggs used (7 eggs) from the total eggs laid (16 eggs).\n\nSTEP: Convert the remaining eggs into dollars by multiplying the number of remaining eggs by the selling price per egg. Janet sells her eggs at $2 per egg.\n\nSTEP: The final answer is the total amount Janet makes at the farmers' market every day. This is found by multiplying the number of remaining eggs (remaining eggs from the previous step) by the selling price per egg ($2).", "STEP: Janet's ducks lay 16 eggs per day.\n\nSTEP: Janet uses 3 eggs for breakfast and 4 eggs for baking, totaling 7 eggs used.\n\nSTEP: Subtracting the eggs used from the total laid, we get 16 eggs laid - 7 eggs used = 9 eggs remaining.\n\nSTEP: To find out how much Janet makes at the farmers' market, we multiply the remaining eggs (9) by the selling price per egg ($2).\n\nSTEP: Therefore, Janet makes 9 eggs * $2/egg = $18 every day at the farmers' market.", "Let's think step by step.\n\n1. Janet's ducks lay 16 eggs per day.\n2. She eats 3 eggs for breakfast every morning.\n3. She uses 4 eggs for baking muffins every day.\n4. She sells the remaining eggs at the farmers' market daily for $2 per fresh duck egg.\n\nNow let's calculate the steps:\n\n1. Total eggs laid by ducks: 16 eggs\n2. Eggs used for breakfast: 3 eggs\n3. Eggs used for baking: 4 eggs\n4. Remaining eggs: 16 eggs - 3 eggs (breakfast) - 4 eggs (baking) = 9 eggs\n5. Amount of money she makes at the farmers' market: 9 eggs * $2/egg = $18\n\nThe answer is: $18."], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "STEP: Begin by calculating the total number of eggs laid by Janet's ducks per day. Janet's ducks lay 16 eggs per day.\n\nSTEP: Next, calculate the number of eggs used by Janet for breakfast and baking muffins. Janet eats 3 eggs for breakfast and uses 4 eggs for baking muffins.\n\nSTEP: Determine the total number of eggs used by Janet for both breakfast and baking. Add the eggs eaten for breakfast (3 eggs) to the eggs used for baking (4 eggs).\n\nSTEP: Calculate the remaining eggs by subtracting the eggs used from the total eggs laid. Subtract the total eggs used (7 eggs) from the total eggs laid (16 eggs).\n\nSTEP: Convert the remaining eggs into dollars by multiplying the number of remaining eggs by the selling price per egg. Janet sells her eggs at $2 per egg.\n\nSTEP: The final answer is the total amount Janet makes at the farmers' market every day. This is found by multiplying the number of remaining eggs (remaining eggs from the previous step) by the selling price per egg ($2).", "Let's think step by step.\n\n1. Janet's ducks lay 16 eggs per day.\n2. She eats 3 eggs for breakfast every morning.\n3. She uses 4 eggs for baking muffins every day.\n4. She sells the remaining eggs at the farmers' market daily for $2 per fresh duck egg.\n\nSTEP: Calculate the total number of eggs used by Janet for breakfast and baking.\nAdd the eggs eaten for breakfast (3 eggs) to the eggs used for baking (4 eggs). 3 + 4 = 7 eggs.\n\nSTEP: Determine the remaining eggs by subtracting the eggs used from the total eggs laid.\nSubtract the total eggs used (7 eggs) from the total eggs laid (16 eggs). 16 - 7 = 9 eggs remaining.\n\nSTEP: Convert the remaining eggs into dollars by multiplying the number of remaining eggs by the selling price per egg.\nJanet sells her eggs at $2 per egg. 9 eggs remaining x $2 per egg = $18.\n\nThe answer is: $18."], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "Let's think step by step. Janet's ducks lay 16 eggs per day. She uses 3 eggs for breakfast and 4 for baking muffins, which is a total of 3 + 4 = 7 eggs used daily. So, she has 16 - 7 = 9 eggs remaining to sell at the farmers' market. She sells these 9 eggs for $2 each, which means she makes 9 * $2 = $18 every day at the farmers' market. The answer is: $18."], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "CLARIFIED QUESTION: Janet has ducks that lay 16 eggs per day. From these eggs, she uses 3 for breakfast and 4 to bake muffins for her friends. She sells the remaining eggs at the farmers' market for $2 per egg. How much money does she earn at the farmers' market every day?", "STEP: Calculate the total number of eggs used for breakfast and baking muffins.\n\nSince Janet uses 3 eggs for breakfast and 4 eggs for baking muffins, the total number of eggs used is 3 (breakfast) + 4 (muffins) = 7 eggs.\n\nSTEP: Determine the number of eggs remaining after breakfast and baking muffins.\n\nJanet starts with 16 eggs and uses 7 for breakfast and baking muffins. To find the remaining eggs, subtract the used eggs from the total eggs: 16 (total eggs) - 7 (used eggs) = 9 eggs remaining.\n\nSTEP: Calculate the amount of money earned from selling the remaining eggs at the farmers' market.\n\nJanet sells the remaining 9 eggs at the farmers' market for $2 per egg. To find out how much she earns, multiply the number of eggs by the price per egg: 9 (remaining eggs) × $2 (price per egg) = $18.\n\nSo, Janet makes $18 every day at the farmers' market from selling her remaining eggs.", 'STEP: Calculate the total number of eggs used for breakfast and baking muffins.', 'STEP: Calculate the number of eggs remaining after breakfast and baking muffins.', 'STEP: Calculate the total number of eggs used for breakfast and baking muffins.\n\nAs previously determined, Janet uses 3 eggs for breakfast and 4 eggs for baking muffins. Therefore, the total number of eggs used is 3 (breakfast) + 4 (muffins) = 7 eggs.', "STEP: Verify the number of eggs remaining after breakfast and baking muffins.\n\nFrom the previous step, we know that Janet has 9 eggs remaining after using 3 for breakfast and 4 for baking muffins. To ensure this number is accurate, we can add up the eggs used and subtract from the total to confirm the remaining eggs: 3 (breakfast) + 4 (muffins) + 2 (remaining) = 9 eggs. This confirms that Janet has 9 eggs left for selling at the farmers' market.", "Let's think step by step.\n\nJanet starts with 16 eggs and uses 3 for breakfast and 4 to bake muffins. To find the remaining eggs, subtract the used eggs from the total eggs: 16 (total eggs) - 3 (breakfast) - 4 (muffins) = 9 eggs remaining.\n\nJanet sells the remaining 9 eggs at the farmers' market for $2 per egg. To find out how much she earns, multiply the number of eggs by the price per egg: 9 (remaining eggs) × $2 (price per egg) = $18.\n\nSo, Janet makes $18 every day at the farmers' market from selling her remaining eggs. The answer is: $18."], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "CLARIFIED QUESTION: Janet has ducks that lay 16 eggs per day. From these eggs, she uses 3 for breakfast and 4 to bake muffins for her friends. She sells the remaining eggs at the farmers' market for $2 per egg. How much money does she earn at the farmers' market every day?", "STEP: Calculate the total number of eggs used for breakfast and baking muffins.\n\nSince Janet uses 3 eggs for breakfast and 4 eggs for baking muffins, the total number of eggs used is 3 (breakfast) + 4 (muffins) = 7 eggs.\n\nSTEP: Determine the number of eggs remaining after breakfast and baking muffins.\n\nJanet starts with 16 eggs and uses 7 for breakfast and baking muffins. To find the remaining eggs, subtract the used eggs from the total eggs: 16 (total eggs) - 7 (used eggs) = 9 eggs remaining.\n\nSTEP: Calculate the amount of money earned from selling the remaining eggs at the farmers' market.\n\nJanet sells the remaining 9 eggs at the farmers' market for $2 per egg. To find out how much she earns, multiply the number of eggs by the price per egg: 9 (remaining eggs) × $2 (price per egg) = $18.\n\nSo, Janet makes $18 every day at the farmers' market from selling her remaining eggs.", 'STEP: Calculate the total number of eggs used for breakfast and baking muffins.', 'STEP: Calculate the number of eggs remaining after breakfast and baking muffins.', 'STEP: Calculate the total number of eggs used for breakfast and baking muffins.\n\nAs previously determined, Janet uses 3 eggs for breakfast and 4 eggs for baking muffins. Therefore, the total number of eggs used is 3 (breakfast) + 4 (muffins) = 7 eggs.', "Let's think step by step. Janet starts with 16 eggs and uses 7 for breakfast and baking muffins. To find the remaining eggs, subtract the used eggs from the total eggs: 16 (total eggs) - 7 (used eggs) = 9 eggs remaining.\n\nJanet sells the remaining 9 eggs at the farmers' market for $2 per egg. To find out how much she earns, multiply the number of eggs by the price per egg: 9 (remaining eggs) × $2 (price per egg) = $18.\n\nSo, Janet makes $18 every day at the farmers' market from selling her remaining eggs. The answer is: $18."], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "CLARIFIED QUESTION: Janet has ducks that lay 16 eggs per day. From these eggs, she uses 3 for breakfast and 4 to bake muffins for her friends. She sells the remaining eggs at the farmers' market for $2 per egg. How much money does she earn at the farmers' market every day?", "STEP: Calculate the total number of eggs used for breakfast and baking muffins.\n\nSince Janet uses 3 eggs for breakfast and 4 eggs for baking muffins, the total number of eggs used is 3 (breakfast) + 4 (muffins) = 7 eggs.\n\nSTEP: Determine the number of eggs remaining after breakfast and baking muffins.\n\nJanet starts with 16 eggs and uses 7 for breakfast and baking muffins. To find the remaining eggs, subtract the used eggs from the total eggs: 16 (total eggs) - 7 (used eggs) = 9 eggs remaining.\n\nSTEP: Calculate the amount of money earned from selling the remaining eggs at the farmers' market.\n\nJanet sells the remaining 9 eggs at the farmers' market for $2 per egg. To find out how much she earns, multiply the number of eggs by the price per egg: 9 (remaining eggs) × $2 (price per egg) = $18.\n\nSo, Janet makes $18 every day at the farmers' market from selling her remaining eggs.", 'STEP: Calculate the total number of eggs used for breakfast and baking muffins.', 'STEP: Calculate the number of eggs remaining after breakfast and baking muffins.', "Let's think step by step.\n\nJanet starts with 16 eggs and uses 3 eggs for breakfast and 4 eggs for baking muffins.\nSo the total number of eggs used is 3 (breakfast) + 4 (muffins) = 7 eggs.\n\nJanet starts with 16 eggs and uses 7 for breakfast and baking muffins.\nTo find the remaining eggs, subtract the used eggs from the total eggs: 16 (total eggs) - 7 (used eggs) = 9 eggs remaining.\n\nJanet sells the remaining 9 eggs at the farmers' market for $2 per egg.\nTo find out how much she earns, multiply the number of eggs by the price per egg: 9 (remaining eggs) × $2 (price per egg) = $18.\n\nSo, Janet makes $18 every day at the farmers' market from selling her remaining eggs. The answer is: $18."], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "CLARIFIED QUESTION: Janet has ducks that lay 16 eggs per day. From these eggs, she uses 3 for breakfast and 4 to bake muffins for her friends. She sells the remaining eggs at the farmers' market for $2 per egg. How much money does she earn at the farmers' market every day?", "STEP: Calculate the total number of eggs used for breakfast and baking muffins.\n\nSince Janet uses 3 eggs for breakfast and 4 eggs for baking muffins, the total number of eggs used is 3 (breakfast) + 4 (muffins) = 7 eggs.\n\nSTEP: Determine the number of eggs remaining after breakfast and baking muffins.\n\nJanet starts with 16 eggs and uses 7 for breakfast and baking muffins. To find the remaining eggs, subtract the used eggs from the total eggs: 16 (total eggs) - 7 (used eggs) = 9 eggs remaining.\n\nSTEP: Calculate the amount of money earned from selling the remaining eggs at the farmers' market.\n\nJanet sells the remaining 9 eggs at the farmers' market for $2 per egg. To find out how much she earns, multiply the number of eggs by the price per egg: 9 (remaining eggs) × $2 (price per egg) = $18.\n\nSo, Janet makes $18 every day at the farmers' market from selling her remaining eggs.", 'STEP: Calculate the total number of eggs used for breakfast and baking muffins.', "Let's think step by step. Janet uses 3 eggs for breakfast and 4 eggs for baking muffins, so the total number of eggs used is 3 (breakfast) + 4 (muffins) = 7 eggs.\n\nLet's think step by step. Janet starts with 16 eggs and uses 7 for breakfast and baking muffins. To find the remaining eggs, subtract the used eggs from the total eggs: 16 (total eggs) - 7 (used eggs) = 9 eggs remaining.\n\nLet's think step by step. Janet sells the remaining 9 eggs at the farmers' market for $2 per egg. To find out how much she earns, multiply the number of eggs by the price per egg: 9 (remaining eggs) × $2 (price per egg) = $18.\n\nSo, Janet makes $18 every day at the farmers' market from selling her remaining eggs. The answer is: $18."], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "CLARIFIED QUESTION: Janet has ducks that lay 16 eggs per day. From these eggs, she uses 3 for breakfast and 4 to bake muffins for her friends. She sells the remaining eggs at the farmers' market for $2 per egg. How much money does she earn at the farmers' market every day?", "STEP: Calculate the total number of eggs used for breakfast and baking muffins.\n\nSince Janet uses 3 eggs for breakfast and 4 eggs for baking muffins, the total number of eggs used is 3 (breakfast) + 4 (muffins) = 7 eggs.\n\nSTEP: Determine the number of eggs remaining after breakfast and baking muffins.\n\nJanet starts with 16 eggs and uses 7 for breakfast and baking muffins. To find the remaining eggs, subtract the used eggs from the total eggs: 16 (total eggs) - 7 (used eggs) = 9 eggs remaining.\n\nSTEP: Calculate the amount of money earned from selling the remaining eggs at the farmers' market.\n\nJanet sells the remaining 9 eggs at the farmers' market for $2 per egg. To find out how much she earns, multiply the number of eggs by the price per egg: 9 (remaining eggs) × $2 (price per egg) = $18.\n\nSo, Janet makes $18 every day at the farmers' market from selling her remaining eggs.", "Let's think step by step.\n\nJanet's ducks lay 16 eggs per day.\nShe uses 3 eggs for breakfast and 4 eggs to bake muffins.\nShe sells the remaining eggs at the farmers' market for $2 per egg.\n\nFirst, calculate the total number of eggs used for breakfast and baking muffins: 3 (breakfast) + 4 (muffins) = 7 eggs.\n\nNext, determine the number of eggs remaining after breakfast and baking muffins: 16 (total eggs) - 7 (used eggs) = 9 eggs remaining.\n\nNow, calculate the amount of money earned from selling the remaining eggs at the farmers' market: 9 (remaining eggs) × $2 (price per egg) = $18.\n\nThe answer is: $18."], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "CLARIFIED QUESTION: Janet has ducks that lay 16 eggs per day. From these eggs, she uses 3 for breakfast and 4 to bake muffins for her friends. She sells the remaining eggs at the farmers' market for $2 per egg. How much money does she earn at the farmers' market every day?", "Let's think step by step. Janet's ducks lay 16 eggs per day. She uses 3 eggs for breakfast and 4 eggs to bake muffins. So she uses 3 + 4 = 7 eggs in total. From the remaining eggs, she sells 16 - 7 = 9 eggs at the farmers' market. She sells each egg for $2, so she earns 9 * $2 = $18 at the farmers' market every day. The answer is: $18."]], 'type': 'gsm8k', 'answer': '18'}
dict_keys(['question', 'tree_solution', 'type', 'answer'])
BackVerify: 0
** most_common: ('18', 12), gold_ans: 18
** most_common: ('3', 12), gold_ans: 3
** most_common: ('Joshincurredalossof$10,000', 4), gold_ans: 70000
** most_common: ('1620', 5), gold_ans: 540
** most_common: ('20', 9), gold_ans: 20
** most_common: ('64', 6), gold_ans: 64
** most_common: ('260', 11), gold_ans: 260
** most_common: ('120', 6), gold_ans: 160
** most_common: ('135', 5), gold_ans: 45
** most_common: ('460', 11), gold_ans: 460
** most_common: ('366', 10), gold_ans: 366
** most_common: ('694', 10), gold_ans: 694
** most_common: ('29', 3), gold_ans: 13
** most_common: ('12', 5), gold_ans: 18
** most_common: ('60%', 10), gold_ans: 60
** most_common: ('Themerchantshouldchoosethejewelrypurchaseplantomaximizeprofit', 4), gold_ans: 125
** most_common: ('230', 4), gold_ans: 230
** most_common: ('57,500', 8), gold_ans: 57500
** most_common: ('7.0', 6), gold_ans: 7
** most_common: ('6', 8), gold_ans: 6
** most_common: ('Approximately12.72%oftheremaining24litersiswater', 1), gold_ans: 15
** most_common: ('25', 2), gold_ans: 14
** most_common: ('7', 9), gold_ans: 7
** most_common: ('8', 8), gold_ans: 8
** most_common: ('26', 8), gold_ans: 26
** most_common: ('2', 7), gold_ans: 2
** most_common: ('243', 5), gold_ans: 243
** most_common: ('16.00', 7), gold_ans: 16
** most_common: ('Henrytraveled25milesbetweenhisfirstandsecondstops', 2), gold_ans: 25
** most_common: ('Thebootscost$104', 4), gold_ans: 104
** most_common: ('109', 6), gold_ans: 109
** most_common: ('80', 7), gold_ans: 80
** most_common: ('35', 9), gold_ans: 35
** most_common: ('70', 6), gold_ans: 70
** most_common: ('23', 6), gold_ans: 23
** most_common: ('9', 11), gold_ans: 9
** most_common: ('75.00', 7), gold_ans: 75
** most_common: ('5', 3), gold_ans: 2
** most_common: ('Johnrunsat9.5milesperhouroneachofthethreedaysheruns', 4), gold_ans: 10
** most_common: ('18', 4), gold_ans: 18
** most_common: ("Brandon'siPhoneis8yearsold", 8), gold_ans: 8
** most_common: ('200', 8), gold_ans: 200
** most_common: ('26', 11), gold_ans: 26
** most_common: ('200', 4), gold_ans: 48
** most_common: ('20.00', 6), gold_ans: 20
** most_common: ('104', 9), gold_ans: 104
** most_common: ('163', 4), gold_ans: 163
** most_common: ('800', 5), gold_ans: 800
** most_common: ('8', 12), gold_ans: 8
** most_common: ('30', 10), gold_ans: 30
BackVerify: 50
** most_common: ('294', 9), gold_ans: 294
** most_common: ('5', 9), gold_ans: 5
** most_common: ('15', 8), gold_ans: 15
** most_common: ('40', 9), gold_ans: 40
** most_common: ('55', 4), gold_ans: 40
** most_common: ('14', 12), gold_ans: 14
** most_common: ('3', 8), gold_ans: 3
** most_common: ('83', 9), gold_ans: 83
** most_common: ('31.00', 4), gold_ans: 57
** most_common: ('187', 12), gold_ans: 187
** most_common: ('17', 8), gold_ans: 17
** most_common: ('1430', 4), gold_ans: 1430
** most_common: ('5', 2), gold_ans: 25000
** most_common: ('1596', 10), gold_ans: 1596
** most_common: ('300', 8), gold_ans: 300
** most_common: ('36', 9), gold_ans: 36
** most_common: ('48', 5), gold_ans: 48
** most_common: ('695', 2), gold_ans: 595
** most_common: ('36', 7), gold_ans: 36
** most_common: ('Baileystartedwith$60', 7), gold_ans: 60
** most_common: ('7,425.00', 2), gold_ans: 7425
** most_common: ('60', 10), gold_ans: 60
** most_common: ('221', 8), gold_ans: 221
** most_common: ('255', 6), gold_ans: 255
** most_common: ('Artiewillmake$88.00fromsellingtheflowersattheFarmersMarkettoday', 4), gold_ans: 88
** most_common: ('7.5', 6), gold_ans: 60
** most_common: ("Ceciliawillneed5bagsofdogfoodfortheentirefirstyearofherpuppy'slife", 5), gold_ans: 5
** most_common: ('100', 8), gold_ans: 100
** most_common: ('Vincentsaves$6.00bybuying18flowersatthebetterprice', 3), gold_ans: 6
** most_common: ('70', 10), gold_ans: 70
** most_common: ('10', 6), gold_ans: 10
** most_common: ('17', 10), gold_ans: 17
** most_common: ('623', 8), gold_ans: 623
** most_common: ('600', 11), gold_ans: 600
** most_common: ('15', 8), gold_ans: 15
** most_common: ('44', 6), gold_ans: 44
** most_common: ('18', 3), gold_ans: 22
** most_common: ('878.46', 5), gold_ans: 9360
** most_common: ('8,000', 5), gold_ans: 8000
** most_common: ('18', 9), gold_ans: 24
** most_common: ('225', 11), gold_ans: 225
** most_common: ('28', 8), gold_ans: 28
** most_common: ('4', 7), gold_ans: 4
** most_common: ('44', 6), gold_ans: 36
** most_common: ('336', 5), gold_ans: 348
** most_common: ('40', 12), gold_ans: 40
** most_common: ('3', 8), gold_ans: 3
** most_common: ('12', 5), gold_ans: 12
** most_common: ('5', 9), gold_ans: 5
** most_common: ('58', 12), gold_ans: 58
BackVerify: 100
** most_common: ('175', 3), gold_ans: 175
** most_common: ('6', 5), gold_ans: 6
** most_common: ('22', 3), gold_ans: 26
** most_common: ('140', 9), gold_ans: 140
** most_common: ('500', 10), gold_ans: 500
** most_common: ('20', 10), gold_ans: 20
** most_common: ('72', 7), gold_ans: 72
** most_common: ('3', 6), gold_ans: 3
** most_common: ('50', 7), gold_ans: 50
** most_common: ('28.00', 12), gold_ans: 28
** most_common: ('45', 11), gold_ans: 45
** most_common: ('16', 5), gold_ans: 16
** most_common: ('24', 7), gold_ans: 24
** most_common: ('25', 5), gold_ans: 25
** most_common: ('6', 10), gold_ans: 6
** most_common: ('Sashamakesaprofitof$90ifshesellsallthelumber', 3), gold_ans: 90
** most_common: ('42', 10), gold_ans: 42
** most_common: ('360', 7), gold_ans: 360
** most_common: ('4', 12), gold_ans: 4
** most_common: ('33', 3), gold_ans: 95200
** most_common: ('240', 5), gold_ans: 240
** most_common: ('27', 9), gold_ans: 27
** most_common: ('46', 3), gold_ans: 48
** most_common: ('50', 9), gold_ans: 50
** most_common: ('30', 5), gold_ans: 10
** most_common: ('10', 6), gold_ans: 10
** most_common: ('82', 8), gold_ans: 82
** most_common: ('120', 8), gold_ans: 120
** most_common: ('880', 5), gold_ans: 880
** most_common: ('10,000', 6), gold_ans: 10000
** most_common: ('30', 8), gold_ans: 30
** most_common: ('940', 6), gold_ans: 940
** most_common: ('60', 11), gold_ans: 60
** most_common: ('13', 9), gold_ans: 13
** most_common: ('720', 8), gold_ans: 720
** most_common: ('40', 9), gold_ans: 40
** most_common: ('6', 7), gold_ans: 6
** most_common: ('29.00', 3), gold_ans: 29
** most_common: ('29', 3), gold_ans: 105
** most_common: ('70', 6), gold_ans: 70
** most_common: ('20%', 12), gold_ans: 20
** most_common: ('400', 10), gold_ans: 400
** most_common: ('140', 12), gold_ans: 140
** most_common: ('29.3', 3), gold_ans: 16
** most_common: ('20', 8), gold_ans: 20
** most_common: ('4000', 6), gold_ans: 4000
** most_common: ('2125', 10), gold_ans: 2,125
** most_common: ('45', 5), gold_ans: 75
** most_common: ('30', 10), gold_ans: 30
** most_common: ('16', 9), gold_ans: 16
BackVerify: 150
** most_common: ('4', 9), gold_ans: 4
** most_common: ('4.75', 3), gold_ans: 5
** most_common: ('4.00', 5), gold_ans: 4
** most_common: ('48', 5), gold_ans: 48
** most_common: ('272', 8), gold_ans: 272
** most_common: ('280', 9), gold_ans: 280
** most_common: ('1400', 11), gold_ans: 1400
** most_common: ('1320', 2), gold_ans: 80
** most_common: ('34', 5), gold_ans: 34
** most_common: ('19', 6), gold_ans: 15
** most_common: ('16', 12), gold_ans: 16
** most_common: ('32', 10), gold_ans: 32
** most_common: ('1280', 5), gold_ans: 92
** most_common: ('50', 7), gold_ans: 50
** most_common: ('15', 4), gold_ans: 15
** most_common: ('€77', 7), gold_ans: 77
** most_common: ('5', 8), gold_ans: 5
** most_common: ('16', 7), gold_ans: 16
** most_common: ('18', 11), gold_ans: 18
** most_common: ('120', 10), gold_ans: 120
** most_common: ('150', 6), gold_ans: 150
** most_common: ('1210', 11), gold_ans: 1210
** most_common: ('51', 11), gold_ans: 51
** most_common: ('18,000', 7), gold_ans: 18000
** most_common: ('95', 7), gold_ans: 95
** most_common: ('7.50', 5), gold_ans: 15
** most_common: ('100', 11), gold_ans: 100
** most_common: ('350', 9), gold_ans: 350
** most_common: ('122', 10), gold_ans: 122
** most_common: ('130', 8), gold_ans: 130
** most_common: ('20', 12), gold_ans: 20
** most_common: ('160', 11), gold_ans: 160
** most_common: ('Jeaniscurrently30yearsold', 3), gold_ans: 23
** most_common: ('2', 4), gold_ans: 2
** most_common: ('Itis100%morelikelythatJerryrollsanumbergreaterthan3thanthatherollstwoevennumbersinarow', 3), gold_ans: 25
** most_common: ('30', 11), gold_ans: 30
** most_common: ('5', 8), gold_ans: 5
** most_common: ('106.1208', 10), gold_ans: 106
** most_common: ('50', 11), gold_ans: 50
** most_common: ('25', 3), gold_ans: 34
** most_common: ('360', 12), gold_ans: 360
** most_common: ('0.05', 5), gold_ans: 5
** most_common: ('Tomhas115treesleftafter10years', 3), gold_ans: 91
** most_common: ('18', 2), gold_ans: 24
** most_common: ('10', 9), gold_ans: 10
** most_common: ('12', 7), gold_ans: 12
** most_common: ('120', 10), gold_ans: 120
** most_common: ('6,277', 7), gold_ans: 6277
** most_common: ('Elainenowhasatotalof320Pokemoncards', 5), gold_ans: 320
** most_common: ('7500', 10), gold_ans: 7500
BackVerify: 200
** most_common: ('55', 8), gold_ans: 55
** most_common: ('114,200', 8), gold_ans: 114,200
** most_common: ('100', 12), gold_ans: 100
** most_common: ('31', 3), gold_ans: 31
** most_common: ('98', 4), gold_ans: 98
** most_common: ('120', 5), gold_ans: 98
** most_common: ('860', 8), gold_ans: 860
** most_common: ('2600', 6), gold_ans: 2600
** most_common: ('76', 7), gold_ans: 76
** most_common: ('740', 5), gold_ans: 145
** most_common: ('10', 6), gold_ans: 10
** most_common: ('4', 7), gold_ans: 4
** most_common: ('5', 10), gold_ans: 5
** most_common: ('250', 12), gold_ans: 250
** most_common: ('16', 3), gold_ans: 8
** most_common: ('44', 6), gold_ans: 44
** most_common: ('220', 6), gold_ans: 220
** most_common: ('15', 9), gold_ans: 15
** most_common: ('45', 6), gold_ans: 45
** most_common: ('29', 4), gold_ans: 54
** most_common: ('70', 10), gold_ans: 70
** most_common: ('90', 9), gold_ans: 90
** most_common: ('140', 10), gold_ans: 140
** most_common: ('20,000', 12), gold_ans: 20000
** most_common: ('180', 9), gold_ans: 180
** most_common: ('9', 11), gold_ans: 9
** most_common: ('33', 4), gold_ans: 33
** most_common: ('9', 3), gold_ans: 9
** most_common: ('1', 10), gold_ans: 1
** most_common: ('21', 10), gold_ans: 21
** most_common: ('276,000', 8), gold_ans: 276,000
** most_common: ('50', 9), gold_ans: 50
** most_common: ('75', 12), gold_ans: 75
** most_common: ('12', 6), gold_ans: 12
** most_common: ('14', 4), gold_ans: 21
** most_common: ('11', 10), gold_ans: 10
** most_common: ('30', 5), gold_ans: 31
** most_common: ('90', 10), gold_ans: 90
** most_common: ('68', 11), gold_ans: 68
** most_common: ('280', 7), gold_ans: 280
** most_common: ('21', 9), gold_ans: 21
** most_common: ('6', 6), gold_ans: 6
** most_common: ('3', 3), gold_ans: 3
** most_common: ('250', 5), gold_ans: 250
** most_common: ('GingergaveGriffin7fries', 4), gold_ans: 20
** most_common: ('14', 10), gold_ans: 7
** most_common: ('27,000', 6), gold_ans: 27000
** most_common: ('32', 10), gold_ans: 32
** most_common: ('300', 6), gold_ans: 300
** most_common: ('5600', 5), gold_ans: 5,600
BackVerify: 250
** most_common: ('17', 3), gold_ans: 17
** most_common: ('70', 7), gold_ans: 70
** most_common: ('97', 3), gold_ans: 73
** most_common: ('18', 9), gold_ans: 18
** most_common: ('84', 6), gold_ans: 84
** most_common: ('176', 6), gold_ans: 192
** most_common: ('45.00', 6), gold_ans: 45
** most_common: ('5600', 7), gold_ans: 5600
** most_common: ('6.00', 5), gold_ans: 6
** most_common: ('166', 3), gold_ans: 168
** most_common: ('11', 7), gold_ans: 11
** most_common: ('62', 10), gold_ans: 62
** most_common: ('270', 9), gold_ans: 270
** most_common: ('8', 5), gold_ans: 8
** most_common: ('400', 7), gold_ans: 400
** most_common: ('9,500', 8), gold_ans: 9500
** most_common: ('118,000', 6), gold_ans: 118000
** most_common: ('43', 4), gold_ans: 91
** most_common: ('1375', 7), gold_ans: 1375
** most_common: ('4', 11), gold_ans: 4
** most_common: ('762', 12), gold_ans: 762
** most_common: ('20', 9), gold_ans: 20
** most_common: ('5.00', 6), gold_ans: 5
** most_common: ('315', 7), gold_ans: 315
** most_common: ('3200', 9), gold_ans: 3200
** most_common: ('138', 8), gold_ans: 138
** most_common: ('9', 9), gold_ans: 9
** most_common: ('4', 9), gold_ans: 4
** most_common: ('40', 7), gold_ans: 40
** most_common: ('6', 9), gold_ans: 6
** most_common: ('7', 7), gold_ans: 7
** most_common: ('2450', 11), gold_ans: 2450
** most_common: ('195', 6), gold_ans: 195
** most_common: ('68', 9), gold_ans: 68
** most_common: ('360', 5), gold_ans: 360
** most_common: ('21', 12), gold_ans: 21
** most_common: ('90', 11), gold_ans: 90
** most_common: ('8', 10), gold_ans: 8
** most_common: ('3truckswillbeneededtotransport80flagstonesinonetrip', 5), gold_ans: 3
** most_common: ('16', 8), gold_ans: 16
** most_common: ('390', 9), gold_ans: 390
** most_common: ('2', 6), gold_ans: 2
** most_common: ('75', 9), gold_ans: 75
** most_common: ('29', 3), gold_ans: 83
** most_common: ('3', 4), gold_ans: 3
** most_common: ('370', 6), gold_ans: 370
** most_common: ('6', 5), gold_ans: 3
** most_common: ('55', 8), gold_ans: 55
** most_common: ('Carmenpaysatotalof$350fortheantiquedesk', 4), gold_ans: 500
** most_common: ('31,800', 4), gold_ans: 31800
BackVerify: 300
** most_common: ('78', 4), gold_ans: 78
** most_common: ('32', 6), gold_ans: 8
** most_common: ('15', 10), gold_ans: 15
** most_common: ('2700', 5), gold_ans: 1300
** most_common: ('3200', 3), gold_ans: 3200
** most_common: ('4', 9), gold_ans: 4
** most_common: ('10', 11), gold_ans: 10
** most_common: ('32', 4), gold_ans: 16
** most_common: ('6', 9), gold_ans: 6
** most_common: ('8', 8), gold_ans: 8
** most_common: ('Theodoesnothaveenoughmoneylefttobuygiftsforhisbusinesspartners', 5), gold_ans: 2050
** most_common: ('91', 10), gold_ans: 91
** most_common: ('32', 6), gold_ans: 32
** most_common: ('204,000', 5), gold_ans: 120000
** most_common: ('30', 7), gold_ans: 30
** most_common: ('18', 3), gold_ans: 14
** most_common: ('156', 8), gold_ans: 156
** most_common: ('12', 8), gold_ans: 12
** most_common: ('123', 5), gold_ans: 123
** most_common: ('15', 10), gold_ans: 15
** most_common: ('8', 5), gold_ans: 8
** most_common: ('1', 10), gold_ans: 1
** most_common: ('49', 5), gold_ans: 9
** most_common: ('15', 2), gold_ans: 75
** most_common: ('14', 5), gold_ans: 14
** most_common: ('224,000', 10), gold_ans: 224000
** most_common: ('14', 11), gold_ans: 14
** most_common: ('31', 8), gold_ans: 31
** most_common: ('2', 5), gold_ans: 2
** most_common: ('14', 9), gold_ans: 14
** most_common: ('31', 4), gold_ans: 31
** most_common: ('8,400', 9), gold_ans: 8400
** most_common: ('44', 11), gold_ans: 44
** most_common: ('100', 7), gold_ans: 100
** most_common: ('6', 9), gold_ans: 6
** most_common: ('310', 11), gold_ans: 310
** most_common: ('72', 9), gold_ans: 72
** most_common: ('Johnate1morehotdogthanLuke', 5), gold_ans: 1
** most_common: ('60', 9), gold_ans: 60
** most_common: ('160', 11), gold_ans: 160
** most_common: ('0', 5), gold_ans: 4
** most_common: ('260', 3), gold_ans: 260
** most_common: ('87', 5), gold_ans: 87
** most_common: ('180000', 6), gold_ans: 180000
** most_common: ('2', 4), gold_ans: 2
** most_common: ('310', 12), gold_ans: 310
** most_common: ('9', 6), gold_ans: 9
** most_common: ('36', 8), gold_ans: 36
** most_common: ('10%', 6), gold_ans: 10
** most_common: ('2640', 6), gold_ans: 2640
BackVerify: 350
** most_common: ('8', 12), gold_ans: 8
** most_common: ('10', 6), gold_ans: 10
** most_common: ('21', 6), gold_ans: 21
** most_common: ('8', 5), gold_ans: 20
** most_common: ('Annabellestillneedstosave$125toaffordthephone', 4), gold_ans: 45
** most_common: ('34', 7), gold_ans: 34
** most_common: ('21', 5), gold_ans: 21
** most_common: ('2', 6), gold_ans: 2
** most_common: ('20', 7), gold_ans: 20
** most_common: ('2', 7), gold_ans: 4
** most_common: ('25', 12), gold_ans: 25
** most_common: ('20', 6), gold_ans: 20
** most_common: ('23', 7), gold_ans: 23
** most_common: ('6', 3), gold_ans: 6
** most_common: ('49', 7), gold_ans: 49
** most_common: ('18', 11), gold_ans: 18
** most_common: ('9', 11), gold_ans: 9
** most_common: ('19', 10), gold_ans: 19
** most_common: ('24', 4), gold_ans: 18
** most_common: ('1198', 11), gold_ans: 1198
** most_common: ('320', 5), gold_ans: 320
** most_common: ('62', 5), gold_ans: 50
** most_common: ('5', 9), gold_ans: 5
** most_common: ('240,000', 10), gold_ans: 240000
** most_common: ('Marycollects45kgofmilkeveryday', 5), gold_ans: 45
** most_common: ('48', 12), gold_ans: 48
** most_common: ('15', 8), gold_ans: 15
** most_common: ('50', 5), gold_ans: 50
** most_common: ('15', 11), gold_ans: 15
** most_common: ('21', 9), gold_ans: 21
** most_common: ('1,095', 4), gold_ans: 803
** most_common: ('67', 7), gold_ans: 67
** most_common: ('350', 12), gold_ans: 350
** most_common: ('1', 5), gold_ans: 2
** most_common: ('32', 6), gold_ans: 32
** most_common: ('16', 4), gold_ans: 16
** most_common: ('80', 7), gold_ans: 80
** most_common: ('36', 7), gold_ans: 36
** most_common: ('88', 6), gold_ans: 88
** most_common: ('8', 3), gold_ans: 6
** most_common: ('12', 12), gold_ans: 12
** most_common: ('Samhas15morepopsiclesthanBetty', 5), gold_ans: 15
** most_common: ('Timsaves$44bycancelinghis$60cablepackageandsubscribingtoNetflixandthebundledHuluandDisneyPlusservices', 3), gold_ans: 34
** most_common: ('20%', 7), gold_ans: 20
** most_common: ('92', 6), gold_ans: 92
** most_common: ('21', 5), gold_ans: 38
** most_common: ('3', 7), gold_ans: 3
** most_common: ('25', 8), gold_ans: 25
** most_common: ('168', 6), gold_ans: 168
** most_common: ('12', 7), gold_ans: 12
BackVerify: 400
** most_common: ('48', 8), gold_ans: 48
** most_common: ('32,400', 2), gold_ans: 14400
** most_common: ('4', 5), gold_ans: 4
** most_common: ('135', 7), gold_ans: 81
** most_common: ('22', 6), gold_ans: 22
** most_common: ('50.00', 10), gold_ans: 50
** most_common: ('160', 5), gold_ans: 200
** most_common: ('4,000', 5), gold_ans: 2000
** most_common: ('20', 2), gold_ans: 20
** most_common: ('110,400', 3), gold_ans: 168000
** most_common: ('6.75', 5), gold_ans: 3
** most_common: ('1110', 7), gold_ans: 1110
** most_common: ('5', 11), gold_ans: 5
** most_common: ('2,500', 10), gold_ans: 25
** most_common: ('56', 9), gold_ans: 56
** most_common: ('350', 5), gold_ans: 350
** most_common: ('56', 9), gold_ans: 56
** most_common: ('1640', 5), gold_ans: 3140
** most_common: ('40', 6), gold_ans: 40
** most_common: ('3,000', 9), gold_ans: 3000
** most_common: ('17000', 7), gold_ans: 17000
** most_common: ('12', 12), gold_ans: 12
** most_common: ('240', 5), gold_ans: 284
** most_common: ('6', 2), gold_ans: 8
** most_common: ('570', 10), gold_ans: 570
** most_common: ('150', 10), gold_ans: 150
** most_common: ('11', 6), gold_ans: 11
** most_common: ('150', 3), gold_ans: 150
** most_common: ('2', 4), gold_ans: 26
** most_common: ('13', 9), gold_ans: 13
** most_common: ('132.00', 5), gold_ans: 132
** most_common: ('1', 7), gold_ans: 1
** most_common: ('30', 11), gold_ans: 30
** most_common: ('6', 6), gold_ans: 6
** most_common: ('5', 5), gold_ans: 5
** most_common: ('5', 3), gold_ans: 5
** most_common: ('15', 11), gold_ans: 15
** most_common: ('7', 6), gold_ans: 7
** most_common: ('2', 7), gold_ans: 2
** most_common: ('16', 2), gold_ans: 17
** most_common: ('98', 6), gold_ans: 98
** most_common: ('80', 5), gold_ans: 80
** most_common: ('49', 9), gold_ans: 49
** most_common: ('29', 2), gold_ans: 59
** most_common: ('20', 11), gold_ans: 20
** most_common: ('6', 5), gold_ans: 6
** most_common: ('2', 9), gold_ans: 2
** most_common: ('5', 7), gold_ans: 5
** most_common: ('539', 7), gold_ans: 539
** most_common: ('112', 10), gold_ans: 112
BackVerify: 450
** most_common: ('3', 3), gold_ans: 4
** most_common: ('11,050', 6), gold_ans: 11050
** most_common: ('50', 10), gold_ans: 50
** most_common: ('8800', 5), gold_ans: 6400
** most_common: ('240', 11), gold_ans: 150
** most_common: ('1920', 8), gold_ans: 1920
** most_common: ('78', 10), gold_ans: 78
** most_common: ('45', 6), gold_ans: 45
** most_common: ('35%', 9), gold_ans: 35
** most_common: ('2', 9), gold_ans: 2
** most_common: ('84', 11), gold_ans: 84
** most_common: ('9', 7), gold_ans: 9
** most_common: ('71', 11), gold_ans: 71
** most_common: ('18', 7), gold_ans: 18
** most_common: ('6', 3), gold_ans: 6
** most_common: ('30', 12), gold_ans: 30
** most_common: ('9', 3), gold_ans: 1
** most_common: ('1200', 7), gold_ans: 1200
** most_common: ('120', 8), gold_ans: 120
** most_common: ('4', 7), gold_ans: 4
** most_common: ('3', 11), gold_ans: 3
** most_common: ('80', 12), gold_ans: 80
** most_common: ('6', 6), gold_ans: 6
** most_common: ('10%', 12), gold_ans: 10
** most_common: ('80', 6), gold_ans: 80
** most_common: ('20', 3), gold_ans: 20
** most_common: ('5', 8), gold_ans: 5
** most_common: ('20', 6), gold_ans: 20
** most_common: ('621', 10), gold_ans: 621
** most_common: ('15,400', 4), gold_ans: 15400
** most_common: ('11', 8), gold_ans: 11
** most_common: ('84', 10), gold_ans: 84
** most_common: ('26', 9), gold_ans: 26
** most_common: ('40', 8), gold_ans: 40
** most_common: ('240', 11), gold_ans: 240
** most_common: ('220', 10), gold_ans: 220
** most_common: ('6', 8), gold_ans: 6
** most_common: ('4', 11), gold_ans: 4
** most_common: ('6', 7), gold_ans: 6
** most_common: ('-11', 4), gold_ans: -10
** most_common: ('4', 11), gold_ans: 4
** most_common: ('16', 11), gold_ans: 16
** most_common: ('32', 7), gold_ans: 32
** most_common: ('50', 2), gold_ans: 25
** most_common: ('51.8', 2), gold_ans: 21
** most_common: ('200', 9), gold_ans: 200
** most_common: ('38', 5), gold_ans: 38
** most_common: ('112', 6), gold_ans: 112
** most_common: ('40', 12), gold_ans: 40
** most_common: ('10', 9), gold_ans: 10
BackVerify: 500
** most_common: ('16', 3), gold_ans: 16
** most_common: ('273', 10), gold_ans: 273
** most_common: ('26', 6), gold_ans: 26
** most_common: ('Thecouchis18feetlong', 6), gold_ans: 18
** most_common: ('2', 8), gold_ans: 2
** most_common: ('1600', 4), gold_ans: 1,600
** most_common: ('144.00', 7), gold_ans: 144
** most_common: ('2.00', 3), gold_ans: 2
** most_common: ('120', 10), gold_ans: 120
** most_common: ('5', 3), gold_ans: 4
** most_common: ('731.67', 3), gold_ans: 525
** most_common: ('110', 9), gold_ans: 110
** most_common: ('120', 10), gold_ans: 120
** most_common: ('300', 7), gold_ans: 300
** most_common: ('90,000', 7), gold_ans: 90000
** most_common: ('160', 4), gold_ans: 160
** most_common: ('375', 10), gold_ans: 375
** most_common: ('18', 6), gold_ans: 18
** most_common: ('32', 12), gold_ans: 32
** most_common: ('280', 4), gold_ans: 280
** most_common: ('63', 5), gold_ans: 63
** most_common: ('39', 9), gold_ans: 39
** most_common: ('39', 9), gold_ans: 29
** most_common: ('74', 11), gold_ans: 74
** most_common: ('9', 5), gold_ans: 9
** most_common: ('12', 11), gold_ans: 12
** most_common: ('21', 5), gold_ans: 21
** most_common: ('48', 5), gold_ans: 48
** most_common: ('130', 5), gold_ans: 172
** most_common: ('11', 3), gold_ans: 11
** most_common: ('42', 5), gold_ans: 36
** most_common: ('72', 6), gold_ans: 66
** most_common: ('9', 3), gold_ans: 25
** most_common: ('300', 6), gold_ans: 300
** most_common: ('Eachgirlbroughtback300seashells', 5), gold_ans: 300
** most_common: ('16', 9), gold_ans: 16
** most_common: ('8', 8), gold_ans: 8
** most_common: ('188', 10), gold_ans: 188
** most_common: ('18', 7), gold_ans: 18
** most_common: ('30', 3), gold_ans: 35
** most_common: ('39', 7), gold_ans: 39
** most_common: ('281.25', 5), gold_ans: 50
** most_common: ('7.00', 8), gold_ans: 7
** most_common: ('6', 6), gold_ans: 6
** most_common: ('80', 5), gold_ans: 80
** most_common: ('Jeffwalksatotalof30milesinaweek', 5), gold_ans: 30
** most_common: ('65', 10), gold_ans: 130
** most_common: ('81', 10), gold_ans: 81
** most_common: ('100', 10), gold_ans: 100
** most_common: ('398', 8), gold_ans: 398
BackVerify: 550
** most_common: ('Danielneedstopay$26.10foralltheitemshewantstobuy', 5), gold_ans: 27
** most_common: ('17', 11), gold_ans: 17
** most_common: ('450', 6), gold_ans: 450
** most_common: ('92', 9), gold_ans: 92
** most_common: ('54', 10), gold_ans: 54
** most_common: ('2', 10), gold_ans: 2
** most_common: ('120', 4), gold_ans: 160
** most_common: ('70', 11), gold_ans: 70
** most_common: ('3', 12), gold_ans: 3
** most_common: ('0', 4), gold_ans: 16
** most_common: ('45', 5), gold_ans: 45
** most_common: ('180', 3), gold_ans: 180
** most_common: ('82', 8), gold_ans: 82
** most_common: ('12', 9), gold_ans: 12
** most_common: ('170', 2), gold_ans: 240
** most_common: ('6', 5), gold_ans: 5
** most_common: ('10', 9), gold_ans: 10
** most_common: ('9.00', 9), gold_ans: 9
** most_common: ('175', 7), gold_ans: 175
** most_common: ('Mitchellmade$21morethanLiamsellinglemonadethatweekend', 6), gold_ans: 21
** most_common: ('Peterwillhaveatotalof26actionfiguresbytheendoftheweek', 3), gold_ans: 23
** most_common: ('308', 8), gold_ans: 308
** most_common: ('100', 7), gold_ans: 100
** most_common: ('600', 8), gold_ans: 600
** most_common: ('37.00', 2), gold_ans: 37
** most_common: ('36', 10), gold_ans: 36
** most_common: ('7344', 3), gold_ans: 11232
** most_common: ('54.29', 4), gold_ans: 40
** most_common: ("Theequationrepresentingthenumbertrain'svalueaftertheoperationsis\\(\\frac{40+x}{8}\\),where\\(x\\)isthenumberthatDianeinitiallythoughtof.Thisexpressionshowsthatthefinalvalueofthenumbertraindependsonthevalueof\\(x\\),andsince\\(x\\)isnotspecified,wecannotdetermineanumericalfinalvalueforthenumbertrain", 3), gold_ans: 48
** most_common: ('7', 10), gold_ans: 7
** most_common: ('540.8', 4), gold_ans: 500
** most_common: ('215', 4), gold_ans: 215
** most_common: ('129,200', 11), gold_ans: 129200
** most_common: ('120', 6), gold_ans: 120
** most_common: ('2', 3), gold_ans: 2
** most_common: ('Johnearned$40morethanJill', 6), gold_ans: 40
** most_common: ('80', 4), gold_ans: 800
** most_common: ('30', 2), gold_ans: 30
** most_common: ('52', 10), gold_ans: 52
** most_common: ('-2.5pounds', 3), gold_ans: 15
** most_common: ('318', 11), gold_ans: 319
** most_common: ('220', 7), gold_ans: 220
** most_common: ('1', 4), gold_ans: 1
** most_common: ('3', 10), gold_ans: 3
** most_common: ('42', 9), gold_ans: 42
** most_common: ('13', 6), gold_ans: 13
** most_common: ('334', 2), gold_ans: 260
** most_common: ('90', 11), gold_ans: 90
** most_common: ('69', 9), gold_ans: 69
** most_common: ('48', 4), gold_ans: 48
BackVerify: 600
** most_common: ('10', 12), gold_ans: 10
** most_common: ('99', 5), gold_ans: 104
** most_common: ('2', 5), gold_ans: 5
** most_common: ('1260', 5), gold_ans: 1800
** most_common: ('12', 6), gold_ans: 12
** most_common: ('Patrickearnedatotalof$42fromsellinglemonadefor6hours', 5), gold_ans: 42
** most_common: ('6', 5), gold_ans: 6
** most_common: ('1200', 4), gold_ans: 10
** most_common: ('5.37', 5), gold_ans: 8
** most_common: ('7', 11), gold_ans: 7
** most_common: ('66,460', 4), gold_ans: 65,960
** most_common: ('50', 3), gold_ans: 1,450,000
** most_common: ('30', 8), gold_ans: 30
** most_common: ('93,000', 9), gold_ans: 93000
** most_common: ('312', 9), gold_ans: 312
** most_common: ('33.00', 7), gold_ans: 33
** most_common: ('10', 11), gold_ans: 10
** most_common: ('5', 5), gold_ans: 5
** most_common: ('36', 6), gold_ans: 36
** most_common: ('76', 10), gold_ans: 76
** most_common: ('509', 4), gold_ans: 1509
** most_common: ('Johnspent$3000onhisphysicaltherapysessions', 3), gold_ans: 3000
** most_common: ('0', 5), gold_ans: 7
** most_common: ('20', 5), gold_ans: 8
** most_common: ('85', 5), gold_ans: 85
** most_common: ('160', 11), gold_ans: 160
** most_common: ('72', 4), gold_ans: 72
** most_common: ('54', 10), gold_ans: 54
** most_common: ('2', 5), gold_ans: 4
** most_common: ('17,500', 9), gold_ans: 17500
** most_common: ('10', 11), gold_ans: 10
** most_common: ('4800', 7), gold_ans: 4800
** most_common: ('45', 10), gold_ans: 45
** most_common: ('5', 7), gold_ans: 5
** most_common: ('14', 7), gold_ans: 14
** most_common: ('10', 4), gold_ans: 4
** most_common: ('2100', 4), gold_ans: 1050
** most_common: ('17', 12), gold_ans: 17
** most_common: ('12.00', 6), gold_ans: 12
** most_common: ('216', 4), gold_ans: 216
** most_common: ('43,500', 7), gold_ans: 43,500
** most_common: ('372,000', 6), gold_ans: 262500
** most_common: ('10,800', 7), gold_ans: 10,800
** most_common: ('840', 12), gold_ans: 840
** most_common: ("Steve'sson'swifeis29yearsold", 4), gold_ans: 29
** most_common: ('48', 12), gold_ans: 48
** most_common: ('79', 8), gold_ans: 79
** most_common: ('6', 3), gold_ans: 10
** most_common: ('56', 2), gold_ans: 54
** most_common: ("Thereare162,000InstagramlikesforFishio'sselfie", 4), gold_ans: 162000
BackVerify: 650
** most_common: ('142', 8), gold_ans: 142
** most_common: ('2100', 9), gold_ans: 2100
** most_common: ('225', 3), gold_ans: 75
** most_common: ('80', 3), gold_ans: 80
** most_common: ('2', 9), gold_ans: 2
** most_common: ('10', 10), gold_ans: 10
** most_common: ('10', 6), gold_ans: 10
** most_common: ('330,000', 6), gold_ans: 330000
** most_common: ('120', 8), gold_ans: 120
** most_common: ('3', 6), gold_ans: 3
** most_common: ('15', 10), gold_ans: 15
** most_common: ('44', 5), gold_ans: 44
** most_common: ('7.00', 7), gold_ans: 7
** most_common: ('193', 10), gold_ans: 193
** most_common: ('32', 6), gold_ans: 32
** most_common: ('360', 10), gold_ans: 360
** most_common: ('120', 8), gold_ans: 120
** most_common: ('53', 6), gold_ans: 53
** most_common: ('3', 12), gold_ans: 3
** most_common: ('132', 7), gold_ans: 132
** most_common: ('4', 5), gold_ans: 4
** most_common: ('4', 8), gold_ans: 4
** most_common: ('9', 4), gold_ans: 2
** most_common: ('9', 10), gold_ans: 9
** most_common: ('12', 6), gold_ans: 12
** most_common: ('21', 6), gold_ans: 33
** most_common: ('240', 10), gold_ans: 240
** most_common: ('36', 10), gold_ans: 36
** most_common: ('120', 12), gold_ans: 120
** most_common: ('576', 11), gold_ans: 576
** most_common: ('20', 6), gold_ans: 20
** most_common: ('298', 5), gold_ans: 298
** most_common: ('80', 10), gold_ans: 80
** most_common: ('50', 8), gold_ans: 50
** most_common: ('11', 10), gold_ans: 11
** most_common: ('14', 8), gold_ans: 14
** most_common: ('80', 10), gold_ans: 80
** most_common: ('10.83', 3), gold_ans: 13
** most_common: ('100', 7), gold_ans: 100
** most_common: ('7.00', 5), gold_ans: 7
** most_common: ('5760', 3), gold_ans: 5760
** most_common: ('10', 3), gold_ans: 25
** most_common: ('32', 6), gold_ans: 32
** most_common: ('68', 6), gold_ans: 68
** most_common: ('9', 8), gold_ans: 9
** most_common: ('5', 12), gold_ans: 5
** most_common: ('145', 6), gold_ans: 145
** most_common: ('27', 9), gold_ans: 27
** most_common: ('720', 6), gold_ans: 720
** most_common: ('8', 11), gold_ans: 8
BackVerify: 700
** most_common: ('135', 8), gold_ans: 135
** most_common: ('190', 3), gold_ans: 200
** most_common: ('2,800', 7), gold_ans: 2800
** most_common: ('50', 10), gold_ans: 50
** most_common: ('50', 6), gold_ans: 50
** most_common: ('120', 10), gold_ans: 120
** most_common: ('9', 5), gold_ans: 9
** most_common: ('8%', 10), gold_ans: 8
** most_common: ('168', 7), gold_ans: 168
** most_common: ('3000', 9), gold_ans: 3000
** most_common: ('45.00', 3), gold_ans: 45
** most_common: ('12', 5), gold_ans: 6
** most_common: ('14', 4), gold_ans: 14
** most_common: ('576', 10), gold_ans: 576
** most_common: ('Jameswouldhavesaved$30bypickingtheblueberrieshimselfinsteadofbuyingthematthestore', 4), gold_ans: 10
** most_common: ('385,000', 9), gold_ans: 385000
** most_common: ('770', 2), gold_ans: 770
** most_common: ('5', 5), gold_ans: 5
** most_common: ('2', 11), gold_ans: 2
** most_common: ('175', 8), gold_ans: 175
** most_common: ('4', 6), gold_ans: 4
** most_common: ('2450', 4), gold_ans: 2450
** most_common: ('255', 4), gold_ans: 255
** most_common: ('160', 6), gold_ans: 160
** most_common: ('31', 3), gold_ans: 18
** most_common: ('25', 10), gold_ans: 25
** most_common: ('10', 12), gold_ans: 10
** most_common: ('112', 9), gold_ans: 112
** most_common: ('40%', 12), gold_ans: 40
** most_common: ('1000', 11), gold_ans: 1000
** most_common: ('8', 5), gold_ans: 8
** most_common: ('1', 8), gold_ans: 1
** most_common: ('87', 10), gold_ans: 87
** most_common: ('5', 12), gold_ans: 5
** most_common: ('17', 11), gold_ans: 17
** most_common: ('50', 10), gold_ans: 50
** most_common: ('13', 6), gold_ans: 3
** most_common: ('2', 11), gold_ans: 2
** most_common: ('4', 9), gold_ans: 4
** most_common: ('98', 8), gold_ans: 98
** most_common: ('25', 7), gold_ans: 25
** most_common: ('28', 12), gold_ans: 28
** most_common: ('24', 5), gold_ans: 24
** most_common: ('19', 6), gold_ans: 8
** most_common: ('4', 12), gold_ans: 4
** most_common: ('Markmadeatotalprofitof$1250fromsellingallthecards', 4), gold_ans: 1100
** most_common: ('28', 6), gold_ans: 28
** most_common: ('350', 8), gold_ans: 350
** most_common: ('392', 6), gold_ans: 336
** most_common: ('6', 4), gold_ans: 3
BackVerify: 750
** most_common: ('4000', 10), gold_ans: 4000
** most_common: ('43', 5), gold_ans: 43
** most_common: ('240', 6), gold_ans: 240
** most_common: ('128', 5), gold_ans: 128
** most_common: ('49', 4), gold_ans: 89
** most_common: ('7', 9), gold_ans: 7
** most_common: ('22', 12), gold_ans: 22
** most_common: ('75', 8), gold_ans: 75
** most_common: ('133', 2), gold_ans: 133
** most_common: ('60,000hours', 4), gold_ans: 60000
** most_common: ('16', 5), gold_ans: 16
** most_common: ('27', 8), gold_ans: 27
** most_common: ('85', 8), gold_ans: 85
** most_common: ('166.67', 4), gold_ans: 100
** most_common: ('14', 8), gold_ans: 14
** most_common: ('490', 6), gold_ans: 490
** most_common: ('12', 12), gold_ans: 12
** most_common: ('60', 11), gold_ans: 60
** most_common: ('600', 7), gold_ans: 675
** most_common: ('365', 9), gold_ans: 110
** most_common: ('4', 7), gold_ans: 4
** most_common: ('3', 5), gold_ans: 3
** most_common: ('33.33%', 5), gold_ans: 50
** most_common: ('10', 10), gold_ans: 10
** most_common: ('10', 5), gold_ans: 10
** most_common: ('276', 11), gold_ans: 276
** most_common: ('800', 3), gold_ans: 800
** most_common: ('5600', 5), gold_ans: 4400
** most_common: ('40.00', 6), gold_ans: 38
** most_common: ('330', 3), gold_ans: 255
** most_common: ('95', 4), gold_ans: 25
** most_common: ('2', 12), gold_ans: 17
** most_common: ('27', 9), gold_ans: 54
** most_common: ('8', 5), gold_ans: 4
** most_common: ('15', 4), gold_ans: 15
** most_common: ('115', 2), gold_ans: 155
** most_common: ('142', 9), gold_ans: 142
** most_common: ('25', 9), gold_ans: 25
** most_common: ('100', 7), gold_ans: 100
** most_common: ('4', 5), gold_ans: 4
** most_common: ('12', 6), gold_ans: 108
** most_common: ('100', 11), gold_ans: 100
** most_common: ('75', 7), gold_ans: 75
** most_common: ('250', 8), gold_ans: 250
** most_common: ('32', 10), gold_ans: 32
** most_common: ('20.00', 6), gold_ans: 20
** most_common: ('3,120,000', 6), gold_ans: 2880000
** most_common: ('390', 5), gold_ans: 540
** most_common: ('10', 5), gold_ans: 20
** most_common: ('4', 6), gold_ans: 4
BackVerify: 800
** most_common: ('428', 6), gold_ans: 428
** most_common: ('1240', 10), gold_ans: 1240
** most_common: ('5', 7), gold_ans: 6
** most_common: ('9', 7), gold_ans: 9
** most_common: ('20', 11), gold_ans: 20
** most_common: ('1170', 8), gold_ans: 1170
** most_common: ('70%', 4), gold_ans: 70
** most_common: ('4', 9), gold_ans: 4
** most_common: ('12', 4), gold_ans: 12
** most_common: ('50', 10), gold_ans: 50
** most_common: ('310', 5), gold_ans: 310
** most_common: ('84', 6), gold_ans: 60
** most_common: ('79', 5), gold_ans: 79
** most_common: ('10', 4), gold_ans: 7
** most_common: ('42', 2), gold_ans: 11
** most_common: ('2.5', 6), gold_ans: 4
** most_common: ('4500', 6), gold_ans: 4500
** most_common: ('15', 9), gold_ans: 15
** most_common: ('16', 7), gold_ans: 16
** most_common: ('6,250', 12), gold_ans: 6,250
** most_common: ('720', 5), gold_ans: 720
** most_common: ('35', 10), gold_ans: 35
** most_common: ('1260', 3), gold_ans: 1260
** most_common: ('18', 8), gold_ans: 14
** most_common: ('52', 11), gold_ans: 52
** most_common: ('153', 9), gold_ans: 153
** most_common: ('27', 11), gold_ans: 27
** most_common: ('5', 5), gold_ans: 11
** most_common: ('80', 3), gold_ans: 60
** most_common: ('14,000', 7), gold_ans: 14,000
** most_common: ('18.8', 3), gold_ans: 1128
** most_common: ('549.00', 4), gold_ans: 324
** most_common: ('42.00', 3), gold_ans: 42
** most_common: ('40', 9), gold_ans: 40
** most_common: ('80', 3), gold_ans: 80
** most_common: ('29', 2), gold_ans: 48
** most_common: ('140', 8), gold_ans: 140
** most_common: ('220', 5), gold_ans: 120
** most_common: ('15', 11), gold_ans: 15
** most_common: ('2', 10), gold_ans: 2
** most_common: ('20', 11), gold_ans: 16
** most_common: ('Gabrielneedsanadditional$5,600tocoverboththecostofthecarandthephone', 4), gold_ans: 5600
** most_common: ('10', 11), gold_ans: 10
** most_common: ('19', 4), gold_ans: 19
** most_common: ('105', 5), gold_ans: 180
** most_common: ('12', 7), gold_ans: 12
** most_common: ('11', 7), gold_ans: 11
** most_common: ('975', 7), gold_ans: 975
** most_common: ('10', 6), gold_ans: 10
** most_common: ('75', 8), gold_ans: 75
BackVerify: 850
** most_common: ('70', 8), gold_ans: 70
** most_common: ('110', 11), gold_ans: 110
** most_common: ('123', 8), gold_ans: 123
** most_common: ('15', 11), gold_ans: 15
** most_common: ('144', 8), gold_ans: 144
** most_common: ('Youare18yearsold', 3), gold_ans: 13
** most_common: ('7', 6), gold_ans: 7
** most_common: ('18000', 5), gold_ans: 14000
** most_common: ('3430', 8), gold_ans: 3430
** most_common: ('1520', 5), gold_ans: 1520
** most_common: ('3', 12), gold_ans: 3
** most_common: ('Wendyearns30morebadgesthanAmberina1-yeartimeframe', 5), gold_ans: 30
** most_common: ('40', 12), gold_ans: 40
** most_common: ('110', 6), gold_ans: 110
** most_common: ('80', 10), gold_ans: 80
** most_common: ('23', 12), gold_ans: 23
** most_common: ('Fawnhas28books', 4), gold_ans: 28
** most_common: ('7', 8), gold_ans: 7
** most_common: ('15', 6), gold_ans: 15
** most_common: ('500', 5), gold_ans: 500
** most_common: ('40', 11), gold_ans: 40
** most_common: ('48', 5), gold_ans: 48
** most_common: ('13.00', 5), gold_ans: 13
** most_common: ('12.00', 5), gold_ans: 12
** most_common: ('132', 12), gold_ans: 132
** most_common: ('60', 11), gold_ans: 60
** most_common: ('41', 8), gold_ans: 41
** most_common: ('38.89', 9), gold_ans: 7000
** most_common: ('5', 12), gold_ans: 5
** most_common: ('575', 7), gold_ans: 575
** most_common: ('10', 4), gold_ans: 10
** most_common: ('16', 7), gold_ans: 16
** most_common: ('5', 6), gold_ans: 5
** most_common: ('25', 10), gold_ans: 25
** most_common: ('50', 9), gold_ans: 50
** most_common: ('500', 12), gold_ans: 500
** most_common: ('20', 12), gold_ans: 20
** most_common: ('34', 10), gold_ans: 34
** most_common: ('10', 8), gold_ans: 10
** most_common: ('15', 8), gold_ans: 15
** most_common: ('25%', 10), gold_ans: 25
** most_common: ('55', 7), gold_ans: 55
** most_common: ('1', 11), gold_ans: 1
** most_common: ('480', 9), gold_ans: 480
** most_common: ('31', 1), gold_ans: 26
** most_common: ('74', 9), gold_ans: 74
** most_common: ('250', 4), gold_ans: 250
** most_common: ('1', 7), gold_ans: 1
** most_common: ('110', 7), gold_ans: 110
** most_common: ('16', 3), gold_ans: 16
BackVerify: 900
** most_common: ('15', 11), gold_ans: 15
** most_common: ('5', 2), gold_ans: 1
** most_common: ('8.00', 5), gold_ans: 8
** most_common: ('58', 4), gold_ans: 16
** most_common: ('8', 8), gold_ans: 8
** most_common: ('5', 9), gold_ans: 5
** most_common: ('10', 4), gold_ans: 10
** most_common: ('16', 12), gold_ans: 16
** most_common: ('14', 11), gold_ans: 14
** most_common: ('42', 4), gold_ans: 38
** most_common: ('700', 9), gold_ans: 700
** most_common: ('64', 8), gold_ans: 64
** most_common: ('8', 6), gold_ans: 6
** most_common: ('6', 9), gold_ans: 6
** most_common: ('3', 8), gold_ans: 3
** most_common: ('23', 6), gold_ans: 23
** most_common: ('14', 8), gold_ans: 14
** most_common: ('12', 6), gold_ans: 12
** most_common: ('56', 9), gold_ans: 56
** most_common: ('90', 8), gold_ans: 90
** most_common: ('3', 2), gold_ans: 47
** most_common: ('4', 8), gold_ans: 4
** most_common: ('60', 7), gold_ans: 60
** most_common: ('4', 3), gold_ans: 2
** most_common: ('12', 4), gold_ans: 12
** most_common: ('2,000', 11), gold_ans: 2000
** most_common: ('2', 4), gold_ans: 1
** most_common: ('85,000calories', 5), gold_ans: 85000
** most_common: ('70', 8), gold_ans: 60
** most_common: ('60', 8), gold_ans: 60
** most_common: ('14', 12), gold_ans: 14
** most_common: ('50', 5), gold_ans: 50
** most_common: ('24', 11), gold_ans: 24
** most_common: ('15', 4), gold_ans: 15
** most_common: ('410', 3), gold_ans: 410
** most_common: ('6', 3), gold_ans: 64800
** most_common: ('110', 7), gold_ans: 250
** most_common: ('159', 11), gold_ans: 159
** most_common: ('4', 7), gold_ans: 4
** most_common: ('650', 12), gold_ans: 650
** most_common: ('280', 8), gold_ans: 280
** most_common: ('842', 10), gold_ans: 842
** most_common: ('178.75', 7), gold_ans: 205
** most_common: ('110', 5), gold_ans: 50
** most_common: ('34', 9), gold_ans: 34
** most_common: ('17', 7), gold_ans: 17
** most_common: ('450', 8), gold_ans: 450
** most_common: ('13', 11), gold_ans: 13
** most_common: ('15', 6), gold_ans: 15
** most_common: ('42', 8), gold_ans: 42
BackVerify: 950
** most_common: ('5', 6), gold_ans: 5
** most_common: ('75', 6), gold_ans: 300
** most_common: ('29', 3), gold_ans: 360
** most_common: ('197', 2), gold_ans: 452
** most_common: ('26', 4), gold_ans: 34
** most_common: ('100', 11), gold_ans: 100
** most_common: ('1', 6), gold_ans: 1
** most_common: ('45', 7), gold_ans: 45
** most_common: ('40', 10), gold_ans: 40
** most_common: ('7', 6), gold_ans: 7
** most_common: ('11', 7), gold_ans: 11
** most_common: ('295', 5), gold_ans: 225
** most_common: ('600', 6), gold_ans: 1000
** most_common: ('147', 4), gold_ans: 147
** most_common: ('200', 6), gold_ans: 200
** most_common: ('446', 10), gold_ans: 374
** most_common: ('Gretahas48browniesleftoverfromtheentireday', 4), gold_ans: 48
** most_common: ('30', 11), gold_ans: 30
** most_common: ('227', 8), gold_ans: 227
** most_common: ('Johnpaidatotalof$1800forthenewphones', 4), gold_ans: 1800
** most_common: ('33', 11), gold_ans: 33
** most_common: ('100', 12), gold_ans: 100
** most_common: ('120', 10), gold_ans: 120
** most_common: ('79', 10), gold_ans: 79
** most_common: ('7', 4), gold_ans: 5
** most_common: ('20', 5), gold_ans: 20
** most_common: ('540', 4), gold_ans: 540
** most_common: ('4', 10), gold_ans: 4
** most_common: ('160', 4), gold_ans: 160
** most_common: ('55', 3), gold_ans: 50
** most_common: ('90', 10), gold_ans: 90
** most_common: ('7', 9), gold_ans: 7
** most_common: ('12', 7), gold_ans: 12
** most_common: ('15', 10), gold_ans: 15
** most_common: ('Patwillspend$378atthestoretofillupherflowerbedwiththeadditionalplants', 3), gold_ans: 342
** most_common: ('63', 7), gold_ans: 63
** most_common: ('70.00', 6), gold_ans: 70
** most_common: ('3', 8), gold_ans: 3
** most_common: ('6', 8), gold_ans: 6
** most_common: ('ItwilltakeEmily10minutestopeelandcook90shrimp', 3), gold_ans: 45
** most_common: ('14', 5), gold_ans: 14
** most_common: ('15', 5), gold_ans: 15
** most_common: ('52', 4), gold_ans: 52
** most_common: ('11', 8), gold_ans: 11
** most_common: ('2', 7), gold_ans: 2
** most_common: ('12', 9), gold_ans: 12
** most_common: ('3', 8), gold_ans: 3
** most_common: ('6200', 3), gold_ans: 6,600
** most_common: ('50', 10), gold_ans: 50
** most_common: ('50%', 4), gold_ans: 25
BackVerify: 1000
** most_common: ('1', 9), gold_ans: 1
** most_common: ('Jordancanstartmakingthecake10minutesbefore4:50pmtobereadytoserveby5:00pm', 2), gold_ans: 2
** most_common: ('Eachboxcontains8chocolatebars', 5), gold_ans: 8
** most_common: ('480', 8), gold_ans: 480
** most_common: ('8', 5), gold_ans: 8
** most_common: ('170', 5), gold_ans: 1490
** most_common: ('826', 7), gold_ans: 826
** most_common: ('34', 10), gold_ans: 34
** most_common: ('230', 5), gold_ans: 230
** most_common: ('1875', 6), gold_ans: 1,875
** most_common: ('5', 8), gold_ans: 5
** most_common: ('13,875', 4), gold_ans: 6000
** most_common: ('29', 1), gold_ans: 94
** most_common: ('2', 4), gold_ans: 2
** most_common: ('3', 6), gold_ans: 3
** most_common: ('60', 8), gold_ans: 78
** most_common: ('139', 11), gold_ans: 138
** most_common: ('18', 2), gold_ans: 45
** most_common: ('60', 5), gold_ans: 60
** most_common: ('83', 4), gold_ans: 98
** most_common: ('22', 4), gold_ans: 22
** most_common: ('24', 6), gold_ans: 36
** most_common: ('8', 3), gold_ans: 12
** most_common: ('77', 8), gold_ans: 77
** most_common: ('300', 8), gold_ans: 300
** most_common: ('60', 9), gold_ans: 30
** most_common: ('43,200', 5), gold_ans: 43200
** most_common: ('4', 5), gold_ans: 12
** most_common: ('200', 11), gold_ans: 200
** most_common: ('27', 7), gold_ans: 34
** most_common: ('30%', 2), gold_ans: 24
** most_common: ('Eachgraduateshouldreceive7ticketstogivetotheirfriendsandfamily', 4), gold_ans: 5
** most_common: ('450', 9), gold_ans: 450
** most_common: ('2perhour', 4), gold_ans: 2
** most_common: ('66', 8), gold_ans: 66
** most_common: ('35', 5), gold_ans: 35
** most_common: ('10', 11), gold_ans: 10
** most_common: ('10', 10), gold_ans: 10
** most_common: ('4', 4), gold_ans: 4
** most_common: ('160', 9), gold_ans: 160
** most_common: ('736', 8), gold_ans: 736
** most_common: ('101', 6), gold_ans: 101
** most_common: ('-$9.17', 5), gold_ans: 3
** most_common: ('130,000', 6), gold_ans: 130000
** most_common: ('1', 12), gold_ans: 1
** most_common: ('420', 8), gold_ans: 420
** most_common: ('31.5', 2), gold_ans: 189
** most_common: ('10', 9), gold_ans: 10
** most_common: ('7,687.93', 5), gold_ans: 7400
** most_common: ('20', 10), gold_ans: 20
BackVerify: 1050
** most_common: ('1630', 6), gold_ans: 655
** most_common: ('15', 8), gold_ans: 15
** most_common: ('110', 12), gold_ans: 110
** most_common: ('55', 4), gold_ans: 55
** most_common: ('2400', 9), gold_ans: 2400
** most_common: ('864', 5), gold_ans: 2304
** most_common: ('260', 4), gold_ans: 156
** most_common: ('24', 12), gold_ans: 24
** most_common: ('250', 11), gold_ans: 250
** most_common: ('2', 7), gold_ans: 2
** most_common: ('31', 7), gold_ans: 31
** most_common: ('58', 7), gold_ans: 58
** most_common: ('482', 8), gold_ans: 482
** most_common: ('320', 11), gold_ans: 320
** most_common: ('247', 9), gold_ans: 247
** most_common: ('95', 10), gold_ans: 95
** most_common: ('14', 8), gold_ans: 14
** most_common: ('245', 7), gold_ans: 245
** most_common: ('12', 4), gold_ans: 24
** most_common: ('300', 10), gold_ans: 300
** most_common: ('14.00', 5), gold_ans: 18
** most_common: ('251', 4), gold_ans: 251
** most_common: ('85', 2), gold_ans: 85
** most_common: ('147', 3), gold_ans: 21
** most_common: ('750', 6), gold_ans: 750
** most_common: ('80', 5), gold_ans: 16
** most_common: ('162', 7), gold_ans: 162
** most_common: ('206', 4), gold_ans: 145
** most_common: ('8', 8), gold_ans: 8
** most_common: ('10%', 11), gold_ans: 10
** most_common: ('72,000', 8), gold_ans: 72000
** most_common: ('195', 10), gold_ans: 195
** most_common: ('1', 3), gold_ans: 2
** most_common: ('Jennysaved$2.00bychoosingtobuythebananasinbunchesratherthanindividually', 4), gold_ans: 2
** most_common: ('20', 7), gold_ans: 20
** most_common: ('26', 5), gold_ans: 26
** most_common: ('131,250', 4), gold_ans: 131250
** most_common: ('6', 3), gold_ans: 12
** most_common: ('24', 2), gold_ans: 30
** most_common: ('32', 6), gold_ans: 32
** most_common: ('12', 3), gold_ans: 72
** most_common: ('1000', 11), gold_ans: 1000
** most_common: ('1080', 10), gold_ans: 1080
** most_common: ('144', 9), gold_ans: 144
** most_common: ('22.22%', 3), gold_ans: 25
** most_common: ('270', 7), gold_ans: 270
** most_common: ('240', 3), gold_ans: 240
** most_common: ('480', 10), gold_ans: 480
** most_common: ('30', 6), gold_ans: 30
** most_common: ('Ittakes2minuteslongertoridethebiggestwaterslidecomparedtothesecondbiggestslide', 6), gold_ans: 2
BackVerify: 1100
** most_common: ('5', 5), gold_ans: 5
** most_common: ('16', 8), gold_ans: 16
** most_common: ('113.00', 10), gold_ans: 113
** most_common: ('90', 8), gold_ans: 90
** most_common: ('Carolineis24yearsold', 5), gold_ans: 24
** most_common: ('Laurenneedstoworkanadditional20yearsbeyondherinitialplantosaveenoughforherretirementperiod', 4), gold_ans: 40
** most_common: ('5', 9), gold_ans: 5
** most_common: ('360', 9), gold_ans: 360
** most_common: ('38', 11), gold_ans: 38
** most_common: ('3', 5), gold_ans: 3
** most_common: ('60', 4), gold_ans: 60
** most_common: ('157', 7), gold_ans: 157
** most_common: ('5', 7), gold_ans: 5
** most_common: ('-3', 7), gold_ans: -3
** most_common: ('8', 11), gold_ans: 8
** most_common: ('5', 7), gold_ans: 5
** most_common: ('60', 9), gold_ans: 60
** most_common: ('9', 10), gold_ans: 9
** most_common: ('5', 5), gold_ans: 5
** most_common: ('18', 6), gold_ans: 18
** most_common: ('280', 8), gold_ans: 560
** most_common: ('35', 5), gold_ans: 35
** most_common: ('2', 5), gold_ans: 18
** most_common: ('105', 11), gold_ans: 105
** most_common: ('64', 4), gold_ans: 64
** most_common: ('Johncanmake90smallbagsofM&M', 4), gold_ans: 90
** most_common: ('50', 5), gold_ans: 50
** most_common: ('750', 7), gold_ans: 750
** most_common: ('9', 6), gold_ans: 9
** most_common: ('8', 4), gold_ans: 8
** most_common: ('25', 8), gold_ans: 25
** most_common: ('96', 7), gold_ans: 96
** most_common: ('45,000', 5), gold_ans: 45000
** most_common: ('IttakesGrandma50minutestocompletetheentire3-milewalk', 3), gold_ans: 50
** most_common: ('7', 6), gold_ans: 7
** most_common: ('32', 7), gold_ans: 32
** most_common: ('26', 11), gold_ans: 26
** most_common: ('29', 2), gold_ans: 68
** most_common: ('700', 5), gold_ans: 700
** most_common: ('1.00perbagel', 7), gold_ans: 1
** most_common: ('27', 9), gold_ans: 27
** most_common: ('20', 8), gold_ans: 20
** most_common: ('9', 10), gold_ans: 9
** most_common: ('300', 11), gold_ans: 300
** most_common: ('34', 11), gold_ans: 34
** most_common: ('291', 8), gold_ans: 291
** most_common: ('56', 3), gold_ans: 16
** most_common: ('22', 4), gold_ans: 22
** most_common: ('9', 10), gold_ans: 9
** most_common: ('93', 6), gold_ans: 93
BackVerify: 1150
** most_common: ('21', 12), gold_ans: 21
** most_common: ('50', 9), gold_ans: 50
** most_common: ('12%', 6), gold_ans: 12
** most_common: ('20', 5), gold_ans: 20
** most_common: ('30', 10), gold_ans: 30
** most_common: ('13', 11), gold_ans: 13
** most_common: ('120', 7), gold_ans: 120
** most_common: ('3', 10), gold_ans: 3
** most_common: ('0', 2), gold_ans: 7300
** most_common: ('50%', 6), gold_ans: 50
** most_common: ('1907', 4), gold_ans: 1125
** most_common: ('140', 3), gold_ans: 170
** most_common: ('3', 9), gold_ans: 3
** most_common: ('12', 9), gold_ans: 12
** most_common: ('9', 9), gold_ans: 9
** most_common: ('3744', 4), gold_ans: 1248
** most_common: ('Theavocadotreecanproduceatotalof3350fruitsoverits10yearsoflife', 3), gold_ans: 2350
** most_common: ('120', 7), gold_ans: 120
** most_common: ('20', 6), gold_ans: 20
** most_common: ('8', 5), gold_ans: 2
** most_common: ('2', 7), gold_ans: 2
** most_common: ('3160', 7), gold_ans: 3160
** most_common: ('93', 12), gold_ans: 93
** most_common: ('10', 6), gold_ans: 10
** most_common: ('60', 4), gold_ans: 240
** most_common: ('16', 3), gold_ans: 16
** most_common: ('5', 6), gold_ans: 2
** most_common: ('17', 11), gold_ans: 17
** most_common: ('17', 6), gold_ans: 17
** most_common: ('50%', 7), gold_ans: 50
** most_common: ('5,600', 4), gold_ans: 5600
** most_common: ('20', 5), gold_ans: 20
** most_common: ('1800', 5), gold_ans: 1800
** most_common: ('15', 4), gold_ans: 11
** most_common: ('306', 10), gold_ans: 306
** most_common: ('6', 6), gold_ans: 6
** most_common: ('19', 7), gold_ans: 19
** most_common: ('5', 2), gold_ans: 5
** most_common: ('\\(18\\frac{2}{3}\\)', 3), gold_ans: 24
** most_common: ('6', 10), gold_ans: 6
** most_common: ('228', 4), gold_ans: 19
** most_common: ('100', 7), gold_ans: 100
** most_common: ('280', 3), gold_ans: 280
** most_common: ('9.00', 6), gold_ans: 9
** most_common: ('1200', 10), gold_ans: 1200
** most_common: ('320', 9), gold_ans: 320
** most_common: ('75', 11), gold_ans: 75
** most_common: ('2400', 8), gold_ans: 2400
** most_common: ('60', 5), gold_ans: 140
** most_common: ('2.67', 8), gold_ans: 2
BackVerify: 1200
** most_common: ('8', 11), gold_ans: 8
** most_common: ('42', 11), gold_ans: 42
** most_common: ('16', 7), gold_ans: 19
** most_common: ('180', 6), gold_ans: 240
** most_common: ('168', 11), gold_ans: 168
** most_common: ('4', 6), gold_ans: 4
** most_common: ('40,000', 10), gold_ans: 40,000
** most_common: ('64', 4), gold_ans: 64
** most_common: ('26', 4), gold_ans: 27
** most_common: ('29', 11), gold_ans: 29
** most_common: ('288', 10), gold_ans: 288
** most_common: ('448', 10), gold_ans: 448
** most_common: ('150', 11), gold_ans: 150
** most_common: ('Stephenwillpay$31inthetwelfthmonth', 5), gold_ans: 31
** most_common: ('5', 9), gold_ans: 5
** most_common: ('4%', 3), gold_ans: 36
** most_common: ('20', 9), gold_ans: 20
** most_common: ('109', 3), gold_ans: 75
** most_common: ('225', 5), gold_ans: 225
** most_common: ('100', 9), gold_ans: 100
** most_common: ('32', 11), gold_ans: 32
** most_common: ('10', 7), gold_ans: 10
** most_common: ('350', 12), gold_ans: 350
** most_common: ('8', 5), gold_ans: 8
** most_common: ('5', 10), gold_ans: 5
** most_common: ('3', 8), gold_ans: 3
** most_common: ('90', 6), gold_ans: 90
** most_common: ('66', 5), gold_ans: 66
** most_common: ('31', 12), gold_ans: 31
** most_common: ('36', 7), gold_ans: 36
** most_common: ('440', 9), gold_ans: 440
** most_common: ('70', 3), gold_ans: 70
** most_common: ('15', 6), gold_ans: 15
** most_common: ('81', 6), gold_ans: 81
** most_common: ('12', 4), gold_ans: 12
** most_common: ('60%', 7), gold_ans: 60
** most_common: ('84', 5), gold_ans: 84
** most_common: ('22', 5), gold_ans: 78
** most_common: ('Budspends$520.00onmakingmacaroniandcheeseinoneyear', 5), gold_ans: 520
** most_common: ('50%', 6), gold_ans: 50
** most_common: ('3', 4), gold_ans: 2
** most_common: ('48', 2), gold_ans: 8
** most_common: ('20', 12), gold_ans: 20
** most_common: ('50', 7), gold_ans: 50
** most_common: ('35', 9), gold_ans: 35
** most_common: ('96', 5), gold_ans: 96
** most_common: ('3360', 12), gold_ans: 3360
** most_common: ('7', 12), gold_ans: 7
** most_common: ('Jasonneedstomake750telephonecallstosell15carsandearnhisbonus', 3), gold_ans: 750
** most_common: ('56', 4), gold_ans: 56
BackVerify: 1250
** most_common: ('22', 6), gold_ans: 22
** most_common: ('32.5', 5), gold_ans: 30
** most_common: ('70', 4), gold_ans: 70
** most_common: ('120', 7), gold_ans: 120
** most_common: ('30', 11), gold_ans: 30
** most_common: ('12', 12), gold_ans: 12
** most_common: ('15', 12), gold_ans: 15
** most_common: ('14.00', 6), gold_ans: 14
** most_common: ('60', 7), gold_ans: 60
** most_common: ('7200', 10), gold_ans: 7200
** most_common: ('5', 11), gold_ans: 5
** most_common: ('235.00', 2), gold_ans: 235
** most_common: ('12', 7), gold_ans: 12
** most_common: ('500', 11), gold_ans: 500
** most_common: ('240', 6), gold_ans: 210
** most_common: ('36', 5), gold_ans: 36
** most_common: ('147', 9), gold_ans: 147
** most_common: ('40', 11), gold_ans: 40
** most_common: ('20', 9), gold_ans: 20
** most_common: ('117', 6), gold_ans: 54
** most_common: ('3528', 11), gold_ans: 3528
** most_common: ('Thereare42pinkStarburstsinthebag', 3), gold_ans: 43
** most_common: ('296', 10), gold_ans: 296
** most_common: ('27', 6), gold_ans: 27
** most_common: ('38', 7), gold_ans: 38
** most_common: ('16', 12), gold_ans: 16
** most_common: ('70', 7), gold_ans: 70
** most_common: ('48', 7), gold_ans: 48
** most_common: ('665', 9), gold_ans: 665
** most_common: ('180.00', 3), gold_ans: 180
** most_common: ('7', 9), gold_ans: 7
** most_common: ('20', 9), gold_ans: 20
** most_common: ('Johnneedstospend$12onhotdogsfortheparty', 4), gold_ans: 12
** most_common: ('60', 7), gold_ans: 60
** most_common: ('15', 6), gold_ans: 25
** most_common: ('1,218', 9), gold_ans: 1218
** most_common: ('105', 10), gold_ans: 105
** most_common: ('84', 6), gold_ans: 84
** most_common: ('29', 2), gold_ans: 34
** most_common: ('101', 10), gold_ans: 101
** most_common: ('90', 11), gold_ans: 90
** most_common: ('27', 10), gold_ans: 27
** most_common: ('67', 6), gold_ans: 67
** most_common: ('140,000', 12), gold_ans: 140000
** most_common: ('36', 4), gold_ans: 36
** most_common: ('2', 6), gold_ans: 2
** most_common: ('335', 7), gold_ans: 335
** most_common: ('60', 4), gold_ans: 60
** most_common: ('31.00', 9), gold_ans: 31
** most_common: ('13', 10), gold_ans: 13
BackVerify: 1300
** most_common: ('120', 9), gold_ans: 120
** most_common: ('Randynowhas23cookies', 4), gold_ans: 23
** most_common: ('72', 10), gold_ans: 72
** most_common: ('84', 2), gold_ans: 4
** most_common: ('1000', 5), gold_ans: 1000
** most_common: ('2325', 10), gold_ans: 2325
** most_common: ('0', 2), gold_ans: 2
** most_common: ('8', 7), gold_ans: 8
** most_common: ('30', 12), gold_ans: 30
** most_common: ('2180', 9), gold_ans: 2280
** most_common: ('32', 3), gold_ans: 64
** most_common: ('594', 10), gold_ans: 594
** most_common: ('180', 8), gold_ans: 180
** most_common: ('2.00', 9), gold_ans: 2
** most_common: ('8', 2), gold_ans: 8
** most_common: ('5', 9), gold_ans: 5
** most_common: ('470', 5), gold_ans: 230
** most_common: ('5', 6), gold_ans: 5
** most_common: ('14', 10), gold_ans: 14
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  1 0
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  2 0
** answer: Joshincurredalossof$10,000, groundtruth_str: 70000
** groundtruth_num is not None
** is_fraction:  Joshincurredalossof$10,000
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  2 1
** answer: 1620, groundtruth_str: 540
** groundtruth_num is not None
** is_fraction:  1620
** groundtruth_num is (int, float)
** compare_two_numbers int 1620 540
** wrong
**  2 2
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  3 2
** answer: 64, groundtruth_str: 64
** compare on lower
** correct
**  4 2
** answer: 260, groundtruth_str: 260
** compare on lower
** correct
**  5 2
** answer: 120, groundtruth_str: 160
** groundtruth_num is not None
** is_fraction:  120
** groundtruth_num is (int, float)
** compare_two_numbers int 120 160
** wrong
**  5 3
** answer: 135, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  135
** groundtruth_num is (int, float)
** compare_two_numbers int 135 45
** wrong
**  5 4
** answer: 460, groundtruth_str: 460
** compare on lower
** correct
**  6 4
** answer: 366, groundtruth_str: 366
** compare on lower
** correct
**  7 4
** answer: 694, groundtruth_str: 694
** compare on lower
** correct
**  8 4
** answer: 29, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  29
** groundtruth_num is (int, float)
** compare_two_numbers int 29 13
** wrong
**  8 5
** answer: 12, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 18
** wrong
**  8 6
** answer: 60%, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  60%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.6 60
** wrong
**  8 7
** answer: Themerchantshouldchoosethejewelrypurchaseplantomaximizeprofit, groundtruth_str: 125
** groundtruth_num is not None
** is_fraction:  Themerchantshouldchoosethejewelrypurchaseplantomaximizeprofit
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  8 8
** answer: 230, groundtruth_str: 230
** compare on lower
** correct
**  9 8
** answer: 57,500, groundtruth_str: 57500
** groundtruth_num is not None
** is_fraction:  57,500
** groundtruth_num is (int, float)
** compare_two_numbers int 57500 57500
** correct
**  10 8
** answer: 7.0, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  7.0
** groundtruth_num is (int, float)
** compare_two_numbers int 7 7
** correct
**  11 8
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  12 8
** answer: Approximately12.72%oftheremaining24litersiswater, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  Approximately12.72%oftheremaining24litersiswater
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  12 9
** answer: 25, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  25
** groundtruth_num is (int, float)
** compare_two_numbers int 25 14
** wrong
**  12 10
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  13 10
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  14 10
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  15 10
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  16 10
** answer: 243, groundtruth_str: 243
** compare on lower
** correct
**  17 10
** answer: 16.00, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  16.00
** groundtruth_num is (int, float)
** compare_two_numbers int 16 16
** correct
**  18 10
** answer: Henrytraveled25milesbetweenhisfirstandsecondstops, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  Henrytraveled25milesbetweenhisfirstandsecondstops
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  18 11
** answer: Thebootscost$104, groundtruth_str: 104
** groundtruth_num is not None
** is_fraction:  Thebootscost$104
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  18 12
** answer: 109, groundtruth_str: 109
** compare on lower
** correct
**  19 12
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  20 12
** answer: 35, groundtruth_str: 35
** compare on lower
** correct
**  21 12
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  22 12
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  23 12
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  24 12
** answer: 75.00, groundtruth_str: 75
** groundtruth_num is not None
** is_fraction:  75.00
** groundtruth_num is (int, float)
** compare_two_numbers int 75 75
** correct
**  25 12
** answer: 5, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 2
** wrong
**  25 13
** answer: Johnrunsat9.5milesperhouroneachofthethreedaysheruns, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  Johnrunsat9.5milesperhouroneachofthethreedaysheruns
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  25 14
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  26 14
** answer: Brandon'siPhoneis8yearsold, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  Brandon'siPhoneis8yearsold
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  26 15
** answer: 200, groundtruth_str: 200
** compare on lower
** correct
**  27 15
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  28 15
** answer: 200, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  200
** groundtruth_num is (int, float)
** compare_two_numbers int 200 48
** wrong
**  28 16
** answer: 20.00, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  20.00
** groundtruth_num is (int, float)
** compare_two_numbers int 20 20
** correct
**  29 16
** answer: 104, groundtruth_str: 104
** compare on lower
** correct
**  30 16
** answer: 163, groundtruth_str: 163
** compare on lower
** correct
**  31 16
** answer: 800, groundtruth_str: 800
** compare on lower
** correct
**  32 16
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  33 16
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  34 16
** answer: 294, groundtruth_str: 294
** compare on lower
** correct
**  35 16
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  36 16
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  37 16
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  38 16
** answer: 55, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  55
** groundtruth_num is (int, float)
** compare_two_numbers int 55 40
** wrong
**  38 17
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  39 17
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  40 17
** answer: 83, groundtruth_str: 83
** compare on lower
** correct
**  41 17
** answer: 31.00, groundtruth_str: 57
** groundtruth_num is not None
** is_fraction:  31.00
** groundtruth_num is (int, float)
** compare_two_numbers int 31 57
** wrong
**  41 18
** answer: 187, groundtruth_str: 187
** compare on lower
** correct
**  42 18
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  43 18
** answer: 1430, groundtruth_str: 1430
** compare on lower
** correct
**  44 18
** answer: 5, groundtruth_str: 25000
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 25000
** wrong
**  44 19
** answer: 1596, groundtruth_str: 1596
** compare on lower
** correct
**  45 19
** answer: 300, groundtruth_str: 300
** compare on lower
** correct
**  46 19
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  47 19
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  48 19
** answer: 695, groundtruth_str: 595
** groundtruth_num is not None
** is_fraction:  695
** groundtruth_num is (int, float)
** compare_two_numbers int 695 595
** wrong
**  48 20
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  49 20
** answer: Baileystartedwith$60, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  Baileystartedwith$60
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  49 21
** answer: 7,425.00, groundtruth_str: 7425
** groundtruth_num is not None
** is_fraction:  7,425.00
** groundtruth_num is (int, float)
** compare_two_numbers int 7425 7425
** correct
**  50 21
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  51 21
** answer: 221, groundtruth_str: 221
** compare on lower
** correct
**  52 21
** answer: 255, groundtruth_str: 255
** compare on lower
** correct
**  53 21
** answer: Artiewillmake$88.00fromsellingtheflowersattheFarmersMarkettoday, groundtruth_str: 88
** groundtruth_num is not None
** is_fraction:  Artiewillmake$88.00fromsellingtheflowersattheFarmersMarkettoday
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  53 22
** answer: 7.5, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  7.5
** groundtruth_num is (int, float)
** compare_two_numbers int 7.5 60
** wrong
**  53 23
** answer: Ceciliawillneed5bagsofdogfoodfortheentirefirstyearofherpuppy'slife, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  Ceciliawillneed5bagsofdogfoodfortheentirefirstyearofherpuppy'slife
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  53 24
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  54 24
** answer: Vincentsaves$6.00bybuying18flowersatthebetterprice, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  Vincentsaves$6.00bybuying18flowersatthebetterprice
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  54 25
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  55 25
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  56 25
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  57 25
** answer: 623, groundtruth_str: 623
** compare on lower
** correct
**  58 25
** answer: 600, groundtruth_str: 600
** compare on lower
** correct
**  59 25
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  60 25
** answer: 44, groundtruth_str: 44
** compare on lower
** correct
**  61 25
** answer: 18, groundtruth_str: 22
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 22
** wrong
**  61 26
** answer: 878.46, groundtruth_str: 9360
** groundtruth_num is not None
** is_fraction:  878.46
** groundtruth_num is (int, float)
** compare_two_numbers int 878.46 9360
** wrong
**  61 27
** answer: 8,000, groundtruth_str: 8000
** groundtruth_num is not None
** is_fraction:  8,000
** groundtruth_num is (int, float)
** compare_two_numbers int 8000 8000
** correct
**  62 27
** answer: 18, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 24
** wrong
**  62 28
** answer: 225, groundtruth_str: 225
** compare on lower
** correct
**  63 28
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  64 28
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  65 28
** answer: 44, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  44
** groundtruth_num is (int, float)
** compare_two_numbers int 44 36
** wrong
**  65 29
** answer: 336, groundtruth_str: 348
** groundtruth_num is not None
** is_fraction:  336
** groundtruth_num is (int, float)
** compare_two_numbers int 336 348
** wrong
**  65 30
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  66 30
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  67 30
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  68 30
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  69 30
** answer: 58, groundtruth_str: 58
** compare on lower
** correct
**  70 30
** answer: 175, groundtruth_str: 175
** compare on lower
** correct
**  71 30
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  72 30
** answer: 22, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  22
** groundtruth_num is (int, float)
** compare_two_numbers int 22 26
** wrong
**  72 31
** answer: 140, groundtruth_str: 140
** compare on lower
** correct
**  73 31
** answer: 500, groundtruth_str: 500
** compare on lower
** correct
**  74 31
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  75 31
** answer: 72, groundtruth_str: 72
** compare on lower
** correct
**  76 31
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  77 31
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  78 31
** answer: 28.00, groundtruth_str: 28
** groundtruth_num is not None
** is_fraction:  28.00
** groundtruth_num is (int, float)
** compare_two_numbers int 28 28
** correct
**  79 31
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  80 31
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  81 31
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  82 31
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  83 31
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  84 31
** answer: Sashamakesaprofitof$90ifshesellsallthelumber, groundtruth_str: 90
** groundtruth_num is not None
** is_fraction:  Sashamakesaprofitof$90ifshesellsallthelumber
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  84 32
** answer: 42, groundtruth_str: 42
** compare on lower
** correct
**  85 32
** answer: 360, groundtruth_str: 360
** compare on lower
** correct
**  86 32
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  87 32
** answer: 33, groundtruth_str: 95200
** groundtruth_num is not None
** is_fraction:  33
** groundtruth_num is (int, float)
** compare_two_numbers int 33 95200
** wrong
**  87 33
** answer: 240, groundtruth_str: 240
** compare on lower
** correct
**  88 33
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  89 33
** answer: 46, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  46
** groundtruth_num is (int, float)
** compare_two_numbers int 46 48
** wrong
**  89 34
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  90 34
** answer: 30, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 10
** wrong
**  90 35
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  91 35
** answer: 82, groundtruth_str: 82
** compare on lower
** correct
**  92 35
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  93 35
** answer: 880, groundtruth_str: 880
** compare on lower
** correct
**  94 35
** answer: 10,000, groundtruth_str: 10000
** groundtruth_num is not None
** is_fraction:  10,000
** groundtruth_num is (int, float)
** compare_two_numbers int 10000 10000
** correct
**  95 35
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  96 35
** answer: 940, groundtruth_str: 940
** compare on lower
** correct
**  97 35
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  98 35
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  99 35
** answer: 720, groundtruth_str: 720
** compare on lower
** correct
**  100 35
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  101 35
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  102 35
** answer: 29.00, groundtruth_str: 29
** groundtruth_num is not None
** is_fraction:  29.00
** groundtruth_num is (int, float)
** compare_two_numbers int 29 29
** correct
**  103 35
** answer: 29, groundtruth_str: 105
** groundtruth_num is not None
** is_fraction:  29
** groundtruth_num is (int, float)
** compare_two_numbers int 29 105
** wrong
**  103 36
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  104 36
** answer: 20%, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  20%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.2 20
** wrong
**  104 37
** answer: 400, groundtruth_str: 400
** compare on lower
** correct
**  105 37
** answer: 140, groundtruth_str: 140
** compare on lower
** correct
**  106 37
** answer: 29.3, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  29.3
** groundtruth_num is (int, float)
** compare_two_numbers int 29.3 16
** wrong
**  106 38
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  107 38
** answer: 4000, groundtruth_str: 4000
** compare on lower
** correct
**  108 38
** answer: 2125, groundtruth_str: 2,125
** groundtruth_num is not None
** is_fraction:  2125
** groundtruth_num is (int, float)
** compare_two_numbers int 2125 2125
** correct
**  109 38
** answer: 45, groundtruth_str: 75
** groundtruth_num is not None
** is_fraction:  45
** groundtruth_num is (int, float)
** compare_two_numbers int 45 75
** wrong
**  109 39
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  110 39
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  111 39
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  112 39
** answer: 4.75, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  4.75
** groundtruth_num is (int, float)
** compare_two_numbers int 4.75 5
** correct
**  113 39
** answer: 4.00, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  4.00
** groundtruth_num is (int, float)
** compare_two_numbers int 4 4
** correct
**  114 39
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  115 39
** answer: 272, groundtruth_str: 272
** compare on lower
** correct
**  116 39
** answer: 280, groundtruth_str: 280
** compare on lower
** correct
**  117 39
** answer: 1400, groundtruth_str: 1400
** compare on lower
** correct
**  118 39
** answer: 1320, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  1320
** groundtruth_num is (int, float)
** compare_two_numbers int 1320 80
** wrong
**  118 40
** answer: 34, groundtruth_str: 34
** compare on lower
** correct
**  119 40
** answer: 19, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  19
** groundtruth_num is (int, float)
** compare_two_numbers int 19 15
** wrong
**  119 41
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  120 41
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  121 41
** answer: 1280, groundtruth_str: 92
** groundtruth_num is not None
** is_fraction:  1280
** groundtruth_num is (int, float)
** compare_two_numbers int 1280 92
** wrong
**  121 42
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  122 42
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  123 42
** answer: €77, groundtruth_str: 77
** groundtruth_num is not None
** is_fraction:  €77
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  123 43
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  124 43
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  125 43
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  126 43
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  127 43
** answer: 150, groundtruth_str: 150
** compare on lower
** correct
**  128 43
** answer: 1210, groundtruth_str: 1210
** compare on lower
** correct
**  129 43
** answer: 51, groundtruth_str: 51
** compare on lower
** correct
**  130 43
** answer: 18,000, groundtruth_str: 18000
** groundtruth_num is not None
** is_fraction:  18,000
** groundtruth_num is (int, float)
** compare_two_numbers int 18000 18000
** correct
**  131 43
** answer: 95, groundtruth_str: 95
** compare on lower
** correct
**  132 43
** answer: 7.50, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  7.50
** groundtruth_num is (int, float)
** compare_two_numbers int 7.5 15
** wrong
**  132 44
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  133 44
** answer: 350, groundtruth_str: 350
** compare on lower
** correct
**  134 44
** answer: 122, groundtruth_str: 122
** compare on lower
** correct
**  135 44
** answer: 130, groundtruth_str: 130
** compare on lower
** correct
**  136 44
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  137 44
** answer: 160, groundtruth_str: 160
** compare on lower
** correct
**  138 44
** answer: Jeaniscurrently30yearsold, groundtruth_str: 23
** groundtruth_num is not None
** is_fraction:  Jeaniscurrently30yearsold
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  138 45
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  139 45
** answer: Itis100%morelikelythatJerryrollsanumbergreaterthan3thanthatherollstwoevennumbersinarow, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  Itis100%morelikelythatJerryrollsanumbergreaterthan3thanthatherollstwoevennumbersinarow
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  139 46
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  140 46
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  141 46
** answer: 106.1208, groundtruth_str: 106
** groundtruth_num is not None
** is_fraction:  106.1208
** groundtruth_num is (int, float)
** compare_two_numbers int 106.1208 106
** correct
**  142 46
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  143 46
** answer: 25, groundtruth_str: 34
** groundtruth_num is not None
** is_fraction:  25
** groundtruth_num is (int, float)
** compare_two_numbers int 25 34
** wrong
**  143 47
** answer: 360, groundtruth_str: 360
** compare on lower
** correct
**  144 47
** answer: 0.05, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  0.05
** groundtruth_num is (int, float)
** compare_two_numbers int 0.05 5
** wrong
**  144 48
** answer: Tomhas115treesleftafter10years, groundtruth_str: 91
** groundtruth_num is not None
** is_fraction:  Tomhas115treesleftafter10years
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  144 49
** answer: 18, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 24
** wrong
**  144 50
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  145 50
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  146 50
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  147 50
** answer: 6,277, groundtruth_str: 6277
** groundtruth_num is not None
** is_fraction:  6,277
** groundtruth_num is (int, float)
** compare_two_numbers int 6277 6277
** correct
**  148 50
** answer: Elainenowhasatotalof320Pokemoncards, groundtruth_str: 320
** groundtruth_num is not None
** is_fraction:  Elainenowhasatotalof320Pokemoncards
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  148 51
** answer: 7500, groundtruth_str: 7500
** compare on lower
** correct
**  149 51
** answer: 55, groundtruth_str: 55
** compare on lower
** correct
**  150 51
** answer: 114,200, groundtruth_str: 114,200
** compare on lower
** correct
**  151 51
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  152 51
** answer: 31, groundtruth_str: 31
** compare on lower
** correct
**  153 51
** answer: 98, groundtruth_str: 98
** compare on lower
** correct
**  154 51
** answer: 120, groundtruth_str: 98
** groundtruth_num is not None
** is_fraction:  120
** groundtruth_num is (int, float)
** compare_two_numbers int 120 98
** wrong
**  154 52
** answer: 860, groundtruth_str: 860
** compare on lower
** correct
**  155 52
** answer: 2600, groundtruth_str: 2600
** compare on lower
** correct
**  156 52
** answer: 76, groundtruth_str: 76
** compare on lower
** correct
**  157 52
** answer: 740, groundtruth_str: 145
** groundtruth_num is not None
** is_fraction:  740
** groundtruth_num is (int, float)
** compare_two_numbers int 740 145
** wrong
**  157 53
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  158 53
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  159 53
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  160 53
** answer: 250, groundtruth_str: 250
** compare on lower
** correct
**  161 53
** answer: 16, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 8
** wrong
**  161 54
** answer: 44, groundtruth_str: 44
** compare on lower
** correct
**  162 54
** answer: 220, groundtruth_str: 220
** compare on lower
** correct
**  163 54
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  164 54
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  165 54
** answer: 29, groundtruth_str: 54
** groundtruth_num is not None
** is_fraction:  29
** groundtruth_num is (int, float)
** compare_two_numbers int 29 54
** wrong
**  165 55
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  166 55
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  167 55
** answer: 140, groundtruth_str: 140
** compare on lower
** correct
**  168 55
** answer: 20,000, groundtruth_str: 20000
** groundtruth_num is not None
** is_fraction:  20,000
** groundtruth_num is (int, float)
** compare_two_numbers int 20000 20000
** correct
**  169 55
** answer: 180, groundtruth_str: 180
** compare on lower
** correct
**  170 55
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  171 55
** answer: 33, groundtruth_str: 33
** compare on lower
** correct
**  172 55
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  173 55
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  174 55
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  175 55
** answer: 276,000, groundtruth_str: 276,000
** compare on lower
** correct
**  176 55
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  177 55
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  178 55
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  179 55
** answer: 14, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers int 14 21
** wrong
**  179 56
** answer: 11, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 10
** wrong
**  179 57
** answer: 30, groundtruth_str: 31
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 31
** wrong
**  179 58
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  180 58
** answer: 68, groundtruth_str: 68
** compare on lower
** correct
**  181 58
** answer: 280, groundtruth_str: 280
** compare on lower
** correct
**  182 58
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  183 58
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  184 58
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  185 58
** answer: 250, groundtruth_str: 250
** compare on lower
** correct
**  186 58
** answer: GingergaveGriffin7fries, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  GingergaveGriffin7fries
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  186 59
** answer: 14, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers int 14 7
** wrong
**  186 60
** answer: 27,000, groundtruth_str: 27000
** groundtruth_num is not None
** is_fraction:  27,000
** groundtruth_num is (int, float)
** compare_two_numbers int 27000 27000
** correct
**  187 60
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  188 60
** answer: 300, groundtruth_str: 300
** compare on lower
** correct
**  189 60
** answer: 5600, groundtruth_str: 5,600
** groundtruth_num is not None
** is_fraction:  5600
** groundtruth_num is (int, float)
** compare_two_numbers int 5600 5600
** correct
**  190 60
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  191 60
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  192 60
** answer: 97, groundtruth_str: 73
** groundtruth_num is not None
** is_fraction:  97
** groundtruth_num is (int, float)
** compare_two_numbers int 97 73
** wrong
**  192 61
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  193 61
** answer: 84, groundtruth_str: 84
** compare on lower
** correct
**  194 61
** answer: 176, groundtruth_str: 192
** groundtruth_num is not None
** is_fraction:  176
** groundtruth_num is (int, float)
** compare_two_numbers int 176 192
** wrong
**  194 62
** answer: 45.00, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  45.00
** groundtruth_num is (int, float)
** compare_two_numbers int 45 45
** correct
**  195 62
** answer: 5600, groundtruth_str: 5600
** compare on lower
** correct
**  196 62
** answer: 6.00, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  6.00
** groundtruth_num is (int, float)
** compare_two_numbers int 6 6
** correct
**  197 62
** answer: 166, groundtruth_str: 168
** groundtruth_num is not None
** is_fraction:  166
** groundtruth_num is (int, float)
** compare_two_numbers int 166 168
** wrong
**  197 63
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  198 63
** answer: 62, groundtruth_str: 62
** compare on lower
** correct
**  199 63
** answer: 270, groundtruth_str: 270
** compare on lower
** correct
**  200 63
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  201 63
** answer: 400, groundtruth_str: 400
** compare on lower
** correct
**  202 63
** answer: 9,500, groundtruth_str: 9500
** groundtruth_num is not None
** is_fraction:  9,500
** groundtruth_num is (int, float)
** compare_two_numbers int 9500 9500
** correct
**  203 63
** answer: 118,000, groundtruth_str: 118000
** groundtruth_num is not None
** is_fraction:  118,000
** groundtruth_num is (int, float)
** compare_two_numbers int 118000 118000
** correct
**  204 63
** answer: 43, groundtruth_str: 91
** groundtruth_num is not None
** is_fraction:  43
** groundtruth_num is (int, float)
** compare_two_numbers int 43 91
** wrong
**  204 64
** answer: 1375, groundtruth_str: 1375
** compare on lower
** correct
**  205 64
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  206 64
** answer: 762, groundtruth_str: 762
** compare on lower
** correct
**  207 64
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  208 64
** answer: 5.00, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  5.00
** groundtruth_num is (int, float)
** compare_two_numbers int 5 5
** correct
**  209 64
** answer: 315, groundtruth_str: 315
** compare on lower
** correct
**  210 64
** answer: 3200, groundtruth_str: 3200
** compare on lower
** correct
**  211 64
** answer: 138, groundtruth_str: 138
** compare on lower
** correct
**  212 64
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  213 64
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  214 64
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  215 64
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  216 64
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  217 64
** answer: 2450, groundtruth_str: 2450
** compare on lower
** correct
**  218 64
** answer: 195, groundtruth_str: 195
** compare on lower
** correct
**  219 64
** answer: 68, groundtruth_str: 68
** compare on lower
** correct
**  220 64
** answer: 360, groundtruth_str: 360
** compare on lower
** correct
**  221 64
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  222 64
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  223 64
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  224 64
** answer: 3truckswillbeneededtotransport80flagstonesinonetrip, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  3truckswillbeneededtotransport80flagstonesinonetrip
** groundtruth_num is (int, float)
** compare_two_numbers int 3 3
** correct
**  225 64
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  226 64
** answer: 390, groundtruth_str: 390
** compare on lower
** correct
**  227 64
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  228 64
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  229 64
** answer: 29, groundtruth_str: 83
** groundtruth_num is not None
** is_fraction:  29
** groundtruth_num is (int, float)
** compare_two_numbers int 29 83
** wrong
**  229 65
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  230 65
** answer: 370, groundtruth_str: 370
** compare on lower
** correct
**  231 65
** answer: 6, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 3
** wrong
**  231 66
** answer: 55, groundtruth_str: 55
** compare on lower
** correct
**  232 66
** answer: Carmenpaysatotalof$350fortheantiquedesk, groundtruth_str: 500
** groundtruth_num is not None
** is_fraction:  Carmenpaysatotalof$350fortheantiquedesk
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  232 67
** answer: 31,800, groundtruth_str: 31800
** groundtruth_num is not None
** is_fraction:  31,800
** groundtruth_num is (int, float)
** compare_two_numbers int 31800 31800
** correct
**  233 67
** answer: 78, groundtruth_str: 78
** compare on lower
** correct
**  234 67
** answer: 32, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  32
** groundtruth_num is (int, float)
** compare_two_numbers int 32 8
** wrong
**  234 68
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  235 68
** answer: 2700, groundtruth_str: 1300
** groundtruth_num is not None
** is_fraction:  2700
** groundtruth_num is (int, float)
** compare_two_numbers int 2700 1300
** wrong
**  235 69
** answer: 3200, groundtruth_str: 3200
** compare on lower
** correct
**  236 69
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  237 69
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  238 69
** answer: 32, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  32
** groundtruth_num is (int, float)
** compare_two_numbers int 32 16
** wrong
**  238 70
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  239 70
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  240 70
** answer: Theodoesnothaveenoughmoneylefttobuygiftsforhisbusinesspartners, groundtruth_str: 2050
** groundtruth_num is not None
** is_fraction:  Theodoesnothaveenoughmoneylefttobuygiftsforhisbusinesspartners
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  240 71
** answer: 91, groundtruth_str: 91
** compare on lower
** correct
**  241 71
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  242 71
** answer: 204,000, groundtruth_str: 120000
** groundtruth_num is not None
** is_fraction:  204,000
** groundtruth_num is (int, float)
** compare_two_numbers int 204000 120000
** wrong
**  242 72
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  243 72
** answer: 18, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 14
** wrong
**  243 73
** answer: 156, groundtruth_str: 156
** compare on lower
** correct
**  244 73
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  245 73
** answer: 123, groundtruth_str: 123
** compare on lower
** correct
**  246 73
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  247 73
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  248 73
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  249 73
** answer: 49, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  49
** groundtruth_num is (int, float)
** compare_two_numbers int 49 9
** wrong
**  249 74
** answer: 15, groundtruth_str: 75
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 75
** wrong
**  249 75
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  250 75
** answer: 224,000, groundtruth_str: 224000
** groundtruth_num is not None
** is_fraction:  224,000
** groundtruth_num is (int, float)
** compare_two_numbers int 224000 224000
** correct
**  251 75
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  252 75
** answer: 31, groundtruth_str: 31
** compare on lower
** correct
**  253 75
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  254 75
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  255 75
** answer: 31, groundtruth_str: 31
** compare on lower
** correct
**  256 75
** answer: 8,400, groundtruth_str: 8400
** groundtruth_num is not None
** is_fraction:  8,400
** groundtruth_num is (int, float)
** compare_two_numbers int 8400 8400
** correct
**  257 75
** answer: 44, groundtruth_str: 44
** compare on lower
** correct
**  258 75
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  259 75
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  260 75
** answer: 310, groundtruth_str: 310
** compare on lower
** correct
**  261 75
** answer: 72, groundtruth_str: 72
** compare on lower
** correct
**  262 75
** answer: Johnate1morehotdogthanLuke, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  Johnate1morehotdogthanLuke
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  262 76
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  263 76
** answer: 160, groundtruth_str: 160
** compare on lower
** correct
**  264 76
** answer: 0, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 4
** wrong
**  264 77
** answer: 260, groundtruth_str: 260
** compare on lower
** correct
**  265 77
** answer: 87, groundtruth_str: 87
** compare on lower
** correct
**  266 77
** answer: 180000, groundtruth_str: 180000
** compare on lower
** correct
**  267 77
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  268 77
** answer: 310, groundtruth_str: 310
** compare on lower
** correct
**  269 77
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  270 77
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  271 77
** answer: 10%, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  10%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.1 10
** wrong
**  271 78
** answer: 2640, groundtruth_str: 2640
** compare on lower
** correct
**  272 78
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  273 78
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  274 78
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  275 78
** answer: 8, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 20
** wrong
**  275 79
** answer: Annabellestillneedstosave$125toaffordthephone, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  Annabellestillneedstosave$125toaffordthephone
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  275 80
** answer: 34, groundtruth_str: 34
** compare on lower
** correct
**  276 80
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  277 80
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  278 80
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  279 80
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  279 81
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  280 81
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  281 81
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  282 81
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  283 81
** answer: 49, groundtruth_str: 49
** compare on lower
** correct
**  284 81
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  285 81
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  286 81
** answer: 19, groundtruth_str: 19
** compare on lower
** correct
**  287 81
** answer: 24, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 18
** wrong
**  287 82
** answer: 1198, groundtruth_str: 1198
** compare on lower
** correct
**  288 82
** answer: 320, groundtruth_str: 320
** compare on lower
** correct
**  289 82
** answer: 62, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  62
** groundtruth_num is (int, float)
** compare_two_numbers int 62 50
** wrong
**  289 83
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  290 83
** answer: 240,000, groundtruth_str: 240000
** groundtruth_num is not None
** is_fraction:  240,000
** groundtruth_num is (int, float)
** compare_two_numbers int 240000 240000
** correct
**  291 83
** answer: Marycollects45kgofmilkeveryday, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  Marycollects45kgofmilkeveryday
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  291 84
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  292 84
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  293 84
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  294 84
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  295 84
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  296 84
** answer: 1,095, groundtruth_str: 803
** groundtruth_num is not None
** is_fraction:  1,095
** groundtruth_num is (int, float)
** compare_two_numbers int 1095 803
** wrong
**  296 85
** answer: 67, groundtruth_str: 67
** compare on lower
** correct
**  297 85
** answer: 350, groundtruth_str: 350
** compare on lower
** correct
**  298 85
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  298 86
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  299 86
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  300 86
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  301 86
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  302 86
** answer: 88, groundtruth_str: 88
** compare on lower
** correct
**  303 86
** answer: 8, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 6
** wrong
**  303 87
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  304 87
** answer: Samhas15morepopsiclesthanBetty, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  Samhas15morepopsiclesthanBetty
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  304 88
** answer: Timsaves$44bycancelinghis$60cablepackageandsubscribingtoNetflixandthebundledHuluandDisneyPlusservices, groundtruth_str: 34
** groundtruth_num is not None
** is_fraction:  Timsaves$44bycancelinghis$60cablepackageandsubscribingtoNetflixandthebundledHuluandDisneyPlusservices
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  304 89
** answer: 20%, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  20%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.2 20
** wrong
**  304 90
** answer: 92, groundtruth_str: 92
** compare on lower
** correct
**  305 90
** answer: 21, groundtruth_str: 38
** groundtruth_num is not None
** is_fraction:  21
** groundtruth_num is (int, float)
** compare_two_numbers int 21 38
** wrong
**  305 91
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  306 91
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  307 91
** answer: 168, groundtruth_str: 168
** compare on lower
** correct
**  308 91
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  309 91
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  310 91
** answer: 32,400, groundtruth_str: 14400
** groundtruth_num is not None
** is_fraction:  32,400
** groundtruth_num is (int, float)
** compare_two_numbers int 32400 14400
** wrong
**  310 92
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  311 92
** answer: 135, groundtruth_str: 81
** groundtruth_num is not None
** is_fraction:  135
** groundtruth_num is (int, float)
** compare_two_numbers int 135 81
** wrong
**  311 93
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  312 93
** answer: 50.00, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  50.00
** groundtruth_num is (int, float)
** compare_two_numbers int 50 50
** correct
**  313 93
** answer: 160, groundtruth_str: 200
** groundtruth_num is not None
** is_fraction:  160
** groundtruth_num is (int, float)
** compare_two_numbers int 160 200
** wrong
**  313 94
** answer: 4,000, groundtruth_str: 2000
** groundtruth_num is not None
** is_fraction:  4,000
** groundtruth_num is (int, float)
** compare_two_numbers int 4000 2000
** wrong
**  313 95
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  314 95
** answer: 110,400, groundtruth_str: 168000
** groundtruth_num is not None
** is_fraction:  110,400
** groundtruth_num is (int, float)
** compare_two_numbers int 110400 168000
** wrong
**  314 96
** answer: 6.75, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  6.75
** groundtruth_num is (int, float)
** compare_two_numbers int 6.75 3
** wrong
**  314 97
** answer: 1110, groundtruth_str: 1110
** compare on lower
** correct
**  315 97
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  316 97
** answer: 2,500, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  2,500
** groundtruth_num is (int, float)
** compare_two_numbers int 2500 25
** wrong
**  316 98
** answer: 56, groundtruth_str: 56
** compare on lower
** correct
**  317 98
** answer: 350, groundtruth_str: 350
** compare on lower
** correct
**  318 98
** answer: 56, groundtruth_str: 56
** compare on lower
** correct
**  319 98
** answer: 1640, groundtruth_str: 3140
** groundtruth_num is not None
** is_fraction:  1640
** groundtruth_num is (int, float)
** compare_two_numbers int 1640 3140
** wrong
**  319 99
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  320 99
** answer: 3,000, groundtruth_str: 3000
** groundtruth_num is not None
** is_fraction:  3,000
** groundtruth_num is (int, float)
** compare_two_numbers int 3000 3000
** correct
**  321 99
** answer: 17000, groundtruth_str: 17000
** compare on lower
** correct
**  322 99
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  323 99
** answer: 240, groundtruth_str: 284
** groundtruth_num is not None
** is_fraction:  240
** groundtruth_num is (int, float)
** compare_two_numbers int 240 284
** wrong
**  323 100
** answer: 6, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 8
** wrong
**  323 101
** answer: 570, groundtruth_str: 570
** compare on lower
** correct
**  324 101
** answer: 150, groundtruth_str: 150
** compare on lower
** correct
**  325 101
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  326 101
** answer: 150, groundtruth_str: 150
** compare on lower
** correct
**  327 101
** answer: 2, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 26
** wrong
**  327 102
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  328 102
** answer: 132.00, groundtruth_str: 132
** groundtruth_num is not None
** is_fraction:  132.00
** groundtruth_num is (int, float)
** compare_two_numbers int 132 132
** correct
**  329 102
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  330 102
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  331 102
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  332 102
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  333 102
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  334 102
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  335 102
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  336 102
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  337 102
** answer: 16, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 17
** wrong
**  337 103
** answer: 98, groundtruth_str: 98
** compare on lower
** correct
**  338 103
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  339 103
** answer: 49, groundtruth_str: 49
** compare on lower
** correct
**  340 103
** answer: 29, groundtruth_str: 59
** groundtruth_num is not None
** is_fraction:  29
** groundtruth_num is (int, float)
** compare_two_numbers int 29 59
** wrong
**  340 104
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  341 104
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  342 104
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  343 104
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  344 104
** answer: 539, groundtruth_str: 539
** compare on lower
** correct
**  345 104
** answer: 112, groundtruth_str: 112
** compare on lower
** correct
**  346 104
** answer: 3, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 4
** wrong
**  346 105
** answer: 11,050, groundtruth_str: 11050
** groundtruth_num is not None
** is_fraction:  11,050
** groundtruth_num is (int, float)
** compare_two_numbers int 11050 11050
** correct
**  347 105
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  348 105
** answer: 8800, groundtruth_str: 6400
** groundtruth_num is not None
** is_fraction:  8800
** groundtruth_num is (int, float)
** compare_two_numbers int 8800 6400
** wrong
**  348 106
** answer: 240, groundtruth_str: 150
** groundtruth_num is not None
** is_fraction:  240
** groundtruth_num is (int, float)
** compare_two_numbers int 240 150
** wrong
**  348 107
** answer: 1920, groundtruth_str: 1920
** compare on lower
** correct
**  349 107
** answer: 78, groundtruth_str: 78
** compare on lower
** correct
**  350 107
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  351 107
** answer: 35%, groundtruth_str: 35
** groundtruth_num is not None
** is_fraction:  35%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.35 35
** wrong
**  351 108
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  352 108
** answer: 84, groundtruth_str: 84
** compare on lower
** correct
**  353 108
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  354 108
** answer: 71, groundtruth_str: 71
** compare on lower
** correct
**  355 108
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  356 108
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  357 108
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  358 108
** answer: 9, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 1
** wrong
**  358 109
** answer: 1200, groundtruth_str: 1200
** compare on lower
** correct
**  359 109
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  360 109
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  361 109
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  362 109
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  363 109
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  364 109
** answer: 10%, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  10%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.1 10
** wrong
**  364 110
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  365 110
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  366 110
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  367 110
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  368 110
** answer: 621, groundtruth_str: 621
** compare on lower
** correct
**  369 110
** answer: 15,400, groundtruth_str: 15400
** groundtruth_num is not None
** is_fraction:  15,400
** groundtruth_num is (int, float)
** compare_two_numbers int 15400 15400
** correct
**  370 110
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  371 110
** answer: 84, groundtruth_str: 84
** compare on lower
** correct
**  372 110
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  373 110
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  374 110
** answer: 240, groundtruth_str: 240
** compare on lower
** correct
**  375 110
** answer: 220, groundtruth_str: 220
** compare on lower
** correct
**  376 110
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  377 110
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  378 110
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  379 110
** answer: -11, groundtruth_str: -10
** groundtruth_num is not None
** is_fraction:  -11
** groundtruth_num is (int, float)
** compare_two_numbers int -11 -10
** wrong
**  379 111
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  380 111
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  381 111
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  382 111
** answer: 50, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  50
** groundtruth_num is (int, float)
** compare_two_numbers int 50 25
** wrong
**  382 112
** answer: 51.8, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  51.8
** groundtruth_num is (int, float)
** compare_two_numbers int 51.8 21
** wrong
**  382 113
** answer: 200, groundtruth_str: 200
** compare on lower
** correct
**  383 113
** answer: 38, groundtruth_str: 38
** compare on lower
** correct
**  384 113
** answer: 112, groundtruth_str: 112
** compare on lower
** correct
**  385 113
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  386 113
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  387 113
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  388 113
** answer: 273, groundtruth_str: 273
** compare on lower
** correct
**  389 113
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  390 113
** answer: Thecouchis18feetlong, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  Thecouchis18feetlong
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  390 114
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  391 114
** answer: 1600, groundtruth_str: 1,600
** groundtruth_num is not None
** is_fraction:  1600
** groundtruth_num is (int, float)
** compare_two_numbers int 1600 1600
** correct
**  392 114
** answer: 144.00, groundtruth_str: 144
** groundtruth_num is not None
** is_fraction:  144.00
** groundtruth_num is (int, float)
** compare_two_numbers int 144 144
** correct
**  393 114
** answer: 2.00, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  2.00
** groundtruth_num is (int, float)
** compare_two_numbers int 2 2
** correct
**  394 114
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  395 114
** answer: 5, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 4
** wrong
**  395 115
** answer: 731.67, groundtruth_str: 525
** groundtruth_num is not None
** is_fraction:  731.67
** groundtruth_num is (int, float)
** compare_two_numbers int 731.67 525
** wrong
**  395 116
** answer: 110, groundtruth_str: 110
** compare on lower
** correct
**  396 116
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  397 116
** answer: 300, groundtruth_str: 300
** compare on lower
** correct
**  398 116
** answer: 90,000, groundtruth_str: 90000
** groundtruth_num is not None
** is_fraction:  90,000
** groundtruth_num is (int, float)
** compare_two_numbers int 90000 90000
** correct
**  399 116
** answer: 160, groundtruth_str: 160
** compare on lower
** correct
**  400 116
** answer: 375, groundtruth_str: 375
** compare on lower
** correct
**  401 116
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  402 116
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  403 116
** answer: 280, groundtruth_str: 280
** compare on lower
** correct
**  404 116
** answer: 63, groundtruth_str: 63
** compare on lower
** correct
**  405 116
** answer: 39, groundtruth_str: 39
** compare on lower
** correct
**  406 116
** answer: 39, groundtruth_str: 29
** groundtruth_num is not None
** is_fraction:  39
** groundtruth_num is (int, float)
** compare_two_numbers int 39 29
** wrong
**  406 117
** answer: 74, groundtruth_str: 74
** compare on lower
** correct
**  407 117
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  408 117
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  409 117
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  410 117
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  411 117
** answer: 130, groundtruth_str: 172
** groundtruth_num is not None
** is_fraction:  130
** groundtruth_num is (int, float)
** compare_two_numbers int 130 172
** wrong
**  411 118
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  412 118
** answer: 42, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  42
** groundtruth_num is (int, float)
** compare_two_numbers int 42 36
** wrong
**  412 119
** answer: 72, groundtruth_str: 66
** groundtruth_num is not None
** is_fraction:  72
** groundtruth_num is (int, float)
** compare_two_numbers int 72 66
** wrong
**  412 120
** answer: 9, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 25
** wrong
**  412 121
** answer: 300, groundtruth_str: 300
** compare on lower
** correct
**  413 121
** answer: Eachgirlbroughtback300seashells, groundtruth_str: 300
** groundtruth_num is not None
** is_fraction:  Eachgirlbroughtback300seashells
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  413 122
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  414 122
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  415 122
** answer: 188, groundtruth_str: 188
** compare on lower
** correct
**  416 122
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  417 122
** answer: 30, groundtruth_str: 35
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 35
** wrong
**  417 123
** answer: 39, groundtruth_str: 39
** compare on lower
** correct
**  418 123
** answer: 281.25, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  281.25
** groundtruth_num is (int, float)
** compare_two_numbers int 281.25 50
** wrong
**  418 124
** answer: 7.00, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  7.00
** groundtruth_num is (int, float)
** compare_two_numbers int 7 7
** correct
**  419 124
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  420 124
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  421 124
** answer: Jeffwalksatotalof30milesinaweek, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  Jeffwalksatotalof30milesinaweek
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  421 125
** answer: 65, groundtruth_str: 130
** groundtruth_num is not None
** is_fraction:  65
** groundtruth_num is (int, float)
** compare_two_numbers int 65 130
** wrong
**  421 126
** answer: 81, groundtruth_str: 81
** compare on lower
** correct
**  422 126
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  423 126
** answer: 398, groundtruth_str: 398
** compare on lower
** correct
**  424 126
** answer: Danielneedstopay$26.10foralltheitemshewantstobuy, groundtruth_str: 27
** groundtruth_num is not None
** is_fraction:  Danielneedstopay$26.10foralltheitemshewantstobuy
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  424 127
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  425 127
** answer: 450, groundtruth_str: 450
** compare on lower
** correct
**  426 127
** answer: 92, groundtruth_str: 92
** compare on lower
** correct
**  427 127
** answer: 54, groundtruth_str: 54
** compare on lower
** correct
**  428 127
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  429 127
** answer: 120, groundtruth_str: 160
** groundtruth_num is not None
** is_fraction:  120
** groundtruth_num is (int, float)
** compare_two_numbers int 120 160
** wrong
**  429 128
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  430 128
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  431 128
** answer: 0, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 16
** wrong
**  431 129
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  432 129
** answer: 180, groundtruth_str: 180
** compare on lower
** correct
**  433 129
** answer: 82, groundtruth_str: 82
** compare on lower
** correct
**  434 129
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  435 129
** answer: 170, groundtruth_str: 240
** groundtruth_num is not None
** is_fraction:  170
** groundtruth_num is (int, float)
** compare_two_numbers int 170 240
** wrong
**  435 130
** answer: 6, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 5
** wrong
**  435 131
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  436 131
** answer: 9.00, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  9.00
** groundtruth_num is (int, float)
** compare_two_numbers int 9 9
** correct
**  437 131
** answer: 175, groundtruth_str: 175
** compare on lower
** correct
**  438 131
** answer: Mitchellmade$21morethanLiamsellinglemonadethatweekend, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  Mitchellmade$21morethanLiamsellinglemonadethatweekend
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  438 132
** answer: Peterwillhaveatotalof26actionfiguresbytheendoftheweek, groundtruth_str: 23
** groundtruth_num is not None
** is_fraction:  Peterwillhaveatotalof26actionfiguresbytheendoftheweek
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  438 133
** answer: 308, groundtruth_str: 308
** compare on lower
** correct
**  439 133
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  440 133
** answer: 600, groundtruth_str: 600
** compare on lower
** correct
**  441 133
** answer: 37.00, groundtruth_str: 37
** groundtruth_num is not None
** is_fraction:  37.00
** groundtruth_num is (int, float)
** compare_two_numbers int 37 37
** correct
**  442 133
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  443 133
** answer: 7344, groundtruth_str: 11232
** groundtruth_num is not None
** is_fraction:  7344
** groundtruth_num is (int, float)
** compare_two_numbers int 7344 11232
** wrong
**  443 134
** answer: 54.29, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  54.29
** groundtruth_num is (int, float)
** compare_two_numbers int 54.29 40
** wrong
**  443 135
** answer: Theequationrepresentingthenumbertrain'svalueaftertheoperationsis\(\frac{40+x}{8}\),where\(x\)isthenumberthatDianeinitiallythoughtof.Thisexpressionshowsthatthefinalvalueofthenumbertraindependsonthevalueof\(x\),andsince\(x\)isnotspecified,wecannotdetermineanumericalfinalvalueforthenumbertrain, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  Theequationrepresentingthenumbertrain'svalueaftertheoperationsis\(\frac{40+x}{8}\),where\(x\)isthenumberthatDianeinitiallythoughtof.Thisexpressionshowsthatthefinalvalueofthenumbertraindependsonthevalueof\(x\),andsince\(x\)isnotspecified,wecannotdetermineanumericalfinalvalueforthenumbertrain
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  443 136
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  444 136
** answer: 540.8, groundtruth_str: 500
** groundtruth_num is not None
** is_fraction:  540.8
** groundtruth_num is (int, float)
** compare_two_numbers int 540.8 500
** wrong
**  444 137
** answer: 215, groundtruth_str: 215
** compare on lower
** correct
**  445 137
** answer: 129,200, groundtruth_str: 129200
** groundtruth_num is not None
** is_fraction:  129,200
** groundtruth_num is (int, float)
** compare_two_numbers int 129200 129200
** correct
**  446 137
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  447 137
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  448 137
** answer: Johnearned$40morethanJill, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  Johnearned$40morethanJill
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  448 138
** answer: 80, groundtruth_str: 800
** groundtruth_num is not None
** is_fraction:  80
** groundtruth_num is (int, float)
** compare_two_numbers int 80 800
** wrong
**  448 139
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  449 139
** answer: 52, groundtruth_str: 52
** compare on lower
** correct
**  450 139
** answer: -2.5pounds, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  -2.5pounds
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  450 140
** answer: 318, groundtruth_str: 319
** groundtruth_num is not None
** is_fraction:  318
** groundtruth_num is (int, float)
** compare_two_numbers int 318 319
** wrong
**  450 141
** answer: 220, groundtruth_str: 220
** compare on lower
** correct
**  451 141
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  452 141
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  453 141
** answer: 42, groundtruth_str: 42
** compare on lower
** correct
**  454 141
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  455 141
** answer: 334, groundtruth_str: 260
** groundtruth_num is not None
** is_fraction:  334
** groundtruth_num is (int, float)
** compare_two_numbers int 334 260
** wrong
**  455 142
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  456 142
** answer: 69, groundtruth_str: 69
** compare on lower
** correct
**  457 142
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  458 142
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  459 142
** answer: 99, groundtruth_str: 104
** groundtruth_num is not None
** is_fraction:  99
** groundtruth_num is (int, float)
** compare_two_numbers int 99 104
** wrong
**  459 143
** answer: 2, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 5
** wrong
**  459 144
** answer: 1260, groundtruth_str: 1800
** groundtruth_num is not None
** is_fraction:  1260
** groundtruth_num is (int, float)
** compare_two_numbers int 1260 1800
** wrong
**  459 145
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  460 145
** answer: Patrickearnedatotalof$42fromsellinglemonadefor6hours, groundtruth_str: 42
** groundtruth_num is not None
** is_fraction:  Patrickearnedatotalof$42fromsellinglemonadefor6hours
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  460 146
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  461 146
** answer: 1200, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  1200
** groundtruth_num is (int, float)
** compare_two_numbers int 1200 10
** wrong
**  461 147
** answer: 5.37, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  5.37
** groundtruth_num is (int, float)
** compare_two_numbers int 5.37 8
** wrong
**  461 148
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  462 148
** answer: 66,460, groundtruth_str: 65,960
** groundtruth_num is not None
** is_fraction:  66,460
** groundtruth_num is (int, float)
** compare_two_numbers int 66460 65960
** wrong
**  462 149
** answer: 50, groundtruth_str: 1,450,000
** groundtruth_num is not None
** is_fraction:  50
** groundtruth_num is (int, float)
** compare_two_numbers int 50 1450000
** wrong
**  462 150
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  463 150
** answer: 93,000, groundtruth_str: 93000
** groundtruth_num is not None
** is_fraction:  93,000
** groundtruth_num is (int, float)
** compare_two_numbers int 93000 93000
** correct
**  464 150
** answer: 312, groundtruth_str: 312
** compare on lower
** correct
**  465 150
** answer: 33.00, groundtruth_str: 33
** groundtruth_num is not None
** is_fraction:  33.00
** groundtruth_num is (int, float)
** compare_two_numbers int 33 33
** correct
**  466 150
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  467 150
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  468 150
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  469 150
** answer: 76, groundtruth_str: 76
** compare on lower
** correct
**  470 150
** answer: 509, groundtruth_str: 1509
** groundtruth_num is not None
** is_fraction:  509
** groundtruth_num is (int, float)
** compare_two_numbers int 509 1509
** wrong
**  470 151
** answer: Johnspent$3000onhisphysicaltherapysessions, groundtruth_str: 3000
** groundtruth_num is not None
** is_fraction:  Johnspent$3000onhisphysicaltherapysessions
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  470 152
** answer: 0, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 7
** wrong
**  470 153
** answer: 20, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  20
** groundtruth_num is (int, float)
** compare_two_numbers int 20 8
** wrong
**  470 154
** answer: 85, groundtruth_str: 85
** compare on lower
** correct
**  471 154
** answer: 160, groundtruth_str: 160
** compare on lower
** correct
**  472 154
** answer: 72, groundtruth_str: 72
** compare on lower
** correct
**  473 154
** answer: 54, groundtruth_str: 54
** compare on lower
** correct
**  474 154
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  474 155
** answer: 17,500, groundtruth_str: 17500
** groundtruth_num is not None
** is_fraction:  17,500
** groundtruth_num is (int, float)
** compare_two_numbers int 17500 17500
** correct
**  475 155
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  476 155
** answer: 4800, groundtruth_str: 4800
** compare on lower
** correct
**  477 155
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  478 155
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  479 155
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  480 155
** answer: 10, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 4
** wrong
**  480 156
** answer: 2100, groundtruth_str: 1050
** groundtruth_num is not None
** is_fraction:  2100
** groundtruth_num is (int, float)
** compare_two_numbers int 2100 1050
** wrong
**  480 157
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  481 157
** answer: 12.00, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  12.00
** groundtruth_num is (int, float)
** compare_two_numbers int 12 12
** correct
**  482 157
** answer: 216, groundtruth_str: 216
** compare on lower
** correct
**  483 157
** answer: 43,500, groundtruth_str: 43,500
** compare on lower
** correct
**  484 157
** answer: 372,000, groundtruth_str: 262500
** groundtruth_num is not None
** is_fraction:  372,000
** groundtruth_num is (int, float)
** compare_two_numbers int 372000 262500
** wrong
**  484 158
** answer: 10,800, groundtruth_str: 10,800
** compare on lower
** correct
**  485 158
** answer: 840, groundtruth_str: 840
** compare on lower
** correct
**  486 158
** answer: Steve'sson'swifeis29yearsold, groundtruth_str: 29
** groundtruth_num is not None
** is_fraction:  Steve'sson'swifeis29yearsold
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  486 159
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  487 159
** answer: 79, groundtruth_str: 79
** compare on lower
** correct
**  488 159
** answer: 6, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 10
** wrong
**  488 160
** answer: 56, groundtruth_str: 54
** groundtruth_num is not None
** is_fraction:  56
** groundtruth_num is (int, float)
** compare_two_numbers int 56 54
** wrong
**  488 161
** answer: Thereare162,000InstagramlikesforFishio'sselfie, groundtruth_str: 162000
** groundtruth_num is not None
** is_fraction:  Thereare162,000InstagramlikesforFishio'sselfie
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  488 162
** answer: 142, groundtruth_str: 142
** compare on lower
** correct
**  489 162
** answer: 2100, groundtruth_str: 2100
** compare on lower
** correct
**  490 162
** answer: 225, groundtruth_str: 75
** groundtruth_num is not None
** is_fraction:  225
** groundtruth_num is (int, float)
** compare_two_numbers int 225 75
** wrong
**  490 163
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  491 163
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  492 163
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  493 163
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  494 163
** answer: 330,000, groundtruth_str: 330000
** groundtruth_num is not None
** is_fraction:  330,000
** groundtruth_num is (int, float)
** compare_two_numbers int 330000 330000
** correct
**  495 163
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  496 163
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  497 163
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  498 163
** answer: 44, groundtruth_str: 44
** compare on lower
** correct
**  499 163
** answer: 7.00, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  7.00
** groundtruth_num is (int, float)
** compare_two_numbers int 7 7
** correct
**  500 163
** answer: 193, groundtruth_str: 193
** compare on lower
** correct
**  501 163
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  502 163
** answer: 360, groundtruth_str: 360
** compare on lower
** correct
**  503 163
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  504 163
** answer: 53, groundtruth_str: 53
** compare on lower
** correct
**  505 163
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  506 163
** answer: 132, groundtruth_str: 132
** compare on lower
** correct
**  507 163
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  508 163
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  509 163
** answer: 9, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 2
** wrong
**  509 164
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  510 164
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  511 164
** answer: 21, groundtruth_str: 33
** groundtruth_num is not None
** is_fraction:  21
** groundtruth_num is (int, float)
** compare_two_numbers int 21 33
** wrong
**  511 165
** answer: 240, groundtruth_str: 240
** compare on lower
** correct
**  512 165
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  513 165
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  514 165
** answer: 576, groundtruth_str: 576
** compare on lower
** correct
**  515 165
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  516 165
** answer: 298, groundtruth_str: 298
** compare on lower
** correct
**  517 165
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  518 165
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  519 165
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  520 165
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  521 165
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  522 165
** answer: 10.83, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  10.83
** groundtruth_num is (int, float)
** compare_two_numbers int 10.83 13
** wrong
**  522 166
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  523 166
** answer: 7.00, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  7.00
** groundtruth_num is (int, float)
** compare_two_numbers int 7 7
** correct
**  524 166
** answer: 5760, groundtruth_str: 5760
** compare on lower
** correct
**  525 166
** answer: 10, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 25
** wrong
**  525 167
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  526 167
** answer: 68, groundtruth_str: 68
** compare on lower
** correct
**  527 167
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  528 167
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  529 167
** answer: 145, groundtruth_str: 145
** compare on lower
** correct
**  530 167
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  531 167
** answer: 720, groundtruth_str: 720
** compare on lower
** correct
**  532 167
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  533 167
** answer: 135, groundtruth_str: 135
** compare on lower
** correct
**  534 167
** answer: 190, groundtruth_str: 200
** groundtruth_num is not None
** is_fraction:  190
** groundtruth_num is (int, float)
** compare_two_numbers int 190 200
** wrong
**  534 168
** answer: 2,800, groundtruth_str: 2800
** groundtruth_num is not None
** is_fraction:  2,800
** groundtruth_num is (int, float)
** compare_two_numbers int 2800 2800
** correct
**  535 168
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  536 168
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  537 168
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  538 168
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  539 168
** answer: 8%, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  8%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.08 8
** wrong
**  539 169
** answer: 168, groundtruth_str: 168
** compare on lower
** correct
**  540 169
** answer: 3000, groundtruth_str: 3000
** compare on lower
** correct
**  541 169
** answer: 45.00, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  45.00
** groundtruth_num is (int, float)
** compare_two_numbers int 45 45
** correct
**  542 169
** answer: 12, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 6
** wrong
**  542 170
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  543 170
** answer: 576, groundtruth_str: 576
** compare on lower
** correct
**  544 170
** answer: Jameswouldhavesaved$30bypickingtheblueberrieshimselfinsteadofbuyingthematthestore, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  Jameswouldhavesaved$30bypickingtheblueberrieshimselfinsteadofbuyingthematthestore
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  544 171
** answer: 385,000, groundtruth_str: 385000
** groundtruth_num is not None
** is_fraction:  385,000
** groundtruth_num is (int, float)
** compare_two_numbers int 385000 385000
** correct
**  545 171
** answer: 770, groundtruth_str: 770
** compare on lower
** correct
**  546 171
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  547 171
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  548 171
** answer: 175, groundtruth_str: 175
** compare on lower
** correct
**  549 171
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  550 171
** answer: 2450, groundtruth_str: 2450
** compare on lower
** correct
**  551 171
** answer: 255, groundtruth_str: 255
** compare on lower
** correct
**  552 171
** answer: 160, groundtruth_str: 160
** compare on lower
** correct
**  553 171
** answer: 31, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  31
** groundtruth_num is (int, float)
** compare_two_numbers int 31 18
** wrong
**  553 172
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  554 172
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  555 172
** answer: 112, groundtruth_str: 112
** compare on lower
** correct
**  556 172
** answer: 40%, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  40%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.4 40
** wrong
**  556 173
** answer: 1000, groundtruth_str: 1000
** compare on lower
** correct
**  557 173
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  558 173
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  559 173
** answer: 87, groundtruth_str: 87
** compare on lower
** correct
**  560 173
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  561 173
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  562 173
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  563 173
** answer: 13, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  13
** groundtruth_num is (int, float)
** compare_two_numbers int 13 3
** wrong
**  563 174
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  564 174
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  565 174
** answer: 98, groundtruth_str: 98
** compare on lower
** correct
**  566 174
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  567 174
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  568 174
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  569 174
** answer: 19, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  19
** groundtruth_num is (int, float)
** compare_two_numbers int 19 8
** wrong
**  569 175
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  570 175
** answer: Markmadeatotalprofitof$1250fromsellingallthecards, groundtruth_str: 1100
** groundtruth_num is not None
** is_fraction:  Markmadeatotalprofitof$1250fromsellingallthecards
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  570 176
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  571 176
** answer: 350, groundtruth_str: 350
** compare on lower
** correct
**  572 176
** answer: 392, groundtruth_str: 336
** groundtruth_num is not None
** is_fraction:  392
** groundtruth_num is (int, float)
** compare_two_numbers int 392 336
** wrong
**  572 177
** answer: 6, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 3
** wrong
**  572 178
** answer: 4000, groundtruth_str: 4000
** compare on lower
** correct
**  573 178
** answer: 43, groundtruth_str: 43
** compare on lower
** correct
**  574 178
** answer: 240, groundtruth_str: 240
** compare on lower
** correct
**  575 178
** answer: 128, groundtruth_str: 128
** compare on lower
** correct
**  576 178
** answer: 49, groundtruth_str: 89
** groundtruth_num is not None
** is_fraction:  49
** groundtruth_num is (int, float)
** compare_two_numbers int 49 89
** wrong
**  576 179
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  577 179
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  578 179
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  579 179
** answer: 133, groundtruth_str: 133
** compare on lower
** correct
**  580 179
** answer: 60,000hours, groundtruth_str: 60000
** groundtruth_num is not None
** is_fraction:  60,000hours
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  580 180
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  581 180
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  582 180
** answer: 85, groundtruth_str: 85
** compare on lower
** correct
**  583 180
** answer: 166.67, groundtruth_str: 100
** groundtruth_num is not None
** is_fraction:  166.67
** groundtruth_num is (int, float)
** compare_two_numbers int 166.67 100
** wrong
**  583 181
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  584 181
** answer: 490, groundtruth_str: 490
** compare on lower
** correct
**  585 181
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  586 181
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  587 181
** answer: 600, groundtruth_str: 675
** groundtruth_num is not None
** is_fraction:  600
** groundtruth_num is (int, float)
** compare_two_numbers int 600 675
** wrong
**  587 182
** answer: 365, groundtruth_str: 110
** groundtruth_num is not None
** is_fraction:  365
** groundtruth_num is (int, float)
** compare_two_numbers int 365 110
** wrong
**  587 183
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  588 183
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  589 183
** answer: 33.33%, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  33.33%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.3333 50
** wrong
**  589 184
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  590 184
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  591 184
** answer: 276, groundtruth_str: 276
** compare on lower
** correct
**  592 184
** answer: 800, groundtruth_str: 800
** compare on lower
** correct
**  593 184
** answer: 5600, groundtruth_str: 4400
** groundtruth_num is not None
** is_fraction:  5600
** groundtruth_num is (int, float)
** compare_two_numbers int 5600 4400
** wrong
**  593 185
** answer: 40.00, groundtruth_str: 38
** groundtruth_num is not None
** is_fraction:  40.00
** groundtruth_num is (int, float)
** compare_two_numbers int 40 38
** wrong
**  593 186
** answer: 330, groundtruth_str: 255
** groundtruth_num is not None
** is_fraction:  330
** groundtruth_num is (int, float)
** compare_two_numbers int 330 255
** wrong
**  593 187
** answer: 95, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  95
** groundtruth_num is (int, float)
** compare_two_numbers int 95 25
** wrong
**  593 188
** answer: 2, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 17
** wrong
**  593 189
** answer: 27, groundtruth_str: 54
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers int 27 54
** wrong
**  593 190
** answer: 8, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 4
** wrong
**  593 191
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  594 191
** answer: 115, groundtruth_str: 155
** groundtruth_num is not None
** is_fraction:  115
** groundtruth_num is (int, float)
** compare_two_numbers int 115 155
** wrong
**  594 192
** answer: 142, groundtruth_str: 142
** compare on lower
** correct
**  595 192
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  596 192
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  597 192
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  598 192
** answer: 12, groundtruth_str: 108
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 108
** wrong
**  598 193
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  599 193
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  600 193
** answer: 250, groundtruth_str: 250
** compare on lower
** correct
**  601 193
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  602 193
** answer: 20.00, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  20.00
** groundtruth_num is (int, float)
** compare_two_numbers int 20 20
** correct
**  603 193
** answer: 3,120,000, groundtruth_str: 2880000
** groundtruth_num is not None
** is_fraction:  3,120,000
** groundtruth_num is (int, float)
** compare_two_numbers int 3120000 2880000
** wrong
**  603 194
** answer: 390, groundtruth_str: 540
** groundtruth_num is not None
** is_fraction:  390
** groundtruth_num is (int, float)
** compare_two_numbers int 390 540
** wrong
**  603 195
** answer: 10, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 20
** wrong
**  603 196
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  604 196
** answer: 428, groundtruth_str: 428
** compare on lower
** correct
**  605 196
** answer: 1240, groundtruth_str: 1240
** compare on lower
** correct
**  606 196
** answer: 5, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 6
** wrong
**  606 197
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  607 197
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  608 197
** answer: 1170, groundtruth_str: 1170
** compare on lower
** correct
**  609 197
** answer: 70%, groundtruth_str: 70
** groundtruth_num is not None
** is_fraction:  70%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.7 70
** wrong
**  609 198
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  610 198
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  611 198
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  612 198
** answer: 310, groundtruth_str: 310
** compare on lower
** correct
**  613 198
** answer: 84, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  84
** groundtruth_num is (int, float)
** compare_two_numbers int 84 60
** wrong
**  613 199
** answer: 79, groundtruth_str: 79
** compare on lower
** correct
**  614 199
** answer: 10, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 7
** wrong
**  614 200
** answer: 42, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  42
** groundtruth_num is (int, float)
** compare_two_numbers int 42 11
** wrong
**  614 201
** answer: 2.5, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2.5
** groundtruth_num is (int, float)
** compare_two_numbers int 2.5 4
** wrong
**  614 202
** answer: 4500, groundtruth_str: 4500
** compare on lower
** correct
**  615 202
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  616 202
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  617 202
** answer: 6,250, groundtruth_str: 6,250
** compare on lower
** correct
**  618 202
** answer: 720, groundtruth_str: 720
** compare on lower
** correct
**  619 202
** answer: 35, groundtruth_str: 35
** compare on lower
** correct
**  620 202
** answer: 1260, groundtruth_str: 1260
** compare on lower
** correct
**  621 202
** answer: 18, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 14
** wrong
**  621 203
** answer: 52, groundtruth_str: 52
** compare on lower
** correct
**  622 203
** answer: 153, groundtruth_str: 153
** compare on lower
** correct
**  623 203
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  624 203
** answer: 5, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 11
** wrong
**  624 204
** answer: 80, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  80
** groundtruth_num is (int, float)
** compare_two_numbers int 80 60
** wrong
**  624 205
** answer: 14,000, groundtruth_str: 14,000
** compare on lower
** correct
**  625 205
** answer: 18.8, groundtruth_str: 1128
** groundtruth_num is not None
** is_fraction:  18.8
** groundtruth_num is (int, float)
** compare_two_numbers int 18.8 1128
** wrong
**  625 206
** answer: 549.00, groundtruth_str: 324
** groundtruth_num is not None
** is_fraction:  549.00
** groundtruth_num is (int, float)
** compare_two_numbers int 549 324
** wrong
**  625 207
** answer: 42.00, groundtruth_str: 42
** groundtruth_num is not None
** is_fraction:  42.00
** groundtruth_num is (int, float)
** compare_two_numbers int 42 42
** correct
**  626 207
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  627 207
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  628 207
** answer: 29, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  29
** groundtruth_num is (int, float)
** compare_two_numbers int 29 48
** wrong
**  628 208
** answer: 140, groundtruth_str: 140
** compare on lower
** correct
**  629 208
** answer: 220, groundtruth_str: 120
** groundtruth_num is not None
** is_fraction:  220
** groundtruth_num is (int, float)
** compare_two_numbers int 220 120
** wrong
**  629 209
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  630 209
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  631 209
** answer: 20, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  20
** groundtruth_num is (int, float)
** compare_two_numbers int 20 16
** wrong
**  631 210
** answer: Gabrielneedsanadditional$5,600tocoverboththecostofthecarandthephone, groundtruth_str: 5600
** groundtruth_num is not None
** is_fraction:  Gabrielneedsanadditional$5,600tocoverboththecostofthecarandthephone
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  631 211
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  632 211
** answer: 19, groundtruth_str: 19
** compare on lower
** correct
**  633 211
** answer: 105, groundtruth_str: 180
** groundtruth_num is not None
** is_fraction:  105
** groundtruth_num is (int, float)
** compare_two_numbers int 105 180
** wrong
**  633 212
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  634 212
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  635 212
** answer: 975, groundtruth_str: 975
** compare on lower
** correct
**  636 212
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  637 212
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  638 212
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  639 212
** answer: 110, groundtruth_str: 110
** compare on lower
** correct
**  640 212
** answer: 123, groundtruth_str: 123
** compare on lower
** correct
**  641 212
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  642 212
** answer: 144, groundtruth_str: 144
** compare on lower
** correct
**  643 212
** answer: Youare18yearsold, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  Youare18yearsold
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  643 213
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  644 213
** answer: 18000, groundtruth_str: 14000
** groundtruth_num is not None
** is_fraction:  18000
** groundtruth_num is (int, float)
** compare_two_numbers int 18000 14000
** wrong
**  644 214
** answer: 3430, groundtruth_str: 3430
** compare on lower
** correct
**  645 214
** answer: 1520, groundtruth_str: 1520
** compare on lower
** correct
**  646 214
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  647 214
** answer: Wendyearns30morebadgesthanAmberina1-yeartimeframe, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  Wendyearns30morebadgesthanAmberina1-yeartimeframe
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  647 215
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  648 215
** answer: 110, groundtruth_str: 110
** compare on lower
** correct
**  649 215
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  650 215
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  651 215
** answer: Fawnhas28books, groundtruth_str: 28
** groundtruth_num is not None
** is_fraction:  Fawnhas28books
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  651 216
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  652 216
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  653 216
** answer: 500, groundtruth_str: 500
** compare on lower
** correct
**  654 216
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  655 216
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  656 216
** answer: 13.00, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  13.00
** groundtruth_num is (int, float)
** compare_two_numbers int 13 13
** correct
**  657 216
** answer: 12.00, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  12.00
** groundtruth_num is (int, float)
** compare_two_numbers int 12 12
** correct
**  658 216
** answer: 132, groundtruth_str: 132
** compare on lower
** correct
**  659 216
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  660 216
** answer: 41, groundtruth_str: 41
** compare on lower
** correct
**  661 216
** answer: 38.89, groundtruth_str: 7000
** groundtruth_num is not None
** is_fraction:  38.89
** groundtruth_num is (int, float)
** compare_two_numbers int 38.89 7000
** wrong
**  661 217
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  662 217
** answer: 575, groundtruth_str: 575
** compare on lower
** correct
**  663 217
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  664 217
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  665 217
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  666 217
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  667 217
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  668 217
** answer: 500, groundtruth_str: 500
** compare on lower
** correct
**  669 217
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  670 217
** answer: 34, groundtruth_str: 34
** compare on lower
** correct
**  671 217
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  672 217
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  673 217
** answer: 25%, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  25%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.25 25
** wrong
**  673 218
** answer: 55, groundtruth_str: 55
** compare on lower
** correct
**  674 218
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  675 218
** answer: 480, groundtruth_str: 480
** compare on lower
** correct
**  676 218
** answer: 31, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  31
** groundtruth_num is (int, float)
** compare_two_numbers int 31 26
** wrong
**  676 219
** answer: 74, groundtruth_str: 74
** compare on lower
** correct
**  677 219
** answer: 250, groundtruth_str: 250
** compare on lower
** correct
**  678 219
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  679 219
** answer: 110, groundtruth_str: 110
** compare on lower
** correct
**  680 219
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  681 219
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  682 219
** answer: 5, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 1
** wrong
**  682 220
** answer: 8.00, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  8.00
** groundtruth_num is (int, float)
** compare_two_numbers int 8 8
** correct
**  683 220
** answer: 58, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  58
** groundtruth_num is (int, float)
** compare_two_numbers int 58 16
** wrong
**  683 221
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  684 221
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  685 221
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  686 221
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  687 221
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  688 221
** answer: 42, groundtruth_str: 38
** groundtruth_num is not None
** is_fraction:  42
** groundtruth_num is (int, float)
** compare_two_numbers int 42 38
** wrong
**  688 222
** answer: 700, groundtruth_str: 700
** compare on lower
** correct
**  689 222
** answer: 64, groundtruth_str: 64
** compare on lower
** correct
**  690 222
** answer: 8, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 6
** wrong
**  690 223
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  691 223
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  692 223
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  693 223
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  694 223
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  695 223
** answer: 56, groundtruth_str: 56
** compare on lower
** correct
**  696 223
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  697 223
** answer: 3, groundtruth_str: 47
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 47
** wrong
**  697 224
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  698 224
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  699 224
** answer: 4, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 2
** wrong
**  699 225
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  700 225
** answer: 2,000, groundtruth_str: 2000
** groundtruth_num is not None
** is_fraction:  2,000
** groundtruth_num is (int, float)
** compare_two_numbers int 2000 2000
** correct
**  701 225
** answer: 2, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 1
** wrong
**  701 226
** answer: 85,000calories, groundtruth_str: 85000
** groundtruth_num is not None
** is_fraction:  85,000calories
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  701 227
** answer: 70, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  70
** groundtruth_num is (int, float)
** compare_two_numbers int 70 60
** wrong
**  701 228
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  702 228
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  703 228
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  704 228
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  705 228
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  706 228
** answer: 410, groundtruth_str: 410
** compare on lower
** correct
**  707 228
** answer: 6, groundtruth_str: 64800
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 64800
** wrong
**  707 229
** answer: 110, groundtruth_str: 250
** groundtruth_num is not None
** is_fraction:  110
** groundtruth_num is (int, float)
** compare_two_numbers int 110 250
** wrong
**  707 230
** answer: 159, groundtruth_str: 159
** compare on lower
** correct
**  708 230
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  709 230
** answer: 650, groundtruth_str: 650
** compare on lower
** correct
**  710 230
** answer: 280, groundtruth_str: 280
** compare on lower
** correct
**  711 230
** answer: 842, groundtruth_str: 842
** compare on lower
** correct
**  712 230
** answer: 178.75, groundtruth_str: 205
** groundtruth_num is not None
** is_fraction:  178.75
** groundtruth_num is (int, float)
** compare_two_numbers int 178.75 205
** wrong
**  712 231
** answer: 110, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  110
** groundtruth_num is (int, float)
** compare_two_numbers int 110 50
** wrong
**  712 232
** answer: 34, groundtruth_str: 34
** compare on lower
** correct
**  713 232
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  714 232
** answer: 450, groundtruth_str: 450
** compare on lower
** correct
**  715 232
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  716 232
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  717 232
** answer: 42, groundtruth_str: 42
** compare on lower
** correct
**  718 232
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  719 232
** answer: 75, groundtruth_str: 300
** groundtruth_num is not None
** is_fraction:  75
** groundtruth_num is (int, float)
** compare_two_numbers int 75 300
** wrong
**  719 233
** answer: 29, groundtruth_str: 360
** groundtruth_num is not None
** is_fraction:  29
** groundtruth_num is (int, float)
** compare_two_numbers int 29 360
** wrong
**  719 234
** answer: 197, groundtruth_str: 452
** groundtruth_num is not None
** is_fraction:  197
** groundtruth_num is (int, float)
** compare_two_numbers int 197 452
** wrong
**  719 235
** answer: 26, groundtruth_str: 34
** groundtruth_num is not None
** is_fraction:  26
** groundtruth_num is (int, float)
** compare_two_numbers int 26 34
** wrong
**  719 236
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  720 236
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  721 236
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  722 236
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  723 236
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  724 236
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  725 236
** answer: 295, groundtruth_str: 225
** groundtruth_num is not None
** is_fraction:  295
** groundtruth_num is (int, float)
** compare_two_numbers int 295 225
** wrong
**  725 237
** answer: 600, groundtruth_str: 1000
** groundtruth_num is not None
** is_fraction:  600
** groundtruth_num is (int, float)
** compare_two_numbers int 600 1000
** wrong
**  725 238
** answer: 147, groundtruth_str: 147
** compare on lower
** correct
**  726 238
** answer: 200, groundtruth_str: 200
** compare on lower
** correct
**  727 238
** answer: 446, groundtruth_str: 374
** groundtruth_num is not None
** is_fraction:  446
** groundtruth_num is (int, float)
** compare_two_numbers int 446 374
** wrong
**  727 239
** answer: Gretahas48browniesleftoverfromtheentireday, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  Gretahas48browniesleftoverfromtheentireday
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  727 240
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  728 240
** answer: 227, groundtruth_str: 227
** compare on lower
** correct
**  729 240
** answer: Johnpaidatotalof$1800forthenewphones, groundtruth_str: 1800
** groundtruth_num is not None
** is_fraction:  Johnpaidatotalof$1800forthenewphones
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  729 241
** answer: 33, groundtruth_str: 33
** compare on lower
** correct
**  730 241
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  731 241
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  732 241
** answer: 79, groundtruth_str: 79
** compare on lower
** correct
**  733 241
** answer: 7, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 5
** wrong
**  733 242
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  734 242
** answer: 540, groundtruth_str: 540
** compare on lower
** correct
**  735 242
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  736 242
** answer: 160, groundtruth_str: 160
** compare on lower
** correct
**  737 242
** answer: 55, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  55
** groundtruth_num is (int, float)
** compare_two_numbers int 55 50
** wrong
**  737 243
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  738 243
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  739 243
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  740 243
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  741 243
** answer: Patwillspend$378atthestoretofillupherflowerbedwiththeadditionalplants, groundtruth_str: 342
** groundtruth_num is not None
** is_fraction:  Patwillspend$378atthestoretofillupherflowerbedwiththeadditionalplants
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  741 244
** answer: 63, groundtruth_str: 63
** compare on lower
** correct
**  742 244
** answer: 70.00, groundtruth_str: 70
** groundtruth_num is not None
** is_fraction:  70.00
** groundtruth_num is (int, float)
** compare_two_numbers int 70 70
** correct
**  743 244
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  744 244
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  745 244
** answer: ItwilltakeEmily10minutestopeelandcook90shrimp, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  ItwilltakeEmily10minutestopeelandcook90shrimp
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  745 245
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  746 245
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  747 245
** answer: 52, groundtruth_str: 52
** compare on lower
** correct
**  748 245
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  749 245
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  750 245
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  751 245
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  752 245
** answer: 6200, groundtruth_str: 6,600
** groundtruth_num is not None
** is_fraction:  6200
** groundtruth_num is (int, float)
** compare_two_numbers int 6200 6600
** wrong
**  752 246
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  753 246
** answer: 50%, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  50%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.5 25
** wrong
**  753 247
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  754 247
** answer: Jordancanstartmakingthecake10minutesbefore4:50pmtobereadytoserveby5:00pm, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  Jordancanstartmakingthecake10minutesbefore4:50pmtobereadytoserveby5:00pm
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  754 248
** answer: Eachboxcontains8chocolatebars, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  Eachboxcontains8chocolatebars
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  754 249
** answer: 480, groundtruth_str: 480
** compare on lower
** correct
**  755 249
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  756 249
** answer: 170, groundtruth_str: 1490
** groundtruth_num is not None
** is_fraction:  170
** groundtruth_num is (int, float)
** compare_two_numbers int 170 1490
** wrong
**  756 250
** answer: 826, groundtruth_str: 826
** compare on lower
** correct
**  757 250
** answer: 34, groundtruth_str: 34
** compare on lower
** correct
**  758 250
** answer: 230, groundtruth_str: 230
** compare on lower
** correct
**  759 250
** answer: 1875, groundtruth_str: 1,875
** groundtruth_num is not None
** is_fraction:  1875
** groundtruth_num is (int, float)
** compare_two_numbers int 1875 1875
** correct
**  760 250
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  761 250
** answer: 13,875, groundtruth_str: 6000
** groundtruth_num is not None
** is_fraction:  13,875
** groundtruth_num is (int, float)
** compare_two_numbers int 13875 6000
** wrong
**  761 251
** answer: 29, groundtruth_str: 94
** groundtruth_num is not None
** is_fraction:  29
** groundtruth_num is (int, float)
** compare_two_numbers int 29 94
** wrong
**  761 252
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  762 252
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  763 252
** answer: 60, groundtruth_str: 78
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 78
** wrong
**  763 253
** answer: 139, groundtruth_str: 138
** groundtruth_num is not None
** is_fraction:  139
** groundtruth_num is (int, float)
** compare_two_numbers int 139 138
** wrong
**  763 254
** answer: 18, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 45
** wrong
**  763 255
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  764 255
** answer: 83, groundtruth_str: 98
** groundtruth_num is not None
** is_fraction:  83
** groundtruth_num is (int, float)
** compare_two_numbers int 83 98
** wrong
**  764 256
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  765 256
** answer: 24, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 36
** wrong
**  765 257
** answer: 8, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 12
** wrong
**  765 258
** answer: 77, groundtruth_str: 77
** compare on lower
** correct
**  766 258
** answer: 300, groundtruth_str: 300
** compare on lower
** correct
**  767 258
** answer: 60, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 30
** wrong
**  767 259
** answer: 43,200, groundtruth_str: 43200
** groundtruth_num is not None
** is_fraction:  43,200
** groundtruth_num is (int, float)
** compare_two_numbers int 43200 43200
** correct
**  768 259
** answer: 4, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 12
** wrong
**  768 260
** answer: 200, groundtruth_str: 200
** compare on lower
** correct
**  769 260
** answer: 27, groundtruth_str: 34
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers int 27 34
** wrong
**  769 261
** answer: 30%, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  30%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.3 24
** wrong
**  769 262
** answer: Eachgraduateshouldreceive7ticketstogivetotheirfriendsandfamily, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  Eachgraduateshouldreceive7ticketstogivetotheirfriendsandfamily
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  769 263
** answer: 450, groundtruth_str: 450
** compare on lower
** correct
**  770 263
** answer: 2perhour, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  2perhour
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  770 264
** answer: 66, groundtruth_str: 66
** compare on lower
** correct
**  771 264
** answer: 35, groundtruth_str: 35
** compare on lower
** correct
**  772 264
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  773 264
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  774 264
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  775 264
** answer: 160, groundtruth_str: 160
** compare on lower
** correct
**  776 264
** answer: 736, groundtruth_str: 736
** compare on lower
** correct
**  777 264
** answer: 101, groundtruth_str: 101
** compare on lower
** correct
**  778 264
** answer: -$9.17, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  -$9.17
** groundtruth_num is (int, float)
** compare_two_numbers int -9.17 3
** wrong
**  778 265
** answer: 130,000, groundtruth_str: 130000
** groundtruth_num is not None
** is_fraction:  130,000
** groundtruth_num is (int, float)
** compare_two_numbers int 130000 130000
** correct
**  779 265
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  780 265
** answer: 420, groundtruth_str: 420
** compare on lower
** correct
**  781 265
** answer: 31.5, groundtruth_str: 189
** groundtruth_num is not None
** is_fraction:  31.5
** groundtruth_num is (int, float)
** compare_two_numbers int 31.5 189
** wrong
**  781 266
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  782 266
** answer: 7,687.93, groundtruth_str: 7400
** groundtruth_num is not None
** is_fraction:  7,687.93
** groundtruth_num is (int, float)
** compare_two_numbers int 7687.93 7400
** wrong
**  782 267
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  783 267
** answer: 1630, groundtruth_str: 655
** groundtruth_num is not None
** is_fraction:  1630
** groundtruth_num is (int, float)
** compare_two_numbers int 1630 655
** wrong
**  783 268
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  784 268
** answer: 110, groundtruth_str: 110
** compare on lower
** correct
**  785 268
** answer: 55, groundtruth_str: 55
** compare on lower
** correct
**  786 268
** answer: 2400, groundtruth_str: 2400
** compare on lower
** correct
**  787 268
** answer: 864, groundtruth_str: 2304
** groundtruth_num is not None
** is_fraction:  864
** groundtruth_num is (int, float)
** compare_two_numbers int 864 2304
** wrong
**  787 269
** answer: 260, groundtruth_str: 156
** groundtruth_num is not None
** is_fraction:  260
** groundtruth_num is (int, float)
** compare_two_numbers int 260 156
** wrong
**  787 270
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  788 270
** answer: 250, groundtruth_str: 250
** compare on lower
** correct
**  789 270
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  790 270
** answer: 31, groundtruth_str: 31
** compare on lower
** correct
**  791 270
** answer: 58, groundtruth_str: 58
** compare on lower
** correct
**  792 270
** answer: 482, groundtruth_str: 482
** compare on lower
** correct
**  793 270
** answer: 320, groundtruth_str: 320
** compare on lower
** correct
**  794 270
** answer: 247, groundtruth_str: 247
** compare on lower
** correct
**  795 270
** answer: 95, groundtruth_str: 95
** compare on lower
** correct
**  796 270
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  797 270
** answer: 245, groundtruth_str: 245
** compare on lower
** correct
**  798 270
** answer: 12, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 24
** wrong
**  798 271
** answer: 300, groundtruth_str: 300
** compare on lower
** correct
**  799 271
** answer: 14.00, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  14.00
** groundtruth_num is (int, float)
** compare_two_numbers int 14 18
** wrong
**  799 272
** answer: 251, groundtruth_str: 251
** compare on lower
** correct
**  800 272
** answer: 85, groundtruth_str: 85
** compare on lower
** correct
**  801 272
** answer: 147, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  147
** groundtruth_num is (int, float)
** compare_two_numbers int 147 21
** wrong
**  801 273
** answer: 750, groundtruth_str: 750
** compare on lower
** correct
**  802 273
** answer: 80, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  80
** groundtruth_num is (int, float)
** compare_two_numbers int 80 16
** wrong
**  802 274
** answer: 162, groundtruth_str: 162
** compare on lower
** correct
**  803 274
** answer: 206, groundtruth_str: 145
** groundtruth_num is not None
** is_fraction:  206
** groundtruth_num is (int, float)
** compare_two_numbers int 206 145
** wrong
**  803 275
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  804 275
** answer: 10%, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  10%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.1 10
** wrong
**  804 276
** answer: 72,000, groundtruth_str: 72000
** groundtruth_num is not None
** is_fraction:  72,000
** groundtruth_num is (int, float)
** compare_two_numbers int 72000 72000
** correct
**  805 276
** answer: 195, groundtruth_str: 195
** compare on lower
** correct
**  806 276
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  806 277
** answer: Jennysaved$2.00bychoosingtobuythebananasinbunchesratherthanindividually, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  Jennysaved$2.00bychoosingtobuythebananasinbunchesratherthanindividually
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  806 278
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  807 278
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  808 278
** answer: 131,250, groundtruth_str: 131250
** groundtruth_num is not None
** is_fraction:  131,250
** groundtruth_num is (int, float)
** compare_two_numbers int 131250 131250
** correct
**  809 278
** answer: 6, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 12
** wrong
**  809 279
** answer: 24, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 30
** wrong
**  809 280
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  810 280
** answer: 12, groundtruth_str: 72
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 72
** wrong
**  810 281
** answer: 1000, groundtruth_str: 1000
** compare on lower
** correct
**  811 281
** answer: 1080, groundtruth_str: 1080
** compare on lower
** correct
**  812 281
** answer: 144, groundtruth_str: 144
** compare on lower
** correct
**  813 281
** answer: 22.22%, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  22.22%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.22219999999999998 25
** wrong
**  813 282
** answer: 270, groundtruth_str: 270
** compare on lower
** correct
**  814 282
** answer: 240, groundtruth_str: 240
** compare on lower
** correct
**  815 282
** answer: 480, groundtruth_str: 480
** compare on lower
** correct
**  816 282
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  817 282
** answer: Ittakes2minuteslongertoridethebiggestwaterslidecomparedtothesecondbiggestslide, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  Ittakes2minuteslongertoridethebiggestwaterslidecomparedtothesecondbiggestslide
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  817 283
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  818 283
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  819 283
** answer: 113.00, groundtruth_str: 113
** groundtruth_num is not None
** is_fraction:  113.00
** groundtruth_num is (int, float)
** compare_two_numbers int 113 113
** correct
**  820 283
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  821 283
** answer: Carolineis24yearsold, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  Carolineis24yearsold
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  821 284
** answer: Laurenneedstoworkanadditional20yearsbeyondherinitialplantosaveenoughforherretirementperiod, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  Laurenneedstoworkanadditional20yearsbeyondherinitialplantosaveenoughforherretirementperiod
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  821 285
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  822 285
** answer: 360, groundtruth_str: 360
** compare on lower
** correct
**  823 285
** answer: 38, groundtruth_str: 38
** compare on lower
** correct
**  824 285
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  825 285
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  826 285
** answer: 157, groundtruth_str: 157
** compare on lower
** correct
**  827 285
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  828 285
** answer: -3, groundtruth_str: -3
** compare on lower
** correct
**  829 285
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  830 285
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  831 285
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  832 285
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  833 285
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  834 285
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  835 285
** answer: 280, groundtruth_str: 560
** groundtruth_num is not None
** is_fraction:  280
** groundtruth_num is (int, float)
** compare_two_numbers int 280 560
** wrong
**  835 286
** answer: 35, groundtruth_str: 35
** compare on lower
** correct
**  836 286
** answer: 2, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 18
** wrong
**  836 287
** answer: 105, groundtruth_str: 105
** compare on lower
** correct
**  837 287
** answer: 64, groundtruth_str: 64
** compare on lower
** correct
**  838 287
** answer: Johncanmake90smallbagsofM&M, groundtruth_str: 90
** groundtruth_num is not None
** is_fraction:  Johncanmake90smallbagsofM&M
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  838 288
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  839 288
** answer: 750, groundtruth_str: 750
** compare on lower
** correct
**  840 288
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  841 288
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  842 288
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  843 288
** answer: 96, groundtruth_str: 96
** compare on lower
** correct
**  844 288
** answer: 45,000, groundtruth_str: 45000
** groundtruth_num is not None
** is_fraction:  45,000
** groundtruth_num is (int, float)
** compare_two_numbers int 45000 45000
** correct
**  845 288
** answer: IttakesGrandma50minutestocompletetheentire3-milewalk, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  IttakesGrandma50minutestocompletetheentire3-milewalk
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  845 289
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  846 289
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  847 289
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  848 289
** answer: 29, groundtruth_str: 68
** groundtruth_num is not None
** is_fraction:  29
** groundtruth_num is (int, float)
** compare_two_numbers int 29 68
** wrong
**  848 290
** answer: 700, groundtruth_str: 700
** compare on lower
** correct
**  849 290
** answer: 1.00perbagel, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  1.00perbagel
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  849 291
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  850 291
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  851 291
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  852 291
** answer: 300, groundtruth_str: 300
** compare on lower
** correct
**  853 291
** answer: 34, groundtruth_str: 34
** compare on lower
** correct
**  854 291
** answer: 291, groundtruth_str: 291
** compare on lower
** correct
**  855 291
** answer: 56, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  56
** groundtruth_num is (int, float)
** compare_two_numbers int 56 16
** wrong
**  855 292
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  856 292
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  857 292
** answer: 93, groundtruth_str: 93
** compare on lower
** correct
**  858 292
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  859 292
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  860 292
** answer: 12%, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  12%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.12 12
** wrong
**  860 293
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  861 293
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  862 293
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  863 293
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  864 293
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  865 293
** answer: 0, groundtruth_str: 7300
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 7300
** wrong
**  865 294
** answer: 50%, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  50%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.5 50
** wrong
**  865 295
** answer: 1907, groundtruth_str: 1125
** groundtruth_num is not None
** is_fraction:  1907
** groundtruth_num is (int, float)
** compare_two_numbers int 1907 1125
** wrong
**  865 296
** answer: 140, groundtruth_str: 170
** groundtruth_num is not None
** is_fraction:  140
** groundtruth_num is (int, float)
** compare_two_numbers int 140 170
** wrong
**  865 297
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  866 297
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  867 297
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  868 297
** answer: 3744, groundtruth_str: 1248
** groundtruth_num is not None
** is_fraction:  3744
** groundtruth_num is (int, float)
** compare_two_numbers int 3744 1248
** wrong
**  868 298
** answer: Theavocadotreecanproduceatotalof3350fruitsoverits10yearsoflife, groundtruth_str: 2350
** groundtruth_num is not None
** is_fraction:  Theavocadotreecanproduceatotalof3350fruitsoverits10yearsoflife
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  868 299
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  869 299
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  870 299
** answer: 8, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 2
** wrong
**  870 300
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  871 300
** answer: 3160, groundtruth_str: 3160
** compare on lower
** correct
**  872 300
** answer: 93, groundtruth_str: 93
** compare on lower
** correct
**  873 300
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  874 300
** answer: 60, groundtruth_str: 240
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 240
** wrong
**  874 301
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  875 301
** answer: 5, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 2
** wrong
**  875 302
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  876 302
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  877 302
** answer: 50%, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  50%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.5 50
** wrong
**  877 303
** answer: 5,600, groundtruth_str: 5600
** groundtruth_num is not None
** is_fraction:  5,600
** groundtruth_num is (int, float)
** compare_two_numbers int 5600 5600
** correct
**  878 303
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  879 303
** answer: 1800, groundtruth_str: 1800
** compare on lower
** correct
**  880 303
** answer: 15, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 11
** wrong
**  880 304
** answer: 306, groundtruth_str: 306
** compare on lower
** correct
**  881 304
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  882 304
** answer: 19, groundtruth_str: 19
** compare on lower
** correct
**  883 304
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  884 304
** answer: \(18\frac{2}{3}\), groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  \(18\frac{2}{3}\)
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  884 305
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  885 305
** answer: 228, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  228
** groundtruth_num is (int, float)
** compare_two_numbers int 228 19
** wrong
**  885 306
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  886 306
** answer: 280, groundtruth_str: 280
** compare on lower
** correct
**  887 306
** answer: 9.00, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  9.00
** groundtruth_num is (int, float)
** compare_two_numbers int 9 9
** correct
**  888 306
** answer: 1200, groundtruth_str: 1200
** compare on lower
** correct
**  889 306
** answer: 320, groundtruth_str: 320
** compare on lower
** correct
**  890 306
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  891 306
** answer: 2400, groundtruth_str: 2400
** compare on lower
** correct
**  892 306
** answer: 60, groundtruth_str: 140
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 140
** wrong
**  892 307
** answer: 2.67, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  2.67
** groundtruth_num is (int, float)
** compare_two_numbers int 2.67 2
** wrong
**  892 308
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  893 308
** answer: 42, groundtruth_str: 42
** compare on lower
** correct
**  894 308
** answer: 16, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 19
** wrong
**  894 309
** answer: 180, groundtruth_str: 240
** groundtruth_num is not None
** is_fraction:  180
** groundtruth_num is (int, float)
** compare_two_numbers int 180 240
** wrong
**  894 310
** answer: 168, groundtruth_str: 168
** compare on lower
** correct
**  895 310
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  896 310
** answer: 40,000, groundtruth_str: 40,000
** compare on lower
** correct
**  897 310
** answer: 64, groundtruth_str: 64
** compare on lower
** correct
**  898 310
** answer: 26, groundtruth_str: 27
** groundtruth_num is not None
** is_fraction:  26
** groundtruth_num is (int, float)
** compare_two_numbers int 26 27
** wrong
**  898 311
** answer: 29, groundtruth_str: 29
** compare on lower
** correct
**  899 311
** answer: 288, groundtruth_str: 288
** compare on lower
** correct
**  900 311
** answer: 448, groundtruth_str: 448
** compare on lower
** correct
**  901 311
** answer: 150, groundtruth_str: 150
** compare on lower
** correct
**  902 311
** answer: Stephenwillpay$31inthetwelfthmonth, groundtruth_str: 31
** groundtruth_num is not None
** is_fraction:  Stephenwillpay$31inthetwelfthmonth
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  902 312
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  903 312
** answer: 4%, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  4%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.04 36
** wrong
**  903 313
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  904 313
** answer: 109, groundtruth_str: 75
** groundtruth_num is not None
** is_fraction:  109
** groundtruth_num is (int, float)
** compare_two_numbers int 109 75
** wrong
**  904 314
** answer: 225, groundtruth_str: 225
** compare on lower
** correct
**  905 314
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  906 314
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  907 314
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  908 314
** answer: 350, groundtruth_str: 350
** compare on lower
** correct
**  909 314
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  910 314
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  911 314
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  912 314
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  913 314
** answer: 66, groundtruth_str: 66
** compare on lower
** correct
**  914 314
** answer: 31, groundtruth_str: 31
** compare on lower
** correct
**  915 314
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  916 314
** answer: 440, groundtruth_str: 440
** compare on lower
** correct
**  917 314
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  918 314
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  919 314
** answer: 81, groundtruth_str: 81
** compare on lower
** correct
**  920 314
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  921 314
** answer: 60%, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  60%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.6 60
** wrong
**  921 315
** answer: 84, groundtruth_str: 84
** compare on lower
** correct
**  922 315
** answer: 22, groundtruth_str: 78
** groundtruth_num is not None
** is_fraction:  22
** groundtruth_num is (int, float)
** compare_two_numbers int 22 78
** wrong
**  922 316
** answer: Budspends$520.00onmakingmacaroniandcheeseinoneyear, groundtruth_str: 520
** groundtruth_num is not None
** is_fraction:  Budspends$520.00onmakingmacaroniandcheeseinoneyear
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  922 317
** answer: 50%, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  50%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.5 50
** wrong
**  922 318
** answer: 3, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 2
** wrong
**  922 319
** answer: 48, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  48
** groundtruth_num is (int, float)
** compare_two_numbers int 48 8
** wrong
**  922 320
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  923 320
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  924 320
** answer: 35, groundtruth_str: 35
** compare on lower
** correct
**  925 320
** answer: 96, groundtruth_str: 96
** compare on lower
** correct
**  926 320
** answer: 3360, groundtruth_str: 3360
** compare on lower
** correct
**  927 320
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  928 320
** answer: Jasonneedstomake750telephonecallstosell15carsandearnhisbonus, groundtruth_str: 750
** groundtruth_num is not None
** is_fraction:  Jasonneedstomake750telephonecallstosell15carsandearnhisbonus
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  928 321
** answer: 56, groundtruth_str: 56
** compare on lower
** correct
**  929 321
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  930 321
** answer: 32.5, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  32.5
** groundtruth_num is (int, float)
** compare_two_numbers int 32.5 30
** wrong
**  930 322
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  931 322
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  932 322
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  933 322
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  934 322
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  935 322
** answer: 14.00, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  14.00
** groundtruth_num is (int, float)
** compare_two_numbers int 14 14
** correct
**  936 322
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  937 322
** answer: 7200, groundtruth_str: 7200
** compare on lower
** correct
**  938 322
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  939 322
** answer: 235.00, groundtruth_str: 235
** groundtruth_num is not None
** is_fraction:  235.00
** groundtruth_num is (int, float)
** compare_two_numbers int 235 235
** correct
**  940 322
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  941 322
** answer: 500, groundtruth_str: 500
** compare on lower
** correct
**  942 322
** answer: 240, groundtruth_str: 210
** groundtruth_num is not None
** is_fraction:  240
** groundtruth_num is (int, float)
** compare_two_numbers int 240 210
** wrong
**  942 323
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  943 323
** answer: 147, groundtruth_str: 147
** compare on lower
** correct
**  944 323
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  945 323
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  946 323
** answer: 117, groundtruth_str: 54
** groundtruth_num is not None
** is_fraction:  117
** groundtruth_num is (int, float)
** compare_two_numbers int 117 54
** wrong
**  946 324
** answer: 3528, groundtruth_str: 3528
** compare on lower
** correct
**  947 324
** answer: Thereare42pinkStarburstsinthebag, groundtruth_str: 43
** groundtruth_num is not None
** is_fraction:  Thereare42pinkStarburstsinthebag
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  947 325
** answer: 296, groundtruth_str: 296
** compare on lower
** correct
**  948 325
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  949 325
** answer: 38, groundtruth_str: 38
** compare on lower
** correct
**  950 325
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  951 325
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  952 325
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  953 325
** answer: 665, groundtruth_str: 665
** compare on lower
** correct
**  954 325
** answer: 180.00, groundtruth_str: 180
** groundtruth_num is not None
** is_fraction:  180.00
** groundtruth_num is (int, float)
** compare_two_numbers int 180 180
** correct
**  955 325
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  956 325
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  957 325
** answer: Johnneedstospend$12onhotdogsfortheparty, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  Johnneedstospend$12onhotdogsfortheparty
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  957 326
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  958 326
** answer: 15, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 25
** wrong
**  958 327
** answer: 1,218, groundtruth_str: 1218
** groundtruth_num is not None
** is_fraction:  1,218
** groundtruth_num is (int, float)
** compare_two_numbers int 1218 1218
** correct
**  959 327
** answer: 105, groundtruth_str: 105
** compare on lower
** correct
**  960 327
** answer: 84, groundtruth_str: 84
** compare on lower
** correct
**  961 327
** answer: 29, groundtruth_str: 34
** groundtruth_num is not None
** is_fraction:  29
** groundtruth_num is (int, float)
** compare_two_numbers int 29 34
** wrong
**  961 328
** answer: 101, groundtruth_str: 101
** compare on lower
** correct
**  962 328
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  963 328
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  964 328
** answer: 67, groundtruth_str: 67
** compare on lower
** correct
**  965 328
** answer: 140,000, groundtruth_str: 140000
** groundtruth_num is not None
** is_fraction:  140,000
** groundtruth_num is (int, float)
** compare_two_numbers int 140000 140000
** correct
**  966 328
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  967 328
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  968 328
** answer: 335, groundtruth_str: 335
** compare on lower
** correct
**  969 328
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  970 328
** answer: 31.00, groundtruth_str: 31
** groundtruth_num is not None
** is_fraction:  31.00
** groundtruth_num is (int, float)
** compare_two_numbers int 31 31
** correct
**  971 328
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  972 328
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  973 328
** answer: Randynowhas23cookies, groundtruth_str: 23
** groundtruth_num is not None
** is_fraction:  Randynowhas23cookies
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  973 329
** answer: 72, groundtruth_str: 72
** compare on lower
** correct
**  974 329
** answer: 84, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  84
** groundtruth_num is (int, float)
** compare_two_numbers int 84 4
** wrong
**  974 330
** answer: 1000, groundtruth_str: 1000
** compare on lower
** correct
**  975 330
** answer: 2325, groundtruth_str: 2325
** compare on lower
** correct
**  976 330
** answer: 0, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 2
** wrong
**  976 331
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  977 331
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  978 331
** answer: 2180, groundtruth_str: 2280
** groundtruth_num is not None
** is_fraction:  2180
** groundtruth_num is (int, float)
** compare_two_numbers int 2180 2280
** wrong
**  978 332
** answer: 32, groundtruth_str: 64
** groundtruth_num is not None
** is_fraction:  32
** groundtruth_num is (int, float)
** compare_two_numbers int 32 64
** wrong
**  978 333
** answer: 594, groundtruth_str: 594
** compare on lower
** correct
**  979 333
** answer: 180, groundtruth_str: 180
** compare on lower
** correct
**  980 333
** answer: 2.00, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  2.00
** groundtruth_num is (int, float)
** compare_two_numbers int 2 2
** correct
**  981 333
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  982 333
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  983 333
** answer: 470, groundtruth_str: 230
** groundtruth_num is not None
** is_fraction:  470
** groundtruth_num is (int, float)
** compare_two_numbers int 470 230
** wrong
**  983 334
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  984 334
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  985 334
BackVerify: 0
** most_common: ('Joshmakesaprofitof$70,000fromflippingthehouse', 1), gold_ans: 70000
** most_common: ('540', 5), gold_ans: 540
** most_common: ('120', 5), gold_ans: 160
** most_common: ('135', 2), gold_ans: 45
** most_common: ('1', 2), gold_ans: 13
** most_common: ('18', 4), gold_ans: 18
** most_common: ('60%', 9), gold_ans: 60
** most_common: ('Themerchantshouldchoosethejewelrypurchaseplantomaximizeprofit', 4), gold_ans: 125
** most_common: ['none'], gold_ans: 15
** most_common: ('25', 1), gold_ans: 14
** most_common: ('25', 2), gold_ans: 25
** most_common: ('Thebootscost$104', 4), gold_ans: 104
** most_common: ('13', 1), gold_ans: 2
** most_common: ('10', 2), gold_ans: 10
** most_common: ("Brandon'siPhoneis8yearsold", 8), gold_ans: 8
** most_common: ('200', 2), gold_ans: 48
** most_common: ['none'], gold_ans: 40
** most_common: ('57.00', 4), gold_ans: 57
** most_common: ('5', 1), gold_ans: 25000
** most_common: ('595', 2), gold_ans: 595
** most_common: ('Baileystartedwith$60', 7), gold_ans: 60
** most_common: ('Artiewillmake$88.00fromsellingtheflowersattheFarmersMarkettoday', 4), gold_ans: 88
** most_common: ('7.5', 6), gold_ans: 60
** most_common: ('5', 2), gold_ans: 5
** most_common: ('Vincentsaves$6.00bybuying18flowersatthebetterprice', 3), gold_ans: 6
** most_common: ('22', 2), gold_ans: 22
** most_common: ('798.60', 2), gold_ans: 9360
** most_common: ('18', 8), gold_ans: 24
** most_common: ('44', 2), gold_ans: 36
** most_common: ('348', 4), gold_ans: 348
** most_common: ('Johndrinks15glassesofwaterduringtheweekdaysand2glassesofsodaontheweekends', 1), gold_ans: 26
** most_common: ('Sashamakesaprofitof$90ifshesellsallthelumber', 3), gold_ans: 90
** most_common: ('99,076.92', 1), gold_ans: 95200
** most_common: ('46', 2), gold_ans: 48
** most_common: ('10', 1), gold_ans: 10
** most_common: ('105', 2), gold_ans: 105
** most_common: ('20%', 12), gold_ans: 20
** most_common: ['none'], gold_ans: 16
** most_common: ['none'], gold_ans: 75
** most_common: ['none'], gold_ans: 80
** most_common: ('15', 1), gold_ans: 15
** most_common: ['none'], gold_ans: 92
** most_common: ('€77', 5), gold_ans: 77
** most_common: ('7.50', 2), gold_ans: 15
** most_common: ('23', 1), gold_ans: 23
** most_common: ('Itis100%morelikelythatJerryrollsanumbergreaterthan3thanthatherollstwoevennumbersinarow', 3), gold_ans: 25
** most_common: ('Eachpersonpays$34', 1), gold_ans: 34
** most_common: ('5', 1), gold_ans: 5
** most_common: ('91', 2), gold_ans: 91
** most_common: ('Cannotbedetermined', 1), gold_ans: 24
BackVerify: 50
** most_common: ('Elainenowhasatotalof320Pokemoncards', 3), gold_ans: 320
** most_common: ('120', 1), gold_ans: 98
** most_common: ('70percup', 1), gold_ans: 145
** most_common: ('8', 2), gold_ans: 8
** most_common: ('54', 3), gold_ans: 54
** most_common: ('21', 3), gold_ans: 21
** most_common: ('10', 2), gold_ans: 10
** most_common: ('30', 4), gold_ans: 31
** most_common: ('GingergaveGriffin20fries', 3), gold_ans: 20
** most_common: ('14', 5), gold_ans: 7
** most_common: ['none'], gold_ans: 73
** most_common: ('176', 3), gold_ans: 192
** most_common: ['none'], gold_ans: 168
** most_common: ('43', 1), gold_ans: 91
** most_common: ('84', 1), gold_ans: 83
** most_common: ('3', 5), gold_ans: 3
** most_common: ('Carmenpaysatotalof$350fortheantiquedesk', 2), gold_ans: 500
** most_common: ('16', 1), gold_ans: 8
** most_common: ('1300', 2), gold_ans: 1300
** most_common: ('ItwilltakeSandy4weekstolosethesameamountofweightthatJoeylosesin4weeks', 3), gold_ans: 16
** most_common: ('Theodoesnothaveenoughmoneylefttobuygiftsforhisbusinesspartners', 2), gold_ans: 2050
** most_common: ('120,000(currentpopulationofChile)', 2), gold_ans: 120000
** most_common: ('14', 1), gold_ans: 14
** most_common: ('JamandMegdonotneedanyadditionalboxestostorealltheirpencils.Theycurrentlyhaveenoughboxestoaccommodateall46pencils', 3), gold_ans: 9
** most_common: ('(VC-75milliliters)/VC', 2), gold_ans: 75
** most_common: ('Johnate1morehotdogthanLuke', 5), gold_ans: 1
** most_common: ('4', 1), gold_ans: 4
** most_common: ('10%', 6), gold_ans: 10
** most_common: ('20', 2), gold_ans: 20
** most_common: ('Annabellestillneedstosave$45topurchasethephone', 2), gold_ans: 45
** most_common: ('2', 1), gold_ans: 4
** most_common: ('10', 2), gold_ans: 18
** most_common: ('50', 3), gold_ans: 50
** most_common: ('Marycollects45kgofmilkeveryday', 5), gold_ans: 45
** most_common: ('1,095', 1), gold_ans: 803
** most_common: ('2', 1), gold_ans: 2
** most_common: ('36', 1), gold_ans: 6
** most_common: ('Samhas15morepopsiclesthanBetty', 5), gold_ans: 15
** most_common: ['none'], gold_ans: 34
** most_common: ('20%', 7), gold_ans: 20
** most_common: ('38', 2), gold_ans: 38
** most_common: ('14,400', 2), gold_ans: 14400
** most_common: ('135', 7), gold_ans: 81
** most_common: ('240', 1), gold_ans: 200
** most_common: ('4,000', 2), gold_ans: 2000
** most_common: ('168,000', 1), gold_ans: 168000
** most_common: ('3', 1), gold_ans: 3
** most_common: ('2,500', 4), gold_ans: 25
** most_common: ('3140', 1), gold_ans: 3140
** most_common: ['none'], gold_ans: 284
BackVerify: 100
** most_common: ('Thejoggerjeansoriginallycost$6lessthanthetatteredjeans', 2), gold_ans: 8
** most_common: ('26', 1), gold_ans: 26
** most_common: ('6', 1), gold_ans: 17
** most_common: ('59', 1), gold_ans: 59
** most_common: ('', 1), gold_ans: 4
** most_common: ('8800', 1), gold_ans: 6400
** most_common: ('240', 11), gold_ans: 150
** most_common: ('35%', 9), gold_ans: 35
** most_common: ('1', 2), gold_ans: 1
** most_common: ('10%', 12), gold_ans: 10
** most_common: ('-10', 3), gold_ans: -10
** most_common: ('25', 1), gold_ans: 25
** most_common: ['none'], gold_ans: 21
** most_common: ('Thecouchis18feetlong', 6), gold_ans: 18
** most_common: ('8onionsand4potatoes', 1), gold_ans: 4
** most_common: ['none'], gold_ans: 525
** most_common: ('39', 1), gold_ans: 29
** most_common: ['none'], gold_ans: 172
** most_common: ('40', 5), gold_ans: 36
** most_common: ('66', 1), gold_ans: 66
** most_common: ('9', 2), gold_ans: 25
** most_common: ('300', 4), gold_ans: 300
** most_common: ('Eachpersonpays$30', 3), gold_ans: 35
** most_common: ('2x', 1), gold_ans: 50
** most_common: ('Jeffwalksatotalof30milesinaweek', 5), gold_ans: 30
** most_common: ('65', 6), gold_ans: 130
** most_common: ('Danielneedstopay$26.10foralltheitemshewantstobuy', 2), gold_ans: 27
** most_common: ('160', 1), gold_ans: 160
** most_common: ("Juanmustreducehisdailycoffeeintakeby16cupstomeethisdoctor'srecommendation", 1), gold_ans: 16
** most_common: ('Judyreadatotalof240pagesoverthetwoweeks', 2), gold_ans: 240
** most_common: ('5', 5), gold_ans: 5
** most_common: ('Mitchellmade$21morethanLiamsellinglemonadethatweekend', 6), gold_ans: 21
** most_common: ('Peterwillhaveatotalof26actionfiguresbytheendoftheweek', 1), gold_ans: 23
** most_common: ('11232', 2), gold_ans: 11232
** most_common: ('(?+300)/7', 1), gold_ans: 40
** most_common: ("Theequationrepresentingthenumbertrain'svalueaftertheoperationsis\\(\\frac{40+x}{8}\\),where\\(x\\)isthenumberthatDianeinitiallythoughtof.Thisexpressionshowsthatthefinalvalueofthenumbertraindependsonthevalueof\\(x\\),andsince\\(x\\)isnotspecified,wecannotdetermineanumericalfinalvalueforthenumbertrain", 2), gold_ans: 48
** most_common: ('8', 1), gold_ans: 500
** most_common: ('Johnearned$40morethanJill', 5), gold_ans: 40
** most_common: ('800', 2), gold_ans: 800
** most_common: ('2.5', 2), gold_ans: 15
** most_common: ('318', 10), gold_ans: 319
** most_common: ('Georgeneedstowork374hours', 1), gold_ans: 260
** most_common: ('102', 2), gold_ans: 104
** most_common: ('5', 2), gold_ans: 5
** most_common: ('1260', 5), gold_ans: 1800
** most_common: ('42', 4), gold_ans: 42
** most_common: ('0.10perwashingwhenusing1pump', 1), gold_ans: 10
** most_common: ['none'], gold_ans: 8
** most_common: ['none'], gold_ans: 65,960
** most_common: ('[Calculationofthesumandtotalcostwillresultinaspecificamount.]', 1), gold_ans: 1,450,000
BackVerify: 150
** most_common: ('1509', 2), gold_ans: 1509
** most_common: ('Johnspent$3000onhisphysicaltherapysessions', 3), gold_ans: 3000
** most_common: ('7', 3), gold_ans: 7
** most_common: ('8', 4), gold_ans: 8
** most_common: ('ItwilltakeAdam4yearstogrowtallenoughtoridethebiggestrollercoaster', 3), gold_ans: 4
** most_common: ('10', 2), gold_ans: 4
** most_common: ('1050', 4), gold_ans: 1050
** most_common: ('372,000', 5), gold_ans: 262500
** most_common: ("Steve'sson'swifeis29yearsold", 4), gold_ans: 29
** most_common: ('10', 3), gold_ans: 10
** most_common: ['none'], gold_ans: 54
** most_common: ("Thereare162,000InstagramlikesforFishio'sselfie", 2), gold_ans: 162000
** most_common: ('105', 3), gold_ans: 75
** most_common: ('19', 1), gold_ans: 2
** most_common: ('21', 3), gold_ans: 33
** most_common: ['none'], gold_ans: 13
** most_common: ('Johnwillhave$25leftafterthevetvisit', 2), gold_ans: 25
** most_common: ['none'], gold_ans: 200
** most_common: ('8%', 7), gold_ans: 8
** most_common: ('Erinshouldbuy3scoopstomaximizehericecreamscoopswithinher$6.00budget,takingadvantageofthedealwhereshegets1scoopfreeforevery2scoopspurchased', 1), gold_ans: 6
** most_common: ('30', 1), gold_ans: 10
** most_common: ('18', 2), gold_ans: 18
** most_common: ('40%', 12), gold_ans: 40
** most_common: ('3', 4), gold_ans: 3
** most_common: ('8', 5), gold_ans: 8
** most_common: ('1100', 3), gold_ans: 1100
** most_common: ('CarlandCalhaveacombinedtotalof336marbles', 5), gold_ans: 336
** most_common: ('6', 3), gold_ans: 3
** most_common: ('107', 3), gold_ans: 89
** most_common: ('60,000hours', 4), gold_ans: 60000
** most_common: ('100', 3), gold_ans: 100
** most_common: ('600', 7), gold_ans: 675
** most_common: ('365', 2), gold_ans: 110
** most_common: ('50%', 3), gold_ans: 50
** most_common: ('4400', 1), gold_ans: 4400
** most_common: ('38.00', 2), gold_ans: 38
** most_common: ('255', 2), gold_ans: 255
** most_common: ('95', 3), gold_ans: 25
** most_common: ('2', 8), gold_ans: 17
** most_common: ('27', 7), gold_ans: 54
** most_common: ('8', 2), gold_ans: 4
** most_common: ('115', 1), gold_ans: 155
** most_common: ('12', 6), gold_ans: 108
** most_common: ('Thecompanypaysatotalof$3,120,000toitsemployeesafterthreemonths,ascalculatedbymultiplyingthemonthlysalaryexpensebythenumberofmonthsworked', 1), gold_ans: 2880000
** most_common: ('540', 4), gold_ans: 540
** most_common: ('Billywillearn$20.00morethanSallyin20hoursofwork', 2), gold_ans: 20
** most_common: ('5', 3), gold_ans: 6
** most_common: ('70%', 1), gold_ans: 70
** most_common: ('60', 5), gold_ans: 60
** most_common: ('23', 1), gold_ans: 7
BackVerify: 200
** most_common: ['none'], gold_ans: 11
** most_common: ('2.5', 1), gold_ans: 4
** most_common: ('18', 8), gold_ans: 14
** most_common: ('Millywilllose$11.00intheprocessofreturningthebook', 2), gold_ans: 11
** most_common: ('60', 2), gold_ans: 60
** most_common: ('18.8', 3), gold_ans: 1128
** most_common: ('549.00', 1), gold_ans: 324
** most_common: ['none'], gold_ans: 48
** most_common: ['none'], gold_ans: 120
** most_common: ('20', 9), gold_ans: 16
** most_common: ('Gabrielneedsanadditional$5,600tocoverboththecostofthecarandthephone', 4), gold_ans: 5600
** most_common: ('Wecannotcalculatetheexacttotalwithoutadditionaldata', 1), gold_ans: 180
** most_common: ('13', 2), gold_ans: 13
** most_common: ('14000', 3), gold_ans: 14000
** most_common: ('Wendyearns30morebadgesthanAmberina1-yeartimeframe', 5), gold_ans: 30
** most_common: ('Fawnhas28books', 3), gold_ans: 28
** most_common: ('38.89', 2), gold_ans: 7000
** most_common: ('25%', 10), gold_ans: 25
** most_common: ('31', 1), gold_ans: 26
** most_common: ('Eachchildcanhaveabowlofsoup4timesandanadditional2morebowlsofsoupfromtheremainingportionaftertheadultshaveeaten', 1), gold_ans: 1
** most_common: ('Jowouldneed16yardsofmaterialtomake20smalland8largemasksforherclass', 3), gold_ans: 16
** most_common: ('38', 3), gold_ans: 38
** most_common: ('8', 2), gold_ans: 6
** most_common: ('47', 2), gold_ans: 47
** most_common: ('4', 1), gold_ans: 2
** most_common: ('15', 3), gold_ans: 1
** most_common: ('85,000calories', 5), gold_ans: 85000
** most_common: ('57', 1), gold_ans: 60
** most_common: ('64800', 3), gold_ans: 64800
** most_common: ('460', 1), gold_ans: 250
** most_common: ('178.75', 4), gold_ans: 205
** most_common: ('Jamesisout$110', 1), gold_ans: 50
** most_common: ('75', 2), gold_ans: 300
** most_common: ('1800', 1), gold_ans: 360
** most_common: ('452', 1), gold_ans: 452
** most_common: ('34', 2), gold_ans: 34
** most_common: ('225', 1), gold_ans: 225
** most_common: ('600', 6), gold_ans: 1000
** most_common: ('446', 10), gold_ans: 374
** most_common: ('Gretahas48browniesleftoverfromtheentireday', 4), gold_ans: 48
** most_common: ('Johnpaidatotalof$1800forthenewphones', 3), gold_ans: 1800
** most_common: ('5', 2), gold_ans: 5
** most_common: ('29', 1), gold_ans: 50
** most_common: ('162', 1), gold_ans: 342
** most_common: ('ItwilltakeEmily10minutestopeelandcook90shrimp', 1), gold_ans: 45
** most_common: ('6200', 2), gold_ans: 6,600
** most_common: ('Eachadultgets25%ofthewatermelon', 1), gold_ans: 25
** most_common: ('11:00amthenextday', 1), gold_ans: 2
** most_common: ('Eachboxcontains8chocolatebars', 5), gold_ans: 8
** most_common: ('1490', 2), gold_ans: 1490
BackVerify: 250
** most_common: ('6,000', 1), gold_ans: 6000
** most_common: ['none'], gold_ans: 94
** most_common: ('78', 2), gold_ans: 78
** most_common: ('139', 11), gold_ans: 138
** most_common: ('18', 2), gold_ans: 45
** most_common: ('98', 2), gold_ans: 98
** most_common: ('36', 1), gold_ans: 36
** most_common: ('12', 3), gold_ans: 12
** most_common: ('60', 1), gold_ans: 30
** most_common: ('12', 3), gold_ans: 12
** most_common: ('27', 3), gold_ans: 34
** most_common: ('70%', 1), gold_ans: 24
** most_common: ('7', 2), gold_ans: 5
** most_common: ('2perhour', 4), gold_ans: 2
** most_common: ('7.17', 1), gold_ans: 3
** most_common: ['none'], gold_ans: 189
** most_common: ('9,871', 1), gold_ans: 7400
** most_common: ('1630', 2), gold_ans: 655
** most_common: ('Jamespays$2304ayearforinsurance', 2), gold_ans: 2304
** most_common: ('156', 2), gold_ans: 156
** most_common: ('24', 2), gold_ans: 24
** most_common: ['none'], gold_ans: 18
** most_common: ['none'], gold_ans: 21
** most_common: ('20', 1), gold_ans: 16
** most_common: ['none'], gold_ans: 145
** most_common: ('10%', 11), gold_ans: 10
** most_common: ('2', 2), gold_ans: 2
** most_common: ('Jennysaved$2.00bychoosingtobuythebananasinbunchesratherthanindividually', 4), gold_ans: 2
** most_common: ('12', 3), gold_ans: 12
** most_common: ('5', 1), gold_ans: 30
** most_common: ('72', 3), gold_ans: 72
** most_common: ['none'], gold_ans: 25
** most_common: ('Ittakes2minuteslongertoridethebiggestwaterslidecomparedtothesecondbiggestslide', 6), gold_ans: 2
** most_common: ('Carolineis24yearsold', 5), gold_ans: 24
** most_common: ('Laurenneedstoworkanadditional20yearsbeyondherinitialplantosaveenoughforherretirementperiod', 3), gold_ans: 40
** most_common: ('280', 2), gold_ans: 560
** most_common: ('2', 1), gold_ans: 18
** most_common: ('Johncanmake90smallbagsofM&M', 4), gold_ans: 90
** most_common: ('60', 1), gold_ans: 50
** most_common: ('13.33', 1), gold_ans: 68
** most_common: ('1.00perbagel', 7), gold_ans: 1
** most_common: ('16', 1), gold_ans: 16
** most_common: ('12%', 6), gold_ans: 12
** most_common: ('43', 1), gold_ans: 7300
** most_common: ('50%', 6), gold_ans: 50
** most_common: ('1125', 3), gold_ans: 1125
** most_common: ('140', 2), gold_ans: 170
** most_common: ('3744', 3), gold_ans: 1248
** most_common: ('1850', 1), gold_ans: 2350
** most_common: ['none'], gold_ans: 2
BackVerify: 300
** most_common: ['none'], gold_ans: 240
** most_common: ('5', 2), gold_ans: 2
** most_common: ('50%', 7), gold_ans: 50
** most_common: ('Newtonbroughthome21apples', 1), gold_ans: 11
** most_common: ('Jimiscurrently24yearsold', 2), gold_ans: 24
** most_common: ('228', 2), gold_ans: 19
** most_common: ['none'], gold_ans: 140
** most_common: ('2.67', 8), gold_ans: 2
** most_common: ['none'], gold_ans: 19
** most_common: ('240', 2), gold_ans: 240
** most_common: ('27', 2), gold_ans: 27
** most_common: ('Stephenwillpay$31inthetwelfthmonth', 3), gold_ans: 31
** most_common: ("ThepercentageerrorinTim'sguesswas4%", 1), gold_ans: 36
** most_common: ('75', 1), gold_ans: 75
** most_common: ('60%', 6), gold_ans: 60
** most_common: ('78', 5), gold_ans: 78
** most_common: ('Budspends$520.00onmakingmacaroniandcheeseinoneyear', 5), gold_ans: 520
** most_common: ('50%', 3), gold_ans: 50
** most_common: ('3', 2), gold_ans: 2
** most_common: ('8', 1), gold_ans: 8
** most_common: ('750', 3), gold_ans: 750
** most_common: ('32.5', 1), gold_ans: 30
** most_common: ('210', 3), gold_ans: 210
** most_common: ('54', 1), gold_ans: 54
** most_common: ('43', 2), gold_ans: 43
** most_common: ('12', 3), gold_ans: 12
** most_common: ('25', 1), gold_ans: 25
** most_common: ('2040', 1), gold_ans: 34
** most_common: ('Randynowhas23cookies', 4), gold_ans: 23
** most_common: ('84', 1), gold_ans: 4
** most_common: ('-2beakerslost(indicatinganinconsistencyintheproblemstatement)', 1), gold_ans: 2
** most_common: ('2180', 7), gold_ans: 2280
** most_common: ('32', 2), gold_ans: 64
** most_common: ('230', 4), gold_ans: 230
** answer: Joshmakesaprofitof$70,000fromflippingthehouse, groundtruth_str: 70000
** groundtruth_num is not None
** is_fraction:  Joshmakesaprofitof$70,000fromflippingthehouse
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  0 1
** answer: 540, groundtruth_str: 540
** compare on lower
** correct
**  1 1
** answer: 120, groundtruth_str: 160
** groundtruth_num is not None
** is_fraction:  120
** groundtruth_num is (int, float)
** compare_two_numbers int 120 160
** wrong
**  1 2
** answer: 135, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  135
** groundtruth_num is (int, float)
** compare_two_numbers int 135 45
** wrong
**  1 3
** answer: 1, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 13
** wrong
**  1 4
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  2 4
** answer: 60%, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  60%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.6 60
** wrong
**  2 5
** answer: Themerchantshouldchoosethejewelrypurchaseplantomaximizeprofit, groundtruth_str: 125
** groundtruth_num is not None
** is_fraction:  Themerchantshouldchoosethejewelrypurchaseplantomaximizeprofit
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  2 6
** answer: none, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  2 7
** answer: 25, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  25
** groundtruth_num is (int, float)
** compare_two_numbers int 25 14
** wrong
**  2 8
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  3 8
** answer: Thebootscost$104, groundtruth_str: 104
** groundtruth_num is not None
** is_fraction:  Thebootscost$104
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  3 9
** answer: 13, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  13
** groundtruth_num is (int, float)
** compare_two_numbers int 13 2
** wrong
**  3 10
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  4 10
** answer: Brandon'siPhoneis8yearsold, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  Brandon'siPhoneis8yearsold
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  4 11
** answer: 200, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  200
** groundtruth_num is (int, float)
** compare_two_numbers int 200 48
** wrong
**  4 12
** answer: none, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  4 13
** answer: 57.00, groundtruth_str: 57
** groundtruth_num is not None
** is_fraction:  57.00
** groundtruth_num is (int, float)
** compare_two_numbers int 57 57
** correct
**  5 13
** answer: 5, groundtruth_str: 25000
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 25000
** wrong
**  5 14
** answer: 595, groundtruth_str: 595
** compare on lower
** correct
**  6 14
** answer: Baileystartedwith$60, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  Baileystartedwith$60
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  6 15
** answer: Artiewillmake$88.00fromsellingtheflowersattheFarmersMarkettoday, groundtruth_str: 88
** groundtruth_num is not None
** is_fraction:  Artiewillmake$88.00fromsellingtheflowersattheFarmersMarkettoday
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  6 16
** answer: 7.5, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  7.5
** groundtruth_num is (int, float)
** compare_two_numbers int 7.5 60
** wrong
**  6 17
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  7 17
** answer: Vincentsaves$6.00bybuying18flowersatthebetterprice, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  Vincentsaves$6.00bybuying18flowersatthebetterprice
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  7 18
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  8 18
** answer: 798.60, groundtruth_str: 9360
** groundtruth_num is not None
** is_fraction:  798.60
** groundtruth_num is (int, float)
** compare_two_numbers int 798.6 9360
** wrong
**  8 19
** answer: 18, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 24
** wrong
**  8 20
** answer: 44, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  44
** groundtruth_num is (int, float)
** compare_two_numbers int 44 36
** wrong
**  8 21
** answer: 348, groundtruth_str: 348
** compare on lower
** correct
**  9 21
** answer: Johndrinks15glassesofwaterduringtheweekdaysand2glassesofsodaontheweekends, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  Johndrinks15glassesofwaterduringtheweekdaysand2glassesofsodaontheweekends
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  9 22
** answer: Sashamakesaprofitof$90ifshesellsallthelumber, groundtruth_str: 90
** groundtruth_num is not None
** is_fraction:  Sashamakesaprofitof$90ifshesellsallthelumber
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  9 23
** answer: 99,076.92, groundtruth_str: 95200
** groundtruth_num is not None
** is_fraction:  99,076.92
** groundtruth_num is (int, float)
** compare_two_numbers int 99076.92 95200
** wrong
**  9 24
** answer: 46, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  46
** groundtruth_num is (int, float)
** compare_two_numbers int 46 48
** wrong
**  9 25
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  10 25
** answer: 105, groundtruth_str: 105
** compare on lower
** correct
**  11 25
** answer: 20%, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  20%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.2 20
** wrong
**  11 26
** answer: none, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  11 27
** answer: none, groundtruth_str: 75
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  11 28
** answer: none, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  11 29
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  12 29
** answer: none, groundtruth_str: 92
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  12 30
** answer: €77, groundtruth_str: 77
** groundtruth_num is not None
** is_fraction:  €77
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  12 31
** answer: 7.50, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  7.50
** groundtruth_num is (int, float)
** compare_two_numbers int 7.5 15
** wrong
**  12 32
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  13 32
** answer: Itis100%morelikelythatJerryrollsanumbergreaterthan3thanthatherollstwoevennumbersinarow, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  Itis100%morelikelythatJerryrollsanumbergreaterthan3thanthatherollstwoevennumbersinarow
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  13 33
** answer: Eachpersonpays$34, groundtruth_str: 34
** groundtruth_num is not None
** is_fraction:  Eachpersonpays$34
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  13 34
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  14 34
** answer: 91, groundtruth_str: 91
** compare on lower
** correct
**  15 34
** answer: Cannotbedetermined, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  Cannotbedetermined
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  15 35
** answer: Elainenowhasatotalof320Pokemoncards, groundtruth_str: 320
** groundtruth_num is not None
** is_fraction:  Elainenowhasatotalof320Pokemoncards
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  15 36
** answer: 120, groundtruth_str: 98
** groundtruth_num is not None
** is_fraction:  120
** groundtruth_num is (int, float)
** compare_two_numbers int 120 98
** wrong
**  15 37
** answer: 70percup, groundtruth_str: 145
** groundtruth_num is not None
** is_fraction:  70percup
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  15 38
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  16 38
** answer: 54, groundtruth_str: 54
** compare on lower
** correct
**  17 38
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  18 38
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  19 38
** answer: 30, groundtruth_str: 31
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 31
** wrong
**  19 39
** answer: GingergaveGriffin20fries, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  GingergaveGriffin20fries
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  19 40
** answer: 14, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers int 14 7
** wrong
**  19 41
** answer: none, groundtruth_str: 73
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  19 42
** answer: 176, groundtruth_str: 192
** groundtruth_num is not None
** is_fraction:  176
** groundtruth_num is (int, float)
** compare_two_numbers int 176 192
** wrong
**  19 43
** answer: none, groundtruth_str: 168
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  19 44
** answer: 43, groundtruth_str: 91
** groundtruth_num is not None
** is_fraction:  43
** groundtruth_num is (int, float)
** compare_two_numbers int 43 91
** wrong
**  19 45
** answer: 84, groundtruth_str: 83
** groundtruth_num is not None
** is_fraction:  84
** groundtruth_num is (int, float)
** compare_two_numbers int 84 83
** wrong
**  19 46
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  20 46
** answer: Carmenpaysatotalof$350fortheantiquedesk, groundtruth_str: 500
** groundtruth_num is not None
** is_fraction:  Carmenpaysatotalof$350fortheantiquedesk
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  20 47
** answer: 16, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 8
** wrong
**  20 48
** answer: 1300, groundtruth_str: 1300
** compare on lower
** correct
**  21 48
** answer: ItwilltakeSandy4weekstolosethesameamountofweightthatJoeylosesin4weeks, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  ItwilltakeSandy4weekstolosethesameamountofweightthatJoeylosesin4weeks
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  21 49
** answer: Theodoesnothaveenoughmoneylefttobuygiftsforhisbusinesspartners, groundtruth_str: 2050
** groundtruth_num is not None
** is_fraction:  Theodoesnothaveenoughmoneylefttobuygiftsforhisbusinesspartners
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  21 50
** answer: 120,000(currentpopulationofChile), groundtruth_str: 120000
** groundtruth_num is not None
** is_fraction:  120,000(currentpopulationofChile)
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  21 51
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  22 51
** answer: JamandMegdonotneedanyadditionalboxestostorealltheirpencils.Theycurrentlyhaveenoughboxestoaccommodateall46pencils, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  JamandMegdonotneedanyadditionalboxestostorealltheirpencils.Theycurrentlyhaveenoughboxestoaccommodateall46pencils
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  22 52
** answer: (VC-75milliliters)/VC, groundtruth_str: 75
** compare on lower in
** correct
**  23 52
** answer: Johnate1morehotdogthanLuke, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  Johnate1morehotdogthanLuke
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  23 53
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  24 53
** answer: 10%, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  10%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.1 10
** wrong
**  24 54
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  25 54
** answer: Annabellestillneedstosave$45topurchasethephone, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  Annabellestillneedstosave$45topurchasethephone
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  25 55
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  25 56
** answer: 10, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 18
** wrong
**  25 57
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  26 57
** answer: Marycollects45kgofmilkeveryday, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  Marycollects45kgofmilkeveryday
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  26 58
** answer: 1,095, groundtruth_str: 803
** groundtruth_num is not None
** is_fraction:  1,095
** groundtruth_num is (int, float)
** compare_two_numbers int 1095 803
** wrong
**  26 59
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  27 59
** answer: 36, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  36
** groundtruth_num is (int, float)
** compare_two_numbers int 36 6
** wrong
**  27 60
** answer: Samhas15morepopsiclesthanBetty, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  Samhas15morepopsiclesthanBetty
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  27 61
** answer: none, groundtruth_str: 34
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  27 62
** answer: 20%, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  20%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.2 20
** wrong
**  27 63
** answer: 38, groundtruth_str: 38
** compare on lower
** correct
**  28 63
** answer: 14,400, groundtruth_str: 14400
** groundtruth_num is not None
** is_fraction:  14,400
** groundtruth_num is (int, float)
** compare_two_numbers int 14400 14400
** correct
**  29 63
** answer: 135, groundtruth_str: 81
** groundtruth_num is not None
** is_fraction:  135
** groundtruth_num is (int, float)
** compare_two_numbers int 135 81
** wrong
**  29 64
** answer: 240, groundtruth_str: 200
** groundtruth_num is not None
** is_fraction:  240
** groundtruth_num is (int, float)
** compare_two_numbers int 240 200
** wrong
**  29 65
** answer: 4,000, groundtruth_str: 2000
** groundtruth_num is not None
** is_fraction:  4,000
** groundtruth_num is (int, float)
** compare_two_numbers int 4000 2000
** wrong
**  29 66
** answer: 168,000, groundtruth_str: 168000
** groundtruth_num is not None
** is_fraction:  168,000
** groundtruth_num is (int, float)
** compare_two_numbers int 168000 168000
** correct
**  30 66
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  31 66
** answer: 2,500, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  2,500
** groundtruth_num is (int, float)
** compare_two_numbers int 2500 25
** wrong
**  31 67
** answer: 3140, groundtruth_str: 3140
** compare on lower
** correct
**  32 67
** answer: none, groundtruth_str: 284
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  32 68
** answer: Thejoggerjeansoriginallycost$6lessthanthetatteredjeans, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  Thejoggerjeansoriginallycost$6lessthanthetatteredjeans
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  32 69
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  33 69
** answer: 6, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 17
** wrong
**  33 70
** answer: 59, groundtruth_str: 59
** compare on lower
** correct
**  34 70
** answer: , groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  34 71
** answer: 8800, groundtruth_str: 6400
** groundtruth_num is not None
** is_fraction:  8800
** groundtruth_num is (int, float)
** compare_two_numbers int 8800 6400
** wrong
**  34 72
** answer: 240, groundtruth_str: 150
** groundtruth_num is not None
** is_fraction:  240
** groundtruth_num is (int, float)
** compare_two_numbers int 240 150
** wrong
**  34 73
** answer: 35%, groundtruth_str: 35
** groundtruth_num is not None
** is_fraction:  35%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.35 35
** wrong
**  34 74
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  35 74
** answer: 10%, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  10%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.1 10
** wrong
**  35 75
** answer: -10, groundtruth_str: -10
** compare on lower
** correct
**  36 75
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  37 75
** answer: none, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  37 76
** answer: Thecouchis18feetlong, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  Thecouchis18feetlong
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  37 77
** answer: 8onionsand4potatoes, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  8onionsand4potatoes
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  37 78
** answer: none, groundtruth_str: 525
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  37 79
** answer: 39, groundtruth_str: 29
** groundtruth_num is not None
** is_fraction:  39
** groundtruth_num is (int, float)
** compare_two_numbers int 39 29
** wrong
**  37 80
** answer: none, groundtruth_str: 172
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  37 81
** answer: 40, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  40
** groundtruth_num is (int, float)
** compare_two_numbers int 40 36
** wrong
**  37 82
** answer: 66, groundtruth_str: 66
** compare on lower
** correct
**  38 82
** answer: 9, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 25
** wrong
**  38 83
** answer: 300, groundtruth_str: 300
** compare on lower
** correct
**  39 83
** answer: Eachpersonpays$30, groundtruth_str: 35
** groundtruth_num is not None
** is_fraction:  Eachpersonpays$30
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  39 84
** answer: 2x, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  2x
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  39 85
** answer: Jeffwalksatotalof30milesinaweek, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  Jeffwalksatotalof30milesinaweek
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  39 86
** answer: 65, groundtruth_str: 130
** groundtruth_num is not None
** is_fraction:  65
** groundtruth_num is (int, float)
** compare_two_numbers int 65 130
** wrong
**  39 87
** answer: Danielneedstopay$26.10foralltheitemshewantstobuy, groundtruth_str: 27
** groundtruth_num is not None
** is_fraction:  Danielneedstopay$26.10foralltheitemshewantstobuy
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  39 88
** answer: 160, groundtruth_str: 160
** compare on lower
** correct
**  40 88
** answer: Juanmustreducehisdailycoffeeintakeby16cupstomeethisdoctor'srecommendation, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  Juanmustreducehisdailycoffeeintakeby16cupstomeethisdoctor'srecommendation
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  40 89
** answer: Judyreadatotalof240pagesoverthetwoweeks, groundtruth_str: 240
** groundtruth_num is not None
** is_fraction:  Judyreadatotalof240pagesoverthetwoweeks
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  40 90
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  41 90
** answer: Mitchellmade$21morethanLiamsellinglemonadethatweekend, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  Mitchellmade$21morethanLiamsellinglemonadethatweekend
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  41 91
** answer: Peterwillhaveatotalof26actionfiguresbytheendoftheweek, groundtruth_str: 23
** groundtruth_num is not None
** is_fraction:  Peterwillhaveatotalof26actionfiguresbytheendoftheweek
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  41 92
** answer: 11232, groundtruth_str: 11232
** compare on lower
** correct
**  42 92
** answer: (?+300)/7, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  (?+300)/7
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  42 93
** answer: Theequationrepresentingthenumbertrain'svalueaftertheoperationsis\(\frac{40+x}{8}\),where\(x\)isthenumberthatDianeinitiallythoughtof.Thisexpressionshowsthatthefinalvalueofthenumbertraindependsonthevalueof\(x\),andsince\(x\)isnotspecified,wecannotdetermineanumericalfinalvalueforthenumbertrain, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  Theequationrepresentingthenumbertrain'svalueaftertheoperationsis\(\frac{40+x}{8}\),where\(x\)isthenumberthatDianeinitiallythoughtof.Thisexpressionshowsthatthefinalvalueofthenumbertraindependsonthevalueof\(x\),andsince\(x\)isnotspecified,wecannotdetermineanumericalfinalvalueforthenumbertrain
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  42 94
** answer: 8, groundtruth_str: 500
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 500
** wrong
**  42 95
** answer: Johnearned$40morethanJill, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  Johnearned$40morethanJill
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  42 96
** answer: 800, groundtruth_str: 800
** compare on lower
** correct
**  43 96
** answer: 2.5, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  2.5
** groundtruth_num is (int, float)
** compare_two_numbers int 2.5 15
** wrong
**  43 97
** answer: 318, groundtruth_str: 319
** groundtruth_num is not None
** is_fraction:  318
** groundtruth_num is (int, float)
** compare_two_numbers int 318 319
** wrong
**  43 98
** answer: Georgeneedstowork374hours, groundtruth_str: 260
** groundtruth_num is not None
** is_fraction:  Georgeneedstowork374hours
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  43 99
** answer: 102, groundtruth_str: 104
** groundtruth_num is not None
** is_fraction:  102
** groundtruth_num is (int, float)
** compare_two_numbers int 102 104
** wrong
**  43 100
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  44 100
** answer: 1260, groundtruth_str: 1800
** groundtruth_num is not None
** is_fraction:  1260
** groundtruth_num is (int, float)
** compare_two_numbers int 1260 1800
** wrong
**  44 101
** answer: 42, groundtruth_str: 42
** compare on lower
** correct
**  45 101
** answer: 0.10perwashingwhenusing1pump, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  0.10perwashingwhenusing1pump
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  45 102
** answer: none, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  45 103
** answer: none, groundtruth_str: 65,960
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  45 104
** answer: [Calculationofthesumandtotalcostwillresultinaspecificamount.], groundtruth_str: 1,450,000
** groundtruth_num is not None
** is_fraction:  [Calculationofthesumandtotalcostwillresultinaspecificamount.]
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  45 105
** answer: 1509, groundtruth_str: 1509
** compare on lower
** correct
**  46 105
** answer: Johnspent$3000onhisphysicaltherapysessions, groundtruth_str: 3000
** groundtruth_num is not None
** is_fraction:  Johnspent$3000onhisphysicaltherapysessions
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  46 106
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  47 106
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  48 106
** answer: ItwilltakeAdam4yearstogrowtallenoughtoridethebiggestrollercoaster, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  ItwilltakeAdam4yearstogrowtallenoughtoridethebiggestrollercoaster
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  48 107
** answer: 10, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 4
** wrong
**  48 108
** answer: 1050, groundtruth_str: 1050
** compare on lower
** correct
**  49 108
** answer: 372,000, groundtruth_str: 262500
** groundtruth_num is not None
** is_fraction:  372,000
** groundtruth_num is (int, float)
** compare_two_numbers int 372000 262500
** wrong
**  49 109
** answer: Steve'sson'swifeis29yearsold, groundtruth_str: 29
** groundtruth_num is not None
** is_fraction:  Steve'sson'swifeis29yearsold
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  49 110
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  50 110
** answer: none, groundtruth_str: 54
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  50 111
** answer: Thereare162,000InstagramlikesforFishio'sselfie, groundtruth_str: 162000
** groundtruth_num is not None
** is_fraction:  Thereare162,000InstagramlikesforFishio'sselfie
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  50 112
** answer: 105, groundtruth_str: 75
** groundtruth_num is not None
** is_fraction:  105
** groundtruth_num is (int, float)
** compare_two_numbers int 105 75
** wrong
**  50 113
** answer: 19, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  19
** groundtruth_num is (int, float)
** compare_two_numbers int 19 2
** wrong
**  50 114
** answer: 21, groundtruth_str: 33
** groundtruth_num is not None
** is_fraction:  21
** groundtruth_num is (int, float)
** compare_two_numbers int 21 33
** wrong
**  50 115
** answer: none, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  50 116
** answer: Johnwillhave$25leftafterthevetvisit, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  Johnwillhave$25leftafterthevetvisit
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  50 117
** answer: none, groundtruth_str: 200
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  50 118
** answer: 8%, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  8%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.08 8
** wrong
**  50 119
** answer: Erinshouldbuy3scoopstomaximizehericecreamscoopswithinher$6.00budget,takingadvantageofthedealwhereshegets1scoopfreeforevery2scoopspurchased, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  Erinshouldbuy3scoopstomaximizehericecreamscoopswithinher$6.00budget,takingadvantageofthedealwhereshegets1scoopfreeforevery2scoopspurchased
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  50 120
** answer: 30, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 10
** wrong
**  50 121
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  51 121
** answer: 40%, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  40%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.4 40
** wrong
**  51 122
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  52 122
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  53 122
** answer: 1100, groundtruth_str: 1100
** compare on lower
** correct
**  54 122
** answer: CarlandCalhaveacombinedtotalof336marbles, groundtruth_str: 336
** groundtruth_num is not None
** is_fraction:  CarlandCalhaveacombinedtotalof336marbles
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  54 123
** answer: 6, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 3
** wrong
**  54 124
** answer: 107, groundtruth_str: 89
** groundtruth_num is not None
** is_fraction:  107
** groundtruth_num is (int, float)
** compare_two_numbers int 107 89
** wrong
**  54 125
** answer: 60,000hours, groundtruth_str: 60000
** groundtruth_num is not None
** is_fraction:  60,000hours
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  54 126
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  55 126
** answer: 600, groundtruth_str: 675
** groundtruth_num is not None
** is_fraction:  600
** groundtruth_num is (int, float)
** compare_two_numbers int 600 675
** wrong
**  55 127
** answer: 365, groundtruth_str: 110
** groundtruth_num is not None
** is_fraction:  365
** groundtruth_num is (int, float)
** compare_two_numbers int 365 110
** wrong
**  55 128
** answer: 50%, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  50%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.5 50
** wrong
**  55 129
** answer: 4400, groundtruth_str: 4400
** compare on lower
** correct
**  56 129
** answer: 38.00, groundtruth_str: 38
** groundtruth_num is not None
** is_fraction:  38.00
** groundtruth_num is (int, float)
** compare_two_numbers int 38 38
** correct
**  57 129
** answer: 255, groundtruth_str: 255
** compare on lower
** correct
**  58 129
** answer: 95, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  95
** groundtruth_num is (int, float)
** compare_two_numbers int 95 25
** wrong
**  58 130
** answer: 2, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 17
** wrong
**  58 131
** answer: 27, groundtruth_str: 54
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers int 27 54
** wrong
**  58 132
** answer: 8, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 4
** wrong
**  58 133
** answer: 115, groundtruth_str: 155
** groundtruth_num is not None
** is_fraction:  115
** groundtruth_num is (int, float)
** compare_two_numbers int 115 155
** wrong
**  58 134
** answer: 12, groundtruth_str: 108
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 108
** wrong
**  58 135
** answer: Thecompanypaysatotalof$3,120,000toitsemployeesafterthreemonths,ascalculatedbymultiplyingthemonthlysalaryexpensebythenumberofmonthsworked, groundtruth_str: 2880000
** groundtruth_num is not None
** is_fraction:  Thecompanypaysatotalof$3,120,000toitsemployeesafterthreemonths,ascalculatedbymultiplyingthemonthlysalaryexpensebythenumberofmonthsworked
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  58 136
** answer: 540, groundtruth_str: 540
** compare on lower
** correct
**  59 136
** answer: Billywillearn$20.00morethanSallyin20hoursofwork, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  Billywillearn$20.00morethanSallyin20hoursofwork
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  59 137
** answer: 5, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 6
** wrong
**  59 138
** answer: 70%, groundtruth_str: 70
** groundtruth_num is not None
** is_fraction:  70%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.7 70
** wrong
**  59 139
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  60 139
** answer: 23, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  23
** groundtruth_num is (int, float)
** compare_two_numbers int 23 7
** wrong
**  60 140
** answer: none, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  60 141
** answer: 2.5, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2.5
** groundtruth_num is (int, float)
** compare_two_numbers int 2.5 4
** wrong
**  60 142
** answer: 18, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 14
** wrong
**  60 143
** answer: Millywilllose$11.00intheprocessofreturningthebook, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  Millywilllose$11.00intheprocessofreturningthebook
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  60 144
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  61 144
** answer: 18.8, groundtruth_str: 1128
** groundtruth_num is not None
** is_fraction:  18.8
** groundtruth_num is (int, float)
** compare_two_numbers int 18.8 1128
** wrong
**  61 145
** answer: 549.00, groundtruth_str: 324
** groundtruth_num is not None
** is_fraction:  549.00
** groundtruth_num is (int, float)
** compare_two_numbers int 549 324
** wrong
**  61 146
** answer: none, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  61 147
** answer: none, groundtruth_str: 120
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  61 148
** answer: 20, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  20
** groundtruth_num is (int, float)
** compare_two_numbers int 20 16
** wrong
**  61 149
** answer: Gabrielneedsanadditional$5,600tocoverboththecostofthecarandthephone, groundtruth_str: 5600
** groundtruth_num is not None
** is_fraction:  Gabrielneedsanadditional$5,600tocoverboththecostofthecarandthephone
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  61 150
** answer: Wecannotcalculatetheexacttotalwithoutadditionaldata, groundtruth_str: 180
** groundtruth_num is not None
** is_fraction:  Wecannotcalculatetheexacttotalwithoutadditionaldata
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  61 151
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  62 151
** answer: 14000, groundtruth_str: 14000
** compare on lower
** correct
**  63 151
** answer: Wendyearns30morebadgesthanAmberina1-yeartimeframe, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  Wendyearns30morebadgesthanAmberina1-yeartimeframe
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  63 152
** answer: Fawnhas28books, groundtruth_str: 28
** groundtruth_num is not None
** is_fraction:  Fawnhas28books
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  63 153
** answer: 38.89, groundtruth_str: 7000
** groundtruth_num is not None
** is_fraction:  38.89
** groundtruth_num is (int, float)
** compare_two_numbers int 38.89 7000
** wrong
**  63 154
** answer: 25%, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  25%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.25 25
** wrong
**  63 155
** answer: 31, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  31
** groundtruth_num is (int, float)
** compare_two_numbers int 31 26
** wrong
**  63 156
** answer: Eachchildcanhaveabowlofsoup4timesandanadditional2morebowlsofsoupfromtheremainingportionaftertheadultshaveeaten, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  Eachchildcanhaveabowlofsoup4timesandanadditional2morebowlsofsoupfromtheremainingportionaftertheadultshaveeaten
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  63 157
** answer: Jowouldneed16yardsofmaterialtomake20smalland8largemasksforherclass, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  Jowouldneed16yardsofmaterialtomake20smalland8largemasksforherclass
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  63 158
** answer: 38, groundtruth_str: 38
** compare on lower
** correct
**  64 158
** answer: 8, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 6
** wrong
**  64 159
** answer: 47, groundtruth_str: 47
** compare on lower
** correct
**  65 159
** answer: 4, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 2
** wrong
**  65 160
** answer: 15, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 1
** wrong
**  65 161
** answer: 85,000calories, groundtruth_str: 85000
** groundtruth_num is not None
** is_fraction:  85,000calories
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  65 162
** answer: 57, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  57
** groundtruth_num is (int, float)
** compare_two_numbers int 57 60
** wrong
**  65 163
** answer: 64800, groundtruth_str: 64800
** compare on lower
** correct
**  66 163
** answer: 460, groundtruth_str: 250
** groundtruth_num is not None
** is_fraction:  460
** groundtruth_num is (int, float)
** compare_two_numbers int 460 250
** wrong
**  66 164
** answer: 178.75, groundtruth_str: 205
** groundtruth_num is not None
** is_fraction:  178.75
** groundtruth_num is (int, float)
** compare_two_numbers int 178.75 205
** wrong
**  66 165
** answer: Jamesisout$110, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  Jamesisout$110
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  66 166
** answer: 75, groundtruth_str: 300
** groundtruth_num is not None
** is_fraction:  75
** groundtruth_num is (int, float)
** compare_two_numbers int 75 300
** wrong
**  66 167
** answer: 1800, groundtruth_str: 360
** groundtruth_num is not None
** is_fraction:  1800
** groundtruth_num is (int, float)
** compare_two_numbers int 1800 360
** wrong
**  66 168
** answer: 452, groundtruth_str: 452
** compare on lower
** correct
**  67 168
** answer: 34, groundtruth_str: 34
** compare on lower
** correct
**  68 168
** answer: 225, groundtruth_str: 225
** compare on lower
** correct
**  69 168
** answer: 600, groundtruth_str: 1000
** groundtruth_num is not None
** is_fraction:  600
** groundtruth_num is (int, float)
** compare_two_numbers int 600 1000
** wrong
**  69 169
** answer: 446, groundtruth_str: 374
** groundtruth_num is not None
** is_fraction:  446
** groundtruth_num is (int, float)
** compare_two_numbers int 446 374
** wrong
**  69 170
** answer: Gretahas48browniesleftoverfromtheentireday, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  Gretahas48browniesleftoverfromtheentireday
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  69 171
** answer: Johnpaidatotalof$1800forthenewphones, groundtruth_str: 1800
** groundtruth_num is not None
** is_fraction:  Johnpaidatotalof$1800forthenewphones
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  69 172
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  70 172
** answer: 29, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  29
** groundtruth_num is (int, float)
** compare_two_numbers int 29 50
** wrong
**  70 173
** answer: 162, groundtruth_str: 342
** groundtruth_num is not None
** is_fraction:  162
** groundtruth_num is (int, float)
** compare_two_numbers int 162 342
** wrong
**  70 174
** answer: ItwilltakeEmily10minutestopeelandcook90shrimp, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  ItwilltakeEmily10minutestopeelandcook90shrimp
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  70 175
** answer: 6200, groundtruth_str: 6,600
** groundtruth_num is not None
** is_fraction:  6200
** groundtruth_num is (int, float)
** compare_two_numbers int 6200 6600
** wrong
**  70 176
** answer: Eachadultgets25%ofthewatermelon, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  Eachadultgets25%ofthewatermelon
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  70 177
** answer: 11:00amthenextday, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  11:00amthenextday
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  70 178
** answer: Eachboxcontains8chocolatebars, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  Eachboxcontains8chocolatebars
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  70 179
** answer: 1490, groundtruth_str: 1490
** compare on lower
** correct
**  71 179
** answer: 6,000, groundtruth_str: 6000
** groundtruth_num is not None
** is_fraction:  6,000
** groundtruth_num is (int, float)
** compare_two_numbers int 6000 6000
** correct
**  72 179
** answer: none, groundtruth_str: 94
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  72 180
** answer: 78, groundtruth_str: 78
** compare on lower
** correct
**  73 180
** answer: 139, groundtruth_str: 138
** groundtruth_num is not None
** is_fraction:  139
** groundtruth_num is (int, float)
** compare_two_numbers int 139 138
** wrong
**  73 181
** answer: 18, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 45
** wrong
**  73 182
** answer: 98, groundtruth_str: 98
** compare on lower
** correct
**  74 182
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  75 182
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  76 182
** answer: 60, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 30
** wrong
**  76 183
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  77 183
** answer: 27, groundtruth_str: 34
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers int 27 34
** wrong
**  77 184
** answer: 70%, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  70%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.7 24
** wrong
**  77 185
** answer: 7, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 5
** wrong
**  77 186
** answer: 2perhour, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  2perhour
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  77 187
** answer: 7.17, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  7.17
** groundtruth_num is (int, float)
** compare_two_numbers int 7.17 3
** wrong
**  77 188
** answer: none, groundtruth_str: 189
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  77 189
** answer: 9,871, groundtruth_str: 7400
** groundtruth_num is not None
** is_fraction:  9,871
** groundtruth_num is (int, float)
** compare_two_numbers int 9871 7400
** wrong
**  77 190
** answer: 1630, groundtruth_str: 655
** groundtruth_num is not None
** is_fraction:  1630
** groundtruth_num is (int, float)
** compare_two_numbers int 1630 655
** wrong
**  77 191
** answer: Jamespays$2304ayearforinsurance, groundtruth_str: 2304
** groundtruth_num is not None
** is_fraction:  Jamespays$2304ayearforinsurance
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  77 192
** answer: 156, groundtruth_str: 156
** compare on lower
** correct
**  78 192
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  79 192
** answer: none, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  79 193
** answer: none, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  79 194
** answer: 20, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  20
** groundtruth_num is (int, float)
** compare_two_numbers int 20 16
** wrong
**  79 195
** answer: none, groundtruth_str: 145
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  79 196
** answer: 10%, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  10%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.1 10
** wrong
**  79 197
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  80 197
** answer: Jennysaved$2.00bychoosingtobuythebananasinbunchesratherthanindividually, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  Jennysaved$2.00bychoosingtobuythebananasinbunchesratherthanindividually
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  80 198
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  81 198
** answer: 5, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 30
** wrong
**  81 199
** answer: 72, groundtruth_str: 72
** compare on lower
** correct
**  82 199
** answer: none, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  82 200
** answer: Ittakes2minuteslongertoridethebiggestwaterslidecomparedtothesecondbiggestslide, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  Ittakes2minuteslongertoridethebiggestwaterslidecomparedtothesecondbiggestslide
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  82 201
** answer: Carolineis24yearsold, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  Carolineis24yearsold
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  82 202
** answer: Laurenneedstoworkanadditional20yearsbeyondherinitialplantosaveenoughforherretirementperiod, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  Laurenneedstoworkanadditional20yearsbeyondherinitialplantosaveenoughforherretirementperiod
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  82 203
** answer: 280, groundtruth_str: 560
** groundtruth_num is not None
** is_fraction:  280
** groundtruth_num is (int, float)
** compare_two_numbers int 280 560
** wrong
**  82 204
** answer: 2, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 18
** wrong
**  82 205
** answer: Johncanmake90smallbagsofM&M, groundtruth_str: 90
** groundtruth_num is not None
** is_fraction:  Johncanmake90smallbagsofM&M
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  82 206
** answer: 60, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 50
** wrong
**  82 207
** answer: 13.33, groundtruth_str: 68
** groundtruth_num is not None
** is_fraction:  13.33
** groundtruth_num is (int, float)
** compare_two_numbers int 13.33 68
** wrong
**  82 208
** answer: 1.00perbagel, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  1.00perbagel
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  82 209
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  83 209
** answer: 12%, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  12%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.12 12
** wrong
**  83 210
** answer: 43, groundtruth_str: 7300
** groundtruth_num is not None
** is_fraction:  43
** groundtruth_num is (int, float)
** compare_two_numbers int 43 7300
** wrong
**  83 211
** answer: 50%, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  50%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.5 50
** wrong
**  83 212
** answer: 1125, groundtruth_str: 1125
** compare on lower
** correct
**  84 212
** answer: 140, groundtruth_str: 170
** groundtruth_num is not None
** is_fraction:  140
** groundtruth_num is (int, float)
** compare_two_numbers int 140 170
** wrong
**  84 213
** answer: 3744, groundtruth_str: 1248
** groundtruth_num is not None
** is_fraction:  3744
** groundtruth_num is (int, float)
** compare_two_numbers int 3744 1248
** wrong
**  84 214
** answer: 1850, groundtruth_str: 2350
** groundtruth_num is not None
** is_fraction:  1850
** groundtruth_num is (int, float)
** compare_two_numbers int 1850 2350
** wrong
**  84 215
** answer: none, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  84 216
** answer: none, groundtruth_str: 240
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  84 217
** answer: 5, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 2
** wrong
**  84 218
** answer: 50%, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  50%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.5 50
** wrong
**  84 219
** answer: Newtonbroughthome21apples, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  Newtonbroughthome21apples
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  84 220
** answer: Jimiscurrently24yearsold, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  Jimiscurrently24yearsold
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  84 221
** answer: 228, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  228
** groundtruth_num is (int, float)
** compare_two_numbers int 228 19
** wrong
**  84 222
** answer: none, groundtruth_str: 140
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  84 223
** answer: 2.67, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  2.67
** groundtruth_num is (int, float)
** compare_two_numbers int 2.67 2
** wrong
**  84 224
** answer: none, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  84 225
** answer: 240, groundtruth_str: 240
** compare on lower
** correct
**  85 225
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  86 225
** answer: Stephenwillpay$31inthetwelfthmonth, groundtruth_str: 31
** groundtruth_num is not None
** is_fraction:  Stephenwillpay$31inthetwelfthmonth
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  86 226
** answer: ThepercentageerrorinTim'sguesswas4%, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  ThepercentageerrorinTim'sguesswas4%
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  86 227
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  87 227
** answer: 60%, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  60%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.6 60
** wrong
**  87 228
** answer: 78, groundtruth_str: 78
** compare on lower
** correct
**  88 228
** answer: Budspends$520.00onmakingmacaroniandcheeseinoneyear, groundtruth_str: 520
** groundtruth_num is not None
** is_fraction:  Budspends$520.00onmakingmacaroniandcheeseinoneyear
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  88 229
** answer: 50%, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  50%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.5 50
** wrong
**  88 230
** answer: 3, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 2
** wrong
**  88 231
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  89 231
** answer: 750, groundtruth_str: 750
** compare on lower
** correct
**  90 231
** answer: 32.5, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  32.5
** groundtruth_num is (int, float)
** compare_two_numbers int 32.5 30
** wrong
**  90 232
** answer: 210, groundtruth_str: 210
** compare on lower
** correct
**  91 232
** answer: 54, groundtruth_str: 54
** compare on lower
** correct
**  92 232
** answer: 43, groundtruth_str: 43
** compare on lower
** correct
**  93 232
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  94 232
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  95 232
** answer: 2040, groundtruth_str: 34
** groundtruth_num is not None
** is_fraction:  2040
** groundtruth_num is (int, float)
** compare_two_numbers int 2040 34
** wrong
**  95 233
** answer: Randynowhas23cookies, groundtruth_str: 23
** groundtruth_num is not None
** is_fraction:  Randynowhas23cookies
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  95 234
** answer: 84, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  84
** groundtruth_num is (int, float)
** compare_two_numbers int 84 4
** wrong
**  95 235
** answer: -2beakerslost(indicatinganinconsistencyintheproblemstatement), groundtruth_str: 2
** compare on lower in
** correct
**  96 235
** answer: 2180, groundtruth_str: 2280
** groundtruth_num is not None
** is_fraction:  2180
** groundtruth_num is (int, float)
** compare_two_numbers int 2180 2280
** wrong
**  96 236
** answer: 32, groundtruth_str: 64
** groundtruth_num is not None
** is_fraction:  32
** groundtruth_num is (int, float)
** compare_two_numbers int 32 64
** wrong
**  96 237
** answer: 230, groundtruth_str: 230
** compare on lower
** correct
**  97 237
Second Accuracy:  0.2904191616766467
Accuracy:  0.8203184230477635
