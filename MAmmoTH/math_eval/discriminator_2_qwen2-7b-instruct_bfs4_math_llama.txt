INFO 09-18 13:32:53 llm_engine.py:174] Initializing an LLM engine (v0.5.4) with config: model='/cpfs/29f69eb5e2e60f26/user/sft_intern/slz/Qwen2-7B-Instruct', speculative_config=None, tokenizer='/cpfs/29f69eb5e2e60f26/user/sft_intern/slz/Qwen2-7B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None), seed=0, served_model_name=/cpfs/29f69eb5e2e60f26/user/sft_intern/slz/Qwen2-7B-Instruct, use_v2_block_manager=False, enable_prefix_caching=False)
INFO 09-18 13:32:53 model_runner.py:720] Starting to load model /cpfs/29f69eb5e2e60f26/user/sft_intern/slz/Qwen2-7B-Instruct...
INFO 09-18 13:33:09 model_runner.py:732] Loading model weights took 14.2487 GB
INFO 09-18 13:33:10 gpu_executor.py:102] # GPU blocks: 61183, # CPU blocks: 4681
INFO 09-18 13:33:12 model_runner.py:1024] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 09-18 13:33:12 model_runner.py:1028] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 09-18 13:33:23 model_runner.py:1225] Graph capturing finished in 11 secs.
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1151
1152
1153
1154
1155
1156
1157
1158
1159
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
1185
1186
1187
1188
1189
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
1204
1205
1206
1207
1208
1209
1210
1211
1212
1213
1214
1215
1216
1217
1218
1219
1220
1221
1222
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1237
1238
1239
1240
1241
1242
1243
1244
1245
1246
1247
1248
1249
1250
1251
1252
1253
1254
1255
1256
1257
1258
1259
1260
1261
1262
1263
1264
1265
1266
1267
1268
1269
1270
1271
1272
1273
1274
1275
1276
1277
1278
1279
1280
1281
1282
1283
1284
1285
1286
1287
1288
1289
1290
1291
1292
1293
1294
1295
1296
1297
1298
1299
1300
1301
1302
1303
1304
1305
1306
1307
1308
1309
1310
1311
1312
1313
1314
1315
1316
1317
1318
1319
1320
1321
1322
1323
1324
1325
1326
1327
1328
1329
1330
1331
1332
1333
1334
1335
1336
1337
1338
1339
1340
1341
1342
1343
1344
1345
1346
1347
1348
1349
1350
1351
1352
1353
1354
1355
1356
1357
1358
1359
1360
1361
1362
1363
1364
1365
1366
1367
1368
1369
1370
1371
1372
1373
1374
1375
1376
1377
1378
1379
1380
1381
1382
1383
1384
1385
1386
1387
1388
1389
1390
1391
1392
1393
1394
1395
1396
1397
1398
1399
1400
1401
1402
1403
1404
1405
1406
1407
1408
1409
1410
1411
1412
1413
1414
1415
1416
1417
1418
1419
1420
1421
1422
1423
1424
1425
1426
1427
1428
1429
1430
1431
1432
1433
1434
1435
1436
1437
1438
1439
1440
1441
1442
1443
1444
1445
1446
1447
1448
1449
1450
1451
1452
1453
1454
1455
1456
1457
1458
1459
1460
1461
1462
1463
1464
1465
1466
1467
1468
1469
1470
1471
1472
1473
1474
1475
1476
1477
1478
1479
1480
1481
1482
1483
1484
1485
1486
1487
1488
1489
1490
1491
1492
1493
1494
1495
1496
1497
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1508
1509
1510
1511
1512
1513
1514
1515
1516
1517
1518
1519
1520
1521
1522
1523
1524
1525
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
1536
1537
1538
1539
1540
1541
1542
1543
1544
1545
1546
1547
1548
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1559
1560
1561
1562
1563
1564
1565
1566
1567
1568
1569
1570
1571
1572
1573
1574
1575
1576
1577
1578
1579
1580
1581
1582
1583
1584
1585
1586
1587
1588
1589
1590
1591
1592
1593
1594
1595
1596
1597
1598
1599
1600
1601
1602
1603
1604
1605
1606
1607
1608
1609
1610
1611
1612
1613
1614
1615
1616
1617
1618
1619
1620
1621
1622
1623
1624
1625
1626
1627
1628
1629
1630
1631
1632
1633
1634
1635
1636
1637
1638
1639
1640
1641
1642
1643
1644
1645
1646
1647
1648
1649
1650
1651
1652
1653
1654
1655
1656
1657
1658
1659
1660
1661
1662
1663
1664
1665
1666
1667
1668
1669
1670
1671
1672
1673
1674
1675
1676
1677
1678
1679
1680
1681
1682
1683
1684
1685
1686
1687
1688
1689
1690
1691
1692
1693
1694
1695
1696
1697
1698
1699
1700
1701
1702
1703
1704
1705
1706
1707
1708
1709
1710
1711
1712
1713
1714
1715
1716
1717
1718
1719
1720
1721
1722
1723
1724
1725
1726
1727
1728
1729
1730
1731
1732
1733
1734
1735
1736
1737
1738
1739
1740
1741
1742
1743
1744
1745
1746
1747
1748
1749
1750
1751
1752
1753
1754
1755
1756
1757
1758
1759
1760
1761
1762
1763
1764
1765
1766
1767
1768
1769
1770
1771
1772
1773
1774
1775
1776
1777
1778
1779
1780
1781
1782
1783
1784
1785
1786
1787
1788
1789
1790
1791
1792
1793
1794
1795
1796
1797
1798
1799
1800
1801
1802
1803
1804
1805
1806
1807
1808
1809
1810
1811
1812
1813
1814
1815
1816
1817
1818
1819
1820
1821
1822
1823
1824
1825
1826
1827
1828
1829
1830
1831
1832
1833
1834
1835
1836
1837
1838
1839
1840
1841
1842
1843
1844
1845
1846
1847
1848
1849
1850
1851
1852
1853
1854
1855
1856
1857
1858
1859
1860
1861
1862
1863
1864
1865
1866
1867
1868
1869
1870
1871
1872
1873
1874
1875
1876
1877
1878
1879
1880
1881
1882
1883
1884
1885
1886
1887
1888
1889
1890
1891
1892
1893
1894
1895
1896
1897
1898
1899
1900
1901
1902
1903
1904
1905
1906
1907
1908
1909
1910
1911
1912
1913
1914
1915
1916
1917
1918
1919
1920
1921
1922
1923
1924
1925
1926
1927
1928
1929
1930
1931
1932
1933
1934
1935
1936
1937
1938
1939
1940
1941
1942
1943
1944
1945
1946
1947
1948
1949
1950
1951
1952
1953
1954
1955
1956
1957
1958
1959
1960
1961
1962
1963
1964
1965
1966
1967
1968
1969
1970
1971
1972
1973
1974
1975
1976
1977
1978
1979
1980
1981
1982
1983
1984
1985
1986
1987
1988
1989
1990
1991
1992
1993
1994
1995
1996
1997
1998
1999
2000
2001
2002
2003
2004
2005
2006
2007
2008
2009
2010
2011
2012
2013
2014
2015
2016
2017
2018
2019
2020
2021
2022
2023
2024
2025
2026
2027
2028
2029
2030
2031
2032
2033
2034
2035
2036
2037
2038
2039
2040
2041
2042
2043
2044
2045
2046
2047
2048
2049
2050
2051
2052
2053
2054
2055
2056
2057
2058
2059
2060
2061
2062
2063
2064
2065
2066
2067
2068
2069
2070
2071
2072
2073
2074
2075
2076
2077
2078
2079
2080
2081
2082
2083
2084
2085
2086
2087
2088
2089
2090
2091
2092
2093
2094
2095
2096
2097
2098
2099
2100
2101
2102
2103
2104
2105
2106
2107
2108
2109
2110
2111
2112
2113
2114
2115
2116
2117
2118
2119
2120
2121
2122
2123
2124
2125
2126
2127
2128
2129
2130
2131
2132
2133
2134
2135
2136
2137
2138
2139
2140
2141
2142
2143
2144
2145
2146
2147
2148
2149
2150
2151
2152
2153
2154
2155
2156
2157
2158
2159
2160
2161
2162
2163
2164
2165
2166
2167
2168
2169
2170
2171
2172
2173
2174
2175
2176
2177
2178
2179
2180
2181
2182
2183
2184
2185
2186
2187
2188
2189
2190
2191
2192
2193
2194
2195
2196
2197
2198
2199
2200
2201
2202
2203
2204
2205
2206
2207
2208
2209
2210
2211
2212
2213
2214
2215
2216
2217
2218
2219
2220
2221
2222
2223
2224
2225
2226
2227
2228
2229
2230
2231
2232
2233
2234
2235
2236
2237
2238
2239
2240
2241
2242
2243
2244
2245
2246
2247
2248
2249
2250
2251
2252
2253
2254
2255
2256
2257
2258
2259
2260
2261
2262
2263
2264
2265
2266
2267
2268
2269
2270
2271
2272
2273
2274
2275
2276
2277
2278
2279
2280
2281
2282
2283
2284
2285
2286
2287
2288
2289
2290
2291
2292
2293
2294
2295
2296
2297
2298
2299
2300
2301
2302
2303
2304
2305
2306
2307
2308
2309
2310
2311
2312
2313
2314
2315
2316
2317
2318
2319
2320
2321
2322
2323
2324
2325
2326
2327
2328
2329
2330
2331
2332
2333
2334
2335
2336
2337
2338
2339
2340
2341
2342
2343
2344
2345
2346
2347
2348
2349
2350
2351
2352
2353
2354
2355
2356
2357
2358
2359
2360
2361
2362
2363
2364
2365
2366
2367
2368
2369
2370
2371
2372
2373
2374
2375
2376
2377
2378
2379
2380
2381
2382
2383
2384
2385
2386
2387
2388
2389
2390
2391
2392
2393
2394
2395
2396
2397
2398
2399
2400
2401
2402
2403
2404
2405
2406
2407
2408
2409
2410
2411
2412
2413
2414
2415
2416
2417
2418
2419
2420
2421
2422
2423
2424
2425
2426
2427
2428
2429
2430
2431
2432
2433
2434
2435
2436
2437
2438
2439
2440
2441
2442
2443
2444
2445
2446
2447
2448
2449
2450
2451
2452
2453
2454
2455
2456
2457
2458
2459
2460
2461
2462
2463
2464
2465
2466
2467
2468
2469
2470
2471
2472
2473
2474
2475
2476
2477
2478
2479
2480
2481
2482
2483
2484
2485
2486
2487
2488
2489
2490
2491
2492
2493
2494
2495
2496
2497
2498
2499
2500
2501
2502
2503
2504
2505
2506
2507
2508
2509
2510
2511
2512
2513
2514
2515
2516
2517
2518
2519
2520
2521
2522
2523
2524
2525
2526
2527
2528
2529
2530
2531
2532
2533
2534
2535
2536
2537
2538
2539
2540
2541
2542
2543
2544
2545
2546
2547
2548
2549
2550
2551
2552
2553
2554
2555
2556
2557
2558
2559
2560
2561
2562
2563
2564
2565
2566
2567
2568
2569
2570
2571
2572
2573
2574
2575
2576
2577
2578
2579
2580
2581
2582
2583
2584
2585
2586
2587
2588
2589
2590
2591
2592
2593
2594
2595
2596
2597
2598
2599
2600
2601
2602
2603
2604
2605
2606
2607
2608
2609
2610
2611
2612
2613
2614
2615
2616
2617
2618
2619
2620
2621
2622
2623
2624
2625
2626
2627
2628
2629
2630
2631
2632
2633
2634
2635
2636
2637
2638
2639
2640
2641
2642
2643
2644
2645
2646
2647
2648
2649
2650
2651
2652
2653
2654
2655
2656
2657
2658
2659
2660
2661
2662
2663
2664
2665
2666
2667
2668
2669
2670
2671
2672
2673
2674
2675
2676
2677
2678
2679
2680
2681
2682
2683
2684
2685
2686
2687
2688
2689
2690
2691
2692
2693
2694
2695
2696
2697
2698
2699
2700
2701
2702
2703
2704
2705
2706
2707
2708
2709
2710
2711
2712
2713
2714
2715
2716
2717
2718
2719
2720
2721
2722
2723
2724
2725
2726
2727
2728
2729
2730
2731
2732
2733
2734
2735
2736
2737
2738
2739
2740
2741
2742
2743
2744
2745
2746
2747
2748
2749
2750
2751
2752
2753
2754
2755
2756
2757
2758
2759
2760
2761
2762
2763
2764
2765
2766
2767
2768
2769
2770
2771
2772
2773
2774
2775
2776
2777
2778
2779
2780
2781
2782
2783
2784
2785
2786
2787
2788
2789
2790
2791
2792
2793
2794
2795
2796
2797
2798
2799
2800
2801
2802
2803
2804
2805
2806
2807
2808
2809
2810
2811
2812
2813
2814
2815
2816
2817
2818
2819
2820
2821
2822
2823
2824
2825
2826
2827
2828
2829
2830
2831
2832
2833
2834
2835
2836
2837
2838
2839
2840
2841
2842
2843
2844
2845
2846
2847
2848
2849
2850
2851
2852
2853
2854
2855
2856
2857
2858
2859
2860
2861
2862
2863
2864
2865
2866
2867
2868
2869
2870
2871
2872
2873
2874
2875
2876
2877
2878
2879
2880
2881
2882
2883
2884
2885
2886
2887
2888
2889
2890
2891
2892
2893
2894
2895
2896
2897
2898
2899
2900
2901
2902
2903
2904
2905
2906
2907
2908
2909
2910
2911
2912
2913
2914
2915
2916
2917
2918
2919
2920
2921
2922
2923
2924
2925
2926
2927
2928
2929
2930
2931
2932
2933
2934
2935
2936
2937
2938
2939
2940
2941
2942
2943
2944
2945
2946
2947
2948
2949
2950
2951
2952
2953
2954
2955
2956
2957
2958
2959
2960
2961
2962
2963
2964
2965
2966
2967
2968
2969
2970
2971
2972
2973
2974
2975
2976
2977
2978
2979
2980
2981
2982
2983
2984
2985
2986
2987
2988
2989
2990
2991
2992
2993
2994
2995
2996
2997
2998
2999
3000
3001
3002
3003
3004
3005
3006
3007
3008
3009
3010
3011
3012
3013
3014
3015
3016
3017
3018
3019
3020
3021
3022
3023
3024
3025
3026
3027
3028
3029
3030
3031
3032
3033
3034
3035
3036
3037
3038
3039
3040
3041
3042
3043
3044
3045
3046
3047
3048
3049
3050
3051
3052
3053
3054
3055
3056
3057
3058
3059
3060
3061
3062
3063
3064
3065
3066
3067
3068
3069
3070
3071
3072
3073
3074
3075
3076
3077
3078
3079
3080
3081
3082
3083
3084
3085
3086
3087
3088
3089
3090
3091
3092
3093
3094
3095
3096
3097
3098
3099
3100
3101
3102
3103
3104
3105
3106
3107
3108
3109
3110
3111
3112
3113
3114
3115
3116
3117
3118
3119
3120
3121
3122
3123
3124
3125
3126
3127
3128
3129
3130
3131
3132
3133
3134
3135
3136
3137
3138
3139
3140
3141
3142
3143
3144
3145
3146
3147
3148
3149
3150
3151
3152
3153
3154
3155
3156
3157
3158
3159
3160
3161
3162
3163
3164
3165
3166
3167
3168
3169
3170
3171
3172
3173
3174
3175
3176
3177
3178
3179
3180
3181
3182
3183
3184
3185
3186
3187
3188
3189
3190
3191
3192
3193
3194
3195
3196
3197
3198
3199
3200
3201
3202
3203
3204
3205
3206
3207
3208
3209
3210
3211
3212
3213
3214
3215
3216
3217
3218
3219
3220
3221
3222
3223
3224
3225
3226
3227
3228
3229
3230
3231
3232
3233
3234
3235
3236
3237
3238
3239
3240
3241
3242
3243
3244
3245
3246
3247
3248
3249
3250
3251
3252
3253
3254
3255
3256
3257
3258
3259
3260
3261
3262
3263
3264
3265
3266
3267
3268
3269
3270
3271
3272
3273
3274
3275
3276
3277
3278
3279
3280
3281
3282
3283
3284
3285
3286
3287
3288
3289
3290
3291
3292
3293
3294
3295
3296
3297
3298
3299
3300
3301
3302
3303
3304
3305
3306
3307
3308
3309
3310
3311
3312
3313
3314
3315
3316
3317
3318
3319
3320
3321
3322
3323
3324
3325
3326
3327
3328
3329
3330
3331
3332
3333
3334
3335
3336
3337
3338
3339
3340
3341
3342
3343
3344
3345
3346
3347
3348
3349
3350
3351
3352
3353
3354
3355
3356
3357
3358
3359
3360
3361
3362
3363
3364
3365
3366
3367
3368
3369
3370
3371
3372
3373
3374
3375
3376
3377
3378
3379
3380
3381
3382
3383
3384
3385
3386
3387
3388
3389
3390
3391
3392
3393
3394
3395
3396
3397
3398
3399
3400
3401
3402
3403
3404
3405
3406
3407
3408
3409
3410
3411
3412
3413
3414
3415
3416
3417
3418
3419
3420
3421
3422
3423
3424
3425
3426
3427
3428
3429
3430
3431
3432
3433
3434
3435
3436
3437
3438
3439
3440
3441
3442
3443
3444
3445
3446
3447
3448
3449
3450
3451
3452
3453
3454
3455
3456
3457
3458
3459
3460
3461
3462
3463
3464
3465
3466
3467
3468
3469
3470
3471
3472
3473
3474
3475
3476
3477
3478
3479
3480
3481
3482
3483
3484
3485
3486
3487
3488
3489
3490
3491
3492
3493
3494
3495
3496
3497
3498
3499
3500
3501
3502
3503
3504
3505
3506
3507
3508
3509
3510
3511
3512
3513
3514
3515
3516
3517
3518
3519
3520
3521
3522
3523
3524
3525
3526
3527
3528
3529
3530
3531
3532
3533
3534
3535
3536
3537
3538
3539
3540
3541
3542
3543
3544
3545
3546
3547
3548
3549
3550
3551
3552
3553
3554
3555
3556
3557
3558
3559
3560
3561
3562
3563
3564
3565
3566
3567
3568
3569
3570
3571
3572
3573
3574
3575
3576
3577
3578
3579
3580
3581
3582
3583
3584
3585
3586
3587
3588
3589
3590
3591
3592
3593
3594
3595
3596
3597
3598
3599
3600
3601
3602
3603
3604
3605
3606
3607
3608
3609
3610
3611
3612
3613
3614
3615
3616
3617
3618
3619
3620
3621
3622
3623
3624
3625
3626
3627
3628
3629
3630
3631
3632
3633
3634
3635
3636
3637
3638
3639
3640
3641
3642
3643
3644
3645
3646
3647
3648
3649
3650
3651
3652
3653
3654
3655
3656
3657
3658
3659
3660
3661
3662
3663
3664
3665
3666
3667
3668
3669
3670
3671
3672
3673
3674
3675
3676
3677
3678
3679
3680
3681
3682
3683
3684
3685
3686
3687
3688
3689
3690
3691
3692
3693
3694
3695
3696
3697
3698
3699
3700
3701
3702
3703
3704
3705
3706
3707
3708
3709
3710
3711
3712
3713
3714
3715
3716
3717
3718
3719
3720
3721
3722
3723
3724
3725
3726
3727
3728
3729
3730
3731
3732
3733
3734
3735
3736
3737
3738
3739
3740
3741
3742
3743
3744
3745
3746
3747
3748
3749
3750
3751
3752
3753
3754
3755
3756
3757
3758
3759
3760
3761
3762
3763
3764
3765
3766
3767
3768
3769
3770
3771
3772
3773
3774
3775
3776
3777
3778
3779
3780
3781
3782
3783
3784
3785
3786
3787
3788
3789
3790
3791
3792
3793
3794
3795
3796
3797
3798
3799
3800
3801
3802
3803
3804
3805
3806
3807
3808
3809
3810
3811
3812
3813
3814
3815
3816
3817
3818
3819
3820
3821
3822
3823
3824
3825
3826
3827
3828
3829
3830
3831
3832
3833
3834
3835
3836
3837
3838
3839
3840
3841
3842
3843
3844
3845
3846
3847
3848
3849
3850
3851
3852
3853
3854
3855
3856
3857
3858
3859
3860
3861
3862
3863
3864
3865
3866
3867
3868
3869
3870
3871
3872
3873
3874
3875
3876
3877
3878
3879
3880
3881
3882
3883
3884
3885
3886
3887
3888
3889
3890
3891
3892
3893
3894
3895
3896
3897
3898
3899
3900
3901
3902
3903
3904
3905
3906
3907
3908
3909
3910
3911
3912
3913
3914
3915
3916
3917
3918
3919
3920
3921
3922
3923
3924
3925
3926
3927
3928
3929
3930
3931
3932
3933
3934
3935
3936
3937
3938
3939
3940
3941
3942
3943
3944
3945
3946
3947
3948
3949
3950
3951
3952
3953
3954
3955
3956
3957
3958
3959
3960
3961
3962
3963
3964
3965
3966
3967
3968
3969
3970
3971
3972
3973
3974
3975
3976
3977
3978
3979
3980
3981
3982
3983
3984
3985
3986
3987
3988
3989
3990
3991
3992
3993
3994
3995
3996
3997
3998
3999
4000
4001
4002
4003
4004
4005
4006
4007
4008
4009
4010
4011
4012
4013
4014
4015
4016
4017
4018
4019
4020
4021
4022
4023
4024
4025
4026
4027
4028
4029
4030
4031
4032
4033
4034
4035
4036
4037
4038
4039
4040
4041
4042
4043
4044
4045
4046
4047
4048
4049
4050
4051
4052
4053
4054
4055
4056
4057
4058
4059
4060
4061
4062
4063
4064
4065
4066
4067
4068
4069
4070
4071
4072
4073
4074
4075
4076
4077
4078
4079
4080
4081
4082
4083
4084
4085
4086
4087
4088
4089
4090
4091
4092
4093
4094
4095
4096
4097
4098
4099
4100
4101
4102
4103
4104
4105
4106
4107
4108
4109
4110
4111
4112
4113
4114
4115
4116
4117
4118
4119
4120
4121
4122
4123
4124
4125
4126
4127
4128
4129
4130
4131
4132
4133
4134
4135
4136
4137
4138
4139
4140
4141
4142
4143
4144
4145
4146
4147
4148
4149
4150
4151
4152
4153
4154
4155
4156
4157
4158
4159
4160
4161
4162
4163
4164
4165
4166
4167
4168
4169
4170
4171
4172
4173
4174
4175
4176
4177
4178
4179
4180
4181
4182
4183
4184
4185
4186
4187
4188
4189
4190
4191
4192
4193
4194
4195
4196
4197
4198
4199
4200
4201
4202
4203
4204
4205
4206
4207
4208
4209
4210
4211
4212
4213
4214
4215
4216
4217
4218
4219
4220
4221
4222
4223
4224
4225
4226
4227
4228
4229
4230
4231
4232
4233
4234
4235
4236
4237
4238
4239
4240
4241
4242
4243
4244
4245
4246
4247
4248
4249
4250
4251
4252
4253
4254
4255
4256
4257
4258
4259
4260
4261
4262
4263
4264
4265
4266
4267
4268
4269
4270
4271
4272
4273
4274
4275
4276
4277
4278
4279
4280
4281
4282
4283
4284
4285
4286
4287
4288
4289
4290
4291
4292
4293
4294
4295
4296
4297
4298
4299
4300
4301
4302
4303
4304
4305
4306
4307
4308
4309
4310
4311
4312
4313
4314
4315
4316
4317
4318
4319
4320
4321
4322
4323
4324
4325
4326
4327
4328
4329
4330
4331
4332
4333
4334
4335
4336
4337
4338
4339
4340
4341
4342
4343
4344
4345
4346
4347
4348
4349
4350
4351
4352
4353
4354
4355
4356
4357
4358
4359
4360
4361
4362
4363
4364
4365
4366
4367
4368
4369
4370
4371
4372
4373
4374
4375
4376
4377
4378
4379
4380
4381
4382
4383
4384
4385
4386
4387
4388
4389
4390
4391
4392
4393
4394
4395
4396
4397
4398
4399
4400
4401
4402
4403
4404
4405
4406
4407
4408
4409
4410
4411
4412
4413
4414
4415
4416
4417
4418
4419
4420
4421
4422
4423
4424
4425
4426
4427
4428
4429
4430
4431
4432
4433
4434
4435
4436
4437
4438
4439
4440
4441
4442
4443
4444
4445
4446
4447
4448
4449
4450
4451
4452
4453
4454
4455
4456
4457
4458
4459
4460
4461
4462
4463
4464
4465
4466
4467
4468
4469
4470
4471
4472
4473
4474
4475
4476
4477
4478
4479
4480
4481
4482
4483
4484
4485
4486
4487
4488
4489
4490
4491
4492
4493
4494
4495
4496
4497
4498
4499
4500
4501
4502
4503
4504
4505
4506
4507
4508
4509
4510
4511
4512
4513
4514
4515
4516
4517
4518
4519
4520
4521
4522
4523
4524
4525
4526
4527
4528
4529
4530
4531
4532
4533
4534
4535
4536
4537
4538
4539
4540
4541
4542
4543
4544
4545
4546
4547
4548
4549
4550
4551
4552
4553
4554
4555
4556
4557
4558
4559
4560
4561
4562
4563
4564
4565
4566
4567
4568
4569
4570
4571
4572
4573
4574
4575
4576
4577
4578
4579
4580
4581
4582
4583
4584
4585
4586
4587
4588
4589
4590
4591
4592
4593
4594
4595
4596
4597
4598
4599
4600
4601
4602
4603
4604
4605
4606
4607
4608
4609
4610
4611
4612
4613
4614
4615
4616
4617
4618
4619
4620
4621
4622
4623
4624
4625
4626
4627
4628
4629
4630
4631
4632
4633
4634
4635
4636
4637
4638
4639
4640
4641
4642
4643
4644
4645
4646
4647
4648
4649
4650
4651
4652
4653
4654
4655
4656
4657
4658
4659
4660
4661
4662
4663
4664
4665
4666
4667
4668
4669
4670
4671
4672
4673
4674
4675
4676
4677
4678
4679
4680
4681
4682
4683
4684
4685
4686
4687
4688
4689
4690
4691
4692
4693
4694
4695
4696
4697
4698
4699
4700
4701
4702
4703
4704
4705
4706
4707
4708
4709
4710
4711
4712
4713
4714
4715
4716
4717
4718
4719
4720
4721
4722
4723
4724
4725
4726
4727
4728
4729
4730
4731
4732
4733
4734
4735
4736
4737
4738
4739
4740
4741
4742
4743
4744
4745
4746
4747
4748
4749
4750
4751
4752
4753
4754
4755
4756
4757
4758
4759
4760
4761
4762
4763
4764
4765
4766
4767
4768
4769
4770
4771
4772
4773
4774
4775
4776
4777
4778
4779
4780
4781
4782
4783
4784
4785
4786
4787
4788
4789
4790
4791
4792
4793
4794
4795
4796
4797
4798
4799
4800
4801
4802
4803
4804
4805
4806
4807
4808
4809
4810
4811
4812
4813
4814
4815
4816
4817
4818
4819
4820
4821
4822
4823
4824
4825
4826
4827
4828
4829
4830
4831
4832
4833
4834
4835
4836
4837
4838
4839
4840
4841
4842
4843
4844
4845
4846
4847
4848
4849
4850
4851
4852
4853
4854
4855
4856
4857
4858
4859
4860
4861
4862
4863
4864
4865
4866
4867
4868
4869
4870
4871
4872
4873
4874
4875
4876
4877
4878
4879
4880
4881
4882
4883
4884
4885
4886
4887
4888
4889
4890
4891
4892
4893
4894
4895
4896
4897
4898
4899
4900
4901
4902
4903
4904
4905
4906
4907
4908
4909
4910
4911
4912
4913
4914
4915
4916
4917
4918
4919
4920
4921
4922
4923
4924
4925
4926
4927
4928
4929
4930
4931
4932
4933
4934
4935
4936
4937
4938
4939
4940
4941
4942
4943
4944
4945
4946
4947
4948
4949
4950
4951
4952
4953
4954
4955
4956
4957
4958
4959
4960
4961
4962
4963
4964
4965
4966
4967
4968
4969
4970
4971
4972
4973
4974
4975
4976
4977
4978
4979
4980
4981
4982
4983
4984
4985
4986
4987
4988
4989
4990
4991
4992
4993
4994
4995
4996
4997
4998
4999
{'question': 'Multiply $\\frac{2}{3}$ by $\\frac{4}{7}$.', 'solution': 'Recall that if $b$ and $d$ are nonzero, then  \\[\n\\frac{a}{b}\\cdot \\frac{c}{d} = \\frac{ac}{bd}.\n\\]In other words, to multiply fractions we just multiply numerators and multiply denominators. The product of the given numerators is $2\\cdot 4=8,$ and the product of the given denominators is $3\\cdot 7=21$. So the product of $\\frac{2}{3}$ and $\\frac{4}{7}$ is $\\boxed{\\frac{8}{21}}$.', 'tree_solution': [['Multiply $\\frac{2}{3}$ by $\\frac{4}{7}$.', 'STEP: Multiply the numerators (2 and 4) to get 8 and multiply the denominators (3 and 7) to get 21.', 'STEP: Multiply the numerators (2 and 4) to get 8 and multiply the denominators (3 and 7) to get 21.', 'STEP: Multiply the numerators (2 and 4) to get 8 and multiply the denominators (3 and 7) to get 21.', 'STEP: Multiply the numerators (2 and 4) to get 8.', 'STEP: Multiply the denominators (3 and 7) to get 21.', 'SOLUTION:\n\nTo multiply the fractions $\\frac{2}{3}$ and $\\frac{4}{7}$, we need to multiply the numerators and denominators separately.\n\nFirst, multiply the numerators (the numbers on top): 2 × 4 = 8\n\nNext, multiply the denominators (the numbers on the bottom): 3 × 7 = 21\n\nNow, write the product of the numerators over the product of the denominators: $\\frac{8}{21}$\n\nFINAL ANSWER: The answer is 0.3810'], ['Multiply $\\frac{2}{3}$ by $\\frac{4}{7}$.', 'STEP: Multiply the numerators (2 and 4) to get 8 and multiply the denominators (3 and 7) to get 21.', 'STEP: Multiply the numerators (2 and 4) to get 8 and multiply the denominators (3 and 7) to get 21.', 'STEP: Multiply the numerators (2 and 4) to get 8 and multiply the denominators (3 and 7) to get 21.', 'STEP: Multiply the numerators (2 and 4) to get 8.', 'SOLUTION:\n\nTo multiply the fractions $\\frac{2}{3}$ and $\\frac{4}{7}$, we follow the standard procedure:\n\n1. Multiply the numerators (the numbers on top) of the two fractions: 2 × 4 = 8\n2. Multiply the denominators (the numbers on the bottom) of the two fractions: 3 × 7 = 21\n3. Write the result as a fraction: $\\frac{8}{21}$\n\nFINAL ANSWER: The answer is 0.381'], ['Multiply $\\frac{2}{3}$ by $\\frac{4}{7}$.', 'STEP: Multiply the numerators (2 and 4) to get 8 and multiply the denominators (3 and 7) to get 21.', 'STEP: Multiply the numerators (2 and 4) to get 8 and multiply the denominators (3 and 7) to get 21.', 'STEP: Multiply the numerators (2 and 4) to get 8 and multiply the denominators (3 and 7) to get 21.', 'SOLUTION:\n\nTo multiply two fractions, we need to multiply the numerators (the numbers on top) and multiply the denominators (the numbers on the bottom). The resulting fraction will have the product of the numerators as the new numerator and the product of the denominators as the new denominator.\n\nThe two fractions are: $\\frac{2}{3}$ and $\\frac{4}{7}$\n\nWe multiply the numerators: 2 × 4 = 8\n\nWe multiply the denominators: 3 × 7 = 21\n\nSo, the result of multiplying the two fractions is: $\\frac{8}{21}$\n\nFINAL ANSWER: The answer is 0.381'], ['Multiply $\\frac{2}{3}$ by $\\frac{4}{7}$.', 'STEP: Multiply the numerators (2 and 4) to get 8 and multiply the denominators (3 and 7) to get 21.', 'STEP: Multiply the numerators (2 and 4) to get 8 and multiply the denominators (3 and 7) to get 21.', 'SOLUTION:\n\nTo multiply two fractions, we multiply the numerators and multiply the denominators. In this case, we have:\n\n$\\frac{2}{3} \\times \\frac{4}{7}$\n\nSTEP 1: Multiply the numerators (2 and 4) to get 8.\n\nNumerators: 2 × 4 = 8\n\nSTEP 2: Multiply the denominators (3 and 7) to get 21.\n\nDenominators: 3 × 7 = 21\n\nSTEP 3: Write the result as a fraction with the new numerator and denominator.\n\n$\\frac{8}{21}$\n\nFINAL ANSWER: The answer is 0.381 (or 8/21)'], ['Multiply $\\frac{2}{3}$ by $\\frac{4}{7}$.', 'STEP: Multiply the numerators (2 and 4) to get 8 and multiply the denominators (3 and 7) to get 21.', 'SOLUTION:\n\nTo multiply the two fractions, we multiply the numerators and multiply the denominators.\n\nFirst, we multiply the numerators: 2 and 4 give us 8.\n\nNext, we multiply the denominators: 3 and 7 give us 21.\n\nSo, the product of the two fractions is:\n\n$\\frac{2}{3} \\times \\frac{4}{7} = \\frac{8}{21}$\n\nFINAL ANSWER: The answer is 0.381.'], ['Multiply $\\frac{2}{3}$ by $\\frac{4}{7}$.', 'Here is the solution:\n\nSOLUTION:\nTo multiply two fractions, we multiply the numerators (the numbers on top) and multiply the denominators (the numbers on the bottom), like this:\n\n$\\frac{2}{3} \\times \\frac{4}{7} = \\frac{(2 \\times 4)}{(3 \\times 7)}$\n\n$= \\frac{8}{21}$\n\nFINAL ANSWER: The answer is 0.381'], ['Multiply $\\frac{2}{3}$ by $\\frac{4}{7}$.', 'CLARIFIED QUESTION: What is the result of multiplying the fraction 2/3 by the fraction 4/7?', 'STEP: Multiply the numerators (the numbers on top) of the two fractions, 2 and 4, to get 8.', 'STEP: Multiply the numerators (the numbers on top) of the two fractions, 2 and 4, to get 8.', 'STEP: Multiply the denominators (the numbers on the bottom) of the two fractions, 3 and 7, to get 21.', 'STEP: Multiply the numerators (the numbers on top) of the two fractions, 2 and 4, to get 8.', 'STEP: Multiply the numerators (the numbers on top) of the two fractions, 2 and 4, to get 8.', 'SOLUTION:\n\nTo multiply the fractions $\\frac{2}{3}$ by $\\frac{4}{7}$, we follow the standard procedure:\n\n1. Multiply the numerators (the numbers on top) of the two fractions, 2 and 4, to get the new numerator: 2 × 4 = 8.\n2. Multiply the denominators (the numbers on the bottom) of the two fractions, 3 and 7, to get the new denominator: 3 × 7 = 21.\n3. Write the result as a fraction with the new numerator and denominator: $\\frac{8}{21}$.\n\nFINAL ANSWER: The answer is 0.381.'], ['Multiply $\\frac{2}{3}$ by $\\frac{4}{7}$.', 'CLARIFIED QUESTION: What is the result of multiplying the fraction 2/3 by the fraction 4/7?', 'STEP: Multiply the numerators (the numbers on top) of the two fractions, 2 and 4, to get 8.', 'STEP: Multiply the numerators (the numbers on top) of the two fractions, 2 and 4, to get 8.', 'STEP: Multiply the denominators (the numbers on the bottom) of the two fractions, 3 and 7, to get 21.', 'STEP: Multiply the numerators (the numbers on top) of the two fractions, 2 and 4, to get 8.', 'SOLUTION:\nTo multiply two fractions, we need to multiply the numerators (the numbers on top) and multiply the denominators (the numbers on the bottom), and then simplify the resulting fraction.\n\nStep 1: Multiply the numerators (the numbers on top) of the two fractions, 2 and 4, to get 8.\n\nStep 2: Multiply the denominators (the numbers on the bottom) of the two fractions, 3 and 7, to get 21.\n\nStep 3: Write the result as a fraction:\n\n8/21\n\nFINAL ANSWER: The answer is 0.381'], ['Multiply $\\frac{2}{3}$ by $\\frac{4}{7}$.', 'CLARIFIED QUESTION: What is the result of multiplying the fraction 2/3 by the fraction 4/7?', 'STEP: Multiply the numerators (the numbers on top) of the two fractions, 2 and 4, to get 8.', 'STEP: Multiply the numerators (the numbers on top) of the two fractions, 2 and 4, to get 8.', 'STEP: Multiply the denominators (the numbers on the bottom) of the two fractions, 3 and 7, to get 21.', 'SOLUTION:\n\nTo multiply two fractions, we multiply the numerators (the numbers on top) and the denominators (the numbers on the bottom) separately.\n\nFirst, we multiply the numerators: 2 (from 2/3) × 4 (from 4/7) = 8\n\nNext, we multiply the denominators: 3 (from 2/3) × 7 (from 4/7) = 21\n\nNow, we write the product of the numerators over the product of the denominators: 8/21\n\nFINAL ANSWER: The answer is 0.381.'], ['Multiply $\\frac{2}{3}$ by $\\frac{4}{7}$.', 'CLARIFIED QUESTION: What is the result of multiplying the fraction 2/3 by the fraction 4/7?', 'STEP: Multiply the numerators (the numbers on top) of the two fractions, 2 and 4, to get 8.', 'STEP: Multiply the numerators (the numbers on top) of the two fractions, 2 and 4, to get 8.', 'SOLUTION: \n\nTo multiply the fractions $\\frac{2}{3}$ and $\\frac{4}{7}$, we need to multiply the numerators (the numbers on top) and the denominators (the numbers on the bottom) separately.\n\nStep 1: Multiply the numerators\nThe numerators of the two fractions are 2 and 4. Multiply them to get:\n2 × 4 = 8\n\nStep 2: Multiply the denominators\nThe denominators of the two fractions are 3 and 7. Multiply them to get:\n3 × 7 = 21\n\nStep 3: Write the result as a fraction\nNow, write the result of multiplying the numerators and denominators as a fraction:\n$\\frac{8}{21}$\n\nFINAL ANSWER: The answer is 0.381.'], ['Multiply $\\frac{2}{3}$ by $\\frac{4}{7}$.', 'CLARIFIED QUESTION: What is the result of multiplying the fraction 2/3 by the fraction 4/7?', 'STEP: Multiply the numerators (the numbers on top) of the two fractions, 2 and 4, to get 8.', 'SOLUTION:\nTo multiply the fractions, we need to multiply the numerators (the numbers on top) and the denominators (the numbers on the bottom) separately.\n\n1. Multiply the numerators: Multiply 2 and 4 to get 8.\n2. Multiply the denominators: Multiply 3 and 7 to get 21.\n3. Write the result as a fraction: 8/21\n\nFINAL ANSWER: The answer is 0.381'], ['Multiply $\\frac{2}{3}$ by $\\frac{4}{7}$.', 'CLARIFIED QUESTION: What is the result of multiplying the fraction 2/3 by the fraction 4/7?', "Here's the solution:\n\nSOLUTION:\n\nTo multiply two fractions, we multiply the numerators (the numbers on top) and multiply the denominators (the numbers on the bottom), and then simplify the result.\n\nIn this case, we are multiplying $\\frac{2}{3}$ by $\\frac{4}{7}$. So, we multiply the numerators:\n\n2 × 4 = 8\n\nAnd we multiply the denominators:\n\n3 × 7 = 21\n\nSo, the result of multiplying the two fractions is:\n\n$\\frac{8}{21}$\n\nFINAL ANSWER: The answer is 0.380952."]], 'type': 'Level 1', 'answer': ['\\frac{8}{21}', 0.38095238095238093]}
dict_keys(['question', 'solution', 'tree_solution', 'type', 'answer'])
BackVerify: 0
** most_common: ('0.381', 9), gold_ans: ['\\frac{8}{21}', 0.38095238095238093]
** most_common: ('1', 5), gold_ans: ['\\frac{99}{100}', 0.99]
** most_common: ('2', 3), gold_ans: ['\\sqrt{10}', 3.1622776601683795]
** most_common: ('3', 12), gold_ans: ['3', 3]
** most_common: ('23', 3), gold_ans: ['23', 23]
** most_common: ('11', 2), gold_ans: ['4', 4]
** most_common: ('4', 3), gold_ans: ['3', 3]
** most_common: ('0', 3), gold_ans: ['\\frac{2a+b}{2}', None]
** most_common: ('4', 9), gold_ans: ['4', 4]
** most_common: ('60', 4), gold_ans: ['120', 120]
** most_common: ('0.5', 4), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('1', 7), gold_ans: ['\\frac{1}{\\sqrt{3}}', 0.5773502691896257]
** most_common: ('0', 9), gold_ans: ['0', 0]
** most_common: ('-4', 6), gold_ans: ['-\\frac{3}{4}', -0.75]
** most_common: ('0', 2), gold_ans: ['-\\frac{119}{144}', -0.8263888888888888]
** most_common: ('-$\\frac{2}{3}+8i', 1), gold_ans: ['-15+8i', None]
** most_common: ('81', 6), gold_ans: ['81', 81]
** most_common: ('1', 4), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('3', 2), gold_ans: ['7', 7]
** most_common: ('4', 2), gold_ans: ['10', 10]
** most_common: ('(-∞,1)∪(3,∞)', 3), gold_ans: ['(-\\infty,-2)\\cup(0,1)\\cup(2,4)', None]
** most_common: ('4', 3), gold_ans: ['8', 8]
** most_common: ('3', 2), gold_ans: ['-3', -3]
** most_common: ('8', 3), gold_ans: ['8', 8]
** most_common: ('5√2', 1), gold_ans: ['40', 40]
** most_common: ('3', 3), gold_ans: ['4', 4]
** most_common: ('5', 6), gold_ans: ['2', 2]
** most_common: ('7.42', 1), gold_ans: ['159', 159]
** most_common: ('16', 8), gold_ans: ['\\frac{1024}{27}', 37.925925925925924]
** most_common: ('651', 10), gold_ans: ['3255', 3255]
** most_common: ('4', 4), gold_ans: ['24', 24]
** most_common: ('7x^5+12x^2+3x+9', 4), gold_ans: ['7x^5+12x^2+3x+9', None]
** most_common: ('165', 11), gold_ans: ['165', 165]
** most_common: ('68', 12), gold_ans: ['68', 68]
** most_common: ('41.25', 4), gold_ans: ['30', 30]
** most_common: ('510', 4), gold_ans: ['1020', 1020]
** most_common: ('-2tan(x)', 2), gold_ans: ['2\\tanx', None]
** most_common: ('35.2', 2), gold_ans: ['80', 80]
** most_common: ('(-∞,0)∪(0,∞)', 5), gold_ans: ['(-\\infty,0)\\cup(0,\\infty)', None]
** most_common: ('980121', 3), gold_ans: ['978121', 978121]
** most_common: ('(-5,73)', 2), gold_ans: ['\\begin{pmatrix}3/5\\57/5\\end{pmatrix}', None]
** most_common: ('2', 3), gold_ans: ['0', 0]
** most_common: ('2√√2', 1), gold_ans: ['2', 2]
** most_common: ('30', 6), gold_ans: ['90', 90]
** most_common: ('8', 5), gold_ans: ['7', 7]
** most_common: ('(-∞,∞)', 2), gold_ans: ['(-\\infty,-\\frac{6}{7})\\cup(-\\frac{6}{7},\\infty)', None]
** most_common: ('10', 5), gold_ans: ['0', 0]
** most_common: ('7.5', 2), gold_ans: ['\\frac{15}{2}', 7.5]
** most_common: ('-0.25', 7), gold_ans: ['-\\frac{1}{4}', -0.25]
** most_common: ('2', 6), gold_ans: ['2', 2]
BackVerify: 50
** most_common: ('(-3√3,3√3,-2)', 2), gold_ans: ['(3\\sqrt{3},-9,-2)', None]
** most_common: ('-3', 12), gold_ans: ['-3', -3]
** most_common: ('0', 3), gold_ans: ['3', 3]
** most_common: ('1', 3), gold_ans: ['\\frac{4}{3}', 1.3333333333333333]
** most_common: ('2', 5), gold_ans: ['2', 2]
** most_common: ('4', 4), gold_ans: ['26', 26]
** most_common: ('\\[\\begin{pmatrix}\\frac{1}{5}&\\frac{4}{5}\\0&1\\end{pmatrix}\\]', 2), gold_ans: ['\\begin{pmatrix}1/5&4/5\\0&1\\end{pmatrix}', None]
** most_common: ('6', 3), gold_ans: ['8', 8]
** most_common: ('2', 8), gold_ans: ['2', 2]
** most_common: ('0.25', 3), gold_ans: ['\\frac{3}{16}', 0.1875]
** most_common: ('8', 2), gold_ans: ['20', 20]
** most_common: ('\\frac{10}{13}', 3), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('2', 5), gold_ans: ['-1', -1]
** most_common: ('22.5', 4), gold_ans: ['36', 36]
** most_common: ('25', 12), gold_ans: ['25', 25]
** most_common: ('1', 2), gold_ans: ['1,-2', -1]
** most_common: ('80', 9), gold_ans: ['80', 80]
** most_common: ('5040', 8), gold_ans: ['6720', 6720]
** most_common: ('17,575,000', 5), gold_ans: ['28121600', 28121600]
** most_common: ('undefined', 10), gold_ans: ['0', 0]
** most_common: ('3', 4), gold_ans: ['3', 3]
** most_common: ('1', 4), gold_ans: ['4', 4]
** most_common: ('12', 5), gold_ans: ['5', 5]
** most_common: ('(B)Circle', 6), gold_ans: ['\\text{(E)}', 2.718281828459045]
** most_common: ('5', 2), gold_ans: ['40', 40]
** most_common: ('150', 7), gold_ans: ['80', 80]
** most_common: ('8', 4), gold_ans: ['2', 2]
** most_common: ('13', 6), gold_ans: ['13', 13]
** most_common: ('-1≤x≤1orx≥3/2', 1), gold_ans: ['(-\\infty,\\frac{3}{7}]\\cup[\\frac{3}{5},\\infty)', None]
** most_common: ('27', 5), gold_ans: ['27', 27]
** most_common: ('63', 3), gold_ans: ['3968', 3968]
** most_common: ('9π', 2), gold_ans: ['8\\pi', 25.132741228718345]
** most_common: ('79', 3), gold_ans: ['32', 32]
** most_common: ('117', 6), gold_ans: ['104', 104]
** most_common: ('0', 3), gold_ans: ['11', 11]
** most_common: ('5', 10), gold_ans: ['5', 5]
** most_common: ('0.375', 5), gold_ans: ['\\frac{2}{5}', 0.4]
** most_common: ('(0,0,-90)', 1), gold_ans: ['(3,-3,1)', -28]
** most_common: ('0.4', 2), gold_ans: ['\\frac{9}{20}', 0.45]
** most_common: ('2', 4), gold_ans: ['4', 4]
** most_common: ('\\frac{1}{9}', 1), gold_ans: ['\\frac{9}{10}', 0.9]
** most_common: ('4', 4), gold_ans: ['\\frac{16}{5}', 3.2]
** most_common: ('1.3333', 2), gold_ans: ['\\frac{3}{4}', 0.75]
** most_common: ('56', 11), gold_ans: ['56', 56]
** most_common: ('0', 3), gold_ans: ['8+4\\sqrt{3}', 14.928203230275509]
** most_common: ('3', 7), gold_ans: ['3', 3]
** most_common: ('9', 8), gold_ans: ['9', 9]
** most_common: ('17.333333333333332', 1), gold_ans: ['116', 116]
** most_common: ('2', 2), gold_ans: ['2', 2]
** most_common: ('3x^2/2', 4), gold_ans: ['\\frac{3x^2}{2}', None]
BackVerify: 100
** most_common: ('1', 3), gold_ans: ['3', 3]
** most_common: ('0.3846153846153846', 2), gold_ans: ['\\frac{12}{13}', 0.9230769230769231]
** most_common: ('0', 5), gold_ans: ['-\\frac{1}{2}', -0.5]
** most_common: ('84', 4), gold_ans: ['174', 174]
** most_common: ('0.25', 10), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('144', 2), gold_ans: ['162', 162]
** most_common: ('0.12', 3), gold_ans: ['\\frac{1}{10}', 0.1]
** most_common: ('(-3,-9)', 5), gold_ans: ['(15,-11)', 4]
** most_common: ('53', 3), gold_ans: ['203', 203]
** most_common: ('25', 7), gold_ans: ['25', 25]
** most_common: ('20π', 1), gold_ans: ['15\\pi', 47.1238898038469]
** most_common: ('32', 12), gold_ans: ['32', 32]
** most_common: ('322', 9), gold_ans: ['321', 321]
** most_common: ('\\frac{1}{8}', 1), gold_ans: ['\\frac{11}{16}', 0.6875]
** most_common: ('0', 6), gold_ans: ['-6', -6]
** most_common: ('B', 5), gold_ans: ['\\text{A}', None]
** most_common: ('2', 3), gold_ans: ['2', 2]
** most_common: ('0.5', 4), gold_ans: ['\\frac{6}{7}', 0.8571428571428571]
** most_common: ('\\frac{17}{85}', 1), gold_ans: ['\\frac{36}{11}', 3.272727272727273]
** most_common: ('24', 2), gold_ans: ['15', 15]
** most_common: ('-0.5', 7), gold_ans: ['-\\frac{3}{2}', -1.5]
** most_common: ('24', 2), gold_ans: ['70', 70]
** most_common: ('15', 2), gold_ans: ['\\frac{21}{8}', 2.625]
** most_common: ('393', 1), gold_ans: ['957', 957]
** most_common: ('3.08', 2), gold_ans: ['2', 2]
** most_common: ('2', 4), gold_ans: ['6', 6]
** most_common: ('-154', 8), gold_ans: ['8', 8]
** most_common: ('19', 7), gold_ans: ['19', 19]
** most_common: ('6', 10), gold_ans: ['6', 6]
** most_common: ('\\frac{2}{3}', 6), gold_ans: ['\\frac{1}{6}', 0.16666666666666666]
** most_common: ('1', 12), gold_ans: ['1', 1]
** most_common: ('37.50', 12), gold_ans: ['37.50', 37.5]
** most_common: ('2', 7), gold_ans: ['2', 2]
** most_common: ('21', 2), gold_ans: ['10', 10]
** most_common: ('8', 10), gold_ans: ['8', 8]
** most_common: ('0,1', 5), gold_ans: ['0,1', 1]
** most_common: ('1.1571', 1), gold_ans: ['\\frac{13}{6}', 2.1666666666666665]
** most_common: ('25', 7), gold_ans: ['x^2+10x+25', None]
** most_common: ('27.0', 1), gold_ans: ['25', 25]
** most_common: ('-\\frac{5}{2}', 2), gold_ans: ['-8+2i', None]
** most_common: ('3', 3), gold_ans: ['-2', -2]
** most_common: ('9', 3), gold_ans: ['9', 9]
** most_common: ('B', 3), gold_ans: ['\\text{(C)}', None]
** most_common: ('6', 7), gold_ans: ['6', 6]
** most_common: ('2', 12), gold_ans: ['2', 2]
** most_common: ('8', 6), gold_ans: ['8', 8]
** most_common: ('\\frac{16}{81}', 1), gold_ans: ['\\frac{9}{32}', 0.28125]
** most_common: ('2598960', 7), gold_ans: ['2,598,960', 2598960]
** most_common: ('-1', 7), gold_ans: ['-\\frac{1}{2}', -0.5]
** most_common: ('15', 5), gold_ans: ['-15', -15]
BackVerify: 150
** most_common: ('-106', 4), gold_ans: ['763', 763]
** most_common: ('3', 1), gold_ans: ['-13x+3', None]
** most_common: ('240', 4), gold_ans: ['9', 9]
** most_common: ('0', 4), gold_ans: ['0', 0]
** most_common: ('262,144', 6), gold_ans: ['262144', 262144]
** most_common: ('\\frac{25}{14}', 1), gold_ans: ['5', 5]
** most_common: ('668400', 2), gold_ans: ['666000', 666000]
** most_common: ('5', 11), gold_ans: ['5', 5]
** most_common: ('4', 5), gold_ans: ['4', 4]
** most_common: ('400', 3), gold_ans: ['500a^7', None]
** most_common: ('2√2', 2), gold_ans: ['2\\sqrt{5}', 4.47213595499958]
** most_common: ('27', 2), gold_ans: ['7', 7]
** most_common: ('3356', 2), gold_ans: ['40', 40]
** most_common: ('25', 9), gold_ans: ['25', 25]
** most_common: ('507', 7), gold_ans: ['507', 507]
** most_common: ('4', 4), gold_ans: ['6', 6]
** most_common: ('80', 2), gold_ans: ['160', 160]
** most_common: ('3', 5), gold_ans: ['7', 7]
** most_common: ('(-7,2)', 3), gold_ans: ['(-\\infty,-7)\\cup(1,2)', None]
** most_common: ('8', 3), gold_ans: ['10', 10]
** most_common: ('0.5', 2), gold_ans: ['(-\\infty,0]\\cup(\\frac{1}{2},\\frac{3}{2}]', None]
** most_common: ('220.0', 4), gold_ans: ['220', 220]
** most_common: ('575', 4), gold_ans: ['575', 575]
** most_common: ('180', 3), gold_ans: ['150', 150]
** most_common: ('1', 10), gold_ans: ['1', 1]
** most_common: ('0', 3), gold_ans: ['-1', -1]
** most_common: ('0,1.42325', 1), gold_ans: ['2+\\sqrt{3},-2+\\sqrt{3}', None]
** most_common: ('96', 3), gold_ans: ['224', 224]
** most_common: ('1', 3), gold_ans: ['1', 1]
** most_common: ('1250', 6), gold_ans: ['1250', 1250]
** most_common: ('33', 6), gold_ans: ['33', 33]
** most_common: ('3450', 4), gold_ans: ['3504', 3504]
** most_common: ('5040', 5), gold_ans: ['1260', 1260]
** most_common: ('\\frac{12}{13}', 4), gold_ans: ['\\frac{507}{595}', 0.8521008403361344]
** most_common: ('\\begin{pmatrix}-a/8&-a/8\\c&-a/4\\end{pmatrix}', 1), gold_ans: ['\\begin{pmatrix}4&2\\-1&1\\end{pmatrix}', None]
** most_common: ('2013', 2), gold_ans: ['2079', 2079]
** most_common: ('1', 4), gold_ans: ['0', 0]
** most_common: ('150', 5), gold_ans: ['150', 150]
** most_common: ('96', 1), gold_ans: ['80', 80]
** most_common: ('7', 2), gold_ans: ['18', 18]
** most_common: ('-2+3√2+6√3-2√6', 1), gold_ans: ['-48', -48]
** most_common: ('-1/√10', 5), gold_ans: ['\\frac{1}{\\sqrt{10}}', 0.31622776601683794]
** most_common: ('0', 4), gold_ans: ['117649', 117649]
** most_common: ('35', 3), gold_ans: ['\\frac{25}{52}', 0.4807692307692308]
** most_common: ('13860', 3), gold_ans: ['13,800', 13800]
** most_common: ('0.11', 5), gold_ans: ['\\frac{11}{100}', 0.11]
** most_common: ('6', 9), gold_ans: ['6', 6]
** most_common: ('1', 5), gold_ans: ['2', 2]
** most_common: ('625', 6), gold_ans: ['27648', 27648]
** most_common: ('7√30', 3), gold_ans: ['14\\sqrt{15}', 54.22176684690383]
BackVerify: 200
** most_common: ('-7', 3), gold_ans: ['(4x-7)', None]
** most_common: ('0', 5), gold_ans: ['\\frac{1997}{2}', 998.5]
** most_common: ('82', 2), gold_ans: ['81', 81]
** most_common: ('(-∞,∞)', 3), gold_ans: ['(-\\infty,0]\\cup[4,\\infty)', None]
** most_common: ('55', 4), gold_ans: ['55', 55]
** most_common: ('129', 5), gold_ans: ['180', 180]
** most_common: ('7', 11), gold_ans: ['7', 7]
** most_common: ('2000', 2), gold_ans: ['-1', -1]
** most_common: ('6', 9), gold_ans: ['6', 6]
** most_common: ('73.5', 8), gold_ans: ['73.5', 73.5]
** most_common: ('2', 5), gold_ans: ['2', 2]
** most_common: ('1', 3), gold_ans: ['8', 8]
** most_common: ('26', 2), gold_ans: ['735', 735]
** most_common: ('216', 3), gold_ans: ['36', 36]
** most_common: ('13', 2), gold_ans: ['111', 111]
** most_common: ('40', 1), gold_ans: ['17', 17]
** most_common: ('0', 2), gold_ans: ['1', 1]
** most_common: ('1', 5), gold_ans: ['5', 5]
** most_common: ('10', 7), gold_ans: ['10', 10]
** most_common: ('1050', 1), gold_ans: ['3224', 3224]
** most_common: ('26', 4), gold_ans: ['21', 21]
** most_common: ('-21', 12), gold_ans: ['-21', -21]
** most_common: ('333333333', 2), gold_ans: ['111,111,111', 111111111]
** most_common: ('14√2', 4), gold_ans: ['40', 40]
** most_common: ('6', 4), gold_ans: ['20', 20]
** most_common: ('1', 6), gold_ans: ['8', 8]
** most_common: ('76', 3), gold_ans: ['30', 30]
** most_common: ('80', 11), gold_ans: ['80', 80]
** most_common: ('\\begin{pmatrix}4-k\\7-2k\\end{pmatrix}', 3), gold_ans: ['\\begin{pmatrix}2/5\\-1/5\\end{pmatrix}', None]
** most_common: ('25', 4), gold_ans: ['27', 27]
** most_common: ('1', 8), gold_ans: ['\\frac{100}{81}', 1.2345679012345678]
** most_common: ('100', 4), gold_ans: ['100', 100]
** most_common: ('16', 5), gold_ans: ['8', 8]
** most_common: ('0', 2), gold_ans: ['(-a,0)', None]
** most_common: ('1', 7), gold_ans: ['1', 1]
** most_common: ('-6', 3), gold_ans: ['4', 4]
** most_common: ('∞', 4), gold_ans: ['1', 1]
** most_common: ('odd', 6), gold_ans: ['\\text{odd}', None]
** most_common: ('159.96', 5), gold_ans: ['90', 90]
** most_common: ('1', 9), gold_ans: ['1', 1]
** most_common: ('108', 1), gold_ans: ['87', 87]
** most_common: ('1', 9), gold_ans: ['501', 501]
** most_common: ('2', 4), gold_ans: ['\\frac{19}{540}', 0.03518518518518519]
** most_common: ('45', 3), gold_ans: ['86', 86]
** most_common: ('0', 3), gold_ans: ['331', 331]
** most_common: ('10.0', 6), gold_ans: ['10', 10]
** most_common: ('4', 4), gold_ans: ['4', 4]
** most_common: ('2', 5), gold_ans: ['2', 2]
** most_common: ('003', 2), gold_ans: ['668', 668]
** most_common: ('14400', 2), gold_ans: ['11,111,111,100', 11111111100]
BackVerify: 250
** most_common: ('2x^2+2x+3', 3), gold_ans: ['2x^2+5x-1', None]
** most_common: ('1.8', 5), gold_ans: ['2', 2]
** most_common: ('-128', 8), gold_ans: ['-128', -128]
** most_common: ('-1', 4), gold_ans: ['-2', -2]
** most_common: ('1', 6), gold_ans: ['1', 1]
** most_common: ('1', 1), gold_ans: ['1+2\\sqrt{3}', 4.464101615137754]
** most_common: ('44', 7), gold_ans: ['\\begin{pmatrix}11\\44\\end{pmatrix}', None]
** most_common: ('36', 9), gold_ans: ['36', 36]
** most_common: ('0', 7), gold_ans: ['0', 0]
** most_common: ('10,985,500', 1), gold_ans: ['25,972,650', 25972650]
** most_common: ('3', 4), gold_ans: ['1', 1]
** most_common: ('480', 3), gold_ans: ['636', 636]
** most_common: ('(x-5)(x^2+7x-35)', 2), gold_ans: ['(x-5)(x^2-4x+7)', None]
** most_common: ('1', 12), gold_ans: ['1', 1]
** most_common: ('81', 4), gold_ans: ['36', 36]
** most_common: ('-2', 3), gold_ans: ['-\\frac{14}{5}', -2.8]
** most_common: ('76', 2), gold_ans: ['133', 133]
** most_common: ('10000_2', 5), gold_ans: ['10000_2', 100002]
** most_common: ('10.0', 4), gold_ans: ['10', 10]
** most_common: ('-1', 2), gold_ans: ['\\frac{20}{9}', 2.2222222222222223]
** most_common: ('4', 3), gold_ans: ['4', 4]
** most_common: ('0', 5), gold_ans: ['\\text{D}', None]
** most_common: ('-\\frac{\\sqrt{2}}{2}+\\frac{1}{\\sqrt{2}}i', 1), gold_ans: ['6-5i', None]
** most_common: ('4', 2), gold_ans: ['\\frac{\\sqrt{65}}{2}', 4.031128874149275]
** most_common: ('6524.8', 2), gold_ans: ['391872', 391872]
** most_common: ('0.25', 2), gold_ans: ['4+2\\sqrt{2}', 6.82842712474619]
** most_common: ('-4', 4), gold_ans: ['-42', -42]
** most_common: ('1', 5), gold_ans: ['\\frac{5}{2}', 2.5]
** most_common: ('0.8537', 1), gold_ans: ['\\frac{427}{495}', 0.8626262626262626]
** most_common: ('1320', 7), gold_ans: ['1320', 1320]
** most_common: ('\\frac{1}{3}', 3), gold_ans: ['\\frac{2}{5}', 0.4]
** most_common: ('(-√17,√17)', 2), gold_ans: ['(-\\sqrt{3},\\sqrt{3})', None]
** most_common: ('5', 2), gold_ans: ['\\frac{250}{39}', 6.410256410256411]
** most_common: ('4', 3), gold_ans: ['4', 4]
** most_common: ('\\frac{1}{33}', 5), gold_ans: ['\\frac{1}{33}', 0.030303030303030304]
** most_common: ('-1', 9), gold_ans: ['1', 1]
** most_common: ('77', 5), gold_ans: ['103', 103]
** most_common: ('39', 8), gold_ans: ['39', 39]
** most_common: ('4', 6), gold_ans: ['2', 2]
** most_common: ('0', 2), gold_ans: ['\\frac{1}{5},\\frac{1}{4},\\frac{2}{5},\\frac{1}{2}', 0.2]
** most_common: ('60', 7), gold_ans: ['36', 36]
** most_common: ('544π/3', 1), gold_ans: ['600\\pi', 1884.9555921538758]
** most_common: ('(0,0)', 4), gold_ans: ['(-5,-7)', -12]
** most_common: ('4', 12), gold_ans: ['4', 4]
** most_common: ('48', 2), gold_ans: ['48', 48]
** most_common: ('202', 12), gold_ans: ['202', 202]
** most_common: ('-12', 8), gold_ans: ['-12', -12]
** most_common: ('2', 5), gold_ans: ['2', 2]
** most_common: ('\\frac{4}{5}', 4), gold_ans: ['\\frac{3}{5},\\frac{117}{125}', 0.6]
** most_common: ('7', 9), gold_ans: ['7', 7]
BackVerify: 300
** most_common: ('128π', 3), gold_ans: ['1250\\pi', 3926.9908169872415]
** most_common: ('8', 5), gold_ans: ['7', 7]
** most_common: ('-1.23', 1), gold_ans: ['8', 8]
** most_common: ('0', 11), gold_ans: ['0', 0]
** most_common: ('9', 2), gold_ans: ['129', 129]
** most_common: ('109', 1), gold_ans: ['10', 10]
** most_common: ('45', 8), gold_ans: ['45', 45]
** most_common: ('0.2109375', 1), gold_ans: ['\\frac{27}{512}', 0.052734375]
** most_common: ('12', 5), gold_ans: ['6', 6]
** most_common: ('8', 2), gold_ans: ['19', 19]
** most_common: ('180', 6), gold_ans: ['180', 180]
** most_common: ('\\frac{2187}{128}', 2), gold_ans: ['\\frac{15309}{256}', 59.80078125]
** most_common: ('19', 3), gold_ans: ['9', 9]
** most_common: ('210', 9), gold_ans: ['210', 210]
** most_common: ('0.25', 3), gold_ans: ['\\frac{5}{36}', 0.1388888888888889]
** most_common: ('(3√2/10,2√2/5,√2)', 1), gold_ans: ['(-13,-16,-18)', -47]
** most_common: ('50', 6), gold_ans: ['50', 50]
** most_common: ('\\frac{5}{19}', 1), gold_ans: ['\\frac{4}{3}', 1.3333333333333333]
** most_common: ('96', 2), gold_ans: ['40', 40]
** most_common: ('4', 2), gold_ans: ['8', 8]
** most_common: ('8', 3), gold_ans: ['32', 32]
** most_common: ('x', 2), gold_ans: ['-\\sqrt{x-3}+3', None]
** most_common: ('0', 8), gold_ans: ['0', 0]
** most_common: ('y^4-2y^3+7y^2+y-5', 5), gold_ans: ['y^4-2y^3+7y^2+y-5', None]
** most_common: ('\\frac{11}{27}', 1), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('6', 11), gold_ans: ['6', 6]
** most_common: ('0', 2), gold_ans: ['1+\\sqrt{}2,\\1-\\sqrt{}2,\\2+\\sqrt{}3,\\2-\\sqrt{}3', None]
** most_common: ('5050', 10), gold_ans: ['5050', 5050]
** most_common: ('34', 6), gold_ans: ['34', 34]
** most_common: ('-1', 8), gold_ans: ['-1', -1]
** most_common: ('2', 4), gold_ans: ['9', 9]
** most_common: ('12.62', 1), gold_ans: ['21', 21]
** most_common: ('120', 2), gold_ans: ['120', 120]
** most_common: ('36√3', 3), gold_ans: ['36\\sqrt{3}', 62.353829072479584]
** most_common: ('3', 6), gold_ans: ['2', 2]
** most_common: ('10', 5), gold_ans: ['10', 10]
** most_common: ('100', 3), gold_ans: ['3', 3]
** most_common: ('π', 4), gold_ans: ['\\pi', 3.141592653589793]
** most_common: ('0', 1), gold_ans: ['\\frac{4036082}{4036081}', 1.0000002477650969]
** most_common: ('5', 4), gold_ans: ['15', 15]
** most_common: ('45', 3), gold_ans: ['83', 83]
** most_common: ('\\frac{328}{98}', 3), gold_ans: ['\\frac{3280}{999}', 3.2832832832832834]
** most_common: ('0.5', 3), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('2000', 12), gold_ans: ['2000', 2000]
** most_common: ('72', 4), gold_ans: ['18', 18]
** most_common: ('24', 5), gold_ans: ['24', 24]
** most_common: ('0.25', 6), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('\\frac{7}{9}', 8), gold_ans: ['\\frac{7}{9}', 0.7777777777777778]
** most_common: ('3', 2), gold_ans: ['[3,\\infty)', None]
** most_common: ('24', 2), gold_ans: ['156', 156]
BackVerify: 350
** most_common: ('0.333333333333', 3), gold_ans: ['\\frac{32\\pi}{81}', 1.241123023640412]
** most_common: ('-2√7-1', 5), gold_ans: ['-2\\sqrt{7}-1', -6.291502622129181]
** most_common: ('18', 11), gold_ans: ['18', 18]
** most_common: ('\\frac{1}{2}', 1), gold_ans: ['\\frac{1}{2},-\\frac{1}{12}', 0.5]
** most_common: ('(11,-13,3)', 2), gold_ans: ['\\begin{pmatrix}11\\-13\\-1\\end{pmatrix}', None]
** most_common: ('36', 3), gold_ans: ['36', 36]
** most_common: ('3', 9), gold_ans: ['3', 3]
** most_common: ('√17', 7), gold_ans: ['\\sqrt{17}', 4.123105625617661]
** most_common: ('-\\frac{4}{3}', 3), gold_ans: ['-\\frac{2}{3}', -0.6666666666666666]
** most_common: ('\\frac{1}{6}', 3), gold_ans: ['\\frac{1}{5}', 0.2]
** most_common: ('0', 10), gold_ans: ['0', 0]
** most_common: ('16', 12), gold_ans: ['16', 16]
** most_common: ('1', 3), gold_ans: ['\\text{ellipse}', None]
** most_common: ('87', 3), gold_ans: ['87', 87]
** most_common: ('12', 2), gold_ans: ['6\\sqrt{7}', 15.874507866387544]
** most_common: ('-6', 8), gold_ans: ['-6', -6]
** most_common: ('511', 3), gold_ans: ['1024', 1024]
** most_common: ('\\frac{2}{9}', 3), gold_ans: ['\\frac{8}{17}', 0.47058823529411764]
** most_common: ('0.5', 3), gold_ans: ['-\\frac{1}{2}', -0.5]
** most_common: ('6', 5), gold_ans: ['2\\sqrt{5}', 4.47213595499958]
** most_common: ('5', 3), gold_ans: ['4', 4]
** most_common: ('1', 6), gold_ans: ['2', 2]
** most_common: ('4', 3), gold_ans: ['4', 4]
** most_common: ('3', 5), gold_ans: ['-9', -9]
** most_common: ('2-√3', 1), gold_ans: ['2\\sqrt{3}-2', 1.4641016151377546]
** most_common: ('0.5', 3), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('10+8+6√2', 2), gold_ans: ['24+6\\sqrt{2}', 32.48528137423857]
** most_common: ('6√97', 6), gold_ans: ['54', 54]
** most_common: ('11', 3), gold_ans: ['112', 112]
** most_common: ('1.5', 3), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('[-1,1]', 8), gold_ans: ['[0,1)', None]
** most_common: ('0', 5), gold_ans: ['-1', -1]
** most_common: ('0.0001953125', 1), gold_ans: ['\\frac{1}{11}', 0.09090909090909091]
** most_common: ('12.81', 3), gold_ans: ['2', 2]
** most_common: ('1', 6), gold_ans: ['1', 1]
** most_common: ('2', 3), gold_ans: ['48', 48]
** most_common: ('11', 7), gold_ans: ['11', 11]
** most_common: ('1.5π', 2), gold_ans: ['\\frac{3\\pi}{4}', 2.356194490192345]
** most_common: ('30', 3), gold_ans: ['496', 496]
** most_common: ('30', 4), gold_ans: ['900', 900]
** most_common: ('11', 6), gold_ans: ['11', 11]
** most_common: ('0', 5), gold_ans: ['-1', -1]
** most_common: ('90', 4), gold_ans: ['90', 90]
** most_common: ('16', 2), gold_ans: ['20', 20]
** most_common: ('-\\frac{2}{7}', 2), gold_ans: ['-\\frac{5}{7}', -0.7142857142857143]
** most_common: ('187.5', 2), gold_ans: ['300', 300]
** most_common: ('9', 5), gold_ans: ['36', 36]
** most_common: ('1', 5), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('-50', 2), gold_ans: ['-50', -50]
** most_common: ('0', 2), gold_ans: ['\\sqrt{3}-1', 0.7320508075688773]
BackVerify: 400
** most_common: ('1.25', 3), gold_ans: ['40', 40]
** most_common: ('0.6', 5), gold_ans: ['\\frac{3}{5}', 0.6]
** most_common: ('2', 6), gold_ans: ['14', 14]
** most_common: ('5', 4), gold_ans: ['5', 5]
** most_common: ('3√3', 2), gold_ans: ['\\frac{75\\sqrt{3}}{67}', 1.9388628442935194]
** most_common: ('18.9', 2), gold_ans: ['\\frac{1}{11}', 0.09090909090909091]
** most_common: ('60', 4), gold_ans: ['160', 160]
** most_common: ('36', 3), gold_ans: ['12', 12]
** most_common: ('6', 3), gold_ans: ['0.54', 0.54]
** most_common: ('3.21', 8), gold_ans: ['3.21', 3.21]
** most_common: ('0', 2), gold_ans: ['676', 676]
** most_common: ('1600', 7), gold_ans: ['1600', 1600]
** most_common: ('(-\\frac{1}{6},\\frac{1}{6})', 4), gold_ans: ['(-\\frac{1}{6},\\frac{1}{2})', -0.16666666666666666]
** most_common: ('3.7', 9), gold_ans: ['3.7', 3.7]
** most_common: ('13.0', 5), gold_ans: ['13', 13]
** most_common: ('8', 3), gold_ans: ['8', 8]
** most_common: ('10', 3), gold_ans: ['990', 990]
** most_common: ('1', 3), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('15', 10), gold_ans: ['15', 15]
** most_common: ('59', 10), gold_ans: ['59', 59]
** most_common: ('291', 8), gold_ans: ['291', 291]
** most_common: ('660', 3), gold_ans: ['3300', 3300]
** most_common: ('15', 3), gold_ans: ['12', 12]
** most_common: ('111', 2), gold_ans: ['8{,}880', None]
** most_common: ('0.75', 2), gold_ans: ['\\frac{3}{8}', 0.375]
** most_common: ('61', 7), gold_ans: ['69', 69]
** most_common: ('1', 9), gold_ans: ['1', 1]
** most_common: ('\\frac{11}{2}', 7), gold_ans: ['\\frac{11}{2}', 5.5]
** most_common: ('10', 9), gold_ans: ['10', 10]
** most_common: ('7', 3), gold_ans: ['27', 27]
** most_common: ('4.9', 6), gold_ans: ['\\sqrt{51}', 7.14142842854285]
** most_common: ('0.44', 3), gold_ans: ['0.61', 0.61]
** most_common: ('6871', 4), gold_ans: ['x^9+6859', None]
** most_common: ('(-∞,0)', 6), gold_ans: ['(-\\infty,0)', None]
** most_common: ('360', 1), gold_ans: ['28', 28]
** most_common: ('81', 2), gold_ans: ['144', 144]
** most_common: ('10', 2), gold_ans: ['8', 8]
** most_common: ('2041_5', 2), gold_ans: ['4130_5', 41305]
** most_common: ('216', 4), gold_ans: ['216', 216]
** most_common: ('78', 3), gold_ans: ['78', 78]
** most_common: ('-106.67', 1), gold_ans: ['640', 640]
** most_common: ('8', 5), gold_ans: ['4\\sqrt{2}', 5.656854249492381]
** most_common: ('1', 5), gold_ans: ['\\frac{1}{z}', None]
** most_common: ('34', 2), gold_ans: ['96', 96]
** most_common: ('-5', 4), gold_ans: ['-4', -4]
** most_common: ('-6', 7), gold_ans: ['-6', -6]
** most_common: ('1', 3), gold_ans: ['4', 4]
** most_common: ('-8', 1), gold_ans: ['\\begin{pmatrix}-2\\-2\\1\\end{pmatrix}', None]
** most_common: ('0.5', 3), gold_ans: ['\\frac{21}{64}', 0.328125]
** most_common: ('900', 8), gold_ans: ['900', 900]
BackVerify: 450
** most_common: ('\\binom{h+w-3}{h-2}', 3), gold_ans: ['15', 15]
** most_common: ('2', 12), gold_ans: ['2', 2]
** most_common: ('20', 3), gold_ans: ['20', 20]
** most_common: ('120', 1), gold_ans: ['371,043,400', 371043400]
** most_common: ('24', 1), gold_ans: ['35', 35]
** most_common: ('-1', 7), gold_ans: ['-1', -1]
** most_common: ('2520', 2), gold_ans: ['10,080', 10080]
** most_common: ('25', 12), gold_ans: ['25', 25]
** most_common: ('274', 1), gold_ans: ['20', 20]
** most_common: ('3', 9), gold_ans: ['3', 3]
** most_common: ('919.5', 2), gold_ans: ['920.25', 920.25]
** most_common: ('0.0120', 7), gold_ans: ['\\frac{1}{83}', 0.012048192771084338]
** most_common: ('100', 3), gold_ans: ['100', 100]
** most_common: ('1', 5), gold_ans: ['\\frac{31}{5}', 6.2]
** most_common: ('5', 11), gold_ans: ['5', 5]
** most_common: ('0.5', 3), gold_ans: ['0', 0]
** most_common: ('\\frac{7}{12}', 2), gold_ans: ['\\frac{21}{43}', 0.4883720930232558]
** most_common: ('1', 3), gold_ans: ['-\\frac{5}{2}', -2.5]
** most_common: ('1', 2), gold_ans: ['\\sqrt{2}-1', 0.41421356237309503]
** most_common: ('70', 3), gold_ans: ['70', 70]
** most_common: ('3', 2), gold_ans: ['3n^2-18', None]
** most_common: ('2', 11), gold_ans: ['2', 2]
** most_common: ('123', 6), gold_ans: ['123', 123]
** most_common: ('714', 4), gold_ans: ['740', 740]
** most_common: ('120', 7), gold_ans: ['12', 12]
** most_common: ('4', 3), gold_ans: ['16', 16]
** most_common: ('25', 2), gold_ans: ['10', 10]
** most_common: ('40', 6), gold_ans: ['40', 40]
** most_common: ('1.5', 4), gold_ans: ['0.5', 0.5]
** most_common: ('0', 3), gold_ans: ['4', 4]
** most_common: ('0', 1), gold_ans: ['7', 7]
** most_common: ('5', 6), gold_ans: ['5', 5]
** most_common: ('10', 4), gold_ans: ['10', 10]
** most_common: ('1', 12), gold_ans: ['1', 1]
** most_common: ('\\frac{18}{49}', 3), gold_ans: ['\\frac{18}{343}', 0.052478134110787174]
** most_common: ('2', 4), gold_ans: ['1', 1]
** most_common: ('12121', 4), gold_ans: ['10901', 10901]
** most_common: ('1.7321', 1), gold_ans: ['\\sqrt{3}', 1.7320508075688772]
** most_common: ('3', 3), gold_ans: ['\\text{Friday}', None]
** most_common: ('7', 5), gold_ans: ['6', 6]
** most_common: ('50', 11), gold_ans: ['50', 50]
** most_common: ('13.3333', 1), gold_ans: ['25', 25]
** most_common: ('1144', 2), gold_ans: ['664_7', 6647]
** most_common: ('1', 5), gold_ans: ['1', 1]
** most_common: ('6p^4+5p^2-4', 8), gold_ans: ['6p^4+5p^2-4', None]
** most_common: ('2', 5), gold_ans: ['4', 4]
** most_common: ('25', 12), gold_ans: ['12', 12]
** most_common: ('5958', 3), gold_ans: ['5937', 5937]
** most_common: ('30', 4), gold_ans: ['23', 23]
** most_common: ('1', 4), gold_ans: ['11', 11]
BackVerify: 500
** most_common: ('0.5', 3), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('3.125', 9), gold_ans: ['\\frac{25}{8}', 3.125]
** most_common: ('32', 2), gold_ans: ['41', 41]
** most_common: ('1', 6), gold_ans: ['2', 2]
** most_common: ('10', 5), gold_ans: ['10', 10]
** most_common: ('1.5', 4), gold_ans: ['-\\frac{1}{2}', -0.5]
** most_common: ('71', 3), gold_ans: ['71', 71]
** most_common: ('-\\frac{1}{3}', 2), gold_ans: ['2', 2]
** most_common: ('4', 3), gold_ans: ['-\\sqrt{3}', -1.7320508075688772]
** most_common: ('0.03125', 7), gold_ans: ['\\frac{1}{32}', 0.03125]
** most_common: ('18', 3), gold_ans: ['18', 18]
** most_common: ('4', 6), gold_ans: ['\\frac{16}{3}', 5.333333333333333]
** most_common: ('360', 1), gold_ans: ['360', 360]
** most_common: ('√3', 2), gold_ans: ['3\\pm2\\sqrt{2}', None]
** most_common: ('24.0', 2), gold_ans: ['1152', 1152]
** most_common: ('20', 7), gold_ans: ['20', 20]
** most_common: ('0.0151', 2), gold_ans: ['\\frac{72}{425}', 0.16941176470588235]
** most_common: ('2.0', 1), gold_ans: ['(-\\frac{8}{3},\\frac{4}{3},-\\frac{1}{3})', -2.6666666666666665]
** most_common: ('292.1', 2), gold_ans: ['62.8', 62.8]
** most_common: ('26', 1), gold_ans: ['\\begin{pmatrix}-3\\11\\7\\end{pmatrix}', None]
** most_common: ('10', 7), gold_ans: ['10', 10]
** most_common: ('48', 7), gold_ans: ['48', 48]
** most_common: ('4', 4), gold_ans: ['20', 20]
** most_common: ('18', 2), gold_ans: ['20', 20]
** most_common: ('1', 3), gold_ans: ['\\frac{1}{5120}', 0.0001953125]
** most_common: ('1', 7), gold_ans: ['1', 1]
** most_common: ('1', 8), gold_ans: ['1', 1]
** most_common: ('16,341.19', 1), gold_ans: ['16,386.16', 16386.16]
** most_common: ('5', 12), gold_ans: ['5', 5]
** most_common: ('337.5', 1), gold_ans: ['9', 9]
** most_common: ('odd', 8), gold_ans: ['\\text{even}', None]
** most_common: ('-13.0625', 2), gold_ans: ['\\frac{19}{4}', 4.75]
** most_common: ('1', 2), gold_ans: ['x^2+2', None]
** most_common: ('9', 11), gold_ans: ['9', 9]
** most_common: ('36', 4), gold_ans: ['36', 36]
** most_common: ('\\frac{1}{2}', 5), gold_ans: ['\\frac{2}{5}', 0.4]
** most_common: ('C', 7), gold_ans: ['\\text{(C)}', None]
** most_common: ('10', 11), gold_ans: ['10', 10]
** most_common: ('-0.143', 3), gold_ans: ['\\frac{3}{7}', 0.42857142857142855]
** most_common: ('1', 3), gold_ans: ['\\text{Saturday}', None]
** most_common: ('√37', 3), gold_ans: ['\\sqrt{85}', 9.219544457292887]
** most_common: ('11', 4), gold_ans: ['11', 11]
** most_common: ('8', 7), gold_ans: ['8', 8]
** most_common: ('\\frac{5}{12}', 5), gold_ans: ['\\frac{23}{36}', 0.6388888888888888]
** most_common: ('0', 5), gold_ans: ['[0,\\frac{343}{27}]', 0]
** most_common: ('567', 6), gold_ans: ['567', 567]
** most_common: ('34', 4), gold_ans: ['34', 34]
** most_common: ('67', 7), gold_ans: ['55', 55]
** most_common: ('\\frac{\\sqrt{2}}{7}', 1), gold_ans: ['-\\frac{17}{19}', -0.8947368421052632]
** most_common: ('4', 4), gold_ans: ['6', 6]
BackVerify: 550
** most_common: ('2', 2), gold_ans: ['1', 1]
** most_common: ('3.25', 3), gold_ans: ['3.25', 3.25]
** most_common: ('1', 5), gold_ans: ['6x', None]
** most_common: ('8x', 2), gold_ans: ['48', 48]
** most_common: ('0.5', 12), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('1', 2), gold_ans: ['2\\sqrt{3}+3', 6.464101615137754]
** most_common: ('64-16\\pi', 4), gold_ans: ['8\\pi-16', 9.132741228718347]
** most_common: ('-\\frac{3}{4}', 2), gold_ans: ['-\\frac{49}{12}', -4.083333333333333]
** most_common: ('8', 9), gold_ans: ['6', 6]
** most_common: ('36', 3), gold_ans: ['48', 48]
** most_common: ('2', 12), gold_ans: ['2', 2]
** most_common: ('1820', 2), gold_ans: ['210', 210]
** most_common: ('5', 4), gold_ans: ['17', 17]
** most_common: ('2', 5), gold_ans: ['1000', 1000]
** most_common: ('307', 1), gold_ans: ['22', 22]
** most_common: ('[0,∞)', 7), gold_ans: ['(-5,\\infty)', None]
** most_common: ('2', 2), gold_ans: ['\\frac{39}{64}', 0.609375]
** most_common: ('5.28', 1), gold_ans: ['41', 41]
** most_common: ('-5', 5), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('11', 5), gold_ans: ['89', 89]
** most_common: ('\\frac{36}{121}', 6), gold_ans: ['\\frac{36}{121}', 0.2975206611570248]
** most_common: ('π+8', 2), gold_ans: ['6\\pi+2', 20.84955592153876]
** most_common: ('1001', 3), gold_ans: ['10090', 10090]
** most_common: ('1', 2), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('360', 6), gold_ans: ['12441600', 12441600]
** most_common: ('30.72', 1), gold_ans: ['11.5', 11.5]
** most_common: ('2', 3), gold_ans: ['34', 34]
** most_common: ('0.1111', 4), gold_ans: ['\\frac{1}{9}', 0.1111111111111111]
** most_common: ('\\begin{pmatrix}-2\\3\\-1\\end{pmatrix}', 1), gold_ans: ['(7,21,35)', 72135]
** most_common: ('-0.5', 6), gold_ans: ['-\\frac{1}{2}', -0.5]
** most_common: ('65', 6), gold_ans: ['40', 40]
** most_common: ('2', 6), gold_ans: ['-2', -2]
** most_common: ('25', 2), gold_ans: ['43', 43]
** most_common: ('30', 10), gold_ans: ['30', 30]
** most_common: ('0', 2), gold_ans: ['6', 6]
** most_common: ('24310', 2), gold_ans: ['4495', 4495]
** most_common: ('24456.92', 1), gold_ans: ['348', 348]
** most_common: ('1', 1), gold_ans: ['\\frac{1}{8}', 0.125]
** most_common: ('6', 2), gold_ans: ['60', 60]
** most_common: ('210', 11), gold_ans: ['210', 210]
** most_common: ('6,720', 4), gold_ans: ['1680', 1680]
** most_common: ('12', 5), gold_ans: ['12', 12]
** most_common: ('336', 10), gold_ans: ['336', 336]
** most_common: ('√8016217', 1), gold_ans: ['4014013', 4014013]
** most_common: ('21', 2), gold_ans: ['21', 21]
** most_common: ('60', 7), gold_ans: ['60', 60]
** most_common: ('204', 3), gold_ans: ['156', 156]
** most_common: ('26', 3), gold_ans: ['13', 13]
** most_common: ('76.80', 10), gold_ans: ['76.80', 76.8]
** most_common: ('6', 3), gold_ans: ['13', 13]
BackVerify: 600
** most_common: ('1', 7), gold_ans: ['2', 2]
** most_common: ('3', 6), gold_ans: ['102', 102]
** most_common: ('18', 4), gold_ans: ['18', 18]
** most_common: ('10', 2), gold_ans: ['20', 20]
** most_common: ('5999', 4), gold_ans: ['5999', 5999]
** most_common: ('1', 4), gold_ans: ['6', 6]
** most_common: ('8', 4), gold_ans: ['8', 8]
** most_common: ('1', 2), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('0', 3), gold_ans: ['1', 1]
** most_common: ('48', 6), gold_ans: ['48', 48]
** most_common: ('0', 8), gold_ans: ['8', 8]
** most_common: ('10', 3), gold_ans: ['180', 180]
** most_common: ('10x', 7), gold_ans: ['10', 10]
** most_common: ('0.752', 2), gold_ans: ['\\frac{8}{17}', 0.47058823529411764]
** most_common: ('4', 7), gold_ans: ['4', 4]
** most_common: ('355.0', 1), gold_ans: ['210', 210]
** most_common: ('5', 9), gold_ans: ['-30', -30]
** most_common: ('0', 3), gold_ans: ['6', 6]
** most_common: ('\\frac{13}{30}', 4), gold_ans: ['\\frac{13}{30}', 0.43333333333333335]
** most_common: ('35', 3), gold_ans: ['45', 45]
** most_common: ('0', 4), gold_ans: ['10', 10]
** most_common: ('5', 12), gold_ans: ['5', 5]
** most_common: ('0', 3), gold_ans: ['60', 60]
** most_common: ('1105.67', 1), gold_ans: ['1\\frac{1}{10}', 1.1]
** most_common: ('1', 2), gold_ans: ['-668i', None]
** most_common: ('2', 12), gold_ans: ['2', 2]
** most_common: ('9.0', 4), gold_ans: ['9', 9]
** most_common: ('3', 3), gold_ans: ['\\frac{24}{5}', 4.8]
** most_common: ('41', 1), gold_ans: ['40', 40]
** most_common: ('4', 4), gold_ans: ['6', 6]
** most_common: ('24', 4), gold_ans: ['64', 64]
** most_common: ('2.5', 4), gold_ans: ['5', 5]
** most_common: ('\\frac{3}{8}', 3), gold_ans: ['\\frac{1}{16}', 0.0625]
** most_common: ('31', 6), gold_ans: ['31', 31]
** most_common: ('0', 1), gold_ans: ['9', 9]
** most_common: ('38', 4), gold_ans: ['38', 38]
** most_common: ('4', 4), gold_ans: ['\\frac{25}{2}', 12.5]
** most_common: ('0.10', 2), gold_ans: ['0.03', 0.03]
** most_common: ('0.5', 2), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('5', 4), gold_ans: ['1', 1]
** most_common: ('\\frac{4}{3}', 9), gold_ans: ['\\frac{4}{3}', 1.3333333333333333]
** most_common: ('23', 1), gold_ans: ['97', 97]
** most_common: ('5', 8), gold_ans: ['\\sqrt{}5', 2.23606797749979]
** most_common: ('10.0', 6), gold_ans: ['10', 10]
** most_common: ('-2a/b', 2), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('882', 2), gold_ans: ['162', 162]
** most_common: ('6', 3), gold_ans: ['12', 12]
** most_common: ('13', 3), gold_ans: ['13', 13]
** most_common: ('-23', 2), gold_ans: ['-5', -5]
** most_common: ('333', 6), gold_ans: ['333', 333]
BackVerify: 650
** most_common: ('3', 5), gold_ans: ['5', 5]
** most_common: ('7', 11), gold_ans: ['7', 7]
** most_common: ('6', 5), gold_ans: ['\\sqrt{66}', 8.12403840463596]
** most_common: ('59', 2), gold_ans: ['-376', -376]
** most_common: ('0.9', 12), gold_ans: ['\\frac{9}{10}', 0.9]
** most_common: ('1', 6), gold_ans: ['-\\frac{1}{16}', -0.0625]
** most_common: ('20', 5), gold_ans: ['10\\;\\text{edges}', None]
** most_common: ('0.5', 3), gold_ans: ['-2+\\sqrt{3}', -0.2679491924311227]
** most_common: ('6', 2), gold_ans: ['52', 52]
** most_common: ('12', 5), gold_ans: ['420', 420]
** most_common: ('4', 10), gold_ans: ['4', 4]
** most_common: ('225', 9), gold_ans: ['225', 225]
** most_common: ('51', 4), gold_ans: ['66', 66]
** most_common: ('80', 5), gold_ans: ['80', 80]
** most_common: ('0.05', 4), gold_ans: ['\\frac{11}{221}', 0.049773755656108594]
** most_common: ('?', 1), gold_ans: ['254', 254]
** most_common: ('10', 2), gold_ans: ['15', 15]
** most_common: ('2', 4), gold_ans: ['3', 3]
** most_common: ('4', 4), gold_ans: ['3', 3]
** most_common: ('107', 2), gold_ans: ['107', 107]
** most_common: ('3', 3), gold_ans: ['19', 19]
** most_common: ('9', 6), gold_ans: ['9', 9]
** most_common: ('1', 1), gold_ans: ['\\frac{2}{3}\\sqrt{3}', 1.1547005383792515]
** most_common: ('0', 5), gold_ans: ['\\frac{70}{39}', 1.794871794871795]
** most_common: ('8641', 1), gold_ans: ['18,107', 18107]
** most_common: ('2', 8), gold_ans: ['2', 2]
** most_common: ('1188', 11), gold_ans: ['1188', 1188]
** most_common: ('240', 1), gold_ans: ['180', 180]
** most_common: ('225', 6), gold_ans: ['200', 200]
** most_common: ('3√3', 2), gold_ans: ['6\\sqrt{3}', 10.392304845413264]
** most_common: ('0', 2), gold_ans: ['3', 3]
** most_common: ('10.62', 3), gold_ans: ['140', 140]
** most_common: ('3', 2), gold_ans: ['\\frac{47}{24}', 1.9583333333333333]
** most_common: ('\\frac{1}{3}', 6), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('0.5', 3), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('5', 10), gold_ans: ['5', 5]
** most_common: ('1:03', 3), gold_ans: ['\\text{1:03PM}', None]
** most_common: ('\\frac{1}{3}', 4), gold_ans: ['\\frac{2}{3}', 0.6666666666666666]
** most_common: ('36', 3), gold_ans: ['29700', 29700]
** most_common: ('0.026316', 1), gold_ans: ['\\frac{1}{144}', 0.006944444444444444]
** most_common: ('15', 2), gold_ans: ['2x^2-2x+3', None]
** most_common: ('4', 3), gold_ans: ['\\begin{pmatrix}6\\3\\0\\end{pmatrix}', None]
** most_common: ('6', 5), gold_ans: ['6', 6]
** most_common: ('121', 5), gold_ans: ['120', 120]
** most_common: ('-150', 7), gold_ans: ['-150', -150]
** most_common: ('75', 3), gold_ans: ['51', 51]
** most_common: ('8', 2), gold_ans: ['7', 7]
** most_common: ('9901', 10), gold_ans: ['9901', 9901]
** most_common: ('-1.25', 2), gold_ans: ['-2', -2]
** most_common: ('3', 4), gold_ans: ['\\frac{2}{3}', 0.6666666666666666]
BackVerify: 700
** most_common: ('2,4,9', 1), gold_ans: ['39', 39]
** most_common: ('-2,2', 2), gold_ans: ['\\frac{7}{3}', 2.3333333333333335]
** most_common: ('1.0', 5), gold_ans: ['(2,4)', 24]
** most_common: ('233', 3), gold_ans: ['233', 233]
** most_common: ('8/5t', 2), gold_ans: ['\\frac{8t}{3}', None]
** most_common: ('720', 7), gold_ans: ['720', 720]
** most_common: ('7', 3), gold_ans: ['7', 7]
** most_common: ('2', 4), gold_ans: ['4', 4]
** most_common: ('\\frac{-2}{3}', 7), gold_ans: ['\\frac{5}{6}', 0.8333333333333334]
** most_common: ('\\frac{\\pi}{6}', 4), gold_ans: ['\\frac{\\pi}{3}', 1.0471975511965979]
** most_common: ('7', 4), gold_ans: ['25', 25]
** most_common: ('0.1184', 1), gold_ans: ['\\frac{12}{35}', 0.34285714285714286]
** most_common: ('1.05', 5), gold_ans: ['\\frac{21}{20}', 1.05]
** most_common: ('25', 3), gold_ans: ['9', 9]
** most_common: ('1.0', 2), gold_ans: ['1.3', 1.3]
** most_common: ('6+9i', 11), gold_ans: ['6+9i', None]
** most_common: ('17', 4), gold_ans: ['51', 51]
** most_common: ('75', 9), gold_ans: ['75', 75]
** most_common: ('3', 11), gold_ans: ['3', 3]
** most_common: ('40', 6), gold_ans: ['40_9', 409]
** most_common: ('-120', 2), gold_ans: ['-120', -120]
** most_common: ('-i\\sqrt{61}', 1), gold_ans: ['4\\sqrt{3}+2i', 6.928203230275509]
** most_common: ('2', 4), gold_ans: ['29', 29]
** most_common: ('180', 6), gold_ans: ['210', 210]
** most_common: ('(2,-1,1)', 2), gold_ans: ['\\begin{pmatrix}-1/3\\2/3\\5/3\\end{pmatrix}', None]
** most_common: ('2', 5), gold_ans: ['2', 2]
** most_common: ('0.28', 7), gold_ans: ['\\frac{24}{25}', 0.96]
** most_common: ('2', 2), gold_ans: ['26', 26]
** most_common: ('2,-2', 2), gold_ans: ['-1,2', -12]
** most_common: ('445', 3), gold_ans: ['350', 350]
** most_common: ('12', 10), gold_ans: ['12', 12]
** most_common: ('0.1111111111111111', 7), gold_ans: ['\\frac{1}{9}', 0.1111111111111111]
** most_common: ('3', 3), gold_ans: ['3', 3]
** most_common: ('31', 7), gold_ans: ['31', 31]
** most_common: ('\\frac{3}{4},-\\frac{3}{4}', 2), gold_ans: ['\\frac{3}{4},-\\frac{3}{4}', 0.75]
** most_common: ('180', 2), gold_ans: ['6', 6]
** most_common: ('1', 3), gold_ans: ['272', 272]
** most_common: ('20', 7), gold_ans: ['\\text{June20}', None]
** most_common: ('64', 3), gold_ans: ['576', 576]
** most_common: ('(0,0)', 2), gold_ans: ['(2,3)', 23]
** most_common: ('\\sqrt{3}', 6), gold_ans: ['\\sqrt{3}', 1.7320508075688772]
** most_common: ('4', 3), gold_ans: ['12', 12]
** most_common: ('-3', 2), gold_ans: ['\\begin{pmatrix}7&1\\-1&-3\\end{pmatrix}', None]
** most_common: ('-1,1', 3), gold_ans: ['-4,-2,-1,1,2,4', -1130]
** most_common: ('0', 2), gold_ans: ['100', 100]
** most_common: ('841', 3), gold_ans: ['841', 841]
** most_common: ('98x^2-266x+361', 5), gold_ans: ['361', 361]
** most_common: ('2', 2), gold_ans: ['50', 50]
** most_common: ('5.0', 6), gold_ans: ['5', 5]
** most_common: ('9', 6), gold_ans: ['9', 9]
BackVerify: 750
** most_common: ('-36', 3), gold_ans: ['28', 28]
** most_common: ('499', 5), gold_ans: ['499', 499]
** most_common: ('\\frac{24}{105}', 2), gold_ans: ['\\frac{209}{210}', 0.9952380952380953]
** most_common: ('1', 6), gold_ans: ['2', 2]
** most_common: ('868.8', 12), gold_ans: ['868.8', 868.8]
** most_common: ('62', 4), gold_ans: ['118', 118]
** most_common: ('11', 7), gold_ans: ['11', 11]
** most_common: ('undefined', 5), gold_ans: ['-1', -1]
** most_common: ('3', 5), gold_ans: ['3', 3]
** most_common: ('110.36', 1), gold_ans: ['1', 1]
** most_common: ('D', 6), gold_ans: ['\\text{C,E}', None]
** most_common: ('7', 4), gold_ans: ['7', 7]
** most_common: ('8090', 5), gold_ans: ['8000', 8000]
** most_common: ('495', 10), gold_ans: ['495', 495]
** most_common: ('5', 5), gold_ans: ['5', 5]
** most_common: ('1', 5), gold_ans: ['2', 2]
** most_common: ('48', 5), gold_ans: ['192', 192]
** most_common: ('1296', 2), gold_ans: ['1681', 1681]
** most_common: ('2310', 4), gold_ans: ['17', 17]
** most_common: ('110', 3), gold_ans: ['20', 20]
** most_common: ('14', 5), gold_ans: ['14', 14]
** most_common: ('(4,-7)', 8), gold_ans: ['(4,-7)', -3]
** most_common: ('6', 5), gold_ans: ['(-6,0)', -60]
** most_common: ('16', 2), gold_ans: ['-8192', -8192]
** most_common: ('-0.1349', 1), gold_ans: ['2,6', 26]
** most_common: ('1396.0', 1), gold_ans: ['1260', 1260]
** most_common: ('120', 3), gold_ans: ['720', 720]
** most_common: ('\\frac{4}{3}', 5), gold_ans: ['\\frac{4}{3}', 1.3333333333333333]
** most_common: ('-6', 3), gold_ans: ['-3\\sqrt{5}-5', -11.70820393249937]
** most_common: ('4', 10), gold_ans: ['6', 6]
** most_common: ('3.605551275463989', 1), gold_ans: ['25', 25]
** most_common: ('23', 3), gold_ans: ['15', 15]
** most_common: ('9', 5), gold_ans: ['\\frac{2\\sqrt{149}}{3}', 8.137703743822469]
** most_common: ('3', 4), gold_ans: ['8', 8]
** most_common: ('9', 3), gold_ans: ['8', 8]
** most_common: ('0', 3), gold_ans: ['-9', -9]
** most_common: ('12', 12), gold_ans: ['12', 12]
** most_common: ('2', 4), gold_ans: ['2', 2]
** most_common: ('6', 4), gold_ans: ['3', 3]
** most_common: ('5', 2), gold_ans: ['10', 10]
** most_common: ('D', 6), gold_ans: ['\\text{E}', None]
** most_common: ('0', 2), gold_ans: ['2', 2]
** most_common: ('6', 11), gold_ans: ['6', 6]
** most_common: ('-2x+20', 10), gold_ans: ['-2x+20', None]
** most_common: ('4', 7), gold_ans: ['4', 4]
** most_common: ('2004', 5), gold_ans: ['0', 0]
** most_common: ('140', 4), gold_ans: ['100', 100]
** most_common: ('0', 4), gold_ans: ['1', 1]
** most_common: ('0.8', 6), gold_ans: ['\\frac{4}{5}', 0.8]
** most_common: ('4', 3), gold_ans: ['\\frac{4}{3}', 1.3333333333333333]
BackVerify: 800
** most_common: ('153', 1), gold_ans: ['41', 41]
** most_common: ('2x^3-10x^2-24x+72', 2), gold_ans: ['2x^3-10x^2-24x+72', None]
** most_common: ('30', 2), gold_ans: ['17', 17]
** most_common: ('15', 8), gold_ans: ['15', 15]
** most_common: ('1', 3), gold_ans: ['4', 4]
** most_common: ('0', 4), gold_ans: ['\\begin{pmatrix}1/2\\1/2\\1/2\\end{pmatrix}', None]
** most_common: ('1', 5), gold_ans: ['3', 3]
** most_common: ('2', 2), gold_ans: ['\\frac{108}{25}', 4.32]
** most_common: ('3', 4), gold_ans: ['3', 3]
** most_common: ('1', 4), gold_ans: ['4', 4]
** most_common: ('(1,4)', 1), gold_ans: ['(4,10)', 410]
** most_common: ('-12.5', 2), gold_ans: ['-10', -10]
** most_common: ('3', 6), gold_ans: ['3', 3]
** most_common: ('0.2222222222222222', 3), gold_ans: ['\\frac{2}{9}', 0.2222222222222222]
** most_common: ('108', 3), gold_ans: ['144', 144]
** most_common: ('\\frac{11}{36}', 7), gold_ans: ['\\frac{11}{36}', 0.3055555555555556]
** most_common: ('11', 4), gold_ans: ['16', 16]
** most_common: ('12-x', 1), gold_ans: ['4(3-x)(3+x)', None]
** most_common: ('0', 2), gold_ans: ['(1,2,3)', 123]
** most_common: ('\\frac{-49}{40}', 1), gold_ans: ['-56', -56]
** most_common: ('1001', 3), gold_ans: ['1016', 1016]
** most_common: ('2', 3), gold_ans: ['5', 5]
** most_common: ('1', 4), gold_ans: ['1', 1]
** most_common: ('1', 6), gold_ans: ['\\sqrt{2}', 1.4142135623730951]
** most_common: ('6', 4), gold_ans: ['6', 6]
** most_common: ('-44', 2), gold_ans: ['-102', -102]
** most_common: ('720', 8), gold_ans: ['360', 360]
** most_common: ('1', 3), gold_ans: ['1', 1]
** most_common: ('7(x-3)(x+3)', 6), gold_ans: ['7(x+3)(x-3)', None]
** most_common: ('undefined', 5), gold_ans: ['0', 0]
** most_common: ('18.8888888889\\ldots', 1), gold_ans: ['25\\pi', 78.53981633974483]
** most_common: ('6', 8), gold_ans: ['6', 6]
** most_common: ('8', 10), gold_ans: ['8', 8]
** most_common: ('0', 2), gold_ans: ['-\\frac{5}{4}', -1.25]
** most_common: ('2', 3), gold_ans: ['224', 224]
** most_common: ('5760', 1), gold_ans: ['3', 3]
** most_common: ('0.25', 2), gold_ans: ['432', 432]
** most_common: ('1', 12), gold_ans: ['1', 1]
** most_common: ('0', 10), gold_ans: ['0', 0]
** most_common: ('Nosolution', 2), gold_ans: ['-\\frac{11}{2}', -5.5]
** most_common: ('12', 4), gold_ans: ['13', 13]
** most_common: ('4,6,14,15', 2), gold_ans: ['4,6,14,15', 461415]
** most_common: ('53,760', 2), gold_ans: ['1023', 1023]
** most_common: ('(1,4)', 4), gold_ans: ['(1,4)', 14]
** most_common: ('2', 3), gold_ans: ['8', 8]
** most_common: ('2007', 3), gold_ans: ['1004', 1004]
** most_common: ('26', 1), gold_ans: ['16+12\\sqrt{2}', 32.97056274847714]
** most_common: ('-25', 12), gold_ans: ['-25', -25]
** most_common: ('(1,1)', 3), gold_ans: ['(4,1)', 41]
** most_common: ('4', 12), gold_ans: ['4', 4]
BackVerify: 850
** most_common: ('\\frac{\\sqrt{5}}{6}', 2), gold_ans: ['\\frac{1}{6}', 0.16666666666666666]
** most_common: ('-x+13', 5), gold_ans: ['5x-3', None]
** most_common: ('28', 2), gold_ans: ['28', 28]
** most_common: ('10', 12), gold_ans: ['10', 10]
** most_common: ('2.0', 3), gold_ans: ['(3,2,4)', 324]
** most_common: ('\\frac{1}{8}', 2), gold_ans: ['\\frac{3}{28}', 0.10714285714285714]
** most_common: ('0', 4), gold_ans: ['4', 4]
** most_common: ('4', 4), gold_ans: ['4\\sqrt{2}', 5.656854249492381]
** most_common: ('119', 8), gold_ans: ['119', 119]
** most_common: ('2', 4), gold_ans: ['\\frac{2}{3}', 0.6666666666666666]
** most_common: ('28', 8), gold_ans: ['28', 28]
** most_common: ('1150', 2), gold_ans: ['1160', 1160]
** most_common: ('7', 5), gold_ans: ['4', 4]
** most_common: ('0,7', 3), gold_ans: ['0,4', 4]
** most_common: ('0.8667', 8), gold_ans: ['\\frac{13}{15}', 0.8666666666666667]
** most_common: ('68', 11), gold_ans: ['68', 68]
** most_common: ('\\frac{10}{3}', 6), gold_ans: ['\\frac{10}{3}', 3.3333333333333335]
** most_common: ('6', 10), gold_ans: ['6', 6]
** most_common: ('190', 2), gold_ans: ['53', 53]
** most_common: ('64', 2), gold_ans: ['10', 10]
** most_common: ('0', 3), gold_ans: ['4022030', 4022030]
** most_common: ('1', 3), gold_ans: ['\\frac{c}{a}', None]
** most_common: ('22', 3), gold_ans: ['22', 22]
** most_common: ('64', 8), gold_ans: ['64', 64]
** most_common: ('3,2,1,0', 1), gold_ans: ['12,10,6', 12106]
** most_common: ('900', 5), gold_ans: ['90', 90]
** most_common: ('?(sincetheexactvalueofxcannotbefoundwithoutthevalueofy)', 1), gold_ans: ['14', 14]
** most_common: ('1', 8), gold_ans: ['1', 1]
** most_common: ('48', 6), gold_ans: ['48', 48]
** most_common: ('20.00', 1), gold_ans: ['6', 6]
** most_common: ('1', 5), gold_ans: ['5', 5]
** most_common: ('11', 12), gold_ans: ['11', 11]
** most_common: ('10', 6), gold_ans: ['100', 100]
** most_common: ('-5', 10), gold_ans: ['5', 5]
** most_common: ('2^(h-w)', 1), gold_ans: ['210', 210]
** most_common: ('0.0128', 3), gold_ans: ['\\frac{1904}{6561}', 0.29019966468526137]
** most_common: ('5', 3), gold_ans: ['5', 5]
** most_common: ('-1', 3), gold_ans: ['\\frac{1}{2004!}', 1.8752519366931903]
** most_common: ('158', 3), gold_ans: ['158', 158]
** most_common: ('undefined', 2), gold_ans: ['\\frac{16}{3}', 5.333333333333333]
** most_common: ('√173', 5), gold_ans: ['\\sqrt{22}', 4.69041575982343]
** most_common: ('E', 5), gold_ans: ['\\text{(P)}', None]
** most_common: ('4', 7), gold_ans: ['10', 10]
** most_common: ('90', 7), gold_ans: ['45', 45]
** most_common: ('16', 11), gold_ans: ['16', 16]
** most_common: ('1', 5), gold_ans: ['2004\\sqrt{2}-2003', 831.0839789956825]
** most_common: ('6', 2), gold_ans: ['18', 18]
** most_common: ('11', 6), gold_ans: ['11', 11]
** most_common: ('0', 3), gold_ans: ['4', 4]
** most_common: ('6.244998405188271', 1), gold_ans: ['80', 80]
BackVerify: 900
** most_common: ('1800', 3), gold_ans: ['17,280', 17280]
** most_common: ('\\frac{1}{6}', 5), gold_ans: ['\\frac{1}{6}', 0.16666666666666666]
** most_common: ('\\frac{3}{2}', 6), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('\\frac{3}{32}', 4), gold_ans: ['\\frac{3}{32}', 0.09375]
** most_common: ('76', 7), gold_ans: ['76', 76]
** most_common: ('\\frac{32}{3}', 1), gold_ans: ['40', 40]
** most_common: ('1', 3), gold_ans: ['4', 4]
** most_common: ('8', 3), gold_ans: ['8', 8]
** most_common: ('\\begin{pmatrix}\\frac{13}{5}\\\\frac{13}{5}\\end{pmatrix}', 1), gold_ans: ['\\begin{pmatrix}1/5\\-18/5\\end{pmatrix}', None]
** most_common: ('2+3√3', 2), gold_ans: ['(8,14)', 814]
** most_common: ('192', 9), gold_ans: ['192', 192]
** most_common: ('25', 5), gold_ans: ['25', 25]
** most_common: ('0.131', 1), gold_ans: ['\\frac{13}{17}', 0.7647058823529411]
** most_common: ('1', 6), gold_ans: ['1', 1]
** most_common: ('24', 3), gold_ans: ['0', 0]
** most_common: ('-12', 5), gold_ans: ['0', 0]
** most_common: ('1', 2), gold_ans: ['-\\frac{1}{2}', -0.5]
** most_common: ('2', 5), gold_ans: ['1', 1]
** most_common: ('33-3', 3), gold_ans: ['\\begin{pmatrix}3\\3\\-3\\end{pmatrix}', None]
** most_common: ('1', 12), gold_ans: ['1', 1]
** most_common: ('\\frac{19}{28}', 2), gold_ans: ['\\frac{5}{12}', 0.4166666666666667]
** most_common: ('1', 6), gold_ans: ['3', 3]
** most_common: ('3', 12), gold_ans: ['3', 3]
** most_common: ('-4', 3), gold_ans: ['8,-112', -104]
** most_common: ('2', 4), gold_ans: ['4', 4]
** most_common: ('56', 1), gold_ans: ['-128-128\\sqrt{3}i', None]
** most_common: ('1', 7), gold_ans: ['\\secx', None]
** most_common: ('0.42', 2), gold_ans: ['\\frac{7}{15}', 0.4666666666666667]
** most_common: ('8', 6), gold_ans: ['8', 8]
** most_common: ('3', 10), gold_ans: ['3', 3]
** most_common: ('156', 6), gold_ans: ['156', 156]
** most_common: ('27', 4), gold_ans: ['6', 6]
** most_common: ('4√3', 2), gold_ans: ['8\\sqrt{3}\\text{squareinches}', None]
** most_common: ('-2', 3), gold_ans: ['-1', -1]
** most_common: ('10', 6), gold_ans: ['10', 10]
** most_common: ('16000', 2), gold_ans: ['40,000', 40000]
** most_common: ('986473', 2), gold_ans: ['987,436', 987436]
** most_common: ('15', 4), gold_ans: ['15', 15]
** most_common: ('78', 5), gold_ans: ['18', 18]
** most_common: ('-56', 12), gold_ans: ['-56', -56]
** most_common: ('12', 7), gold_ans: ['8', 8]
** most_common: ('0.8', 2), gold_ans: ['1.8', 1.8]
** most_common: ('0', 2), gold_ans: ['\\begin{pmatrix}-3\\-2\\9\\end{pmatrix}', None]
** most_common: ('\\frac{2}{9}', 6), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('24', 10), gold_ans: ['24', 24]
** most_common: ('60', 7), gold_ans: ['60', 60]
** most_common: ('0', 6), gold_ans: ['0', 0]
** most_common: ('2', 10), gold_ans: ['2', 2]
** most_common: ('0.5', 3), gold_ans: ['\\frac{11}{18}', 0.6111111111111112]
** most_common: ('10', 9), gold_ans: ['10', 10]
BackVerify: 950
** most_common: ('0.6', 2), gold_ans: ['\\frac{9}{25}', 0.36]
** most_common: ('15', 7), gold_ans: ['15', 15]
** most_common: ('4π+24', 2), gold_ans: ['24+4\\pi', 36.56637061435917]
** most_common: ('350', 9), gold_ans: ['350', 350]
** most_common: ('-3', 3), gold_ans: ['\\begin{pmatrix}6\\-15\\end{pmatrix}', None]
** most_common: ('(22/5,3)', 3), gold_ans: ['(6,5)', 65]
** most_common: ('72', 10), gold_ans: ['72', 72]
** most_common: ('90', 1), gold_ans: ['70,110', 70110]
** most_common: ('12', 3), gold_ans: ['12', 12]
** most_common: ('0.875', 4), gold_ans: ['\\frac{7}{8}', 0.875]
** most_common: ('3', 4), gold_ans: ['9', 9]
** most_common: ('3', 8), gold_ans: ['3', 3]
** most_common: ('3', 3), gold_ans: ['-3', -3]
** most_common: ('4000', 11), gold_ans: ['4,000', 4000]
** most_common: ('0', 5), gold_ans: ['-1', -1]
** most_common: ('36', 5), gold_ans: ['36', 36]
** most_common: ('90', 4), gold_ans: ['\\text{east}', None]
** most_common: ('20', 1), gold_ans: ['5', 5]
** most_common: ('0.1667', 10), gold_ans: ['\\frac{1}{6}', 0.16666666666666666]
** most_common: ('72', 4), gold_ans: ['18\\sqrt{3}', 31.176914536239792]
** most_common: ('0.25', 3), gold_ans: ['\\frac{1}{5}', 0.2]
** most_common: ('1', 2), gold_ans: ['9', 9]
** most_common: ('4', 11), gold_ans: ['4', 4]
** most_common: ('9', 5), gold_ans: ['2', 2]
** most_common: ('4x(2x-1)(4x+5)', 4), gold_ans: ['4x(8x^2-x+5)', None]
** most_common: ('0.0103', 1), gold_ans: ['\\frac{5}{54}', 0.09259259259259259]
** most_common: ('3', 4), gold_ans: ['3', 3]
** most_common: ('0', 3), gold_ans: ['819', 819]
** most_common: ('4', 8), gold_ans: ['4', 4]
** most_common: ('0.5', 6), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('-1', 3), gold_ans: ['-\\frac{1}{7}', -0.14285714285714285]
** most_common: ('0', 4), gold_ans: ['-99', -99]
** most_common: ('111111', 2), gold_ans: ['F', None]
** most_common: ('65', 7), gold_ans: ['40', 40]
** most_common: ('π', 3), gold_ans: ['5\\pi', 15.707963267948966]
** most_common: ('64', 12), gold_ans: ['64', 64]
** most_common: ('3', 4), gold_ans: ['5', 5]
** most_common: ('0.25', 8), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('6', 6), gold_ans: ['15', 15]
** most_common: ('0.0625', 7), gold_ans: ['\\frac{1}{256}', 0.00390625]
** most_common: ('4', 5), gold_ans: ['\\frac{16\\sqrt{3}}{9}', 3.079201435678004]
** most_common: ('14,625', 3), gold_ans: ['58,500', 58500]
** most_common: ('-∞', 3), gold_ans: ['(-\\infty,0]', None]
** most_common: ('20', 4), gold_ans: ['20', 20]
** most_common: ('4-2π', 4), gold_ans: ['8-2\\pi', 1.7168146928204135]
** most_common: ('961', 2), gold_ans: ['12', 12]
** most_common: ('7', 8), gold_ans: ['7', 7]
** most_common: ('0', 2), gold_ans: ['\\sqrt{6}', 2.449489742783178]
** most_common: ('2970', 1), gold_ans: ['3', 3]
** most_common: ('0', 3), gold_ans: ['4', 4]
BackVerify: 1000
** most_common: ('1', 8), gold_ans: ['3', 3]
** most_common: ('(-∞,-1/2)∪(-1/2,∞)', 12), gold_ans: ['(-\\infty,-\\frac{1}{2})\\cup(-\\frac{1}{2},\\infty)', None]
** most_common: ('4', 3), gold_ans: ['13', 13]
** most_common: ('1', 4), gold_ans: ['1', 1]
** most_common: ('0,22.5,45,67.5', 1), gold_ans: ['27,63,99,135,171', 276399135171]
** most_common: ('12', 4), gold_ans: ['\\begin{pmatrix}1&2\\6&-1\\end{pmatrix}', None]
** most_common: ('2+2k', 5), gold_ans: ['2k+2', None]
** most_common: ('0', 6), gold_ans: ['1', 1]
** most_common: ('1475', 1), gold_ans: ['98,770', 98770]
** most_common: ('1', 8), gold_ans: ['1', 1]
** most_common: ('208', 7), gold_ans: ['152', 152]
** most_common: ('0.5', 2), gold_ans: ['\\frac{1+\\sqrt{5}}{4}', 0.8090169943749475]
** most_common: ('900', 3), gold_ans: ['900', 900]
** most_common: ('6', 3), gold_ans: ['5', 5]
** most_common: ('44', 2), gold_ans: ['54', 54]
** most_common: ('-\\frac{4}{3}', 4), gold_ans: ['-4', -4]
** most_common: ('0.4', 7), gold_ans: ['\\frac{3}{5}', 0.6]
** most_common: ('0.0000197', 1), gold_ans: ['\\frac{12}{5,525}', 2.4]
** most_common: ('4', 3), gold_ans: ['60', 60]
** most_common: ('90', 2), gold_ans: ['90', 90]
** most_common: ('\\frac{19}{4}', 1), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('22.5', 12), gold_ans: ['22.5', 22.5]
** most_common: ('60', 6), gold_ans: ['60', 60]
** most_common: ('9', 5), gold_ans: ['9', 9]
** most_common: ('13', 10), gold_ans: ['13', 13]
** most_common: ('(1,0,0)', 2), gold_ans: ['(\\frac{11}{15},\\frac{11}{60},\\frac{1}{12})', 0.7333333333333333]
** most_common: ('0.9', 5), gold_ans: ['\\frac{1}{5}', 0.2]
** most_common: ('49', 9), gold_ans: ['0', 0]
** most_common: ('\\frac{-\\sqrt{[}3]{4}}{2^2}+2i\\sqrt{[}3]{4}-\\frac{\\sqrt{[}3]{4}}{2}-i\\frac{\\sqrt{[}3]{4}}{2}', 1), gold_ans: ['-375+500i', None]
** most_common: ('282.6', 9), gold_ans: ['90\\pi', 282.7433388230814]
** most_common: ('3√10', 1), gold_ans: ['\\frac{15\\sqrt{7}}{14}', 2.834733547569204]
** most_common: ('2√2', 1), gold_ans: ['\\sqrt{17}', 4.123105625617661]
** most_common: ('4', 3), gold_ans: ['4', 4]
** most_common: ('138', 4), gold_ans: ['69', 69]
** most_common: ('10', 12), gold_ans: ['10', 10]
** most_common: ('1', 3), gold_ans: ['1', 1]
** most_common: ('234000', 2), gold_ans: ['54000', 54000]
** most_common: ('1', 12), gold_ans: ['1', 1]
** most_common: ('2.6', 7), gold_ans: ['\\frac{13}{5}', 2.6]
** most_common: ('5√21', 4), gold_ans: ['5\\sqrt{21}', 22.9128784747792]
** most_common: ('63', 2), gold_ans: ['49', 49]
** most_common: ('36√5', 2), gold_ans: ['72+72\\sqrt{2}', 173.82337649086284]
** most_common: ('165', 5), gold_ans: ['9240', 9240]
** most_common: ('2', 3), gold_ans: ['-2', -2]
** most_common: ('18', 5), gold_ans: ['18', 18]
** most_common: ('2', 3), gold_ans: ['9', 9]
** most_common: ('0.5', 2), gold_ans: ['\\frac{\\sqrt{6}}{3}', 0.816496580927726]
** most_common: ('2548', 2), gold_ans: ['2743', 2743]
** most_common: ('8', 3), gold_ans: ['3', 3]
** most_common: ('20.0', 5), gold_ans: ['20', 20]
BackVerify: 1050
** most_common: ('0', 2), gold_ans: ['2', 2]
** most_common: ('-4,4', 4), gold_ans: ['\\frac{9}{4},-\\frac{9}{4}', 2.25]
** most_common: ('12', 2), gold_ans: ['28800', 28800]
** most_common: ('130', 9), gold_ans: ['130', 130]
** most_common: ('102', 3), gold_ans: ['103', 103]
** most_common: ('5', 12), gold_ans: ['5', 5]
** most_common: ('720', 4), gold_ans: ['60', 60]
** most_common: ('0.0667', 2), gold_ans: ['\\frac{1}{12}', 0.08333333333333333]
** most_common: ('6', 3), gold_ans: ['6', 6]
** most_common: ('50', 3), gold_ans: ['50', 50]
** most_common: ('9', 1), gold_ans: ['15', 15]
** most_common: ('0.09523809523809524', 2), gold_ans: ['\\frac{2}{21}', 0.09523809523809523]
** most_common: ('20', 12), gold_ans: ['20', 20]
** most_common: ('2', 2), gold_ans: ['6', 6]
** most_common: ('6439', 1), gold_ans: ['9604', 9604]
** most_common: ('783,200', 1), gold_ans: ['864000', 864000]
** most_common: ('(-∞,-3)∪(-3,-1)∪(-1,∞)', 4), gold_ans: ['(-\\infty,-2]\\cup[-1,\\infty)', None]
** most_common: ('1', 6), gold_ans: ['1', 1]
** most_common: ('111', 3), gold_ans: ['777', 777]
** most_common: ('2', 4), gold_ans: ['2', 2]
** most_common: ('4', 4), gold_ans: ['4', 4]
** most_common: ('2', 3), gold_ans: ['134', 134]
** most_common: ('even', 10), gold_ans: ['\\text{even}', None]
** most_common: ('C,E', 3), gold_ans: ['\\text{A,D}', None]
** most_common: ('16', 3), gold_ans: ['-128', -128]
** most_common: ('48', 3), gold_ans: ['24', 24]
** most_common: ('-7', 12), gold_ans: ['-49', -49]
** most_common: ('-5', 10), gold_ans: ['-5', -5]
** most_common: ('3', 4), gold_ans: ['7', 7]
** most_common: ('12', 9), gold_ans: ['-2', -2]
** most_common: ('0.8660254037844386', 4), gold_ans: ['\\frac{\\sqrt{3}}{2}', 0.8660254037844386]
** most_common: ('9a^2', 2), gold_ans: ['65536', 65536]
** most_common: ('0', 4), gold_ans: ['-150', -150]
** most_common: ('10', 11), gold_ans: ['10', 10]
** most_common: ('90', 2), gold_ans: ['90', 90]
** most_common: ('45', 10), gold_ans: ['45', 45]
** most_common: ('0.1175', 3), gold_ans: ['\\frac{2}{17}', 0.11764705882352941]
** most_common: ('15', 6), gold_ans: ['6', 6]
** most_common: ('-7', 6), gold_ans: ['-16', -16]
** most_common: ('4', 8), gold_ans: ['6', 6]
** most_common: ('0', 5), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('0', 7), gold_ans: ['-1', -1]
** most_common: ('-9', 5), gold_ans: ['-15', -15]
** most_common: ('6', 9), gold_ans: ['6', 6]
** most_common: ('5+6√2', 9), gold_ans: ['5+6\\sqrt{2}', 13.48528137423857]
** most_common: ('100', 8), gold_ans: ['140', 140]
** most_common: ('0.1111111111111111', 2), gold_ans: ['-\\frac{7}{9}', -0.7777777777777778]
** most_common: ('23,500-4500\\pi', 2), gold_ans: ['27000-4500\\pi', 12862.83305884593]
** most_common: ('\\sqrt{7200x^3}', 2), gold_ans: ['36x\\sqrt{35x}', None]
** most_common: ('[-2,7]', 12), gold_ans: ['x\\in[-2,7]', None]
BackVerify: 1100
** most_common: ('6', 3), gold_ans: ['9', 9]
** most_common: ('6', 9), gold_ans: ['6', 6]
** most_common: ('4', 5), gold_ans: ['4', 4]
** most_common: ('5', 2), gold_ans: ['5', 5]
** most_common: ('38.252', 1), gold_ans: ['18.90', 18.9]
** most_common: ('-8', 4), gold_ans: ['-64', -64]
** most_common: ('216', 11), gold_ans: ['216', 216]
** most_common: ('2sqrt(15)', 1), gold_ans: ['2\\sqrt{22}', 9.38083151964686]
** most_common: ('-7', 10), gold_ans: ['-7', -7]
** most_common: ('6.75', 4), gold_ans: ['6\\frac{3}{4}', 15.75]
** most_common: ('0', 2), gold_ans: ['23.31', 23.31]
** most_common: ('3', 7), gold_ans: ['4', 4]
** most_common: ('60', 4), gold_ans: ['60', 60]
** most_common: ('16', 5), gold_ans: ['48', 48]
** most_common: ('485000', 1), gold_ans: ['115,000', 115000]
** most_common: ('1', 2), gold_ans: ['\\frac{2007}{2008}', 0.9995019920318725]
** most_common: ('\\frac{200}{49}', 1), gold_ans: ['40', 40]
** most_common: ('0', 2), gold_ans: ['6', 6]
** most_common: ('30', 3), gold_ans: ['30', 30]
** most_common: ('374', 1), gold_ans: ['556', 556]
** most_common: ('\\frac{1}{2}', 1), gold_ans: ['\\frac{5}{9}', 0.5555555555555556]
** most_common: ('0', 5), gold_ans: ['4', 4]
** most_common: ('0.707106781', 5), gold_ans: ['\\frac{\\sqrt{2}}{2}', 0.7071067811865476]
** most_common: ('93', 7), gold_ans: ['47', 47]
** most_common: ('740688', 1), gold_ans: ['1,000,000', 1000000]
** most_common: ('-4', 4), gold_ans: ['-5', -5]
** most_common: ('2', 8), gold_ans: ['1', 1]
** most_common: ('78', 3), gold_ans: ['10', 10]
** most_common: ('1', 5), gold_ans: ['1', 1]
** most_common: ('0.6', 2), gold_ans: ['\\frac{24}{25}', 0.96]
** most_common: ('-', 1), gold_ans: ['129', 129]
** most_common: ('0', 5), gold_ans: ['0', 0]
** most_common: ('5√2', 10), gold_ans: ['(5\\sqrt{2},5\\sqrt{2})', None]
** most_common: ('0.0833', 10), gold_ans: ['\\frac{1}{12}', 0.08333333333333333]
** most_common: ('1', 7), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('45', 7), gold_ans: ['45', 45]
** most_common: ('(5,-10)', 7), gold_ans: ['(5,-10)', -5]
** most_common: ('0', 4), gold_ans: ['\\pi', 3.141592653589793]
** most_common: ('1', 5), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('292i', 4), gold_ans: ['292i', None]
** most_common: ('30', 5), gold_ans: ['30', 30]
** most_common: ('0', 2), gold_ans: ['92', 92]
** most_common: ('\\frac{3\\pi}{4}', 5), gold_ans: ['\\frac{3\\pi}{4}', 2.356194490192345]
** most_common: ('5', 6), gold_ans: ['2', 2]
** most_common: ('100', 11), gold_ans: ['100', 100]
** most_common: ('\\frac{5}{2}+4i', 2), gold_ans: ['3+5i', None]
** most_common: ('74,966', 1), gold_ans: ['74726', 74726]
** most_common: ('12', 3), gold_ans: ['12', 12]
** most_common: ('3.33', 1), gold_ans: ['25', 25]
** most_common: ('100', 5), gold_ans: ['140', 140]
BackVerify: 1150
** most_common: ('0', 3), gold_ans: ['\\text{E}', None]
** most_common: ('5', 3), gold_ans: ['5', 5]
** most_common: ('-3,3/17', 1), gold_ans: ['\\frac{2}{5}', 0.4]
** most_common: ('75', 3), gold_ans: ['50', 50]
** most_common: ('3', 8), gold_ans: ['3', 3]
** most_common: ('0', 3), gold_ans: ['6710', 6710]
** most_common: ('5/√89', 2), gold_ans: ['\\frac{\\sqrt{39}}{8}', 0.7806247497997998]
** most_common: ('1', 6), gold_ans: ['0', 0]
** most_common: ('1020', 3), gold_ans: ['1200_7', 12007]
** most_common: ('2', 8), gold_ans: ['1', 1]
** most_common: ('5', 7), gold_ans: ['5', 5]
** most_common: ('0', 6), gold_ans: ['\\frac{3}{4}', 0.75]
** most_common: ('37.68', 3), gold_ans: ['12\\pi', 37.69911184307752]
** most_common: ('0', 7), gold_ans: ['0', 0]
** most_common: ('\\frac{13}{144}', 2), gold_ans: ['\\frac{13}{144}', 0.09027777777777778]
** most_common: ('0.5', 4), gold_ans: ['\\frac{1}{6}', 0.16666666666666666]
** most_common: ('3', 4), gold_ans: ['3', 3]
** most_common: ('\\frac{2}{3}', 11), gold_ans: ['\\frac{3}{4}', 0.75]
** most_common: ('2', 9), gold_ans: ['6', 6]
** most_common: ('1', 7), gold_ans: ['2', 2]
** most_common: ('4.67', 3), gold_ans: ['\\frac{14}{3}', 4.666666666666667]
** most_common: ('5', 3), gold_ans: ['\\frac{27}{10}', 2.7]
** most_common: ('27', 4), gold_ans: ['12', 12]
** most_common: ('64', 10), gold_ans: ['64', 64]
** most_common: ('19', 12), gold_ans: ['19', 19]
** most_common: ('approximately1.222', 1), gold_ans: ['74', 74]
** most_common: ('0.0129', 4), gold_ans: ['\\frac{11}{850}', 0.012941176470588235]
** most_common: ('38.68', 5), gold_ans: ['36', 36]
** most_common: ('-4', 12), gold_ans: ['-4', -4]
** most_common: ('0.5556', 3), gold_ans: ['\\frac{5}{9}', 0.5555555555555556]
** most_common: ('80', 10), gold_ans: ['80', 80]
** most_common: ('10', 4), gold_ans: ['20', 20]
** most_common: ('-4', 7), gold_ans: ['-4', -4]
** most_common: ('-2', 12), gold_ans: ['-2', -2]
** most_common: ('7.5', 5), gold_ans: ['7.5', 7.5]
** most_common: ('(√80,π/4,π/6)', 1), gold_ans: ['(8\\sqrt{2},\\frac{\\pi}{4},\\frac{\\pi}{6})', None]
** most_common: ('6', 3), gold_ans: ['54', 54]
** most_common: ('60', 2), gold_ans: ['90', 90]
** most_common: ('192π', 3), gold_ans: ['96\\pi+120', 421.59289474462014]
** most_common: ('144', 3), gold_ans: ['144', 144]
** most_common: ('6', 2), gold_ans: ['3(x-2)(x+1)', None]
** most_common: ('0', 2), gold_ans: ['0', 0]
** most_common: ('9.0', 3), gold_ans: ['4.5', 4.5]
** most_common: ('1', 4), gold_ans: ['3', 3]
** most_common: ('8', 7), gold_ans: ['9', 9]
** most_common: ('10080', 2), gold_ans: ['10,236', 10236]
** most_common: ('1.5625', 7), gold_ans: ['\\cfrac{25}{16}', None]
** most_common: ('49', 6), gold_ans: ['15', 15]
** most_common: ('8', 6), gold_ans: ['6', 6]
** most_common: ('0,90', 2), gold_ans: ['45,135', 45135]
BackVerify: 1200
** most_common: ('1', 6), gold_ans: ['1', 1]
** most_common: ('7', 10), gold_ans: ['7', 7]
** most_common: ('75', 4), gold_ans: ['75', 75]
** most_common: ('1', 9), gold_ans: ['1', 1]
** most_common: ('9', 4), gold_ans: ['11', 11]
** most_common: ('-2,-1,1,2', 2), gold_ans: ['-2,1', -21]
** most_common: ('\\begin{pmatrix}\\frac{4}{5}&-\\frac{1}{5}\\-\\frac{1}{5}&\\frac{9}{5}\\end{pmatrix}', 1), gold_ans: ['\\begin{pmatrix}-4/5&-3/5\\-3/5&4/5\\end{pmatrix}', None]
** most_common: ('(1,10)', 3), gold_ans: ['(2,5)', 25]
** most_common: ('7.8128', 1), gold_ans: ['\\frac{14\\sqrt{3}}{3}', 8.082903768654761]
** most_common: ('0.035', 5), gold_ans: ['\\frac{5}{143}', 0.03496503496503497]
** most_common: ('1', 2), gold_ans: ['89', 89]
** most_common: ('3', 2), gold_ans: ['-\\frac{3}{2},-1,7', -1.5]
** most_common: ('2', 3), gold_ans: ['-3', -3]
** most_common: ('[0,1]', 4), gold_ans: ['[1,4]', 14]
** most_common: ('0', 3), gold_ans: ['-1', -1]
** most_common: ('0.3', 6), gold_ans: ['\\frac{3}{10}', 0.3]
** most_common: ('[0,25]', 2), gold_ans: ['[0,25]', None]
** most_common: ('16', 3), gold_ans: ['0', 0]
** most_common: ('39916800', 2), gold_ans: ['34,650', 34650]
** most_common: ('6', 4), gold_ans: ['6', 6]
** most_common: ('-3', 8), gold_ans: ['-3', -3]
** most_common: ('\\frac{3\\pi}{4}', 4), gold_ans: ['\\frac{3\\pi}{4}', 2.356194490192345]
** most_common: ('19', 6), gold_ans: ['19', 19]
** most_common: ('1251', 12), gold_ans: ['1251', 1251]
** most_common: ('0.0833', 6), gold_ans: ['\\frac{1}{12}', 0.08333333333333333]
** most_common: ('835', 5), gold_ans: ['835', 835]
** most_common: ('864', 5), gold_ans: ['144', 144]
** most_common: ('5.0', 4), gold_ans: ['5', 5]
** most_common: ('15', 11), gold_ans: ['15', 15]
** most_common: ('B', 4), gold_ans: ['\\text{(D)}', None]
** most_common: ('24', 7), gold_ans: ['24', 24]
** most_common: ('1', 2), gold_ans: ['3996', 3996]
** most_common: ('1275', 11), gold_ans: ['1275', 1275]
** most_common: ('-36', 7), gold_ans: ['\\begin{pmatrix}11\\-36\\-3\\end{pmatrix}', None]
** most_common: ('4', 3), gold_ans: ['3', 3]
** most_common: ('5r^5', 6), gold_ans: ['5r^5', None]
** most_common: ('1', 5), gold_ans: ['0', 0]
** most_common: ('\\frac{25}{8}', 8), gold_ans: ['\\frac{25}{8}', 3.125]
** most_common: ('2', 5), gold_ans: ['2+\\sqrt{3}', 3.732050807568877]
** most_common: ('234', 8), gold_ans: ['78', 78]
** most_common: ('7', 3), gold_ans: ['8', 8]
** most_common: ('14', 3), gold_ans: ['14', 14]
** most_common: ('130', 6), gold_ans: ['130', 130]
** most_common: ('6', 4), gold_ans: ['109', 109]
** most_common: ('5', 2), gold_ans: ['35', 35]
** most_common: ('\\frac{2}{3}', 5), gold_ans: ['\\frac{4}{3}', 1.3333333333333333]
** most_common: ('(0,2\\sqrt{[}3]{\\tan^210})', 1), gold_ans: ['(2,-1)', 1]
** most_common: ('390625', 2), gold_ans: ['1,000,000,000', 1000000000]
** most_common: ('260', 11), gold_ans: ['260', 260]
** most_common: ('12', 6), gold_ans: ['14', 14]
BackVerify: 1250
** most_common: ('1', 9), gold_ans: ['1', 1]
** most_common: ('\\frac{757}{10000}', 1), gold_ans: ['\\frac{19}{330}', 0.05757575757575758]
** most_common: ('-80', 5), gold_ans: ['15x-80', None]
** most_common: ('20', 4), gold_ans: ['20', 20]
** most_common: ('6', 3), gold_ans: ['96', 96]
** most_common: ('680', 12), gold_ans: ['680', 680]
** most_common: ('2', 3), gold_ans: ['6', 6]
** most_common: ('88.5', 2), gold_ans: ['79', 79]
** most_common: ('144', 4), gold_ans: ['200', 200]
** most_common: ('2tan(x)', 1), gold_ans: ['2-2\\sqrt{2}', -0.8284271247461901]
** most_common: ('1', 2), gold_ans: ['1', 1]
** most_common: ('81', 4), gold_ans: ['243', 243]
** most_common: ('10', 8), gold_ans: ['10', 10]
** most_common: ('1', 4), gold_ans: ['-7', -7]
** most_common: ('0.0031', 2), gold_ans: ['\\frac{7}{72}', 0.09722222222222222]
** most_common: ('50', 6), gold_ans: ['50', 50]
** most_common: ('41', 2), gold_ans: ['697', 697]
** most_common: ('100', 4), gold_ans: ['29800', 29800]
** most_common: ('9', 3), gold_ans: ['451', 451]
** most_common: ('0.5', 3), gold_ans: ['\\frac{1023}{1024}', 0.9990234375]
** most_common: ('3', 5), gold_ans: ['2', 2]
** most_common: ('8', 3), gold_ans: ['9', 9]
** most_common: ('\\frac{3\\sqrt{3}}{4}', 4), gold_ans: ['\\frac{3\\sqrt{3}}{4}', 1.299038105676658]
** most_common: ('49', 4), gold_ans: ['49', 49]
** most_common: ('36', 11), gold_ans: ['36', 36]
** most_common: ('2', 2), gold_ans: ['44', 44]
** most_common: ('181', 12), gold_ans: ['181', 181]
** most_common: ('47', 3), gold_ans: ['133', 133]
** most_common: ('1680', 1), gold_ans: ['336', 336]
** most_common: ('8', 2), gold_ans: ['28', 28]
** most_common: ('104', 3), gold_ans: ['104', 104]
** most_common: ('4410.0', 2), gold_ans: ['2100', 2100]
** most_common: ('1+3i', 3), gold_ans: ['9+11i', None]
** most_common: ('60', 4), gold_ans: ['120', 120]
** most_common: ('0', 5), gold_ans: ['5x-7y+11z+4=0', None]
** most_common: ('48', 5), gold_ans: ['48', 48]
** most_common: ('30', 11), gold_ans: ['30', 30]
** most_common: ('2', 8), gold_ans: ['2', 2]
** most_common: ('3-2f(x)', 9), gold_ans: ['3-2f(x)', None]
** most_common: ('12π', 12), gold_ans: ['12\\pi', 37.69911184307752]
** most_common: ('46.5', 2), gold_ans: ['47', 47]
** most_common: ('72', 4), gold_ans: ['72', 72]
** most_common: ('1', 4), gold_ans: ['12', 12]
** most_common: ('1', 1), gold_ans: ['3,11,33', 31133]
** most_common: ('0', 5), gold_ans: ['-\\frac{1}{16}', -0.0625]
** most_common: ('102', 3), gold_ans: ['39', 39]
** most_common: ('23.5', 6), gold_ans: ['-23.5', -23.5]
** most_common: ('1', 3), gold_ans: ['5', 5]
** most_common: ('9', 4), gold_ans: ['8', 8]
** most_common: ('18.5', 1), gold_ans: ['27.2', 27.2]
BackVerify: 1300
** most_common: ('15', 3), gold_ans: ['7', 7]
** most_common: ('1', 6), gold_ans: ['2', 2]
** most_common: ('-0.8660254037844386', 6), gold_ans: ['-\\frac{\\sqrt{3}}{2}', -0.8660254037844386]
** most_common: ('2', 6), gold_ans: ['2', 2]
** most_common: ('11', 3), gold_ans: ['7', 7]
** most_common: ('-5.5', 2), gold_ans: ['-6.5', -6.5]
** most_common: ('96', 2), gold_ans: ['64', 64]
** most_common: ('268', 2), gold_ans: ['268', 268]
** most_common: ('3', 2), gold_ans: ['-3', -3]
** most_common: ('1', 4), gold_ans: ['19', 19]
** most_common: ('-7', 12), gold_ans: ['-7', -7]
** most_common: ('-13,3', 3), gold_ans: ['[-13,3]', -133]
** most_common: ('\\frac{7}{2}', 1), gold_ans: ['\\frac{63}{8}', 7.875]
** most_common: ('20', 4), gold_ans: ['20', 20]
** most_common: ('\\frac{2}{5}', 4), gold_ans: ['\\frac{7}{20}', 0.35]
** most_common: ('32', 2), gold_ans: ['53', 53]
** most_common: ('10', 11), gold_ans: ['10', 10]
** most_common: ('8', 5), gold_ans: ['8', 8]
** most_common: ('4', 9), gold_ans: ['4', 4]
** most_common: ('\\frac{15}{17}', 1), gold_ans: ['\\frac{5}{13}', 0.38461538461538464]
** most_common: ('(B)Circle', 6), gold_ans: ['\\text{(D)}', None]
** most_common: ('38', 2), gold_ans: ['\\frac{240}{13}', 18.46153846153846]
** most_common: ('10', 2), gold_ans: ['\\frac{7}{2}', 3.5]
** most_common: ('2x^2-18', 7), gold_ans: ['2x^2-18', None]
** most_common: ('6', 2), gold_ans: ['\\sqrt{6}+3\\sqrt{2}', 6.6921304299024635]
** most_common: ('6', 11), gold_ans: ['6', 6]
** most_common: ('12', 4), gold_ans: ['12', 12]
** most_common: ('1', 10), gold_ans: ['1', 1]
** most_common: ('19', 12), gold_ans: ['19', 19]
** most_common: ('A', 3), gold_ans: ['\\text{(A)}', None]
** most_common: ('0', 3), gold_ans: ['\\frac{\\sqrt{2}}{20}', 0.07071067811865475]
** most_common: ('6', 4), gold_ans: ['\\mbox{Saturday}', None]
** most_common: ('\\frac{2}{21}', 4), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('21', 4), gold_ans: ['26', 26]
** most_common: ('2.0', 1), gold_ans: ['3.5', 3.5]
** most_common: ('0.055555', 1), gold_ans: ['\\frac{2}{5}', 0.4]
** most_common: ('0', 1), gold_ans: ['1', 1]
** most_common: ('5', 5), gold_ans: ['5', 5]
** most_common: ('48', 11), gold_ans: ['48', 48]
** most_common: ('6', 7), gold_ans: ['6', 6]
** most_common: ('-0.8660254037844386', 6), gold_ans: ['-\\frac{1}{2}', -0.5]
** most_common: ('0.5', 5), gold_ans: ['\\frac{1}{16}', 0.0625]
** most_common: ('0', 8), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('2', 5), gold_ans: ['\\pi-2', 1.1415926535897933]
** most_common: ('30', 3), gold_ans: ['-10', -10]
** most_common: ('372', 2), gold_ans: ['1208', 1208]
** most_common: ('(-2,5,-1)', 5), gold_ans: ['(-2,5,-1)', -26]
** most_common: ('\\frac{2}{5}', 2), gold_ans: ['\\frac{2}{5}', 0.4]
** most_common: ('-1', 11), gold_ans: ['-1', -1]
** most_common: ('6', 3), gold_ans: ['10', 10]
BackVerify: 1350
** most_common: ('200', 2), gold_ans: ['90', 90]
** most_common: ('0.381', 2), gold_ans: ['\\frac{8}{21}', 0.38095238095238093]
** most_common: ('198', 5), gold_ans: ['198', 198]
** most_common: ('5040', 1), gold_ans: ['6', 6]
** most_common: ('-\\frac{19}{21}', 2), gold_ans: ['\\frac{19}{21}', 0.9047619047619048]
** most_common: ('\\frac{1}{10}', 3), gold_ans: ['\\frac{1}{5}', 0.2]
** most_common: ('80', 3), gold_ans: ['110', 110]
** most_common: ('32000', 2), gold_ans: ['32,000', 32000]
** most_common: ('8.5', 2), gold_ans: ['2x-1', None]
** most_common: ('1', 7), gold_ans: ['7', 7]
** most_common: ('78533', 1), gold_ans: ['10', 10]
** most_common: ('-\\frac{4}{5}', 4), gold_ans: ['-\\frac{4}{5}', -0.8]
** most_common: ('1', 5), gold_ans: ['0,1', 1]
** most_common: ('39.68', 4), gold_ans: ['\\text{Navin}', None]
** most_common: ('785.25π', 3), gold_ans: ['525\\pi', 1649.3361431346414]
** most_common: ('0.1667(12/720)', 1), gold_ans: ['\\frac{1}{15}', 0.06666666666666667]
** most_common: ('18', 6), gold_ans: ['18', 18]
** most_common: ('13', 6), gold_ans: ['13', 13]
** most_common: ('2', 4), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('\\frac{1}{10}', 8), gold_ans: ['\\frac{1}{10}', 0.1]
** most_common: ('5', 6), gold_ans: ['-5', -5]
** most_common: ('31', 4), gold_ans: ['1024', 1024]
** most_common: ('5', 6), gold_ans: ['5', 5]
** most_common: ('12.6', 8), gold_ans: ['12\\frac{3}{5}', 24.6]
** most_common: ('1', 12), gold_ans: ['1', 1]
** most_common: ('-3', 5), gold_ans: ['-3', -3]
** most_common: ('4.95', 11), gold_ans: ['4.95', 4.95]
** most_common: ('76', 11), gold_ans: ['76', 76]
** most_common: ('0', 2), gold_ans: ['81', 81]
** most_common: ('3', 2), gold_ans: ['2\\sqrt{2}+\\sqrt{6}', 5.277916867529369]
** most_common: ('0.15', 12), gold_ans: ['0.15', 0.15]
** most_common: ('45', 6), gold_ans: ['5', 5]
** most_common: ('13', 3), gold_ans: ['2', 2]
** most_common: ('0.1833', 9), gold_ans: ['\\frac{11}{60}', 0.18333333333333332]
** most_common: ('\\frac{8}{3}', 1), gold_ans: ['20', 20]
** most_common: ('0', 3), gold_ans: ['1', 1]
** most_common: ('5', 2), gold_ans: ['\\frac{\\sqrt{6}}{6}', 0.408248290463863]
** most_common: ('2', 4), gold_ans: ['576', 576]
** most_common: ('-1', 5), gold_ans: ['0', 0]
** most_common: ('0', 12), gold_ans: ['0', 0]
** most_common: ('1010000', 4), gold_ans: ['1000000', 1000000]
** most_common: ('80', 2), gold_ans: ['50', 50]
** most_common: ('-15', 1), gold_ans: ['\\begin{pmatrix}-7\\16\\5\\end{pmatrix}', None]
** most_common: ('(-2,-4)', 2), gold_ans: ['(-\\frac{2}{7},-\\frac{34}{7})', -0.2857142857142857]
** most_common: ('31', 3), gold_ans: ['248', 248]
** most_common: ('16', 4), gold_ans: ['16', 16]
** most_common: ('undefined', 2), gold_ans: ['\\frac{46}{3}', 15.333333333333334]
** most_common: ('0.666666666666667', 1), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('97', 6), gold_ans: ['97', 97]
** most_common: ('2', 3), gold_ans: ['49', 49]
BackVerify: 1400
** most_common: ('924', 2), gold_ans: ['214', 214]
** most_common: ('12.49', 2), gold_ans: ['13', 13]
** most_common: ('1.071', 1), gold_ans: ['\\frac{5049}{20200}', 0.24995049504950495]
** most_common: ('54.5', 2), gold_ans: ['59', 59]
** most_common: ('1', 3), gold_ans: ['\\begin{pmatrix}2&7\\13&-2\\end{pmatrix}', None]
** most_common: ('0', 5), gold_ans: ['2', 2]
** most_common: ('1981', 2), gold_ans: ['13', 13]
** most_common: ('2', 3), gold_ans: ['-2,-1,1,2', -114]
** most_common: ('-0.5', 1), gold_ans: ['-0.50', -0.5]
** most_common: ('2', 3), gold_ans: ['4', 4]
** most_common: ('1', 3), gold_ans: ['84', 84]
** most_common: ('99', 1), gold_ans: ['44', 44]
** most_common: ('1', 2), gold_ans: ['3', 3]
** most_common: ('30.96', 2), gold_ans: ['45', 45]
** most_common: ('14', 4), gold_ans: ['\\frac{14}{13}', 1.0769230769230769]
** most_common: ('11', 2), gold_ans: ['14', 14]
** most_common: ('6', 5), gold_ans: ['6', 6]
** most_common: ('\\frac{155}{3}', 2), gold_ans: ['\\frac{31}{6}', 5.166666666666667]
** most_common: ('6x', 2), gold_ans: ['\\frac{35}{4}', 8.75]
** most_common: ('0.375', 2), gold_ans: ['\\frac{3}{8}', 0.375]
** most_common: ('B', 8), gold_ans: ['\\text{B}', None]
** most_common: ('\\frac{\\frac{1}{29}-\\tan(\\frac{B}{2})}{1+\\frac{1}{29}\\tan(\\frac{B}{2})}', 1), gold_ans: ['-\\frac{1}{14}', -0.07142857142857142]
** most_common: ('4', 2), gold_ans: ['6\\sqrt{6}', 14.696938456699069]
** most_common: ('4', 10), gold_ans: ['4', 4]
** most_common: ('-4', 7), gold_ans: ['-4', -4]
** most_common: ('0.5', 2), gold_ans: ['\\frac{1}{5}+\\frac{3}{5}i', None]
** most_common: ('7', 6), gold_ans: ['7', 7]
** most_common: ('943', 3), gold_ans: ['891', 891]
** most_common: ('\\frac{20}{3}', 1), gold_ans: ['\\frac{109}{150}', 0.7266666666666667]
** most_common: ('3722', 3), gold_ans: ['3702', 3702]
** most_common: ('0', 3), gold_ans: ['0', 0]
** most_common: ('2', 4), gold_ans: ['2', 2]
** most_common: ('51.43', 6), gold_ans: ['36', 36]
** most_common: ('5000', 12), gold_ans: ['5000', 5000]
** most_common: ('2x^5', 3), gold_ans: ['-x^7-2x^5+x^2', None]
** most_common: ('137.5', 10), gold_ans: ['137\\frac{1}{2}', 685.5]
** most_common: ('1', 4), gold_ans: ['5x^2+21x', None]
** most_common: ('87', 1), gold_ans: ['1414', 1414]
** most_common: ('117', 4), gold_ans: ['17', 17]
** most_common: ('3', 5), gold_ans: ['3', 3]
** most_common: ('8.07', 1), gold_ans: ['\\frac{44}{3}', 14.666666666666666]
** most_common: ('(1,2)', 1), gold_ans: ['(\\frac{27}{8},\\frac{15}{8})', 3.375]
** most_common: ('8', 5), gold_ans: ['8', 8]
** most_common: ('288', 5), gold_ans: ['288', 288]
** most_common: ('90', 5), gold_ans: ['135', 135]
** most_common: ('3', 2), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('B,C,D,F,G', 3), gold_ans: ['\\text{C,F,H}', None]
** most_common: ('56', 8), gold_ans: ['56', 56]
** most_common: ('34.98', 5), gold_ans: ['\\text{C}', None]
** most_common: ('75', 9), gold_ans: ['75', 75]
BackVerify: 1450
** most_common: ('3.57142857142857', 4), gold_ans: ['\\frac{7}{24}', 0.2916666666666667]
** most_common: ('7', 3), gold_ans: ['7', 7]
** most_common: ('26', 3), gold_ans: ['11', 11]
** most_common: ('6√35', 3), gold_ans: ['12\\sqrt{35}', 70.9929573971954]
** most_common: ('120', 3), gold_ans: ['120', 120]
** most_common: ('1', 8), gold_ans: ['1', 1]
** most_common: ('-5', 9), gold_ans: ['-5', -5]
** most_common: ('3003003', 4), gold_ans: ['90{,}900{,}909', None]
** most_common: ('12', 5), gold_ans: ['12', 12]
** most_common: ('(0,0)', 2), gold_ans: ['(-7,10)', -710]
** most_common: ('22', 2), gold_ans: ['14', 14]
** most_common: ('300', 3), gold_ans: ['400', 400]
** most_common: ('9', 10), gold_ans: ['9', 9]
** most_common: ('0,π,π/6,5π/6', 1), gold_ans: ['\\frac{\\pi}{4},\\frac{9\\pi}{4}', None]
** most_common: ('764', 1), gold_ans: ['298', 298]
** most_common: ('3.33', 6), gold_ans: ['\\frac{10}{3}', 3.3333333333333335]
** most_common: ('72', 5), gold_ans: ['72', 72]
** most_common: ('23419', 2), gold_ans: ['0', 0]
** most_common: ('2', 2), gold_ans: ['34', 34]
** most_common: ('64', 12), gold_ans: ['64', 64]
** most_common: ('563.51', 12), gold_ans: ['563.51', 563.51]
** most_common: ('3', 2), gold_ans: ['0', 0]
** most_common: ('4800', 8), gold_ans: ['4800', 4800]
** most_common: ('1', 6), gold_ans: ['0', 0]
** most_common: ('1', 2), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('56', 9), gold_ans: ['56', 56]
** most_common: ('7', 7), gold_ans: ['3', 3]
** most_common: ('8', 6), gold_ans: ['1', 1]
** most_common: ('-99', 4), gold_ans: ['-99', -99]
** most_common: ('5', 12), gold_ans: ['5', 5]
** most_common: ('2', 9), gold_ans: ['2', 2]
** most_common: ('-3,2,4', 2), gold_ans: ['2,-3,4', -32]
** most_common: ('1+5i', 5), gold_ans: ['-1-5i', None]
** most_common: ('823.38', 1), gold_ans: ['\\frac{648}{\\pi}', 206.26480624709635]
** most_common: ('-1', 4), gold_ans: ['4', 4]
** most_common: ('9', 4), gold_ans: ['0', 0]
** most_common: ('\\frac{1}{3}', 2), gold_ans: ['\\frac{1}{9}', 0.1111111111111111]
** most_common: ('120', 4), gold_ans: ['20', 20]
** most_common: ('\\frac{5}{3}', 2), gold_ans: ['1', 1]
** most_common: ('(-4,1)', 6), gold_ans: ['(-4,1)', -41]
** most_common: ('\\frac{1}{50}\\begin{pmatrix}1&7\\7&49\\end{pmatrix}', 3), gold_ans: ['\\begin{pmatrix}1/50&7/50\\7/50&49/50\\end{pmatrix}', None]
** most_common: ('600', 10), gold_ans: ['600', 600]
** most_common: ('66', 2), gold_ans: ['3', 3]
** most_common: ('8', 5), gold_ans: ['9', 9]
** most_common: ('4', 7), gold_ans: ['16', 16]
** most_common: ('-36', 6), gold_ans: ['-36', -36]
** most_common: ('312', 6), gold_ans: ['312', 312]
** most_common: ('21', 12), gold_ans: ['21', 21]
** most_common: ('1', 3), gold_ans: ['6', 6]
** most_common: ('4.18879', 3), gold_ans: ['\\frac{4}{3}\\pi', 4.188790204786391]
BackVerify: 1500
** most_common: ('x^4-2x^3-5x^2+4x-1', 3), gold_ans: ['x^4-4x^3+5x^2+2x-1', None]
** most_common: ('8000', 11), gold_ans: ['8000', 8000]
** most_common: ('3.24', 9), gold_ans: ['3.24', 3.24]
** most_common: ('0.1629', 1), gold_ans: ['\\frac{13}{90}', 0.14444444444444443]
** most_common: ('180', 6), gold_ans: ['120', 120]
** most_common: ('1728a-439.93', 1), gold_ans: ['38', 38]
** most_common: ('5', 5), gold_ans: ['7', 7]
** most_common: ('\\begin{pmatrix}\\frac{1}{5}\\-\\frac{3}{5}\\end{pmatrix}', 4), gold_ans: ['\\begin{pmatrix}1/5\\-3/5\\end{pmatrix}', None]
** most_common: ('9', 6), gold_ans: ['9', 9]
** most_common: ('\\frac{8}{27}', 2), gold_ans: ['\\frac{16}{27}', 0.5925925925925926]
** most_common: ('512', 12), gold_ans: ['512', 512]
** most_common: ('6', 2), gold_ans: ['10', 10]
** most_common: ('6/√5', 3), gold_ans: ['\\frac{6\\sqrt{5}}{5}', 2.6832815729997477]
** most_common: ('84', 5), gold_ans: ['84', 84]
** most_common: ('0', 4), gold_ans: ['180', 180]
** most_common: ('20', 1), gold_ans: ['7', 7]
** most_common: ('120', 11), gold_ans: ['120', 120]
** most_common: ('9', 5), gold_ans: ['12', 12]
** most_common: ('2.8284271247461903', 3), gold_ans: ['2\\sqrt{10}', 6.324555320336759]
** most_common: ('125', 5), gold_ans: ['125', 125]
** most_common: ('120', 6), gold_ans: ['360', 360]
** most_common: ('1.5', 12), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('33', 1), gold_ans: ['24,-3', 21]
** most_common: ('42_7', 5), gold_ans: ['42_7', 427]
** most_common: ('32-4π', 4), gold_ans: ['28-2\\pi', 21.716814692820414]
** most_common: ('401', 3), gold_ans: ['401', 401]
** most_common: ('1', 7), gold_ans: ['1', 1]
** most_common: ('13', 9), gold_ans: ['13', 13]
** most_common: ('\\frac{1}{3}', 3), gold_ans: ['33\\frac{1}{3}', 110.33333333333333]
** most_common: ('9', 2), gold_ans: ['\\frac{33}{2}', 16.5]
** most_common: ('-2', 3), gold_ans: ['-6', -6]
** most_common: ('9', 4), gold_ans: ['27', 27]
** most_common: ('135', 4), gold_ans: ['135', 135]
** most_common: ('0.175', 1), gold_ans: ['\\frac{128}{1875}', 0.06826666666666667]
** most_common: ('56', 4), gold_ans: ['24', 24]
** most_common: ('5', 4), gold_ans: ['[5,5\\sqrt{2}]', None]
** most_common: ('0', 5), gold_ans: ['20', 20]
** most_common: ('120', 5), gold_ans: ['16', 16]
** most_common: ('0', 9), gold_ans: ['-3', -3]
** most_common: ('12', 5), gold_ans: ['144', 144]
** most_common: ('3', 3), gold_ans: ['4', 4]
** most_common: ('10', 4), gold_ans: ['\\frac{40}{9}', 4.444444444444445]
** most_common: ('96π', 9), gold_ans: ['96\\pi', 301.59289474462014]
** most_common: ('120', 2), gold_ans: ['147', 147]
** most_common: ('1', 2), gold_ans: ['2\\sqrt{3}', 3.4641016151377544]
** most_common: ('0', 4), gold_ans: ['-\\frac{31}{8}', -3.875]
** most_common: ('0.923077', 4), gold_ans: ['\\frac{12}{13}', 0.9230769230769231]
** most_common: ('30', 3), gold_ans: ['18', 18]
** most_common: ('0.8', 7), gold_ans: ['\\frac{4}{5}', 0.8]
** most_common: ('4.25', 1), gold_ans: ['7\\pi', 21.991148575128552]
BackVerify: 1550
** most_common: ('25', 8), gold_ans: ['25', 25]
** most_common: ('8', 3), gold_ans: ['5', 5]
** most_common: ('-8', 5), gold_ans: ['0', 0]
** most_common: ('1.5', 2), gold_ans: ['\\sqrt{3}', 1.7320508075688772]
** most_common: ('B', 3), gold_ans: ['\\text{(E)}', 2.718281828459045]
** most_common: ('\\frac{7}{13}', 4), gold_ans: ['\\frac{2}{9}', 0.2222222222222222]
** most_common: ('14', 2), gold_ans: ['\\sqrt{109}', 10.44030650891055]
** most_common: ('11', 9), gold_ans: ['11', 11]
** most_common: ('72', 1), gold_ans: ['\\begin{pmatrix}-1&0\\0&-1\\end{pmatrix}', None]
** most_common: ('400', 9), gold_ans: ['400', 400]
** most_common: ('6', 2), gold_ans: ['12', 12]
** most_common: ('34', 11), gold_ans: ['34', 34]
** most_common: ('96', 3), gold_ans: ['52', 52]
** most_common: ('3', 5), gold_ans: ['3', 3]
** most_common: ('12', 3), gold_ans: ['8', 8]
** most_common: ('10', 12), gold_ans: ['10', 10]
** most_common: ('6', 3), gold_ans: ['52', 52]
** most_common: ('100-48\\sqrt{2}', 4), gold_ans: ['100-48\\sqrt{2}', 32.11774900609144]
** most_common: ('437', 1), gold_ans: ['973', 973]
** most_common: ('288', 7), gold_ans: ['288', 288]
** most_common: ('4', 5), gold_ans: ['-4', -4]
** most_common: ('1', 3), gold_ans: ['8', 8]
** most_common: ('14', 11), gold_ans: ['14', 14]
** most_common: ('0.25', 6), gold_ans: ['1', 1]
** most_common: ('(0,4.67)', 2), gold_ans: ['(3,-3)', 0]
** most_common: ('21', 1), gold_ans: ['64', 64]
** most_common: ('44', 2), gold_ans: ['1963', 1963]
** most_common: ('720', 4), gold_ans: ['180', 180]
** most_common: ('40', 10), gold_ans: ['40', 40]
** most_common: ('30', 2), gold_ans: ['30', 30]
** most_common: ('21', 12), gold_ans: ['21', 21]
** most_common: ('10√2', 6), gold_ans: ['10\\sqrt{}2', 14.142135623730951]
** most_common: ('132', 3), gold_ans: ['105', 105]
** most_common: ('(-∞,-4/5)∪(4/5,∞)', 1), gold_ans: ['(-7,-2)', -9]
** most_common: ('3', 2), gold_ans: ['-8', -8]
** most_common: ('60', 6), gold_ans: ['80', 80]
** most_common: ('30', 2), gold_ans: ['25', 25]
** most_common: ('12', 4), gold_ans: ['12', 12]
** most_common: ('5', 12), gold_ans: ['5', 5]
** most_common: ('16', 2), gold_ans: ['1', 1]
** most_common: ('21', 3), gold_ans: ['17', 17]
** most_common: ('97969', 8), gold_ans: ['97969', 97969]
** most_common: ('2.5', 6), gold_ans: ['2.50', 2.5]
** most_common: ('3', 6), gold_ans: ['3', 3]
** most_common: ('16', 2), gold_ans: ['12', 12]
** most_common: ('-√7,√7', 3), gold_ans: ['-5,1,4', -514]
** most_common: ('2', 7), gold_ans: ['2', 2]
** most_common: ('7', 4), gold_ans: ['10', 10]
** most_common: ('20', 5), gold_ans: ['6', 6]
** most_common: ('0', 1), gold_ans: ['104', 104]
BackVerify: 1600
** most_common: ('2110', 2), gold_ans: ['2107', 2107]
** most_common: ('1.25', 2), gold_ans: ['3.5', 3.5]
** most_common: ('547', 1), gold_ans: ['13535', 13535]
** most_common: ('2', 5), gold_ans: ['5', 5]
** most_common: ('21', 6), gold_ans: ['21', 21]
** most_common: ('\\frac{3}{4}', 2), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('1', 3), gold_ans: ['1', 1]
** most_common: ('462', 1), gold_ans: ['270', 270]
** most_common: ('8', 4), gold_ans: ['8', 8]
** most_common: ('3', 9), gold_ans: ['3', 3]
** most_common: ('1', 4), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('72', 2), gold_ans: ['64', 64]
** most_common: ('17', 5), gold_ans: ['17', 17]
** most_common: ('0.06', 7), gold_ans: ['\\frac{3}{50}', 0.06]
** most_common: ('π', 6), gold_ans: ['\\pi', 3.141592653589793]
** most_common: ('10837', 2), gold_ans: ['37', 37]
** most_common: ('81', 11), gold_ans: ['81', 81]
** most_common: ('9', 6), gold_ans: ['12', 12]
** most_common: ('1', 2), gold_ans: ['x^2+6x-4', None]
** most_common: ('[-13.571428571428573,3.5]', 1), gold_ans: ['\\begin{pmatrix}3&-3\\4&-2\\end{pmatrix}', None]
** most_common: ('1', 10), gold_ans: ['1', 1]
** most_common: ('-7', 2), gold_ans: ['7', 7]
** most_common: ('0.3333', 3), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('31', 1), gold_ans: ['32', 32]
** most_common: ('\\frac{5}{4}', 2), gold_ans: ['(\\frac{17}{4},0)', 4.25]
** most_common: ('76', 10), gold_ans: ['90', 90]
** most_common: ('0', 5), gold_ans: ['4', 4]
** most_common: ('2', 9), gold_ans: ['3', 3]
** most_common: ('4', 3), gold_ans: ['3', 3]
** most_common: ('0.96', 2), gold_ans: ['-\\frac{24}{25}', -0.96]
** most_common: ('2.8284271247461903', 3), gold_ans: ['2\\sqrt{2}', 2.8284271247461903]
** most_common: ('1', 7), gold_ans: ['1', 1]
** most_common: ('2', 10), gold_ans: ['2', 2]
** most_common: ('93', 3), gold_ans: ['162', 162]
** most_common: ('3', 5), gold_ans: ['4', 4]
** most_common: ('(15,-29)', 3), gold_ans: ['(15,-29)', -14]
** most_common: ('1', 5), gold_ans: ['2\\sqrt{2}', 2.8284271247461903]
** most_common: ('0.6', 12), gold_ans: ['0.6', 0.6]
** most_common: ('90', 2), gold_ans: ['90', 90]
** most_common: ('12', 2), gold_ans: ['36', 36]
** most_common: ('7', 3), gold_ans: ['7', 7]
** most_common: ('14', 9), gold_ans: ['14', 14]
** most_common: ('27', 3), gold_ans: ['19', 19]
** most_common: ('12', 7), gold_ans: ['12', 12]
** most_common: ('105', 10), gold_ans: ['105', 105]
** most_common: ('4', 8), gold_ans: ['4', 4]
** most_common: ('67,232', 3), gold_ans: ['61,328', 61328]
** most_common: ('2', 7), gold_ans: ['-2', -2]
** most_common: ('2', 3), gold_ans: ['14', 14]
** most_common: ('0', 5), gold_ans: ['0', 0]
BackVerify: 1650
** most_common: ('0', 3), gold_ans: ['\\sqrt{5}', 2.23606797749979]
** most_common: ('\\begin{pmatrix}-\\frac{7}{2}\\\\frac{43}{8}\\-\\frac{73}{8}\\end{pmatrix}', 1), gold_ans: ['\\begin{pmatrix}-2\\3\\3\\end{pmatrix}', None]
** most_common: ('101', 5), gold_ans: ['549', 549]
** most_common: ('√2', 2), gold_ans: ['\\sqrt{2}', 1.4142135623730951]
** most_common: ('3', 8), gold_ans: ['3', 3]
** most_common: ('A', 5), gold_ans: ['C', None]
** most_common: ('8', 3), gold_ans: ['18', 18]
** most_common: ('9', 2), gold_ans: ['13', 13]
** most_common: ('0', 2), gold_ans: ['8', 8]
** most_common: ('7', 4), gold_ans: ['7', 7]
** most_common: ('8', 12), gold_ans: ['8', 8]
** most_common: ('\\frac{1}{4}', 6), gold_ans: ['1:2', None]
** most_common: ('1680', 5), gold_ans: ['729', 729]
** most_common: ('0', 6), gold_ans: ['0', 0]
** most_common: ('18,300', 1), gold_ans: ['32,760', 32760]
** most_common: ('24', 4), gold_ans: ['23', 23]
** most_common: ('48', 5), gold_ans: ['48\\pi', 150.79644737231007]
** most_common: ('0', 4), gold_ans: ['-\\frac{7}{17}', -0.4117647058823529]
** most_common: ('√46', 2), gold_ans: ['4', 4]
** most_common: ('4', 2), gold_ans: ['8', 8]
** most_common: ('1', 4), gold_ans: ['2', 2]
** most_common: ('2', 3), gold_ans: ['-2', -2]
** most_common: ('0.5', 1), gold_ans: ['12', 12]
** most_common: ('18', 4), gold_ans: ['27', 27]
** most_common: ('1', 2), gold_ans: ['\\frac{7}{2}', 3.5]
** most_common: ('2', 5), gold_ans: ['2', 2]
** most_common: ('0', 7), gold_ans: ['\\frac{7}{8}', 0.875]
** most_common: ('12', 9), gold_ans: ['12', 12]
** most_common: ('0.2', 11), gold_ans: ['\\frac{3}{16}', 0.1875]
** most_common: ('2', 4), gold_ans: ['-4', -4]
** most_common: ('0', 3), gold_ans: ['\\frac{1}{18}', 0.05555555555555555]
** most_common: ('4,-16,4,-8', 1), gold_ans: ['(1,-16,-4,43)', -458]
** most_common: ('94', 2), gold_ans: ['4561', 4561]
** most_common: ('512', 2), gold_ans: ['5120', 5120]
** most_common: ('\\frac{2}{3}', 7), gold_ans: ['\\frac{2}{3}', 0.6666666666666666]
** most_common: ('3', 5), gold_ans: ['21', 21]
** most_common: ('(-6,2)', 1), gold_ans: ['\\begin{pmatrix}1\\3\\end{pmatrix}', None]
** most_common: ('5', 9), gold_ans: ['5', 5]
** most_common: ('18', 11), gold_ans: ['18', 18]
** most_common: ('1', 3), gold_ans: ['\\frac{11}{2}', 5.5]
** most_common: ('8', 12), gold_ans: ['8', 8]
** most_common: ('\\frac{27}{1024}', 3), gold_ans: ['\\frac{1}{128}', 0.0078125]
** most_common: ('31', 6), gold_ans: ['31', 31]
** most_common: ('\\frac{-40}{153}', 6), gold_ans: ['-\\frac{40}{153}', -0.26143790849673204]
** most_common: ('33', 6), gold_ans: ['33', 33]
** most_common: ('150609', 1), gold_ans: ['11218', 11218]
** most_common: ('\\frac{-4}{3}', 1), gold_ans: ['-2', -2]
** most_common: ('6', 3), gold_ans: ['4', 4]
** most_common: ('14.5', 1), gold_ans: ['26', 26]
** most_common: ('190', 1), gold_ans: ['\\frac{10}{19}', 0.5263157894736842]
BackVerify: 1700
** most_common: ('2', 1), gold_ans: ['\\sqrt{2}+\\sqrt{6}', 3.8637033051562732]
** most_common: ('50', 6), gold_ans: ['100', 100]
** most_common: ('7', 9), gold_ans: ['7', 7]
** most_common: ('42', 1), gold_ans: ['68', 68]
** most_common: ('16', 2), gold_ans: ['\\frac{64}{3}', 21.333333333333332]
** most_common: ('5', 4), gold_ans: ['8', 8]
** most_common: ('26', 12), gold_ans: ['26', 26]
** most_common: ('0', 3), gold_ans: ['-\\frac{1}{4}', -0.25]
** most_common: ('0', 3), gold_ans: ['\\begin{pmatrix}1&2\\-3&-5\\end{pmatrix}', None]
** most_common: ('1', 1), gold_ans: ['5\\sqrt{2}', 7.0710678118654755]
** most_common: ('\\frac{h^2}{m}', 3), gold_ans: ['\\frac{h^2}{m}', None]
** most_common: ('0', 6), gold_ans: ['0', 0]
** most_common: ('-1', 11), gold_ans: ['-1', -1]
** most_common: ('13', 11), gold_ans: ['13', 13]
** most_common: ('1', 5), gold_ans: ['12', 12]
** most_common: ('24', 4), gold_ans: ['32', 32]
** most_common: ('10', 8), gold_ans: ['10', 10]
** most_common: ('0', 4), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('1', 4), gold_ans: ['\\frac{\\sqrt{5}-1}{2}', 0.6180339887498949]
** most_common: ('8', 12), gold_ans: ['8', 8]
** most_common: ('2', 3), gold_ans: ['5', 5]
** most_common: ('(-\\infty,\\infty)', 3), gold_ans: ['[-2,0]', -20]
** most_common: ('0.179167', 1), gold_ans: ['\\frac{5}{28}', 0.17857142857142858]
** most_common: ('0.5', 12), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('8', 7), gold_ans: ['8', 8]
** most_common: ('7', 6), gold_ans: ['21', 21]
** most_common: ('180', 4), gold_ans: ['12', 12]
** most_common: ('9', 12), gold_ans: ['9', 9]
** most_common: ('126', 11), gold_ans: ['126', 126]
** most_common: ('30', 5), gold_ans: ['8', 8]
** most_common: ('20', 3), gold_ans: ['18', 18]
** most_common: ('12', 1), gold_ans: ['\\sqrt{15}', 3.872983346207417]
** most_common: ('3', 3), gold_ans: ['10', 10]
** most_common: ('\\frac{\\frac{1}{3}\\cos\\theta}{1-2\\cos\\theta}', 1), gold_ans: ['\\frac{\\sqrt{35}}{3}', 1.9720265943665387]
** most_common: ('1', 11), gold_ans: ['1', 1]
** most_common: ('120', 2), gold_ans: ['116', 116]
** most_common: ('5', 5), gold_ans: ['5', 5]
** most_common: ('998', 5), gold_ans: ['7004', 7004]
** most_common: ('[-4,∞)', 4), gold_ans: ['(-\\infty,-5]\\cup[5,\\infty)', None]
** most_common: ('0', 4), gold_ans: ['2', 2]
** most_common: ('18', 3), gold_ans: ['36', 36]
** most_common: ('4', 4), gold_ans: ['4', 4]
** most_common: ('\\begin{pmatrix}1\\7\\end{pmatrix}', 3), gold_ans: ['\\begin{pmatrix}1\\7\\end{pmatrix}', None]
** most_common: ('0.0625', 12), gold_ans: ['\\frac{1}{16}', 0.0625]
** most_common: ('0.0637', 3), gold_ans: ['\\frac{13}{204}', 0.06372549019607843]
** most_common: ('3', 12), gold_ans: ['3', 3]
** most_common: ('2', 2), gold_ans: ['51', 51]
** most_common: ('1', 3), gold_ans: ['\\frac{1}{5}', 0.2]
** most_common: ('12', 7), gold_ans: ['12', 12]
** most_common: ('\\frac{121}{45}', 1), gold_ans: ['\\frac{56}{5}', 11.2]
BackVerify: 1750
** most_common: ('-0.7071', 3), gold_ans: ['-\\frac{\\sqrt{2}}{2}', -0.7071067811865476]
** most_common: ('30', 1), gold_ans: ['255', 255]
** most_common: ('4', 4), gold_ans: ['8', 8]
** most_common: ('1', 6), gold_ans: ['x^2-5', None]
** most_common: ('1', 9), gold_ans: ['1', 1]
** most_common: ('18.714285714', 2), gold_ans: ['19', 19]
** most_common: ('even', 10), gold_ans: ['\\text{odd}', None]
** most_common: ('42', 1), gold_ans: ['154', 154]
** most_common: ('(-16,-4)', 7), gold_ans: ['(-16,-4)', -20]
** most_common: ('4', 3), gold_ans: ['19', 19]
** most_common: ('2', 5), gold_ans: ['x+1', None]
** most_common: ('3', 6), gold_ans: ['341', 341]
** most_common: ('2', 3), gold_ans: ['4', 4]
** most_common: ('21', 3), gold_ans: ['21', 21]
** most_common: ('4', 5), gold_ans: ['10', 10]
** most_common: ('2', 12), gold_ans: ['2', 2]
** most_common: ('6', 10), gold_ans: ['6', 6]
** most_common: ('1', 10), gold_ans: ['1', 1]
** most_common: ('143', 5), gold_ans: ['143', 143]
** most_common: ('0.2', 1), gold_ans: ['1', 1]
** most_common: ('12', 8), gold_ans: ['12', 12]
** most_common: ('9', 2), gold_ans: ['100', 100]
** most_common: ('0', 2), gold_ans: ['936', 936]
** most_common: ('C', 5), gold_ans: ['\\text{(B)}', None]
** most_common: ('4', 2), gold_ans: ['29', 29]
** most_common: ('6,006,010', 1), gold_ans: ['75,075', 75075]
** most_common: ('2', 10), gold_ans: ['2', 2]
** most_common: ('2', 4), gold_ans: ['2', 2]
** most_common: ('8', 2), gold_ans: ['82', 82]
** most_common: ('39,600', 2), gold_ans: ['3600', 3600]
** most_common: ('17', 8), gold_ans: ['17', 17]
** most_common: ('1', 6), gold_ans: ['1', 1]
** most_common: ('0.25', 2), gold_ans: ['3:1', None]
** most_common: ('16', 7), gold_ans: ['16', 16]
** most_common: ('503', 2), gold_ans: ['\\frac{2009}{4}', 502.25]
** most_common: ('135', 6), gold_ans: ['135', 135]
** most_common: ('-20', 1), gold_ans: ['79', 79]
** most_common: ('3', 2), gold_ans: ['561', 561]
** most_common: ('5', 1), gold_ans: ['\\sqrt{5}', 2.23606797749979]
** most_common: ('9', 6), gold_ans: ['9', 9]
** most_common: ('11', 7), gold_ans: ['11', 11]
** most_common: ('16', 3), gold_ans: ['66', 66]
** most_common: ('5', 4), gold_ans: ['16', 16]
** most_common: ('25π', 7), gold_ans: ['25\\pi', 78.53981633974483]
** most_common: ('\\begin{pmatrix}2&3\\-1&5\\end{pmatrix}', 3), gold_ans: ['\\begin{pmatrix}8&12\\-4&20\\end{pmatrix}', None]
** most_common: ('4', 5), gold_ans: ['9', 9]
** most_common: ('1', 4), gold_ans: ['1', 1]
** most_common: ('6', 4), gold_ans: ['6', 6]
** most_common: ('5', 9), gold_ans: ['5', 5]
** most_common: ('1', 12), gold_ans: ['1', 1]
BackVerify: 1800
** most_common: ('0.6667', 3), gold_ans: ['\\frac{2}{3}', 0.6666666666666666]
** most_common: ('10', 5), gold_ans: ['10', 10]
** most_common: ('0.5', 3), gold_ans: ['\\frac{2}{5}', 0.4]
** most_common: ('√73', 2), gold_ans: ['11', 11]
** most_common: ('\\begin{bmatrix}0&0&0\\0&1&1\\0&1&1\\end{bmatrix}', 2), gold_ans: ['\\begin{pmatrix}0&0&0\\0&1&0\\0&0&1\\end{pmatrix}', None]
** most_common: ('11', 3), gold_ans: ['19', 19]
** most_common: ('1951', 3), gold_ans: ['1951', 1951]
** most_common: ('3720.0', 6), gold_ans: ['3720', 3720]
** most_common: ('15', 12), gold_ans: ['15', 15]
** most_common: ('x', 6), gold_ans: ['-\\frac{1}{2x}', None]
** most_common: ('18', 2), gold_ans: ['50', 50]
** most_common: ('0.5', 2), gold_ans: ['0', 0]
** most_common: ('\\frac{\\sqrt{3}}{2}', 5), gold_ans: ['\\frac{\\sqrt{3}}{2}', 0.8660254037844386]
** most_common: ('17', 4), gold_ans: ['38', 38]
** most_common: ('36', 6), gold_ans: ['36', 36]
** most_common: ('3', 7), gold_ans: ['6', 6]
** most_common: ('5', 3), gold_ans: ['8', 8]
** most_common: ('3', 3), gold_ans: ['7', 7]
** most_common: ('191', 2), gold_ans: ['175', 175]
** most_common: ('225', 3), gold_ans: ['50,625', 50625]
** most_common: ('-3', 8), gold_ans: ['-3', -3]
** most_common: ('16', 1), gold_ans: ['2\\sqrt{22}', 9.38083151964686]
** most_common: ('3', 2), gold_ans: ['12', 12]
** most_common: ('3', 3), gold_ans: ['8', 8]
** most_common: ('11', 4), gold_ans: ['11', 11]
** most_common: ('1', 4), gold_ans: ['80', 80]
** most_common: ('0.9128742287', 1), gold_ans: ['-\\frac{24}{25}', -0.96]
** most_common: ('\\frac{9}{5}', 5), gold_ans: ['\\frac{9}{5}', 1.8]
** most_common: ('6', 11), gold_ans: ['6', 6]
** most_common: ('-9', 3), gold_ans: ['9', 9]
** most_common: ('3', 6), gold_ans: ['12', 12]
** most_common: ('990', 4), gold_ans: ['990', 990]
** most_common: ('36', 5), gold_ans: ['36', 36]
** most_common: ('8', 3), gold_ans: ['15', 15]
** most_common: ('6.125', 4), gold_ans: ['\\frac{49}{8}', 6.125]
** most_common: ('1', 2), gold_ans: ['18', 18]
** most_common: ('7.38', 1), gold_ans: ['10', 10]
** most_common: ('1', 6), gold_ans: ['2004', 2004]
** most_common: ('100', 7), gold_ans: ['70', 70]
** most_common: ('90', 3), gold_ans: ['5400', 5400]
** most_common: ('2', 2), gold_ans: ['2', 2]
** most_common: ('16', 5), gold_ans: ['30', 30]
** most_common: ('1', 7), gold_ans: ['1', 1]
** most_common: ('31', 5), gold_ans: ['28', 28]
** most_common: ('1', 10), gold_ans: ['24', 24]
** most_common: ('3.5', 5), gold_ans: ['6', 6]
** most_common: ('9.5', 1), gold_ans: ['15', 15]
** most_common: ('2', 5), gold_ans: ['4', 4]
** most_common: ('123.12', 2), gold_ans: ['123', 123]
** most_common: ('6840', 5), gold_ans: ['6840', 6840]
BackVerify: 1850
** most_common: ('81', 3), gold_ans: ['81', 81]
** most_common: ('anyvalue', 1), gold_ans: ['\\frac{1}{9}', 0.1111111111111111]
** most_common: ('12', 2), gold_ans: ['24', 24]
** most_common: ('[1,9]', 10), gold_ans: ['[1,9]', 19]
** most_common: ('-20.175', 1), gold_ans: ['18', 18]
** most_common: ('3964791193', 1), gold_ans: ['\\frac{1777}{1492}', 1.1910187667560321]
** most_common: ('2\\cos60', 1), gold_ans: ['2\\cos15', 5.403023058681397]
** most_common: ('\\frac{4}{9}', 2), gold_ans: ['\\frac{1}{6}', 0.16666666666666666]
** most_common: ('0', 2), gold_ans: ['\\begin{pmatrix}-1\\-8\\2\\end{pmatrix}', None]
** most_common: ('\\frac{1}{6}', 2), gold_ans: ['\\frac{91}{216}', 0.4212962962962963]
** most_common: ('1234', 4), gold_ans: ['1155', 1155]
** most_common: ('undefined', 1), gold_ans: ['45', 45]
** most_common: ('23', 4), gold_ans: ['23', 23]
** most_common: ('\\frac{1}{3}', 4), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('\\frac{2}{3}', 3), gold_ans: ['\\frac{2}{3}', 0.6666666666666666]
** most_common: ('9', 1), gold_ans: ['10', 10]
** most_common: ('22', 3), gold_ans: ['22', 22]
** most_common: ('9', 4), gold_ans: ['12', 12]
** most_common: ('3.7', 3), gold_ans: ['3.5', 3.5]
** most_common: ('\\frac{84}{7}', 3), gold_ans: ['8\\frac{4}{7}', 12]
** most_common: ('75', 3), gold_ans: ['75', 75]
** most_common: ('25', 6), gold_ans: ['25', 25]
** most_common: ('6', 11), gold_ans: ['6', 6]
** most_common: ('-1≤x≤1', 2), gold_ans: ['[-\\frac{\\pi}{2},\\frac{\\pi}{2}]', None]
** most_common: ('4', 7), gold_ans: ['4', 4]
** most_common: ('1', 3), gold_ans: ['\\sqrt{3}', 1.7320508075688772]
** most_common: ('3', 6), gold_ans: ['3', 3]
** most_common: ('0', 4), gold_ans: ['0', 0]
** most_common: ('49', 10), gold_ans: ['49', 49]
** most_common: ('7', 12), gold_ans: ['7', 7]
** most_common: ('50', 9), gold_ans: ['50', 50]
** most_common: ('3', 5), gold_ans: ['5', 5]
** most_common: ('6', 2), gold_ans: ['12', 12]
** most_common: ('4', 4), gold_ans: ['(4,\\pi)', None]
** most_common: ('4', 1), gold_ans: ['216', 216]
** most_common: ('π/3', 2), gold_ans: ['-\\frac{\\pi}{3}', -1.0471975511965976]
** most_common: ('\\frac{4}{9}', 5), gold_ans: ['\\frac{4}{9}', 0.4444444444444444]
** most_common: ('(-∞,2)∪(2,3)∪(3,∞)', 3), gold_ans: ['(-\\infty,2)\\cup(3,\\infty)', None]
** most_common: ('1.9242272147951837e-7', 1), gold_ans: ['0', 0]
** most_common: ('0', 3), gold_ans: ['-4', -4]
** most_common: ('13', 11), gold_ans: ['13', 13]
** most_common: ('2', 6), gold_ans: ['2', 2]
** most_common: ('4800', 2), gold_ans: ['1599', 1599]
** most_common: ('6', 5), gold_ans: ['6', 6]
** most_common: ('5.5,-1,1', 4), gold_ans: ['(\\frac{11}{2},-1,1)', 5.5]
** most_common: ('6x^2+18x+12', 5), gold_ans: ['6x^2+30x+36', None]
** most_common: ('4', 11), gold_ans: ['16', 16]
** most_common: ('14', 3), gold_ans: ['14', 14]
** most_common: ('-2,1', 5), gold_ans: ['1', 1]
** most_common: ('1', 5), gold_ans: ['-\\frac{2010012}{2010013}', -0.99999950249078]
BackVerify: 1900
** most_common: ('1', 4), gold_ans: ['1', 1]
** most_common: ('4', 4), gold_ans: ['10', 10]
** most_common: ('3', 2), gold_ans: ['9', 9]
** most_common: ('140', 11), gold_ans: ['140', 140]
** most_common: ('39366', 1), gold_ans: ['41230', 41230]
** most_common: ('0.5', 7), gold_ans: ['500', 500]
** most_common: ('4', 6), gold_ans: ['\\frac{8}{3}', 2.6666666666666665]
** most_common: ('\\frac{3}{2}', 5), gold_ans: ['-\\frac{1}{8}', -0.125]
** most_common: ('20', 2), gold_ans: ['10', 10]
** most_common: ('4', 3), gold_ans: ['3\\frac{1}{8}', 3.875]
** most_common: ('13', 8), gold_ans: ['13', 13]
** most_common: ('3', 5), gold_ans: ['333', 333]
** most_common: ('b^5-b^4+2b^3+b^2-b', 1), gold_ans: ['100100', 100100]
** most_common: ('-8', 5), gold_ans: ['-8', -8]
** most_common: ('15', 3), gold_ans: ['400', 400]
** most_common: ('16', 2), gold_ans: ['11', 11]
** most_common: ('512', 5), gold_ans: ['512', 512]
** most_common: ('p', 4), gold_ans: ['p+q-r', None]
** most_common: ('12x-34', 6), gold_ans: ['-34+12x', None]
** most_common: ('0', 5), gold_ans: ['80', 80]
** most_common: ('\\frac{7}{6}', 5), gold_ans: ['3', 3]
** most_common: ('-0.8660254037844386', 5), gold_ans: ['\\frac{\\sqrt{3}}{2}', 0.8660254037844386]
** most_common: ('60', 5), gold_ans: ['40', 40]
** most_common: ('2', 7), gold_ans: ['\\sqrt{5}', 2.23606797749979]
** most_common: ('4π', 2), gold_ans: ['\\frac{8\\pi}5', 5.026548245743669]
** most_common: ('-9', 4), gold_ans: ['-9', -9]
** most_common: ('(21,22)', 1), gold_ans: ['(6,7)', 67]
** most_common: ('1', 3), gold_ans: ['0.50', 0.5]
** most_common: ('C', 4), gold_ans: ['\\text{(B)}', None]
** most_common: ('144', 12), gold_ans: ['144', 144]
** most_common: ('3', 3), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('-1.8', 4), gold_ans: ['-\\frac{9}{5}', -1.8]
** most_common: ('1', 2), gold_ans: ['\\frac{8}{3}', 2.6666666666666665]
** most_common: ('1', 4), gold_ans: ['67', 67]
** most_common: ('13', 12), gold_ans: ['11', 11]
** most_common: ('1', 8), gold_ans: ['1', 1]
** most_common: ('0.3', 3), gold_ans: ['\\frac{7}{20}', 0.35]
** most_common: ('2√3', 3), gold_ans: ['2', 2]
** most_common: ('150', 8), gold_ans: ['160', 160]
** most_common: ('168', 2), gold_ans: ['288', 288]
** most_common: ('(-∞,∞)', 5), gold_ans: ['(-\\infty,-3)', None]
** most_common: ('252', 2), gold_ans: ['128', 128]
** most_common: ('7', 12), gold_ans: ['7', 7]
** most_common: ('3.5', 5), gold_ans: ['2', 2]
** most_common: ('115', 4), gold_ans: ['55', 55]
** most_common: ('2', 9), gold_ans: ['2', 2]
** most_common: ('18', 11), gold_ans: ['18', 18]
** most_common: ('0.05', 3), gold_ans: ['3.2', 3.2]
** most_common: ('26', 3), gold_ans: ['[46,\\infty)', None]
** most_common: ('0', 5), gold_ans: ['2', 2]
BackVerify: 1950
** most_common: ('C', 12), gold_ans: ['\\text{C}', None]
** most_common: ('1', 4), gold_ans: ['36', 36]
** most_common: ('0', 5), gold_ans: ['1', 1]
** most_common: ('1.25', 5), gold_ans: ['0.8', 0.8]
** most_common: ('10', 12), gold_ans: ['10', 10]
** most_common: ('150', 2), gold_ans: ['7', 7]
** most_common: ('28.0', 2), gold_ans: ['20', 20]
** most_common: ('63', 8), gold_ans: ['63', 63]
** most_common: ('0.5', 1), gold_ans: ['4,20', 420]
** most_common: ('-4', 2), gold_ans: ['20', 20]
** most_common: ('π', 2), gold_ans: ['\\pi', 3.141592653589793]
** most_common: ('78', 6), gold_ans: ['78', 78]
** most_common: ('112', 3), gold_ans: ['22', 22]
** most_common: ('\\frac{40}{243}', 4), gold_ans: ['\\frac{40}{243}', 0.1646090534979424]
** most_common: ('24', 2), gold_ans: ['163', 163]
** most_common: ('\\frac{9}{19}', 3), gold_ans: ['\\frac{9}{19}', 0.47368421052631576]
** most_common: ('7.50', 9), gold_ans: ['7.50', 7.5]
** most_common: ('15', 4), gold_ans: ['13', 13]
** most_common: ('\\frac{1}{9}', 2), gold_ans: ['\\frac{8}{45}', 0.17777777777777778]
** most_common: ('18', 4), gold_ans: ['36', 36]
** most_common: ('6√10', 3), gold_ans: ['8\\sqrt{55}', 59.329587896765304]
** most_common: ('-4s^2+7', 3), gold_ans: ['3s^2', None]
** most_common: ('0', 2), gold_ans: ['112', 112]
** most_common: ('76', 7), gold_ans: ['76', 76]
** most_common: ('9', 2), gold_ans: ['104', 104]
** most_common: ('1', 4), gold_ans: ['(0,1)', None]
** most_common: ('280', 8), gold_ans: ['280', 280]
** most_common: ('2', 3), gold_ans: ['2', 2]
** most_common: ('2', 12), gold_ans: ['2', 2]
** most_common: ('25', 8), gold_ans: ['25\\,\\text{km}', None]
** most_common: ('6', 9), gold_ans: ['18', 18]
** most_common: ('\\frac{\\sqrt{35}}{18}', 2), gold_ans: ['\\frac{1}{9}', 0.1111111111111111]
** most_common: ('3.302775637731994', 1), gold_ans: ['2', 2]
** most_common: ('x^5-x^4+x^3-x^2+x+1', 3), gold_ans: ['x^5-x^4+x^3-x^2+x-1', None]
** most_common: ('2+√3', 2), gold_ans: ['0', 0]
** most_common: ('637.49', 1), gold_ans: ['450', 450]
** most_common: ('-1', 3), gold_ans: ['-2', -2]
** most_common: ('13', 4), gold_ans: ['104', 104]
** most_common: ('0.1667', 3), gold_ans: ['\\frac{1}{6}', 0.16666666666666666]
** most_common: ('8.0', 3), gold_ans: ['8', 8]
** most_common: ('undefined', 2), gold_ans: ['116-75i', None]
** most_common: ('0,π', 1), gold_ans: ['\\pi', 3.141592653589793]
** most_common: ('15', 9), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('3', 5), gold_ans: ['15', 15]
** most_common: ('0.5', 3), gold_ans: ['\\frac{7}{8}', 0.875]
** most_common: ('15', 8), gold_ans: ['15', 15]
** most_common: ('215_6', 2), gold_ans: ['25_{6}', None]
** most_common: ('7', 9), gold_ans: ['7', 7]
** most_common: ('1500', 9), gold_ans: ['1500', 1500]
** most_common: ('13', 5), gold_ans: ['13', 13]
BackVerify: 2000
** most_common: ('12', 3), gold_ans: ['16', 16]
** most_common: ('18√2', 5), gold_ans: ['18', 18]
** most_common: ('(1,6)', 2), gold_ans: ['(-1,8)', -18]
** most_common: ('100', 7), gold_ans: ['100', 100]
** most_common: ('-1', 2), gold_ans: ['(-4x^2+x+1)(4x^2+x+1)', None]
** most_common: ('6.0', 5), gold_ans: ['6', 6]
** most_common: ('60', 3), gold_ans: ['49', 49]
** most_common: ('20', 2), gold_ans: ['16', 16]
** most_common: ('1', 7), gold_ans: ['1', 1]
** most_common: ('1518', 10), gold_ans: ['1518', 1518]
** most_common: ('8', 7), gold_ans: ['8-i', None]
** most_common: ('5040', 9), gold_ans: ['5040', 5040]
** most_common: ('9.0', 7), gold_ans: ['9', 9]
** most_common: ('1.6', 4), gold_ans: ['25', 25]
** most_common: ('7p+4e', 4), gold_ans: ['7p+4e', None]
** most_common: ('2', 5), gold_ans: ['2^{2005}', None]
** most_common: ('\\frac{11}{3}', 4), gold_ans: ['\\frac{14}{3}', 4.666666666666667]
** most_common: ('33', 11), gold_ans: ['27', 27]
** most_common: ('6', 7), gold_ans: ['6', 6]
** most_common: ('180', 3), gold_ans: ['906', 906]
** most_common: ('30', 6), gold_ans: ['18', 18]
** most_common: ('0.25', 2), gold_ans: ['\\frac{5}{9}', 0.5555555555555556]
** most_common: ('0.8', 3), gold_ans: ['\\frac{10}{11}', 0.9090909090909091]
** most_common: ('40', 5), gold_ans: ['55', 55]
** most_common: ('0.1667', 6), gold_ans: ['\\frac{1}{6}', 0.16666666666666666]
** most_common: ('15', 4), gold_ans: ['15', 15]
** most_common: ('(-25,355,-519,\\frac{2060}{3})', 1), gold_ans: ['(4,1,4,0)', 4140]
** most_common: ('1', 3), gold_ans: ['-4', -4]
** most_common: ('3', 10), gold_ans: ['5', 5]
** most_common: ('12313', 1), gold_ans: ['11189', 11189]
** most_common: ('4', 4), gold_ans: ['3', 3]
** most_common: ('1080', 7), gold_ans: ['5400', 5400]
** most_common: ('7', 8), gold_ans: ['7', 7]
** most_common: ('12', 4), gold_ans: ['16', 16]
** most_common: ('36', 3), gold_ans: ['8', 8]
** most_common: ('348.54', 1), gold_ans: ['\\sqrt{74}', 8.602325267042627]
** most_common: ('\\frac{4}{9}', 3), gold_ans: ['\\frac{8}{9}', 0.8888888888888888]
** most_common: ('5.0', 3), gold_ans: ['7.2', 7.2]
** most_common: ('2.5', 1), gold_ans: ['125', 125]
** most_common: ('18081.5', 1), gold_ans: ['0', 0]
** most_common: ('12', 9), gold_ans: ['24', 24]
** most_common: ('c^2-a^2', 2), gold_ans: ['32R^2-3(a^2+b^2+c^2)', None]
** most_common: ('0.25', 2), gold_ans: ['\\frac{1}{8}', 0.125]
** most_common: ('14.5', 2), gold_ans: ['(7,6)', 76]
** most_common: ('7', 6), gold_ans: ['7', 7]
** most_common: ('-1', 2), gold_ans: ['-81', -81]
** most_common: ('6', 1), gold_ans: ['\\begin{pmatrix}6/5\\-17/5\\end{pmatrix}', None]
** most_common: ('undefined', 9), gold_ans: ['0', 0]
** most_common: ('0.196', 5), gold_ans: ['\\frac{16}{81}', 0.19753086419753085]
** most_common: ('619', 6), gold_ans: ['687', 687]
BackVerify: 2050
** most_common: ('1536', 1), gold_ans: ['192', 192]
** most_common: ('9π', 8), gold_ans: ['9\\pi', 28.274333882308138]
** most_common: ('-6', 6), gold_ans: ['0', 0]
** most_common: ('5', 10), gold_ans: ['5', 5]
** most_common: ('neither', 10), gold_ans: ['\\text{neither}', None]
** most_common: ('13', 7), gold_ans: ['13', 13]
** most_common: ('15554', 11), gold_ans: ['15554', 15554]
** most_common: ('10', 5), gold_ans: ['10', 10]
** most_common: ('11', 6), gold_ans: ['11', 11]
** most_common: ('217', 6), gold_ans: ['217', 217]
** most_common: ('96', 3), gold_ans: ['144', 144]
** most_common: ('15', 2), gold_ans: ['4', 4]
** most_common: ('57', 2), gold_ans: ['6', 6]
** most_common: ('70', 5), gold_ans: ['70', 70]
** most_common: ('11', 3), gold_ans: ['-11', -11]
** most_common: ('11', 10), gold_ans: ['11', 11]
** most_common: ('\\begin{pmatrix}7\\-2\\end{pmatrix}', 4), gold_ans: ['\\begin{pmatrix}7\\-2\\end{pmatrix}', None]
** most_common: ('(\\frac{4}{5},\\frac{1}{5})', 2), gold_ans: ['(\\frac{4}{3},-\\frac{1}{3})', 1.3333333333333333]
** most_common: ('12', 11), gold_ans: ['12', 12]
** most_common: ('54', 11), gold_ans: ['54', 54]
** most_common: ('127', 1), gold_ans: ['165', 165]
** most_common: ('13', 2), gold_ans: ['81', 81]
** most_common: ('(0,0)', 2), gold_ans: ['(1,-2)', -1]
** most_common: ('11', 2), gold_ans: ['7', 7]
** most_common: ('1', 2), gold_ans: ['2', 2]
** most_common: ('\\frac{25}{3}', 3), gold_ans: ['\\frac{25}{3}', 8.333333333333334]
** most_common: ('12', 2), gold_ans: ['0', 0]
** most_common: ('86', 2), gold_ans: ['1076', 1076]
** most_common: ('7and8', 3), gold_ans: ['12', 12]
** most_common: ('0', 6), gold_ans: ['7', 7]
** most_common: ('1', 3), gold_ans: ['1', 1]
** most_common: ('-5', 12), gold_ans: ['-5', -5]
** most_common: ('1', 3), gold_ans: ['4', 4]
** most_common: ('61', 7), gold_ans: ['61', 61]
** most_common: ('2π√2028', 2), gold_ans: ['78\\pi', 245.04422698000388]
** most_common: ('0.73', 12), gold_ans: ['0.73', 0.73]
** most_common: ('4', 2), gold_ans: ['2', 2]
** most_common: ('D', 9), gold_ans: ['\\text{D}', None]
** most_common: ('1', 4), gold_ans: ['\\sqrt{5}', 2.23606797749979]
** most_common: ('165', 8), gold_ans: ['165', 165]
** most_common: ('\\frac{7}{36}', 2), gold_ans: ['\\frac{1}{108}', 0.009259259259259259]
** most_common: ('-15', 7), gold_ans: ['-9', -9]
** most_common: ('0.1111', 3), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('0.1', 2), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('476', 2), gold_ans: ['2112_6', 21126]
** most_common: ('30', 6), gold_ans: ['30', 30]
** most_common: ('0', 3), gold_ans: ['-7', -7]
** most_common: ('10', 7), gold_ans: ['10', 10]
** most_common: ('1.2', 3), gold_ans: ['\\frac{6}{5}', 1.2]
** most_common: ('10', 7), gold_ans: ['10', 10]
BackVerify: 2100
** most_common: ('24', 4), gold_ans: ['24', 24]
** most_common: ('256', 3), gold_ans: ['256', 256]
** most_common: ('8', 2), gold_ans: ['\\frac{192\\sqrt{14}}{25}', 28.73592873042387]
** most_common: ('0', 2), gold_ans: ['900', 900]
** most_common: ('13', 6), gold_ans: ['13', 13]
** most_common: ('4', 4), gold_ans: ['3', 3]
** most_common: ('0', 2), gold_ans: ['\\frac{14}{3}', 4.666666666666667]
** most_common: ('16', 3), gold_ans: ['36', 36]
** most_common: ('60', 2), gold_ans: ['120', 120]
** most_common: ('144', 4), gold_ans: ['720', 720]
** most_common: ('\\frac{10}{11}', 11), gold_ans: ['\\frac{10}{11}', 0.9090909090909091]
** most_common: ('45', 3), gold_ans: ['45', 45]
** most_common: ('1475', 3), gold_ans: ['255', 255]
** most_common: ('1', 1), gold_ans: ['19', 19]
** most_common: ('16', 5), gold_ans: ['16', 16]
** most_common: ('16/3π', 2), gold_ans: ['\\frac{176}{3}\\pi', 184.30676901060122]
** most_common: ('0', 2), gold_ans: ['-\\frac{\\sqrt{3}}{2}', -0.8660254037844386]
** most_common: ('19', 4), gold_ans: ['19', 19]
** most_common: ('0', 4), gold_ans: ['-14', -14]
** most_common: ('100', 3), gold_ans: ['105', 105]
** most_common: ('99π', 12), gold_ans: ['99\\pi', 311.01767270538954]
** most_common: ('2', 6), gold_ans: ['3', 3]
** most_common: ('8', 3), gold_ans: ['9', 9]
** most_common: ('2', 4), gold_ans: ['4', 4]
** most_common: ('3', 5), gold_ans: ['3x^2-34x+88', None]
** most_common: ('-\\frac{1}{2}', 2), gold_ans: ['-1', -1]
** most_common: ('1', 3), gold_ans: ['4', 4]
** most_common: ('8', 2), gold_ans: ['26', 26]
** most_common: ('12π', 6), gold_ans: ['12\\pi', 37.69911184307752]
** most_common: ('3', 2), gold_ans: ['\\frac{4}{27}', 0.14814814814814814]
** most_common: ('3', 4), gold_ans: ['73', 73]
** most_common: ('4', 4), gold_ans: ['4', 4]
** most_common: ('1', 9), gold_ans: ['1', 1]
** most_common: ('6', 2), gold_ans: ['29', 29]
** most_common: ('2012', 4), gold_ans: ['2015', 2015]
** most_common: ('15', 8), gold_ans: ['15', 15]
** most_common: ('0', 2), gold_ans: ['51', 51]
** most_common: ('\\frac{7}{3}', 2), gold_ans: ['1', 1]
** most_common: ('1', 6), gold_ans: ['13', 13]
** most_common: ('-16', 11), gold_ans: ['-16', -16]
** most_common: ('4', 5), gold_ans: ['4', 4]
** most_common: ('144', 11), gold_ans: ['144\\mbox{m}^3', None]
** most_common: ('24', 6), gold_ans: ['96', 96]
** most_common: ('70', 7), gold_ans: ['70', 70]
** most_common: ('1', 5), gold_ans: ['126', 126]
** most_common: ('0.5', 4), gold_ans: ['\\frac{\\sqrt{3}}{3}', 0.5773502691896257]
** most_common: ('0.35', 2), gold_ans: ['\\frac{11}{20}', 0.55]
** most_common: ('3', 3), gold_ans: ['6', 6]
** most_common: ('5', 3), gold_ans: ['44', 44]
** most_common: ('55', 3), gold_ans: ['55', 55]
BackVerify: 2150
** most_common: ('28', 1), gold_ans: ['11\\sqrt{5}+11', 35.596747752497684]
** most_common: ('0.00', 5), gold_ans: ['15.08', 15.08]
** most_common: ('2', 4), gold_ans: ['4', 4]
** most_common: ('720', 8), gold_ans: ['120', 120]
** most_common: ('4t', 8), gold_ans: ['4t', None]
** most_common: ('7', 2), gold_ans: ['10', 10]
** most_common: ('90', 11), gold_ans: ['90', 90]
** most_common: ('5', 8), gold_ans: ['\\frac{5\\sqrt{6}}{3}', 4.08248290463863]
** most_common: ('100', 9), gold_ans: ['70', 70]
** most_common: ('\\begin{pmatrix}\\frac{12}{13}\\-\\frac{18}{13}\\end{pmatrix}', 5), gold_ans: ['\\begin{pmatrix}12/13\\-18/13\\end{pmatrix}', None]
** most_common: ('20', 6), gold_ans: ['20', 20]
** most_common: ('4', 7), gold_ans: ['4', 4]
** most_common: ('119', 4), gold_ans: ['15', 15]
** most_common: ('137', 2), gold_ans: ['142', 142]
** most_common: ('8', 12), gold_ans: ['8', 8]
** most_common: ('15', 3), gold_ans: ['31', 31]
** most_common: ('153', 6), gold_ans: ['306', 306]
** most_common: ('6', 2), gold_ans: ['18', 18]
** most_common: ('389,720', 1), gold_ans: ['3600', 3600]
** most_common: ('326.5', 8), gold_ans: ['326.5', 326.5]
** most_common: ('24', 2), gold_ans: ['10', 10]
** most_common: ('10', 4), gold_ans: ['21', 21]
** most_common: ('949', 7), gold_ans: ['949', 949]
** most_common: ('24', 11), gold_ans: ['24', 24]
** most_common: ('2', 12), gold_ans: ['2', 2]
** most_common: ('-0.803921569790251', 1), gold_ans: ['2', 2]
** most_common: ('5625', 3), gold_ans: ['600', 600]
** most_common: ('1', 4), gold_ans: ['1+\\sqrt{2}', 2.414213562373095]
** most_common: ('4', 3), gold_ans: ['8', 8]
** most_common: ('0.804907765', 1), gold_ans: ['13', 13]
** most_common: ('2', 3), gold_ans: ['2', 2]
** most_common: ('3', 4), gold_ans: ['7', 7]
** most_common: ('2x^9-8x^7+9x^6-16x^5-12x^4+9x^3-24x^2', 4), gold_ans: ['2x^9-8x^7+9x^6-16x^5-12x^4+9x^3-24x^2', None]
** most_common: ('1050', 3), gold_ans: ['1052', 1052]
** most_common: ('1', 10), gold_ans: ['225', 225]
** most_common: ('13.5', 12), gold_ans: ['13.5', 13.5]
** most_common: ('0.5', 9), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('12', 1), gold_ans: ['87.5', 87.5]
** most_common: ('3.5', 3), gold_ans: ['5', 5]
** most_common: ('9', 11), gold_ans: ['9', 9]
** most_common: ('210', 4), gold_ans: ['210', 210]
** most_common: ('approximately4π-4', 1), gold_ans: ['4\\pi-2\\sqrt{3}', 9.102268999221419]
** most_common: ('1.0', 5), gold_ans: ['1', 1]
** most_common: ('4', 6), gold_ans: ['4', 4]
** most_common: ('5', 5), gold_ans: ['2', 2]
** most_common: ('0.5', 4), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('8.832âˆš3', 1), gold_ans: ['4\\sqrt{2}', 5.656854249492381]
** most_common: ('1', 7), gold_ans: ['2', 2]
** most_common: ('24π', 3), gold_ans: ['30\\pi+9\\sqrt{3}', 109.8362368758137]
** most_common: ('10000', 2), gold_ans: ['\\frac{20000}{\\pi}', 6366.197723675813]
BackVerify: 2200
** most_common: ('\\frac{1}{8}', 4), gold_ans: ['\\frac{3}{16}', 0.1875]
** most_common: ('0', 12), gold_ans: ['0', 0]
** most_common: ('0', 3), gold_ans: ['\\frac{11}{65}', 0.16923076923076924]
** most_common: ('0', 5), gold_ans: ['-1', -1]
** most_common: ('0.25', 12), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('4', 2), gold_ans: ['-3', -3]
** most_common: ('7', 4), gold_ans: ['12', 12]
** most_common: ('1', 6), gold_ans: ['-1', -1]
** most_common: ('0', 3), gold_ans: ['-9', -9]
** most_common: ('120', 3), gold_ans: ['144', 144]
** most_common: ('20', 7), gold_ans: ['29', 29]
** most_common: ('\\frac{1}{8}', 6), gold_ans: ['\\frac{1}{8}', 0.125]
** most_common: ('\\begin{pmatrix}\\frac{\\sqrt{2}}{2}&-\\frac{\\sqrt{2}}{2}\\\\frac{\\sqrt{2}}{2}&\\frac{\\sqrt{2}}{2}\\end{pmatrix}', 4), gold_ans: ['\\begin{pmatrix}1/\\sqrt{2}&1/\\sqrt{2}\\-1/\\sqrt{2}&1/\\sqrt{2}\\end{pmatrix}', None]
** most_common: ('-1', 6), gold_ans: ['-1', -1]
** most_common: ('-48', 3), gold_ans: ['-48', -48]
** most_common: ('-4', 1), gold_ans: ['[-4,0)', None]
** most_common: ('0', 2), gold_ans: ['30', 30]
** most_common: ('4', 7), gold_ans: ['4', 4]
** most_common: ('13', 12), gold_ans: ['13', 13]
** most_common: ('(1,-1)', 2), gold_ans: ['(2,-1)', 1]
** most_common: ('3', 4), gold_ans: ['2\\sqrt{5}', 4.47213595499958]
** most_common: ('2', 2), gold_ans: ['\\frac{3}{4}', 0.75]
** most_common: ('24', 5), gold_ans: ['6', 6]
** most_common: ('128', 4), gold_ans: ['(128,2)', 1282]
** most_common: ('12', 3), gold_ans: ['17', 17]
** most_common: ('73', 6), gold_ans: ['73', 73]
** most_common: ('90', 3), gold_ans: ['18', 18]
** most_common: ('0.5', 11), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('0', 4), gold_ans: ['6', 6]
** most_common: ('3', 12), gold_ans: ['3', 3]
** most_common: ('7', 1), gold_ans: ['14', 14]
** most_common: ('[-10,4]', 10), gold_ans: ['[-10,4]', -104]
** most_common: ('9', 2), gold_ans: ['x^3+27', None]
** most_common: ('2017', 3), gold_ans: ['4036', 4036]
** most_common: ('1', 6), gold_ans: ['3', 3]
** most_common: ('7', 7), gold_ans: ['7', 7]
** most_common: ('1', 3), gold_ans: ['\\frac{1}{12}', 0.08333333333333333]
** most_common: ('27', 3), gold_ans: ['363', 363]
** most_common: ('91.36', 1), gold_ans: ['46', 46]
** most_common: ('777', 9), gold_ans: ['777', 777]
** most_common: ('30', 4), gold_ans: ['21', 21]
** most_common: ('16380', 2), gold_ans: ['16,471', 16471]
** most_common: ('0', 3), gold_ans: ['13', 13]
** most_common: ('0', 4), gold_ans: ['9', 9]
** most_common: ('2√2', 1), gold_ans: ['\\sqrt{6}', 2.449489742783178]
** most_common: ('140', 4), gold_ans: ['70', 70]
** most_common: ('1', 3), gold_ans: ['3', 3]
** most_common: ('210', 4), gold_ans: ['5,460', 5460]
** most_common: ('0.2', 6), gold_ans: ['\\frac{1}{5}', 0.2]
** most_common: ('313', 6), gold_ans: ['314', 314]
BackVerify: 2250
** most_common: ('2+7i', 4), gold_ans: ['2+7i', None]
** most_common: ('3', 4), gold_ans: ['3', 3]
** most_common: ('-9', 12), gold_ans: ['-9', -9]
** most_common: ('0.01', 3), gold_ans: ['0.0011_{2}', None]
** most_common: ('-49', 11), gold_ans: ['-49', -49]
** most_common: ('532.5', 4), gold_ans: ['\\frac{639}{40}', 15.975]
** most_common: ('2', 2), gold_ans: ['7', 7]
** most_common: ('-3', 10), gold_ans: ['-3', -3]
** most_common: ('169', 11), gold_ans: ['169', 169]
** most_common: ('2', 7), gold_ans: ['\\frac{3}{2}+\\frac{3}{2}i', None]
** most_common: ('4', 3), gold_ans: ['54', 54]
** most_common: ('2', 9), gold_ans: ['2', 2]
** most_common: ('1', 4), gold_ans: ['x^3-3x^2+9x-9', None]
** most_common: ('60', 3), gold_ans: ['120', 120]
** most_common: ('1', 3), gold_ans: ['20', 20]
** most_common: ('(-∞,1)∪(1,∞)', 1), gold_ans: ['(-5,\\sqrt{26}]', None]
** most_common: ('6', 4), gold_ans: ['22', 22]
** most_common: ('1+3i', 8), gold_ans: ['-5+3i', None]
** most_common: ('127', 5), gold_ans: ['127', 127]
** most_common: ('15', 4), gold_ans: ['13', 13]
** most_common: ('18', 6), gold_ans: ['15', 15]
** most_common: ('5', 3), gold_ans: ['\\frac{24}{5}', 4.8]
** most_common: ('1', 4), gold_ans: ['3', 3]
** most_common: ('108', 11), gold_ans: ['108', 108]
** most_common: ('9', 2), gold_ans: ['2.5', 2.5]
** most_common: ('-1', 3), gold_ans: ['0', 0]
** most_common: ('2', 3), gold_ans: ['12', 12]
** most_common: ('2', 5), gold_ans: ['\\{1\\pm\\sqrt{5},-2\\}', None]
** most_common: ('21a^5-7a^4-16a^2+32a', 4), gold_ans: ['21a^5-7a^4-16a^2+32a', None]
** most_common: ('154', 3), gold_ans: ['90', 90]
** most_common: ('125', 4), gold_ans: ['300', 300]
** most_common: ('2', 2), gold_ans: ['3\\sqrt{3}', 5.196152422706632]
** most_common: ('17', 3), gold_ans: ['17', 17]
** most_common: ('1.9', 6), gold_ans: ['1\\frac{9}{10}', 1.9]
** most_common: ('13', 5), gold_ans: ['13', 13]
** most_common: ('5', 4), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('6', 4), gold_ans: ['6', 6]
** most_common: ('144', 4), gold_ans: ['720', 720]
** most_common: ('18', 11), gold_ans: ['18', 18]
** most_common: ('32', 12), gold_ans: ['32', 32]
** most_common: ('27', 2), gold_ans: ['46', 46]
** most_common: ('5π', 1), gold_ans: ['9\\pi', 28.274333882308138]
** most_common: ('4.5', 11), gold_ans: ['\\frac{9}{2}', 4.5]
** most_common: ('2', 6), gold_ans: ['2', 2]
** most_common: ('-8', 12), gold_ans: ['-8', -8]
** most_common: ('11', 2), gold_ans: ['9', 9]
** most_common: ('18', 2), gold_ans: ['30', 30]
** most_common: ('24', 5), gold_ans: ['204_5', 2045]
** most_common: ('6', 4), gold_ans: ['11', 11]
** most_common: ('111', 7), gold_ans: ['111', 111]
BackVerify: 2300
** most_common: ('1', 3), gold_ans: ['D', None]
** most_common: ('1', 6), gold_ans: ['2', 2]
** most_common: ('0.5', 6), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('16', 4), gold_ans: ['18', 18]
** most_common: ('1.00', 3), gold_ans: ['3.75', 3.75]
** most_common: ('48', 1), gold_ans: ['6', 6]
** most_common: ('4^{48}/(\\sqrt{5}+1)^{384}', 1), gold_ans: ['125', 125]
** most_common: ('-30', 3), gold_ans: ['30', 30]
** most_common: ('\\frac{2}{7}', 5), gold_ans: ['\\frac{4}{35}', 0.11428571428571428]
** most_common: ('0.8', 6), gold_ans: ['\\frac{3}{5}', 0.6]
** most_common: ('0', 3), gold_ans: ['-8', -8]
** most_common: ('8', 5), gold_ans: ['23', 23]
** most_common: ('40', 3), gold_ans: ['42', 42]
** most_common: ('3', 4), gold_ans: ['4', 4]
** most_common: ('3.43', 4), gold_ans: ['\\frac{24}{7}', 3.4285714285714284]
** most_common: ('0.6', 6), gold_ans: ['\\frac{3}{5}', 0.6]
** most_common: ('0.7333', 10), gold_ans: ['\\frac{11}{15}', 0.7333333333333333]
** most_common: ('-1', 10), gold_ans: ['-1', -1]
** most_common: ('1', 3), gold_ans: ['(3,4]', None]
** most_common: ('120', 2), gold_ans: ['47', 47]
** most_common: ('13', 2), gold_ans: ['1999', 1999]
** most_common: ('4', 7), gold_ans: ['4', 4]
** most_common: ('\\frac{5}{12}', 12), gold_ans: ['\\frac{5}{12}', 0.4166666666666667]
** most_common: ('0.5', 5), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('-7', 11), gold_ans: ['-7', -7]
** most_common: ('45', 9), gold_ans: ['45', 45]
** most_common: ('0', 3), gold_ans: ['163', 163]
** most_common: ('8.5', 3), gold_ans: ['8.5', 8.5]
** most_common: ('720', 5), gold_ans: ['240', 240]
** most_common: ('-30', 1), gold_ans: ['8\\sqrt{3}', 13.856406460551018]
** most_common: ('0', 6), gold_ans: ['-2', -2]
** most_common: ('9.3', 4), gold_ans: ['(9,3)', 93]
** most_common: ('12.5', 3), gold_ans: ['10', 10]
** most_common: ('x^2-1', 4), gold_ans: ['x^2', None]
** most_common: ('(-∞,5)∪(5,∞)', 7), gold_ans: ['(5,\\infty)', None]
** most_common: ('9', 9), gold_ans: ['9', 9]
** most_common: ('32+4√15+12√6+12√7+4√30+4√35+4√42', 1), gold_ans: ['84', 84]
** most_common: ('4', 3), gold_ans: ['4', 4]
** most_common: ('1', 12), gold_ans: ['1', 1]
** most_common: ('-1/5i', 2), gold_ans: ['\\frac{i}{5}', None]
** most_common: ('54', 2), gold_ans: ['84', 84]
** most_common: ('8', 7), gold_ans: ['8', 8]
** most_common: ('454', 1), gold_ans: ['33840', 33840]
** most_common: ('0', 8), gold_ans: ['1', 1]
** most_common: ('12', 1), gold_ans: ['8', 8]
** most_common: ('28.8', 4), gold_ans: ['12', 12]
** most_common: ('1', 3), gold_ans: ['8', 8]
** most_common: ('\\frac{1}{32}', 3), gold_ans: ['\\frac{11}{32}', 0.34375]
** most_common: ('-114', 5), gold_ans: ['-114', -114]
** most_common: ('4', 11), gold_ans: ['4', 4]
BackVerify: 2350
** most_common: ('364', 9), gold_ans: ['364', 364]
** most_common: ('8', 5), gold_ans: ['8', 8]
** most_common: ('4', 5), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('6.5', 5), gold_ans: ['-46', -46]
** most_common: ('18', 2), gold_ans: ['8', 8]
** most_common: ('4', 2), gold_ans: ['208', 208]
** most_common: ('0', 6), gold_ans: ['0', 0]
** most_common: ('4', 4), gold_ans: ['6', 6]
** most_common: ('0.7625', 2), gold_ans: ['\\frac{49}{64}', 0.765625]
** most_common: ('720', 2), gold_ans: ['72', 72]
** most_common: ('363', 9), gold_ans: ['363', 363]
** most_common: ('13', 4), gold_ans: ['3', 3]
** most_common: ('(r+5)(r+5)', 5), gold_ans: ['(r+5)^2', None]
** most_common: ('12', 3), gold_ans: ['117', 117]
** most_common: ('1', 2), gold_ans: ['384', 384]
** most_common: ('23', 9), gold_ans: ['23', 23]
** most_common: ('\\begin{pmatrix}3\\1\\-1\\end{pmatrix}', 3), gold_ans: ['\\begin{pmatrix}2\\-1\\-5\\end{pmatrix}', None]
** most_common: ('(3/2,5)', 3), gold_ans: ['(\\frac{3}{4},5)', 0.75]
** most_common: ('98888', 2), gold_ans: ['89898', 89898]
** most_common: ('5', 3), gold_ans: ['10', 10]
** most_common: ('0.3125', 3), gold_ans: ['\\frac{3}{16}', 0.1875]
** most_common: ('1', 8), gold_ans: ['3', 3]
** most_common: ('(8/3,-3,1/3)', 1), gold_ans: ['(-\\frac{2}{3},-\\frac{7}{3},\\frac{14}{9})', -0.6666666666666666]
** most_common: ('0', 2), gold_ans: ['440', 440]
** most_common: ('27', 4), gold_ans: ['52', 52]
** most_common: ('0', 6), gold_ans: ['0', 0]
** most_common: ('0.1389', 7), gold_ans: ['\\frac{5}{36}', 0.1388888888888889]
** most_common: ('0', 11), gold_ans: ['0', 0]
** most_common: ('20', 12), gold_ans: ['20', 20]
** most_common: ('1430', 1), gold_ans: ['195', 195]
** most_common: ('36', 4), gold_ans: ['12', 12]
** most_common: ('13', 9), gold_ans: ['13', 13]
** most_common: ('19', 3), gold_ans: ['31', 31]
** most_common: ('1457', 1), gold_ans: ['327680', 327680]
** most_common: ('7', 6), gold_ans: ['7', 7]
** most_common: ('11', 2), gold_ans: ['11', 11]
** most_common: ('3926.0', 1), gold_ans: ['1950', 1950]
** most_common: ('neither', 7), gold_ans: ['\\text{odd}', None]
** most_common: ('5', 2), gold_ans: ['5k', None]
** most_common: ('23', 4), gold_ans: ['43', 43]
** most_common: ('2880', 4), gold_ans: ['14,400', 14400]
** most_common: ('1.5', 7), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('125', 5), gold_ans: ['125', 125]
** most_common: ('12', 3), gold_ans: ['5', 5]
** most_common: ('0', 5), gold_ans: ['-2016', -2016]
** most_common: ('1', 6), gold_ans: ['1', 1]
** most_common: ('0.2', 4), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('2', 3), gold_ans: ['6', 6]
** most_common: ('70', 6), gold_ans: ['15', 15]
** most_common: ('27', 7), gold_ans: ['27', 27]
BackVerify: 2400
** most_common: ('729', 2), gold_ans: ['729', 729]
** most_common: ('-1', 4), gold_ans: ['(-\\frac{1}{4},-2)', -0.25]
** most_common: ('216', 8), gold_ans: ['144', 144]
** most_common: ('24024', 1), gold_ans: ['384', 384]
** most_common: ('\\frac{1}{8}', 7), gold_ans: ['\\frac{1}{8}', 0.125]
** most_common: ('12', 3), gold_ans: ['12', 12]
** most_common: ('(0,0)', 2), gold_ans: ['(4,24)', 424]
** most_common: ('139', 9), gold_ans: ['139', 139]
** most_common: ('667', 3), gold_ans: ['672', 672]
** most_common: ('354224848179261915075', 3), gold_ans: ['100', 100]
** most_common: ('54', 2), gold_ans: ['\\frac{13}{3}', 4.333333333333333]
** most_common: ('28', 11), gold_ans: ['28', 28]
** most_common: ('40.91', 4), gold_ans: ['50', 50]
** most_common: ('6', 5), gold_ans: ['0', 0]
** most_common: ('2*x*\\sin\\theta*x+2*x-1+\\sin\\theta', 1), gold_ans: ['-x^3', None]
** most_common: ('15', 4), gold_ans: ['12', 12]
** most_common: ('69', 3), gold_ans: ['69', 69]
** most_common: ('\\frac{1}{3}', 5), gold_ans: ['\\frac{2}{9}', 0.2222222222222222]
** most_common: ('3', 2), gold_ans: ['-71', -71]
** most_common: ('75', 4), gold_ans: ['78', 78]
** most_common: ('0.20', 5), gold_ans: ['0.20', 0.2]
** most_common: ('-90', 4), gold_ans: ['90', 90]
** most_common: ('\\frac{1}{6}', 6), gold_ans: ['\\frac{1}{6}', 0.16666666666666666]
** most_common: ('4950', 4), gold_ans: ['4950', 4950]
** most_common: ('1449', 2), gold_ans: ['141_{13}', None]
** most_common: ('1', 7), gold_ans: ['2', 2]
** most_common: ('1', 4), gold_ans: ['5', 5]
** most_common: ('\\frac{-120}{49}', 2), gold_ans: ['-2', -2]
** most_common: ('9', 8), gold_ans: ['9', 9]
** most_common: ('24', 6), gold_ans: ['24', 24]
** most_common: ('90', 4), gold_ans: ['270', 270]
** most_common: ('2', 8), gold_ans: ['6', 6]
** most_common: ('2', 6), gold_ans: ['1', 1]
** most_common: ('1', 8), gold_ans: ['1', 1]
** most_common: ('60', 7), gold_ans: ['60', 60]
** most_common: ('\\frac{2}{5}', 4), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('2', 4), gold_ans: ['\\text{Tuesday}', None]
** most_common: ('41', 5), gold_ans: ['x^2-10x+41', None]
** most_common: ('4', 9), gold_ans: ['3', 3]
** most_common: ('29.17', 6), gold_ans: ['28', 28]
** most_common: ('6', 5), gold_ans: ['2', 2]
** most_common: ('55', 4), gold_ans: ['54', 54]
** most_common: ('19', 4), gold_ans: ['x+6', None]
** most_common: ('986', 2), gold_ans: ['935', 935]
** most_common: ('4', 3), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('76', 1), gold_ans: ['122', 122]
** most_common: ('0', 8), gold_ans: ['0', 0]
** most_common: ('54', 10), gold_ans: ['54', 54]
** most_common: ('49', 3), gold_ans: ['49', 49]
** most_common: ('28', 1), gold_ans: ['\\frac{11}{13}', 0.8461538461538461]
BackVerify: 2450
** most_common: ('220', 10), gold_ans: ['220', 220]
** most_common: ('0', 3), gold_ans: ['\\frac{25}{31}', 0.8064516129032258]
** most_common: ('36', 2), gold_ans: ['97', 97]
** most_common: ('0', 2), gold_ans: ['2003', 2003]
** most_common: ('\\frac{1004^2}{2007^2}', 2), gold_ans: ['\\frac{5}{8}', 0.625]
** most_common: ('1', 2), gold_ans: ['78', 78]
** most_common: ('316', 1), gold_ans: ['\\begin{pmatrix}31&50\\-18&-29\\end{pmatrix}', None]
** most_common: ('103.85', 1), gold_ans: ['108', 108]
** most_common: ('-4', 7), gold_ans: ['-4', -4]
** most_common: ('8', 3), gold_ans: ['23', 23]
** most_common: ('12,16,-12', 1), gold_ans: ['36', 36]
** most_common: ('78', 10), gold_ans: ['78', 78]
** most_common: ('-4', 4), gold_ans: ['-4', -4]
** most_common: ('31,500', 3), gold_ans: ['771,400', 771400]
** most_common: ('0', 4), gold_ans: ['16', 16]
** most_common: ('-3', 4), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('12', 9), gold_ans: ['12', 12]
** most_common: ('1.5', 8), gold_ans: ['3', 3]
** most_common: ('31', 7), gold_ans: ['31', 31]
** most_common: ('84', 5), gold_ans: ['84', 84]
** most_common: ('π', 5), gold_ans: ['2\\pi+4', 10.283185307179586]
** most_common: ('7,3,-1,-5', 2), gold_ans: ['9,-7', 2]
** most_common: ('68', 3), gold_ans: ['75', 75]
** most_common: ('1', 4), gold_ans: ['3', 3]
** most_common: ('4', 2), gold_ans: ['68', 68]
** most_common: ('24', 3), gold_ans: ['18', 18]
** most_common: ('3', 3), gold_ans: ['39', 39]
** most_common: ('0', 3), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('0', 2), gold_ans: ['73', 73]
** most_common: ('8', 2), gold_ans: ['7', 7]
** most_common: ('2', 4), gold_ans: ['A', None]
** most_common: ('0', 2), gold_ans: ['-\\sqrt{14}', -3.7416573867739413]
** most_common: ('3', 2), gold_ans: ['\\frac{11}{7}', 1.5714285714285714]
** most_common: ('1', 6), gold_ans: ['3^{2007}', None]
** most_common: ('2', 11), gold_ans: ['4', 4]
** most_common: ('2880', 4), gold_ans: ['2880', 2880]
** most_common: ('60', 3), gold_ans: ['12', 12]
** most_common: ('15', 11), gold_ans: ['15', 15]
** most_common: ('1', 3), gold_ans: ['-\\frac{3}{8}', -0.375]
** most_common: ('2π', 10), gold_ans: ['\\pi', 3.141592653589793]
** most_common: ('6', 10), gold_ans: ['6', 6]
** most_common: ('4.5', 3), gold_ans: ['4.5', 4.5]
** most_common: ('-1', 3), gold_ans: ['\\begin{pmatrix}0&-15\\-2&-4\\end{pmatrix}', None]
** most_common: ('0.3525', 5), gold_ans: ['0.35625', 0.35625]
** most_common: ('67.5', 5), gold_ans: ['45', 45]
** most_common: ('2', 8), gold_ans: ['2', 2]
** most_common: ('∞', 2), gold_ans: ['5', 5]
** most_common: ('1', 2), gold_ans: ['1', 1]
** most_common: ('35', 1), gold_ans: ['3', 3]
** most_common: ('7.5', 7), gold_ans: ['7.5', 7.5]
BackVerify: 2500
** most_common: ('300', 2), gold_ans: ['2516_8', 25168]
** most_common: ('110', 2), gold_ans: ['110', 110]
** most_common: ('4', 10), gold_ans: ['4', 4]
** most_common: ('100', 1), gold_ans: ['48', 48]
** most_common: ('0.38', 10), gold_ans: ['0.38', 0.38]
** most_common: ('\\sqrt{[}3]{\\sqrt{x}}', 1), gold_ans: ['\\sqrt{x}', None]
** most_common: ('28', 4), gold_ans: ['16', 16]
** most_common: ('2', 4), gold_ans: ['6', 6]
** most_common: ('6', 7), gold_ans: ['6', 6]
** most_common: ('56', 6), gold_ans: ['560', 560]
** most_common: ('13', 9), gold_ans: ['17', 17]
** most_common: ('12', 5), gold_ans: ['13', 13]
** most_common: ('30240', 5), gold_ans: ['30,240', 30240]
** most_common: ('-0.5', 2), gold_ans: ['-1', -1]
** most_common: ('2', 7), gold_ans: ['3', 3]
** most_common: ('21', 10), gold_ans: ['21', 21]
** most_common: ('420', 8), gold_ans: ['420', 420]
** most_common: ('840', 8), gold_ans: ['840', 840]
** most_common: ('2', 4), gold_ans: ['2', 2]
** most_common: ('7', 12), gold_ans: ['7', 7]
** most_common: ('8', 5), gold_ans: ['0', 0]
** most_common: ('5', 12), gold_ans: ['5', 5]
** most_common: ('0.4', 6), gold_ans: ['0.4', 0.4]
** most_common: ('335.0', 2), gold_ans: ['36', 36]
** most_common: ('\\frac{1}{36}', 5), gold_ans: ['\\frac{1}{72}', 0.013888888888888888]
** most_common: ('106', 7), gold_ans: ['106', 106]
** most_common: ('351', 6), gold_ans: ['153', 153]
** most_common: ('264', 4), gold_ans: ['1056', 1056]
** most_common: ('7', 3), gold_ans: ['13', 13]
** most_common: ('11', 4), gold_ans: ['95', 95]
** most_common: ('42', 6), gold_ans: ['46', 46]
** most_common: ('7', 2), gold_ans: ['25', 25]
** most_common: ('1', 5), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('0', 2), gold_ans: ['80', 80]
** most_common: ('123', 5), gold_ans: ['123', 123]
** most_common: ('1', 4), gold_ans: ['(2,\\infty)', None]
** most_common: ('1023', 1), gold_ans: ['2014', 2014]
** most_common: ('94', 2), gold_ans: ['50', 50]
** most_common: ('196', 1), gold_ans: ['13', 13]
** most_common: ('864', 6), gold_ans: ['864\\mbox{inches}^2', None]
** most_common: ('40', 10), gold_ans: ['40', 40]
** most_common: ('4', 2), gold_ans: ['4', 4]
** most_common: ('132', 4), gold_ans: ['132', 132]
** most_common: ('968', 3), gold_ans: ['968', 968]
** most_common: ('\\frac{1}{4096}', 4), gold_ans: ['\\frac{1}{24}', 0.041666666666666664]
** most_common: ('1050', 5), gold_ans: ['1050', 1050]
** most_common: ('12', 11), gold_ans: ['12', 12]
** most_common: ('16', 12), gold_ans: ['16', 16]
** most_common: ('4π', 2), gold_ans: ['4\\sqrt{2}+4', 9.65685424949238]
** most_common: ('\\begin{pmatrix}1\\-\\frac{12}{5}\\end{pmatrix}', 3), gold_ans: ['\\begin{pmatrix}-5/13\\12/13\\end{pmatrix}', None]
BackVerify: 2550
** most_common: ('180', 1), gold_ans: ['12', 12]
** most_common: ('0.104', 1), gold_ans: ['\\frac{625}{648}', 0.9645061728395061]
** most_common: ('(5,4,-63)', 1), gold_ans: ['(2,-1,2)', -10]
** most_common: ('-28', 6), gold_ans: ['-22', -22]
** most_common: ('29', 3), gold_ans: ['30', 30]
** most_common: ('1', 5), gold_ans: ['0', 0]
** most_common: ('18', 12), gold_ans: ['18', 18]
** most_common: ('1', 2), gold_ans: ['90-\\frac{25}{2}\\pi', 50.730091830127584]
** most_common: ('88', 2), gold_ans: ['64', 64]
** most_common: ('0', 2), gold_ans: ['89', 89]
** most_common: ('3', 10), gold_ans: ['3', 3]
** most_common: ('5', 4), gold_ans: ['9', 9]
** most_common: ('100', 6), gold_ans: ['100', 100]
** most_common: ('15', 3), gold_ans: ['45', 45]
** most_common: ('14', 2), gold_ans: ['49', 49]
** most_common: ('972', 1), gold_ans: ['697', 697]
** most_common: ('(-0.5,0.5,0)', 1), gold_ans: ['(3,-3,1)', -28]
** most_common: ('6', 2), gold_ans: ['12', 12]
** most_common: ('14', 5), gold_ans: ['14', 14]
** most_common: ('-7', 11), gold_ans: ['-7', -7]
** most_common: ('2', 3), gold_ans: ['2', 2]
** most_common: ('8x-1', 11), gold_ans: ['8x-1', None]
** most_common: ('1', 4), gold_ans: ['\\text{Friday}', None]
** most_common: ('\\frac{1}{3}', 6), gold_ans: ['\\frac{\\sqrt{3}}{3}', 0.5773502691896257]
** most_common: ('90', 3), gold_ans: ['30', 30]
** most_common: ('38', 1), gold_ans: ['3', 3]
** most_common: ('16', 6), gold_ans: ['16', 16]
** most_common: ('6', 12), gold_ans: ['6', 6]
** most_common: ('49', 3), gold_ans: ['49', 49]
** most_common: ('\\frac{5}{8}', 7), gold_ans: ['\\frac{5}{8}', 0.625]
** most_common: ('0', 4), gold_ans: ['-3', -3]
** most_common: ('15', 3), gold_ans: ['12', 12]
** most_common: ('30', 3), gold_ans: ['840', 840]
** most_common: ('3.5', 5), gold_ans: ['7', 7]
** most_common: ('38', 7), gold_ans: ['23', 23]
** most_common: ('9', 3), gold_ans: ['12', 12]
** most_common: ('8x^3+12x^2-2x-3', 1), gold_ans: ['(2x+3)(2x-1)(2x+1)', None]
** most_common: ('-211', 2), gold_ans: ['\\begin{pmatrix}2\\-11\\end{pmatrix}', None]
** most_common: ('0.5', 9), gold_ans: ['0.50', 0.5]
** most_common: ('90', 4), gold_ans: ['120', 120]
** most_common: ('25', 4), gold_ans: ['50', 50]
** most_common: ('0.040125', 1), gold_ans: ['\\frac{1}{12}', 0.08333333333333333]
** most_common: ('7.0', 1), gold_ans: ['3+4\\sqrt{2}', 8.65685424949238]
** most_common: ('10√330+10√7', 1), gold_ans: ['33\\sqrt{30}', 180.7484439767048]
** most_common: ('12.01', 3), gold_ans: ['13', 13]
** most_common: ('3', 2), gold_ans: ['x^3+3x-6', None]
** most_common: ('324', 9), gold_ans: ['324', 324]
** most_common: ('1', 6), gold_ans: ['\\frac{5}{18}', 0.2777777777777778]
** most_common: ('0.5', 7), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('16', 4), gold_ans: ['10', 10]
BackVerify: 2600
** most_common: ('320', 2), gold_ans: ['52', 52]
** most_common: ('2016', 2), gold_ans: ['504', 504]
** most_common: ('1', 5), gold_ans: ['x^2-2x+8', None]
** most_common: ('49', 12), gold_ans: ['49', 49]
** most_common: ('1', 3), gold_ans: ['2', 2]
** most_common: ('2√10', 6), gold_ans: ['2\\sqrt{10}', 6.324555320336759]
** most_common: ('-2,0', 2), gold_ans: ['2,-1', 1]
** most_common: ('0.477', 2), gold_ans: ['\\frac{130}{231}', 0.5627705627705628]
** most_common: ('2.5', 7), gold_ans: ['\\frac{5}{2}', 2.5]
** most_common: ('36', 6), gold_ans: ['36', 36]
** most_common: ('1001', 3), gold_ans: ['101', 101]
** most_common: ('169', 2), gold_ans: ['169', 169]
** most_common: ('6', 3), gold_ans: ['6', 6]
** most_common: ('0', 3), gold_ans: ['5', 5]
** most_common: ('3', 1), gold_ans: ['157', 157]
** most_common: ('9', 2), gold_ans: ['\\frac{81}{41}', 1.975609756097561]
** most_common: ('14', 3), gold_ans: ['11\\sqrt{2}', 15.556349186104045]
** most_common: ('3', 5), gold_ans: ['3', 3]
** most_common: ('18', 3), gold_ans: ['12,000,085', 12000085]
** most_common: ('64a^6', 6), gold_ans: ['64a^6', None]
** most_common: ('40', 4), gold_ans: ['40', 40]
** most_common: ('10', 5), gold_ans: ['12', 12]
** most_common: ('40', 8), gold_ans: ['40', 40]
** most_common: ('7', 4), gold_ans: ['3', 3]
** most_common: ('429', 1), gold_ans: ['363', 363]
** most_common: ('50', 1), gold_ans: ['50', 50]
** most_common: ('623.16', 1), gold_ans: ['913', 913]
** most_common: ('(1,7,3)', 4), gold_ans: ['(1,3,3)', 133]
** most_common: ('0.5', 2), gold_ans: ['\\frac{\\sqrt{3}}{2}', 0.8660254037844386]
** most_common: ('86', 2), gold_ans: ['\\frac{3}{5}', 0.6]
** most_common: ('1', 2), gold_ans: ['b-1', None]
** most_common: ('10', 5), gold_ans: ['10', 10]
** most_common: ('\\frac{10}{3}', 2), gold_ans: ['-\\frac{2}{3}', -0.6666666666666666]
** most_common: ('1.9166666666666667', 3), gold_ans: ['12', 12]
** most_common: ('-6', 11), gold_ans: ['18', 18]
** most_common: ('0.5235987755982989', 2), gold_ans: ['\\frac{\\sqrt{10}}{5}', 0.6324555320336759]
** most_common: ('10', 3), gold_ans: ['0', 0]
** most_common: ('0.0625', 7), gold_ans: ['\\frac{1}{16}', 0.0625]
** most_common: ('19', 2), gold_ans: ['49', 49]
** most_common: ('75', 11), gold_ans: ['75', 75]
** most_common: ('97', 8), gold_ans: ['97', 97]
** most_common: ('0.1111111111111111', 10), gold_ans: ['\\frac{1}{9}', 0.1111111111111111]
** most_common: ('-2', 2), gold_ans: ['\\frac{2}{r}', None]
** most_common: ('1.18', 5), gold_ans: ['1.17', 1.17]
** most_common: ('2000', 3), gold_ans: ['2000\\sqrt{2}-2000', 828.4271247461901]
** most_common: ('-12+15i', 8), gold_ans: ['-12+15i', None]
** most_common: ('\\frac{11}{20}', 2), gold_ans: ['\\frac{7}{20}', 0.35]
** most_common: ('4', 9), gold_ans: ['4', 4]
** most_common: ('6', 7), gold_ans: ['6', 6]
** most_common: ('130', 3), gold_ans: ['25', 25]
BackVerify: 2650
** most_common: ('9', 1), gold_ans: ['\\frac{1}{5}', 0.2]
** most_common: ('\\sqrt{3}', 3), gold_ans: ['\\sqrt{3}', 1.7320508075688772]
** most_common: ('2+2i', 5), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('00', 3), gold_ans: ['22', 22]
** most_common: ('88', 6), gold_ans: ['88', 88]
** most_common: ('10', 3), gold_ans: ['49', 49]
** most_common: ('0.145', 1), gold_ans: ['\\frac{37}{819}', 0.045177045177045176]
** most_common: ('6', 7), gold_ans: ['12', 12]
** most_common: ('11', 7), gold_ans: ['11', 11]
** most_common: ('0.0833', 6), gold_ans: ['\\frac{1}{12}', 0.08333333333333333]
** most_common: ('96.8', 4), gold_ans: ['96.8', 96.8]
** most_common: ('18', 2), gold_ans: ['14', 14]
** most_common: ('0.75', 3), gold_ans: ['\\frac{11}{16}', 0.6875]
** most_common: ('65', 2), gold_ans: ['120', 120]
** most_common: ('3', 2), gold_ans: ['(1,3)', 13]
** most_common: ('120', 8), gold_ans: ['120', 120]
** most_common: ('1725', 2), gold_ans: ['743', 743]
** most_common: ('14', 5), gold_ans: ['\\text{Monday}', None]
** most_common: ('4', 4), gold_ans: ['4', 4]
** most_common: ('0.5', 2), gold_ans: ['\\frac{1}{8}', 0.125]
** most_common: ('9', 12), gold_ans: ['9', 9]
** most_common: ('420', 4), gold_ans: ['420', 420]
** most_common: ('8', 11), gold_ans: ['8', 8]
** most_common: ('(-2,1)', 2), gold_ans: ['(-3,2)', -32]
** most_common: ('70', 2), gold_ans: ['75', 75]
** most_common: ('70', 12), gold_ans: ['70', 70]
** most_common: ('8.4', 3), gold_ans: ['\\frac{42}{5}', 8.4]
** most_common: ('0', 3), gold_ans: ['18', 18]
** most_common: ('2.5', 2), gold_ans: ['\\sqrt{13}', 3.605551275463989]
** most_common: ('5', 7), gold_ans: ['1', 1]
** most_common: ('2', 5), gold_ans: ['2', 2]
** most_common: ('-2', 7), gold_ans: ['-2', -2]
** most_common: ('1', 12), gold_ans: ['5', 5]
** most_common: ('0', 4), gold_ans: ['4', 4]
** most_common: ('\\frac{2\\sqrt{2}}{3}', 4), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('0.929', 1), gold_ans: ['\\frac{295}{396}', 0.7449494949494949]
** most_common: ('6', 4), gold_ans: ['6', 6]
** most_common: ('24', 3), gold_ans: ['13', 13]
** most_common: ('630', 4), gold_ans: ['5040', 5040]
** most_common: ('-1', 2), gold_ans: ['-3', -3]
** most_common: ('0', 4), gold_ans: ['120', 120]
** most_common: ('1/3π', 1), gold_ans: ['\\frac{\\pi}{9}', 0.3490658503988659]
** most_common: ('2', 3), gold_ans: ['x+2', None]
** most_common: ('\\frac{1}{2}+\\frac{\\sqrt{7}}{2}i,\\frac{1}{2}-\\frac{\\sqrt{7}}{2}i,2i', 1), gold_ans: ['1,-1,-3i', None]
** most_common: ('132', 3), gold_ans: ['52', 52]
** most_common: ('2010', 2), gold_ans: ['1004', 1004]
** most_common: ('37', 5), gold_ans: ['28', 28]
** most_common: ('108', 2), gold_ans: ['216', 216]
** most_common: ('45', 4), gold_ans: ['45', 45]
** most_common: ('7000', 10), gold_ans: ['7000', 7000]
BackVerify: 2700
** most_common: ('30', 2), gold_ans: ['9', 9]
** most_common: ('(0,49)', 4), gold_ans: ['(7,49)', 749]
** most_common: ('5', 3), gold_ans: ['12', 12]
** most_common: ('-62', 1), gold_ans: ['5', 5]
** most_common: ('0.75', 4), gold_ans: ['1.25', 1.25]
** most_common: ('282.74', 1), gold_ans: ['40', 40]
** most_common: ('36', 7), gold_ans: ['36', 36]
** most_common: ('(-∞,-2)∪(-2,3)∪(3,∞)', 11), gold_ans: ['(-\\infty,-2)\\cup(-2,3)\\cup(3,\\infty)', None]
** most_common: ('720', 12), gold_ans: ['720', 720]
** most_common: ('7', 4), gold_ans: ['7', 7]
** most_common: ('-1.5', 5), gold_ans: ['-\\frac{3}{2}', -1.5]
** most_common: ('1', 10), gold_ans: ['1', 1]
** most_common: ('5040', 10), gold_ans: ['5,040', 5040]
** most_common: ('0', 12), gold_ans: ['0', 0]
** most_common: ('3', 9), gold_ans: ['3', 3]
** most_common: ('720', 3), gold_ans: ['10', 10]
** most_common: ('-0.707106781', 7), gold_ans: ['-\\frac{\\sqrt{2}}{2}', -0.7071067811865476]
** most_common: ('1-3√5/5', 1), gold_ans: ['\\frac{25\\sqrt{10}}{4}', 19.764235376052373]
** most_common: ('3.7%', 1), gold_ans: ['100', 100]
** most_common: ('2005', 1), gold_ans: ['16592', 16592]
** most_common: ('-1', 10), gold_ans: ['1', 1]
** most_common: ('-36', 9), gold_ans: ['-36', -36]
** most_common: ('3', 2), gold_ans: ['4', 4]
** most_common: ('7', 3), gold_ans: ['31', 31]
** most_common: ('7', 12), gold_ans: ['7', 7]
** most_common: ('196', 3), gold_ans: ['49\\pi', 153.93804002589988]
** most_common: ('-4', 4), gold_ans: ['6', 6]
** most_common: ('0', 4), gold_ans: ['\\frac{360}7', 51.42857142857143]
** most_common: ('50', 2), gold_ans: ['38', 38]
** most_common: ('\\sqrt{2}', 3), gold_ans: ['\\sqrt{2}', 1.4142135623730951]
** most_common: ('2', 6), gold_ans: ['2', 2]
** most_common: ('12', 3), gold_ans: ['8', 8]
** most_common: ('9', 7), gold_ans: ['27', 27]
** most_common: ('56', 1), gold_ans: ['165', 165]
** most_common: ('0', 3), gold_ans: ['150', 150]
** most_common: ('1', 4), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('293', 1), gold_ans: ['406', 406]
** most_common: ('-0.24615384615385', 2), gold_ans: ['-\\frac{16}{65}', -0.24615384615384617]
** most_common: ('0.230769230769', 3), gold_ans: ['\\frac{3}{13}', 0.23076923076923078]
** most_common: ('0.75', 9), gold_ans: ['\\frac{3}{4}', 0.75]
** most_common: ('15', 4), gold_ans: ['30', 30]
** most_common: ('0', 3), gold_ans: ['135', 135]
** most_common: ('0', 4), gold_ans: ['5', 5]
** most_common: ('\\frac{4}{27}', 3), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('\\frac{10}{3}', 1), gold_ans: ['\\frac{58}{7}', 8.285714285714286]
** most_common: ('1', 7), gold_ans: ['3', 3]
** most_common: ('0.75', 3), gold_ans: ['\\frac{47}{144}', 0.3263888888888889]
** most_common: ('296', 1), gold_ans: ['23', 23]
** most_common: ('3', 4), gold_ans: ['15', 15]
** most_common: ('12', 12), gold_ans: ['12', 12]
BackVerify: 2750
** most_common: ('44', 11), gold_ans: ['44', 44]
** most_common: ('50,200', 1), gold_ans: ['17700', 17700]
** most_common: ('48', 5), gold_ans: ['36', 36]
** most_common: ('0', 5), gold_ans: ['-7', -7]
** most_common: ('9', 5), gold_ans: ['-27', -27]
** most_common: ('156.25', 4), gold_ans: ['165', 165]
** most_common: ('1024', 6), gold_ans: ['1024', 1024]
** most_common: ('0', 3), gold_ans: ['1', 1]
** most_common: ('14', 12), gold_ans: ['14', 14]
** most_common: ('1993', 2), gold_ans: ['19941989', 19941989]
** most_common: ('\\frac{\\sqrt{130}-2\\sqrt{51}}{2}', 1), gold_ans: ['9', 9]
** most_common: ('8', 9), gold_ans: ['8', 8]
** most_common: ('\\frac{5}{4}', 6), gold_ans: ['5', 5]
** most_common: ('27', 6), gold_ans: ['126', 126]
** most_common: ('\\frac{\\sqrt{21}}{5}', 5), gold_ans: ['\\frac{\\sqrt{21}}{5}', 0.916515138991168]
** most_common: ('0', 4), gold_ans: ['0', 0]
** most_common: ('8', 6), gold_ans: ['11', 11]
** most_common: ('4', 2), gold_ans: ['5', 5]
** most_common: ('9.0', 3), gold_ans: ['4.5', 4.5]
** most_common: ('2', 3), gold_ans: ['98', 98]
** most_common: ('3', 3), gold_ans: ['3', 3]
** most_common: ('1', 7), gold_ans: ['1', 1]
** most_common: ('22', 8), gold_ans: ['22', 22]
** most_common: ('-814+3698i', 7), gold_ans: ['-814+3698i', None]
** most_common: ('11', 4), gold_ans: ['71', 71]
** most_common: ('0', 2), gold_ans: ['\\frac{9}{256}', 0.03515625]
** most_common: ('85', 7), gold_ans: ['85', 85]
** most_common: ('-2', 4), gold_ans: ['-2', -2]
** most_common: ('2', 10), gold_ans: ['2', 2]
** most_common: ('0', 2), gold_ans: ['-\\frac{10}{3}', -3.3333333333333335]
** most_common: ('360', 2), gold_ans: ['180', 180]
** most_common: ('0', 2), gold_ans: ['-120', -120]
** most_common: ('0', 3), gold_ans: ['2', 2]
** most_common: ('4', 7), gold_ans: ['5', 5]
** most_common: ('10', 4), gold_ans: ['240', 240]
** most_common: ('4.5π', 6), gold_ans: ['\\frac{9\\pi}{2}', 14.137166941154069]
** most_common: ('24', 8), gold_ans: ['24', 24]
** most_common: ('68', 3), gold_ans: ['58', 58]
** most_common: ('10', 7), gold_ans: ['0', 0]
** most_common: ('121', 1), gold_ans: ['100', 100]
** most_common: ('1', 8), gold_ans: ['1', 1]
** most_common: ('9', 5), gold_ans: ['27', 27]
** most_common: ('52', 2), gold_ans: ['\\frac{17}{8}', 2.125]
** most_common: ('36', 4), gold_ans: ['180', 180]
** most_common: ('7', 3), gold_ans: ['28', 28]
** most_common: ('800', 12), gold_ans: ['800', 800]
** most_common: ('0', 3), gold_ans: ['\\frac{1}{12}', 0.08333333333333333]
** most_common: ('136', 10), gold_ans: ['136', 136]
** most_common: ('7', 3), gold_ans: ['9', 9]
** most_common: ('-9', 3), gold_ans: ['8', 8]
BackVerify: 2800
** most_common: ('1', 5), gold_ans: ['10', 10]
** most_common: ('3', 6), gold_ans: ['3', 3]
** most_common: ('24', 10), gold_ans: ['24', 24]
** most_common: ('7.75', 1), gold_ans: ['\\frac{25}{9}', 2.7777777777777777]
** most_common: ('216', 3), gold_ans: ['216', 216]
** most_common: ('0.209', 3), gold_ans: ['\\frac{30}{143}', 0.2097902097902098]
** most_common: ('2', 4), gold_ans: ['6', 6]
** most_common: ('0.1209', 1), gold_ans: ['0.015', 0.015]
** most_common: ('\\frac{4}{3}', 2), gold_ans: ['\\frac{8}{21}', 0.38095238095238093]
** most_common: ('2√10', 2), gold_ans: ['21', 21]
** most_common: ('15', 5), gold_ans: ['15', 15]
** most_common: ('undefined', 4), gold_ans: ['\\frac{1}{5}', 0.2]
** most_common: ('286', 2), gold_ans: ['1430', 1430]
** most_common: ('1', 2), gold_ans: ['6', 6]
** most_common: ('2', 10), gold_ans: ['2', 2]
** most_common: ('0', 2), gold_ans: ['(5,-6)', -1]
** most_common: ('18', 4), gold_ans: ['56', 56]
** most_common: ('0', 5), gold_ans: ['9', 9]
** most_common: ('9', 4), gold_ans: ['553', 553]
** most_common: ('6', 9), gold_ans: ['6', 6]
** most_common: ('0.8660254037844386', 5), gold_ans: ['\\frac{\\sqrt{3}}{2}', 0.8660254037844386]
** most_common: ('-32', 3), gold_ans: ['-80', -80]
** most_common: ('0', 2), gold_ans: ['\\sqrt{65}', 8.06225774829855]
** most_common: ('2', 5), gold_ans: ['2', 2]
** most_common: ('9.0', 2), gold_ans: ['5.4', 5.4]
** most_common: ('5', 5), gold_ans: ['10\\pi', 31.41592653589793]
** most_common: ('-77.5', 4), gold_ans: ['-\\frac{155}{2}', -77.5]
** most_common: ('0', 8), gold_ans: ['0', 0]
** most_common: ('243', 2), gold_ans: ['243', 243]
** most_common: ('8', 8), gold_ans: ['2', 2]
** most_common: ('12', 5), gold_ans: ['12', 12]
** most_common: ('0', 2), gold_ans: ['8', 8]
** most_common: ('-19', 2), gold_ans: ['3x^2-7x+4', None]
** most_common: ('2', 5), gold_ans: ['\\begin{pmatrix}2&0\\-3&5\\end{pmatrix}', None]
** most_common: ('99,940,009', 3), gold_ans: ['99940009', 99940009]
** most_common: ('17', 3), gold_ans: ['11', 11]
** most_common: ('3', 4), gold_ans: ['3', 3]
** most_common: ('1', 3), gold_ans: ['1', 1]
** most_common: ('32', 2), gold_ans: ['512', 512]
** most_common: ('76', 4), gold_ans: ['76', 76]
** most_common: ('5', 3), gold_ans: ['17', 17]
** most_common: ('1', 6), gold_ans: ['[-\\frac{1}{2},\\frac{1}{2}]', -0.5]
** most_common: ('30', 6), gold_ans: ['15', 15]
** most_common: ('31,200', 6), gold_ans: ['32,348', 32348]
** most_common: ('-25', 3), gold_ans: ['-221_3', -2213]
** most_common: ('3', 2), gold_ans: ['17', 17]
** most_common: ('1', 3), gold_ans: ['78', 78]
** most_common: ('58', 2), gold_ans: ['62', 62]
** most_common: ('-1/5-6/5i', 1), gold_ans: ['1+2i', None]
** most_common: ('40', 3), gold_ans: ['40', 40]
BackVerify: 2850
** most_common: ('14', 7), gold_ans: ['15', 15]
** most_common: ('\\frac{1}{3}', 4), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('2', 3), gold_ans: ['2', 2]
** most_common: ('36°', 2), gold_ans: ['\\frac{270}7', 38.57142857142857]
** most_common: ('73', 12), gold_ans: ['73', 73]
** most_common: ('59049', 2), gold_ans: ['14', 14]
** most_common: ('6', 6), gold_ans: ['3\\sqrt{2}', 4.242640687119285]
** most_common: ('0.5', 4), gold_ans: ['\\frac{5}{13}', 0.38461538461538464]
** most_common: ('170', 3), gold_ans: ['11', 11]
** most_common: ('12.3', 2), gold_ans: ['12', 12]
** most_common: ('-52', 2), gold_ans: ['962', 962]
** most_common: ('1', 2), gold_ans: ['\\frac{3}{5}', 0.6]
** most_common: ('5', 9), gold_ans: ['5', 5]
** most_common: ('1', 4), gold_ans: ['-13', -13]
** most_common: ('2', 6), gold_ans: ['3', 3]
** most_common: ('0.25', 5), gold_ans: ['\\frac{6}{7}', 0.8571428571428571]
** most_common: ('9', 10), gold_ans: ['9', 9]
** most_common: ('\\frac{7}{4}', 5), gold_ans: ['\\frac{7}{4}', 1.75]
** most_common: ('10', 4), gold_ans: ['10', 10]
** most_common: ('25', 8), gold_ans: ['25', 25]
** most_common: ('E', 7), gold_ans: ['(\\text{E})', 2.718281828459045]
** most_common: ('2', 5), gold_ans: ['4', 4]
** most_common: ('2', 4), gold_ans: ['3', 3]
** most_common: ('8', 6), gold_ans: ['12', 12]
** most_common: ('7132142.5', 1), gold_ans: ['715', 715]
** most_common: ('-4', 3), gold_ans: ['4', 4]
** most_common: ('2', 10), gold_ans: ['2', 2]
** most_common: ('44.13%', 2), gold_ans: ['44', 44]
** most_common: ('3√13', 6), gold_ans: ['3\\sqrt{13}', 10.816653826391969]
** most_common: ('234', 3), gold_ans: ['234', 234]
** most_common: ('120', 12), gold_ans: ['120', 120]
** most_common: ('3', 3), gold_ans: ['2', 2]
** most_common: ('200', 12), gold_ans: ['200', 200]
** most_common: ('43,200', 7), gold_ans: ['10800', 10800]
** most_common: ('[0,∞)', 5), gold_ans: ['[0,\\infty)', None]
** most_common: ('9', 3), gold_ans: ['6', 6]
** most_common: ('11.3162', 1), gold_ans: ['\\sqrt{70}', 8.366600265340756]
** most_common: ('1', 3), gold_ans: ['12', 12]
** most_common: ('2', 7), gold_ans: ['20', 20]
** most_common: ('\\frac{17}{4}', 1), gold_ans: ['-9', -9]
** most_common: ('\\frac{2}{15}', 2), gold_ans: ['\\frac{1}{10}', 0.1]
** most_common: ('1', 3), gold_ans: ['1', 1]
** most_common: ('288', 3), gold_ans: ['24', 24]
** most_common: ('12345', 3), gold_ans: ['31254', 31254]
** most_common: ('-\\begin{pmatrix}2\\7\\-13\\end{pmatrix}', 2), gold_ans: ['\\begin{pmatrix}-2\\-7\\13\\end{pmatrix}', None]
** most_common: ('(7,8√2)', 2), gold_ans: ['(1,4\\sqrt{3})', None]
** most_common: ('1', 4), gold_ans: ['4', 4]
** most_common: ('5705', 3), gold_ans: ['3003', 3003]
** most_common: ('3', 3), gold_ans: ['3', 3]
** most_common: ('8', 3), gold_ans: ['20', 20]
BackVerify: 2900
** most_common: ('198', 4), gold_ans: ['198', 198]
** most_common: ('undefined', 2), gold_ans: ['2\\sqrt{2}', 2.8284271247461903]
** most_common: ('0', 2), gold_ans: ['2', 2]
** most_common: ('12600', 9), gold_ans: ['12600', 12600]
** most_common: ('1', 6), gold_ans: ['\\frac{4}{7}', 0.5714285714285714]
** most_common: ('0', 10), gold_ans: ['0', 0]
** most_common: ('2', 4), gold_ans: ['4', 4]
** most_common: ('28', 12), gold_ans: ['28', 28]
** most_common: ('1', 6), gold_ans: ['1', 1]
** most_common: ('4', 6), gold_ans: ['5', 5]
** most_common: ('256', 6), gold_ans: ['256', 256]
** most_common: ('1056', 2), gold_ans: ['1056', 1056]
** most_common: ('58', 6), gold_ans: ['58', 58]
** most_common: ('0.1', 2), gold_ans: ['\\frac{152}{225}', 0.6755555555555556]
** most_common: ('180', 1), gold_ans: ['26', 26]
** most_common: ('4', 6), gold_ans: ['2', 2]
** most_common: ('0', 4), gold_ans: ['\\sqrt{2}', 1.4142135623730951]
** most_common: ('1', 5), gold_ans: ['1', 1]
** most_common: ('24', 9), gold_ans: ['24', 24]
** most_common: ('5', 2), gold_ans: ['10', 10]
** most_common: ('513.28', 1), gold_ans: ['\\frac{700}{3}', 233.33333333333334]
** most_common: ('2', 4), gold_ans: ['\\frac{\\pi}{4}', 0.7853981633974483]
** most_common: ('0.34', 6), gold_ans: ['\\frac{17}{50}', 0.34]
** most_common: ('0', 7), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('(B)Circle', 4), gold_ans: ['\\text{(E)}', 2.718281828459045]
** most_common: ('29', 1), gold_ans: ['157', 157]
** most_common: ('0.21875', 7), gold_ans: ['\\frac{27}{128}', 0.2109375]
** most_common: ('15', 3), gold_ans: ['127', 127]
** most_common: ('9', 11), gold_ans: ['9', 9]
** most_common: ('16', 10), gold_ans: ['16', 16]
** most_common: ('6.1', 4), gold_ans: ['5.4', 5.4]
** most_common: ('\\frac{\\pi^2}{4}', 2), gold_ans: ['\\frac{\\pi^2}{6}', 1.6449340668482264]
** most_common: ('70', 3), gold_ans: ['70', 70]
** most_common: ('2', 4), gold_ans: ['1', 1]
** most_common: ('(-∞,-6)∪(-6,4)∪(4,∞)', 5), gold_ans: ['(-\\infty,-4)\\cup(-4,6)\\cup(6,\\infty)', None]
** most_common: ('3', 6), gold_ans: ['3', 3]
** most_common: ('8', 6), gold_ans: ['4', 4]
** most_common: ('\\frac{40}{3}', 4), gold_ans: ['\\frac{80}{3}', 26.666666666666668]
** most_common: ('-48', 2), gold_ans: ['1736', 1736]
** most_common: ('2.7', 9), gold_ans: ['2.7', 2.7]
** most_common: ('2', 10), gold_ans: ['2', 2]
** most_common: ('undefined', 7), gold_ans: ['0', 0]
** most_common: ('-1', 1), gold_ans: ['12-4\\sqrt{2}', 6.343145750507619]
** most_common: ('630', 5), gold_ans: ['630', 630]
** most_common: ('16,105', 5), gold_ans: ['15,000', 15000]
** most_common: ('41', 2), gold_ans: ['5', 5]
** most_common: ('0.1', 10), gold_ans: ['\\frac{1}{10}', 0.1]
** most_common: ('2016', 4), gold_ans: ['3024', 3024]
** most_common: ('125', 1), gold_ans: ['2\\sqrt{13}', 7.211102550927978]
** most_common: ('2.5', 9), gold_ans: ['3', 3]
BackVerify: 2950
** most_common: ('-3.08', 2), gold_ans: ['2', 2]
** most_common: ('1', 6), gold_ans: ['6', 6]
** most_common: ('\\begin{pmatrix}3\\-4\\end{pmatrix}', 1), gold_ans: ['\\begin{pmatrix}-4\\-3\\end{pmatrix}', None]
** most_common: ('6', 2), gold_ans: ['-6', -6]
** most_common: ('-1', 9), gold_ans: ['-1', -1]
** most_common: ('-1,3', 1), gold_ans: ['-4,-3,-1,1,2,5', -1132]
** most_common: ('11', 12), gold_ans: ['11', 11]
** most_common: ('15', 7), gold_ans: ['15', 15]
** most_common: ('15', 3), gold_ans: ['36', 36]
** most_common: ('A,C', 6), gold_ans: ['\\text{A,C,F}', None]
** most_common: ('1', 2), gold_ans: ['9', 9]
** most_common: ('6', 2), gold_ans: ['21022', 21022]
** most_common: ('222', 4), gold_ans: ['222', 222]
** most_common: ('17', 3), gold_ans: ['42', 42]
** most_common: ('12', 6), gold_ans: ['12', 12]
** most_common: ('undefined', 2), gold_ans: ['-6', -6]
** most_common: ('338', 12), gold_ans: ['338', 338]
** most_common: ('1', 3), gold_ans: ['(x^2+1)(x^2-4x+13)', None]
** most_common: ('221', 2), gold_ans: ['221', 221]
** most_common: ('1', 8), gold_ans: ['1', 1]
** most_common: ('-4', 2), gold_ans: ['19', 19]
** most_common: ('223318', 1), gold_ans: ['93', 93]
** most_common: ('10', 2), gold_ans: ['11', 11]
** most_common: ('2', 6), gold_ans: ['4', 4]
** most_common: ('\\frac{9}{32}', 1), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('52', 5), gold_ans: ['52_8', 528]
** most_common: ('5', 5), gold_ans: ['5', 5]
** most_common: ('48.52', 6), gold_ans: ['84', 84]
** most_common: ('3', 4), gold_ans: ['2', 2]
** most_common: ('10', 5), gold_ans: ['2', 2]
** most_common: ('-5', 7), gold_ans: ['-5', -5]
** most_common: ('5', 7), gold_ans: ['-4', -4]
** most_common: ('3cis(π/2+tan^(-1)(4/5))', 1), gold_ans: ['1-12i', None]
** most_common: ('8π', 12), gold_ans: ['8\\pi', 25.132741228718345]
** most_common: ('45', 2), gold_ans: ['24', 24]
** most_common: ('440', 4), gold_ans: ['220', 220]
** most_common: ('27', 12), gold_ans: ['27', 27]
** most_common: ('2', 2), gold_ans: ['3', 3]
** most_common: ('0.5', 3), gold_ans: ['\\frac{1}{8}', 0.125]
** most_common: ('0.416666666666667', 3), gold_ans: ['\\frac{5}{12}', 0.4166666666666667]
** most_common: ('4992', 4), gold_ans: ['2304', 2304]
** most_common: ('64', 5), gold_ans: ['64', 64]
** most_common: ('17', 1), gold_ans: ['11', 11]
** most_common: ('16', 7), gold_ans: ['16', 16]
** most_common: ('2.8943', 1), gold_ans: ['4', 4]
** most_common: ('15', 3), gold_ans: ['10', 10]
** most_common: ('3', 2), gold_ans: ['3', 3]
** most_common: ('178-38d', 1), gold_ans: ['1112', 1112]
** most_common: ('8499', 1), gold_ans: ['2016', 2016]
** most_common: ('0', 4), gold_ans: ['10x-4y-5z-20=0', None]
BackVerify: 3000
** most_common: ('1', 2), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('255', 12), gold_ans: ['255', 255]
** most_common: ('3', 4), gold_ans: ['3', 3]
** most_common: ('32', 7), gold_ans: ['32', 32]
** most_common: ('1', 1), gold_ans: ['0', 0]
** most_common: ('1', 6), gold_ans: ['1', 1]
** most_common: ('1', 9), gold_ans: ['1', 1]
** most_common: ('1', 5), gold_ans: ['4', 4]
** most_common: ('7', 7), gold_ans: ['7', 7]
** most_common: ('6', 2), gold_ans: ['6+8i,6+17i', None]
** most_common: ('1', 4), gold_ans: ['\\text{M}', None]
** most_common: ('0', 4), gold_ans: ['\\frac{7}{4}', 1.75]
** most_common: ('E', 12), gold_ans: ['\\text{D}', None]
** most_common: ('4', 4), gold_ans: ['12', 12]
** most_common: ('180', 3), gold_ans: ['135', 135]
** most_common: ('21y+14', 12), gold_ans: ['21y+14', None]
** most_common: ('2', 4), gold_ans: ['x+3', None]
** most_common: ('90-x', 2), gold_ans: ['-89', -89]
** most_common: ('25', 1), gold_ans: ['50', 50]
** most_common: ('26.0', 2), gold_ans: ['\\frac{52}{3}', 17.333333333333332]
** most_common: ('-22', 1), gold_ans: ['\\begin{pmatrix}-2\\-14\\-7\\end{pmatrix}', None]
** most_common: ('2', 7), gold_ans: ['4', 4]
** most_common: ('23', 2), gold_ans: ['9', 9]
** most_common: ('1', 4), gold_ans: ['199', 199]
** most_common: ('1', 5), gold_ans: ['8n^2+4n+1', None]
** most_common: ('2560', 11), gold_ans: ['2560', 2560]
** most_common: ('27', 7), gold_ans: ['27', 27]
** most_common: ('126', 7), gold_ans: ['42', 42]
** most_common: ('156', 5), gold_ans: ['144', 144]
** most_common: ('3', 5), gold_ans: ['9', 9]
** most_common: ('1048.5', 3), gold_ans: ['1093', 1093]
** most_common: ('18', 2), gold_ans: ['18', 18]
** most_common: ('6√6', 5), gold_ans: ['432\\sqrt{2}', 610.9402589451771]
** most_common: ('7', 12), gold_ans: ['7', 7]
** most_common: ('9', 3), gold_ans: ['59', 59]
** most_common: ('\\frac{5}{9}', 3), gold_ans: ['\\frac{5}{9}', 0.5555555555555556]
** most_common: ('10', 3), gold_ans: ['5', 5]
** most_common: ('0.3125', 2), gold_ans: ['\\frac{40}{243}', 0.1646090534979424]
** most_common: ('\\frac{8}{125}', 3), gold_ans: ['\\frac{69}{125}', 0.552]
** most_common: ('5', 8), gold_ans: ['5', 5]
** most_common: ('0', 2), gold_ans: ['-6', -6]
** most_common: ('5', 3), gold_ans: ['\\frac{\\sqrt{11}}{2}', 1.6583123951777]
** most_common: ('-3969', 5), gold_ans: ['-3969', -3969]
** most_common: ('28', 8), gold_ans: ['28', 28]
** most_common: ('0', 3), gold_ans: ['(27,\\infty)', None]
** most_common: ('450', 3), gold_ans: ['240', 240]
** most_common: ('8', 6), gold_ans: ['8', 8]
** most_common: ('0.3333333333333333', 2), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('5', 2), gold_ans: ['16', 16]
** most_common: ('\\frac{9}{7}', 6), gold_ans: ['\\frac{9}{7}', 1.2857142857142858]
BackVerify: 3050
** most_common: ('-4', 10), gold_ans: ['-4', -4]
** most_common: ('8', 7), gold_ans: ['8', 8]
** most_common: ('600', 7), gold_ans: ['600', 600]
** most_common: ('54', 6), gold_ans: ['108', 108]
** most_common: ('0', 5), gold_ans: ['\\sqrt{101}-\\sqrt{2}+9', 17.635662058747794]
** most_common: ('360', 2), gold_ans: ['840', 840]
** most_common: ('322,560', 2), gold_ans: ['20160', 20160]
** most_common: ('133', 7), gold_ans: ['133', 133]
** most_common: ('5', 4), gold_ans: ['7', 7]
** most_common: ('0', 3), gold_ans: ['\\frac{1}{64}', 0.015625]
** most_common: ('26000', 12), gold_ans: ['26000', 26000]
** most_common: ('-1.6', 6), gold_ans: ['-\\frac{8}{5}', -1.6]
** most_common: ('3', 5), gold_ans: ['-\\frac{5}{4}', -1.25]
** most_common: ('352', 11), gold_ans: ['352', 352]
** most_common: ('0.1111', 6), gold_ans: ['\\frac{1}{9}', 0.1111111111111111]
** most_common: ('odd', 11), gold_ans: ['\\text{odd}', None]
** most_common: ('5', 11), gold_ans: ['5', 5]
** most_common: ('4', 8), gold_ans: ['4', 4]
** most_common: ('9', 11), gold_ans: ['8_9', 89]
** most_common: ('15', 3), gold_ans: ['15', 15]
** most_common: ('4', 3), gold_ans: ['8', 8]
** most_common: ('1', 8), gold_ans: ['\\text{parabola}', None]
** most_common: ('6', 4), gold_ans: ['6', 6]
** most_common: ('1', 4), gold_ans: ['3', 3]
** most_common: ('103', 4), gold_ans: ['203', 203]
** most_common: ('11', 2), gold_ans: ['19', 19]
** most_common: ('3', 11), gold_ans: ['3', 3]
** most_common: ('100', 11), gold_ans: ['100', 100]
** most_common: ('0.75', 4), gold_ans: ['\\frac{5}{16}', 0.3125]
** most_common: ('\\frac{2}{3}', 12), gold_ans: ['\\frac{2}{3}', 0.6666666666666666]
** most_common: ('2', 2), gold_ans: ['1,-2', -1]
** most_common: ('0.3077', 2), gold_ans: ['\\frac{4}{13}', 0.3076923076923077]
** most_common: ('\\frac{1}{15}', 6), gold_ans: ['\\frac{1}{15}', 0.06666666666666667]
** most_common: ('1', 5), gold_ans: ['x^8+x^7+x^6+x^5+x^4+x^3+x^2+x+1', None]
** most_common: ('0', 4), gold_ans: ['9', 9]
** most_common: ('0', 2), gold_ans: ['12.25', 12.25]
** most_common: ('2450', 9), gold_ans: ['2450', 2450]
** most_common: ('4√2', 2), gold_ans: ['15', 15]
** most_common: ('\\frac{3}{663}', 3), gold_ans: ['\\frac{1}{221}', 0.004524886877828055]
** most_common: ('8', 2), gold_ans: ['6', 6]
** most_common: ('5', 12), gold_ans: ['5', 5]
** most_common: ('0', 2), gold_ans: ['20', 20]
** most_common: ('65', 2), gold_ans: ['1241', 1241]
** most_common: ('31418', 1), gold_ans: ['301', 301]
** most_common: ('4', 4), gold_ans: ['277', 277]
** most_common: ('0.1', 2), gold_ans: ['\\frac{1}{11}', 0.09090909090909091]
** most_common: ('\\begin{pmatrix}3&2\\c&d\\end{pmatrix}', 2), gold_ans: ['\\begin{pmatrix}3&2\\0&-7\\end{pmatrix}', None]
** most_common: ('\\frac{9}{5}', 1), gold_ans: ['15\\pi', 47.1238898038469]
** most_common: ('2245.95', 1), gold_ans: ['2250\\pi', 7068.583470577035]
** most_common: ('3', 4), gold_ans: ['\\sqrt{3}', 1.7320508075688772]
BackVerify: 3100
** most_common: ('[0,1]', 2), gold_ans: ['(-\\infty,0]', None]
** most_common: ('3', 2), gold_ans: ['5', 5]
** most_common: ('16', 2), gold_ans: ['30', 30]
** most_common: ('\\frac{7775}{7776}', 3), gold_ans: ['\\frac{7775}{7776}', 0.9998713991769548]
** most_common: ('1080', 6), gold_ans: ['1080', 1080]
** most_common: ('4', 4), gold_ans: ['3', 3]
** most_common: ('2', 5), gold_ans: ['4', 4]
** most_common: ('2.8284271247461903', 2), gold_ans: ['\\frac{37}{11}', 3.3636363636363638]
** most_common: ('22.8', 11), gold_ans: ['22.8', 22.8]
** most_common: ('-\\frac{5}{4},-\\frac{7}{3}', 1), gold_ans: ['3,-\\frac{1}{3}', 3]
** most_common: ('0', 3), gold_ans: ['-2', -2]
** most_common: ('20', 3), gold_ans: ['10\\sqrt{6}', 24.49489742783178]
** most_common: ('48', 2), gold_ans: ['10080', 10080]
** most_common: ('13', 6), gold_ans: ['13', 13]
** most_common: ('\\frac{1}{3}', 3), gold_ans: ['\\frac{\\sqrt{3}}{3}', 0.5773502691896257]
** most_common: ('64', 8), gold_ans: ['64', 64]
** most_common: ('3.16227766', 1), gold_ans: ['\\frac{5}{3}', 1.6666666666666667]
** most_common: ('3', 1), gold_ans: ['9', 9]
** most_common: ('240', 1), gold_ans: ['1320', 1320]
** most_common: ('8.5', 9), gold_ans: ['\\frac{17}{2}', 8.5]
** most_common: ('12', 7), gold_ans: ['36', 36]
** most_common: ('3', 2), gold_ans: ['27', 27]
** most_common: ('[\\begin{array}{cc}0&0\\0&1\\end{array}]', 5), gold_ans: ['\\begin{pmatrix}0&0&0\\0&1&0\\0&0&0\\end{pmatrix}', None]
** most_common: ('2', 4), gold_ans: ['4', 4]
** most_common: ('3', 1), gold_ans: ['89', 89]
** most_common: ('16', 2), gold_ans: ['81', 81]
** most_common: ('3', 2), gold_ans: ['11', 11]
** most_common: ('18', 2), gold_ans: ['5', 5]
** most_common: ('[00;01]', 3), gold_ans: ['\\begin{pmatrix}0&0\\0&1\\end{pmatrix}', None]
** most_common: ('0', 12), gold_ans: ['0', 0]
** most_common: ('(-\\infty,-4)\\cup(-4,\\infty)', 3), gold_ans: ['(-\\infty,-4)\\cup(-4,\\infty)', None]
** most_common: ('9', 5), gold_ans: ['9', 9]
** most_common: ('319', 10), gold_ans: ['319', 319]
** most_common: ('6', 3), gold_ans: ['12', 12]
** most_common: ('8', 5), gold_ans: ['4096', 4096]
** most_common: ('41', 2), gold_ans: ['13', 13]
** most_common: ('6561', 1), gold_ans: ['66673', 66673]
** most_common: ('0', 3), gold_ans: ['15', 15]
** most_common: ('0', 3), gold_ans: ['9', 9]
** most_common: ('0', 3), gold_ans: ['\\frac{1}{2},1,2', 0.5]
** most_common: ('10', 12), gold_ans: ['10', 10]
** most_common: ('32', 4), gold_ans: ['41', 41]
** most_common: ('1', 7), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('0', 6), gold_ans: ['\\frac{35}{64}', 0.546875]
** most_common: ('49', 3), gold_ans: ['7', 7]
** most_common: ('269', 5), gold_ans: ['269', 269]
** most_common: ('-20', 12), gold_ans: ['-20', -20]
** most_common: ('962', 1), gold_ans: ['621', 621]
** most_common: ('2', 3), gold_ans: ['2', 2]
** most_common: ('0', 4), gold_ans: ['0', 0]
BackVerify: 3150
** most_common: ('0', 3), gold_ans: ['10', 10]
** most_common: ('7', 4), gold_ans: ['7', 7]
** most_common: ('2', 1), gold_ans: ['8\\sqrt{2}', 11.313708498984761]
** most_common: ('-30', 5), gold_ans: ['31', 31]
** most_common: ('\\begin{pmatrix}10\\35\\-30\\end{pmatrix}', 5), gold_ans: ['\\begin{pmatrix}-10\\-35\\30\\end{pmatrix}', None]
** most_common: ('118.55', 1), gold_ans: ['72\\pi\\sqrt{3}', 391.78066267459104]
** most_common: ('75', 5), gold_ans: ['\\sqrt{6}', 2.449489742783178]
** most_common: ('-\\frac{\\pi}{6},\\frac{\\pi}{6}', 3), gold_ans: ['-\\frac{5\\pi}{12},-\\frac{\\pi}{12},\\frac{\\pi}{12},\\frac{5\\pi}{12}', None]
** most_common: ('-4', 4), gold_ans: ['(-4,13)', -413]
** most_common: ('0.5', 4), gold_ans: ['\\frac{1+\\sqrt{5}}{4}', 0.8090169943749475]
** most_common: ('12', 3), gold_ans: ['108', 108]
** most_common: ('14', 3), gold_ans: ['-\\frac{82}{27}', -3.037037037037037]
** most_common: ('0.5', 4), gold_ans: ['\\frac{\\sqrt{5}}{5}', 0.4472135954999579]
** most_common: ('3', 7), gold_ans: ['4', 4]
** most_common: ('-74', 1), gold_ans: ['(10,14,61)', 101461]
** most_common: ('\\frac{35}{4}', 2), gold_ans: ['\\frac{14}{3}', 4.666666666666667]
** most_common: ('37', 2), gold_ans: ['503', 503]
** most_common: ('22', 6), gold_ans: ['22', 22]
** most_common: ('9', 4), gold_ans: ['9', 9]
** most_common: ('1', 6), gold_ans: ['-1', -1]
** most_common: ('4', 4), gold_ans: ['30', 30]
** most_common: ('4,-2+3i\\sqrt{2},-2-3i\\sqrt{2}', 2), gold_ans: ['4,-2+3i,-2-3i', None]
** most_common: ('5', 3), gold_ans: ['23', 23]
** most_common: ('5', 2), gold_ans: ['850', 850]
** most_common: ('60', 9), gold_ans: ['60', 60]
** most_common: ('16', 4), gold_ans: ['20', 20]
** most_common: ('8', 11), gold_ans: ['8', 8]
** most_common: ('', 6), gold_ans: ['14', 14]
** most_common: ('(5,2)', 3), gold_ans: ['(1,2)', 12]
** most_common: ('5', 4), gold_ans: ['41', 41]
** most_common: ('1', 5), gold_ans: ['\\frac{2}{3}', 0.6666666666666666]
** most_common: ('\\frac{5\\pi}{3}', 3), gold_ans: ['\\frac{2\\pi}{3}', 2.0943951023931957]
** most_common: ('75', 7), gold_ans: ['75', 75]
** most_common: ('80', 12), gold_ans: ['80', 80]
** most_common: ('2', 3), gold_ans: ['3', 3]
** most_common: ('2', 8), gold_ans: ['2', 2]
** most_common: ('3', 5), gold_ans: ['2\\sqrt{2}', 2.8284271247461903]
** most_common: ('1924', 1), gold_ans: ['980', 980]
** most_common: ('15', 10), gold_ans: ['15', 15]
** most_common: ('78', 11), gold_ans: ['78', 78]
** most_common: ('50π', 3), gold_ans: ['50', 50]
** most_common: ('-√3', 4), gold_ans: ['-\\sqrt{3}', -1.7320508075688772]
** most_common: ('\\frac{1}{4}', 2), gold_ans: ['\\frac{3}{4}', 0.75]
** most_common: ('287300', 1), gold_ans: ['8000', 8000]
** most_common: ('11', 9), gold_ans: ['11+x', None]
** most_common: ('28', 8), gold_ans: ['28', 28]
** most_common: ('0.5', 3), gold_ans: ['\\frac{\\sqrt{7}}{14}', 0.18898223650461363]
** most_common: ('815', 2), gold_ans: ['6732', 6732]
** most_common: ('\\frac{19}{216}', 3), gold_ans: ['\\frac{2}{27}', 0.07407407407407407]
** most_common: ('2', 9), gold_ans: ['2', 2]
BackVerify: 3200
** most_common: ('32', 4), gold_ans: ['-4', -4]
** most_common: ('2', 6), gold_ans: ['2', 2]
** most_common: ('3', 3), gold_ans: ['31', 31]
** most_common: ('162', 8), gold_ans: ['162', 162]
** most_common: ('(1,1)', 3), gold_ans: ['(4,5)', 45]
** most_common: ('\\begin{pmatrix}6\\28\\108\\end{pmatrix}', 1), gold_ans: ['\\begin{pmatrix}-18\\-49\\96\\end{pmatrix}', None]
** most_common: ('2', 5), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('21', 4), gold_ans: ['17', 17]
** most_common: ('6', 4), gold_ans: ['8', 8]
** most_common: ('40', 6), gold_ans: ['40', 40]
** most_common: ('0.85714285714286', 2), gold_ans: ['\\frac{2}{3}', 0.6666666666666666]
** most_common: ('0.171875', 1), gold_ans: ['\\frac{35}{128}', 0.2734375]
** most_common: ('13', 8), gold_ans: ['13', 13]
** most_common: ('55', 11), gold_ans: ['55', 55]
** most_common: ('21', 3), gold_ans: ['243', 243]
** most_common: ('91', 4), gold_ans: ['19', 19]
** most_common: ('10', 3), gold_ans: ['10', 10]
** most_common: ('2', 3), gold_ans: ['-3', -3]
** most_common: ('26', 9), gold_ans: ['26', 26]
** most_common: ('0', 5), gold_ans: ['-\\frac{1}{4}', -0.25]
** most_common: ('-\\frac{3}{4}', 3), gold_ans: ['\\frac{5}{4}', 1.25]
** most_common: ('-9(sqrt{208})', 1), gold_ans: ['28', 28]
** most_common: ('21', 3), gold_ans: ['14', 14]
** most_common: ('16', 8), gold_ans: ['16', 16]
** most_common: ('65', 2), gold_ans: ['365', 365]
** most_common: ('6300000', 5), gold_ans: ['6290000', 6290000]
** most_common: ('26', 4), gold_ans: ['18', 18]
** most_common: ('3', 3), gold_ans: ['\\text{Sunday}', None]
** most_common: ('1', 4), gold_ans: ['\\frac{1}{5}', 0.2]
** most_common: ('\\frac{5}{17}', 2), gold_ans: ['\\frac{35}{128}', 0.2734375]
** most_common: ('1', 4), gold_ans: ['8', 8]
** most_common: ('12', 4), gold_ans: ['12', 12]
** most_common: ('0', 9), gold_ans: ['-108', -108]
** most_common: ('7', 10), gold_ans: ['7', 7]
** most_common: ('2', 3), gold_ans: ['3x-2', None]
** most_common: ('60', 8), gold_ans: ['60', 60]
** most_common: ('7', 7), gold_ans: ['143', 143]
** most_common: ('84', 6), gold_ans: ['84', 84]
** most_common: ('-35', 3), gold_ans: ['3', 3]
** most_common: ('2', 4), gold_ans: ['\\sqrt{6}', 2.449489742783178]
** most_common: ('6', 3), gold_ans: ['1', 1]
** most_common: ('37', 11), gold_ans: ['37', 37]
** most_common: ('5', 5), gold_ans: ['5', 5]
** most_common: ('406', 8), gold_ans: ['406', 406]
** most_common: ('0.0896', 2), gold_ans: ['\\frac{448}{15625}', 0.028672]
** most_common: ('13', 1), gold_ans: ['30', 30]
** most_common: ('(-∞,0)∪(0,∞)', 2), gold_ans: ['(-\\infty,3)\\cup(3,\\infty)', None]
** most_common: ('0', 2), gold_ans: ['8', 8]
** most_common: ('8918', 4), gold_ans: ['8918', 8918]
** most_common: ('53', 2), gold_ans: ['2150', 2150]
BackVerify: 3250
** most_common: ('a', 4), gold_ans: ['a', None]
** most_common: ('96', 4), gold_ans: ['50', 50]
** most_common: ('240', 8), gold_ans: ['240', 240]
** most_common: ('41', 2), gold_ans: ['13', 13]
** most_common: ('13', 4), gold_ans: ['3', 3]
** most_common: ('(-9,3)∪(-∞,-9)∪(9,∞)', 1), gold_ans: ['(0,9)\\cup(9,36)', None]
** most_common: ('0.875', 12), gold_ans: ['\\frac{7}{8}', 0.875]
** most_common: ('(10,3)', 11), gold_ans: ['(10,3)', 103]
** most_common: ('17,24', 1), gold_ans: ['19,22', 1922]
** most_common: ('0', 4), gold_ans: ['8', 8]
** most_common: ('-\\frac{9}{4},-\\frac{5}{4}', 1), gold_ans: ['-2,\\frac{3}{2}', -2]
** most_common: ('15+2√3', 2), gold_ans: ['22', 22]
** most_common: ('0.2', 3), gold_ans: ['\\frac{4}{7}', 0.5714285714285714]
** most_common: ('3', 4), gold_ans: ['3', 3]
** most_common: ('1', 5), gold_ans: ['-1', -1]
** most_common: ('1', 7), gold_ans: ['1', 1]
** most_common: ('1', 3), gold_ans: ['3980025', 3980025]
** most_common: ('15', 2), gold_ans: ['-9', -9]
** most_common: ('1', 6), gold_ans: ['0', 0]
** most_common: ('3', 2), gold_ans: ['3', 3]
** most_common: ('1', 1), gold_ans: ['\\frac{1}{72}', 0.013888888888888888]
** most_common: ('5', 3), gold_ans: ['4', 4]
** most_common: ('2√2', 1), gold_ans: ['2\\sqrt{2}', 2.8284271247461903]
** most_common: ('24', 2), gold_ans: ['16', 16]
** most_common: ('-69,5\\sqrt{3},-5\\sqrt{3},73', 1), gold_ans: ['\\sqrt{67},-\\sqrt{85}', None]
** most_common: ('500500', 6), gold_ans: ['500500', 500500]
** most_common: ('3', 4), gold_ans: ['2', 2]
** most_common: ('20', 12), gold_ans: ['20', 20]
** most_common: ('undefined', 3), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('12', 11), gold_ans: ['12', 12]
** most_common: ('-4', 2), gold_ans: ['-4', -4]
** most_common: ('0.2', 2), gold_ans: ['\\frac{2}{5}', 0.4]
** most_common: ('(-0.0,-1.0)', 1), gold_ans: ['(\\frac{3}{2},-13)', 1.5]
** most_common: ('3', 6), gold_ans: ['6', 6]
** most_common: ('5321', 8), gold_ans: ['5321', 5321]
** most_common: ('-55', 3), gold_ans: ['-55', -55]
** most_common: ('9', 4), gold_ans: ['3', 3]
** most_common: ('1653', 1), gold_ans: ['4343_6', 43436]
** most_common: ('0.186', 2), gold_ans: ['\\frac{64}{343}', 0.18658892128279883]
** most_common: ('20', 9), gold_ans: ['20', 20]
** most_common: ('36', 3), gold_ans: ['18', 18]
** most_common: ('0', 5), gold_ans: ['8', 8]
** most_common: ('18', 2), gold_ans: ['0', 0]
** most_common: ('0.5', 3), gold_ans: ['2', 2]
** most_common: ('0.9659', 3), gold_ans: ['\\frac{\\sqrt{2}+\\sqrt{6}}{4}', 0.9659258262890683]
** most_common: ('(-1,6)', 6), gold_ans: ['(-1,6)', -16]
** most_common: ('35', 5), gold_ans: ['35', 35]
** most_common: ('15', 4), gold_ans: ['15\\mbox{cm}^2', None]
** most_common: ('247000', 3), gold_ans: ['247000', 247000]
** most_common: ('0', 6), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
BackVerify: 3300
** most_common: ('nosolution', 2), gold_ans: ['97', 97]
** most_common: ('6π', 6), gold_ans: ['2\\pi', 6.283185307179586]
** most_common: ('24', 3), gold_ans: ['14', 14]
** most_common: ('8', 10), gold_ans: ['8', 8]
** most_common: ('36√3', 3), gold_ans: ['\\frac{224\\sqrt{3}}{3}', 129.32646029847618]
** most_common: ('2', 6), gold_ans: ['2', 2]
** most_common: ('0.890625', 2), gold_ans: ['\\frac{57}{64}', 0.890625]
** most_common: ('312', 3), gold_ans: ['611', 611]
** most_common: ('23', 4), gold_ans: ['12', 12]
** most_common: ('1440', 4), gold_ans: ['864', 864]
** most_common: ('√98', 3), gold_ans: ['7', 7]
** most_common: ('A,C', 8), gold_ans: ['B,C', None]
** most_common: ('22', 8), gold_ans: ['22', 22]
** most_common: ('25', 9), gold_ans: ['25', 25]
** most_common: ('6π', 6), gold_ans: ['2\\pi', 6.283185307179586]
** most_common: ('33', 2), gold_ans: ['22', 22]
** most_common: ('27', 9), gold_ans: ['27', 27]
** most_common: ('67.5', 7), gold_ans: ['\\frac{135}{2}', 67.5]
** most_common: ('45', 10), gold_ans: ['45', 45]
** most_common: ('0.0009765625', 2), gold_ans: ['1', 1]
** most_common: ('1', 2), gold_ans: ['1+274i', None]
** most_common: ('14', 2), gold_ans: ['42', 42]
** most_common: ('60000', 4), gold_ans: ['60000', 60000]
** most_common: ('36', 2), gold_ans: ['43', 43]
** most_common: ('336', 11), gold_ans: ['336', 336]
** most_common: ('1', 3), gold_ans: ['3', 3]
** most_common: ('(-∞,0)∪(0,∞)', 5), gold_ans: ['(-\\infty,5)\\cup(5,\\infty)', None]
** most_common: ('11', 2), gold_ans: ['-15', -15]
** most_common: ('648', 2), gold_ans: ['120', 120]
** most_common: ('4', 3), gold_ans: ['5', 5]
** most_common: ('6', 7), gold_ans: ['4', 4]
** most_common: ('\\frac{448}{729}', 2), gold_ans: ['4', 4]
** most_common: ('32', 9), gold_ans: ['32', 32]
** most_common: ('0', 4), gold_ans: ['3', 3]
** most_common: ('1477', 4), gold_ans: ['4210_{7}', None]
** most_common: ('24.1', 11), gold_ans: ['24.1', 24.1]
** most_common: ('23', 2), gold_ans: ['60', 60]
** most_common: ('4', 2), gold_ans: ['97', 97]
** most_common: ('0', 2), gold_ans: ['1-x', None]
** most_common: ('1', 4), gold_ans: ['-5', -5]
** most_common: ('1', 6), gold_ans: ['1', 1]
** most_common: ('26π', 8), gold_ans: ['26\\pi', 81.68140899333463]
** most_common: ('-3', 9), gold_ans: ['-3', -3]
** most_common: ('18', 8), gold_ans: ['18', 18]
** most_common: ('70', 9), gold_ans: ['72', 72]
** most_common: ('3988', 3), gold_ans: ['997', 997]
** most_common: ('800', 6), gold_ans: ['800', 800]
** most_common: ('0.052631578947368421', 2), gold_ans: ['0.0000672', 6.72e-05]
** most_common: ('20', 1), gold_ans: ['49896', 49896]
** most_common: ('28', 9), gold_ans: ['28', 28]
BackVerify: 3350
** most_common: ('720', 10), gold_ans: ['720', 720]
** most_common: ('2', 5), gold_ans: ['47', 47]
** most_common: ('2', 3), gold_ans: ['5', 5]
** most_common: ('1', 12), gold_ans: ['1', 1]
** most_common: ('6', 2), gold_ans: ['9', 9]
** most_common: ('2', 6), gold_ans: ['2', 2]
** most_common: ('0.5', 2), gold_ans: ['\\frac{13}{18}', 0.7222222222222222]
** most_common: ('801', 1), gold_ans: ['801', 801]
** most_common: ('286', 9), gold_ans: ['286', 286]
** most_common: ('36', 3), gold_ans: ['43', 43]
** most_common: ('107', 5), gold_ans: ['107', 107]
** most_common: ('2310', 3), gold_ans: ['1540', 1540]
** most_common: ('7', 3), gold_ans: ['15', 15]
** most_common: ('266', 5), gold_ans: ['30', 30]
** most_common: ('8π', 4), gold_ans: ['8\\pi', 25.132741228718345]
** most_common: ('1', 5), gold_ans: ['\\frac{1}{99}', 0.010101010101010102]
** most_common: ('28', 12), gold_ans: ['0', 0]
** most_common: ('0.0625', 1), gold_ans: ['\\frac{161}{400}', 0.4025]
** most_common: ('12.5%', 2), gold_ans: ['36', 36]
** most_common: ('3.5', 3), gold_ans: ['\\frac{161}{36}', 4.472222222222222]
** most_common: ('3317', 2), gold_ans: ['107', 107]
** most_common: ('1', 2), gold_ans: ['\\frac{1}{9}', 0.1111111111111111]
** most_common: ('128', 5), gold_ans: ['128', 128]
** most_common: ('0.303', 9), gold_ans: ['0.303', 0.303]
** most_common: ('1', 7), gold_ans: ['6', 6]
** most_common: ('7', 11), gold_ans: ['7', 7]
** most_common: ('200', 5), gold_ans: ['200', 200]
** most_common: ('5', 2), gold_ans: ['17x-13', None]
** most_common: ('9', 12), gold_ans: ['-9', -9]
** most_common: ('21', 10), gold_ans: ['21', 21]
** most_common: ('1093', 3), gold_ans: ['1092', 1092]
** most_common: ('0', 1), gold_ans: ['12', 12]
** most_common: ('π', 4), gold_ans: ['\\frac{2}{3}\\pi', 2.0943951023931957]
** most_common: ('9', 3), gold_ans: ['6', 6]
** most_common: ('\\frac{1}{36}', 3), gold_ans: ['\\frac{1}{36}', 0.027777777777777776]
** most_common: ('150', 5), gold_ans: ['150', 150]
** most_common: ('6', 4), gold_ans: ['7', 7]
** most_common: ('1', 6), gold_ans: ['\\cotx', None]
** most_common: ('25', 9), gold_ans: ['25', 25]
** most_common: ('41', 7), gold_ans: ['41', 41]
** most_common: ('0', 7), gold_ans: ['0', 0]
** most_common: ('8', 6), gold_ans: ['8', 8]
** most_common: ('3.464101615137755', 2), gold_ans: ['4\\sqrt{2}', 5.656854249492381]
** most_common: ('0', 4), gold_ans: ['20x+23y+26z-69=0', None]
** most_common: ('\\frac{1}{9}', 3), gold_ans: ['-\\frac{35}{9}', -3.888888888888889]
** most_common: ('\\frac{x+1}{x+2}', 3), gold_ans: ['\\frac{1}{2-x}', None]
** most_common: ('32', 12), gold_ans: ['32', 32]
** most_common: ('2i', 2), gold_ans: ['2i', None]
** most_common: ('-1,1', 3), gold_ans: ['1,-3', -2]
** most_common: ('1', 2), gold_ans: ['\\begin{pmatrix}0&1\\1&0\\end{pmatrix}', None]
BackVerify: 3400
** most_common: ('16', 2), gold_ans: ['81', 81]
** most_common: ('8', 4), gold_ans: ['-15', -15]
** most_common: ('78', 2), gold_ans: ['198', 198]
** most_common: ('-6', 2), gold_ans: ['\\begin{pmatrix}-6\\9\\end{pmatrix}', None]
** most_common: ('-2-14i', 4), gold_ans: ['-2-14i', None]
** most_common: ('8', 2), gold_ans: ['-40', -40]
** most_common: ('62', 2), gold_ans: ['62', 62]
** most_common: ('2', 12), gold_ans: ['2', 2]
** most_common: ('4', 6), gold_ans: ['4', 4]
** most_common: ('0', 5), gold_ans: ['16\\sqrt{3}', 27.712812921102035]
** most_common: ('3', 10), gold_ans: ['4', 4]
** most_common: ('0', 5), gold_ans: ['0,3a', None]
** most_common: ('15', 5), gold_ans: ['15', 15]
** most_common: ('0,1', 6), gold_ans: ['0,1', 1]
** most_common: ('10', 5), gold_ans: ['24', 24]
** most_common: ('0', 4), gold_ans: ['3', 3]
** most_common: ('6,000', 3), gold_ans: ['6,000', 6000]
** most_common: ('7', 8), gold_ans: ['7', 7]
** most_common: ('6', 8), gold_ans: ['6', 6]
** most_common: ('6', 5), gold_ans: ['6', 6]
** most_common: ('127.43', 1), gold_ans: ['405', 405]
** most_common: ('369', 6), gold_ans: ['369', 369]
** most_common: ('3', 4), gold_ans: ['3', 3]
** most_common: ('π', 3), gold_ans: ['\\frac{7}{6}\\pi-\\frac{\\sqrt{3}}{2}', 2.7991660254036534]
** most_common: ('772', 4), gold_ans: ['772', 772]
** most_common: ('\\frac{41}{1}', 1), gold_ans: ['\\frac{1120}{81}', 13.82716049382716]
** most_common: ('-2', 5), gold_ans: ['-3', -3]
** most_common: ('-3', 3), gold_ans: ['-3+2i', None]
** most_common: ('0.16', 1), gold_ans: ['\\frac{2}{5}', 0.4]
** most_common: ('12', 6), gold_ans: ['18', 18]
** most_common: ('19.90', 1), gold_ans: ['15.48', 15.48]
** most_common: ('110', 3), gold_ans: ['35', 35]
** most_common: ('8', 4), gold_ans: ['13', 13]
** most_common: ('0.875', 12), gold_ans: ['\\frac{7}{8}', 0.875]
** most_common: ('(1,3,-1)', 1), gold_ans: ['(6,31,-1)', 630]
** most_common: ('4320', 2), gold_ans: ['3,110,400', 3110400]
** most_common: ('0', 5), gold_ans: ['-50', -50]
** most_common: ('2a^2+8a+8', 3), gold_ans: ['24', 24]
** most_common: ('0.5', 10), gold_ans: ['\\frac{5}{6}', 0.8333333333333334]
** most_common: ('(-∞,-7)∪(-7,3)∪(3,∞)', 11), gold_ans: ['(-\\infty,-7)\\cup(-7,3)\\cup(3,\\infty)', None]
** most_common: ('60', 7), gold_ans: ['60', 60]
** most_common: ('1', 12), gold_ans: ['1', 1]
** most_common: ('7', 3), gold_ans: ['15', 15]
** most_common: ('0.0769', 2), gold_ans: ['\\frac{1}{13}', 0.07692307692307693]
** most_common: ('1', 6), gold_ans: ['\\frac{2}{3}', 0.6666666666666666]
** most_common: ('17', 3), gold_ans: ['16', 16]
** most_common: ('12', 4), gold_ans: ['12', 12]
** most_common: ('-√3', 3), gold_ans: ['\\frac{\\sqrt{3}}{3}', 0.5773502691896257]
** most_common: ('392', 3), gold_ans: ['3032_5', 30325]
** most_common: ('25%', 2), gold_ans: ['20', 20]
BackVerify: 3450
** most_common: ('120', 4), gold_ans: ['120', 120]
** most_common: ('0.8660254037844386', 5), gold_ans: ['\\frac{\\sqrt{3}}{2}', 0.8660254037844386]
** most_common: ('24', 5), gold_ans: ['12', 12]
** most_common: ('0.043', 1), gold_ans: ['0.076', 0.076]
** most_common: ('-42', 1), gold_ans: ['-449', -449]
** most_common: ('0.4', 3), gold_ans: ['\\frac{3}{5}', 0.6]
** most_common: ('4', 2), gold_ans: ['20', 20]
** most_common: ('11', 2), gold_ans: ['9', 9]
** most_common: ('199', 2), gold_ans: ['100', 100]
** most_common: ('4', 2), gold_ans: ['9', 9]
** most_common: ('3', 5), gold_ans: ['0', 0]
** most_common: ('1', 4), gold_ans: ['\\frac{3}{4}', 0.75]
** most_common: ('11', 5), gold_ans: ['\\frac{11}{2}', 5.5]
** most_common: ('19', 1), gold_ans: ['\\frac{8}{81}', 0.09876543209876543]
** most_common: ('208', 3), gold_ans: ['52', 52]
** most_common: ('0.75', 4), gold_ans: ['3', 3]
** most_common: ('\\frac{1}{2}', 4), gold_ans: ['-\\frac{3}{5}', -0.6]
** most_common: ('45', 8), gold_ans: ['30', 30]
** most_common: ('3', 5), gold_ans: ['3', 3]
** most_common: ('1', 5), gold_ans: ['2500', 2500]
** most_common: ('\\frac{1}{9}', 2), gold_ans: ['\\frac{1}{9}', 0.1111111111111111]
** most_common: ('1120', 6), gold_ans: ['1120', 1120]
** most_common: ('2.5', 4), gold_ans: ['3', 3]
** most_common: ('21.42', 2), gold_ans: ['10', 10]
** most_common: ('49', 2), gold_ans: ['235', 235]
** most_common: ('72', 9), gold_ans: ['162', 162]
** most_common: ('0.8333', 7), gold_ans: ['\\frac{5}{6}', 0.8333333333333334]
** most_common: ('11', 2), gold_ans: ['16', 16]
** most_common: ('3', 6), gold_ans: ['3', 3]
** most_common: ('1', 8), gold_ans: ['1', 1]
** most_common: ('510', 9), gold_ans: ['510', 510]
** most_common: ('10', 7), gold_ans: ['10', 10]
** most_common: ('0', 4), gold_ans: ['26', 26]
** most_common: ('216', 5), gold_ans: ['28', 28]
** most_common: ('15', 11), gold_ans: ['15', 15]
** most_common: ('nointegerorfloatnumberisgivenastheexpressioninsidethesquarerootisalwaysreal', 1), gold_ans: ['90', 90]
** most_common: ('4', 5), gold_ans: ['5', 5]
** most_common: ('10', 1), gold_ans: ['0', 0]
** most_common: ('2', 2), gold_ans: ['25', 25]
** most_common: ('-1', 2), gold_ans: ['\\frac{4}{3}', 1.3333333333333333]
** most_common: ('3', 3), gold_ans: ['5', 5]
** most_common: ('12', 4), gold_ans: ['12', 12]
** most_common: ('24', 6), gold_ans: ['24', 24]
** most_common: ('0', 5), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('4', 5), gold_ans: ['4', 4]
** most_common: ('14', 3), gold_ans: ['133', 133]
** most_common: ('343', 4), gold_ans: ['49', 49]
** most_common: ('0.9167', 2), gold_ans: ['\\frac{17}{18}', 0.9444444444444444]
** most_common: ('neither', 7), gold_ans: ['\\text{even}', None]
** most_common: ('2+3\\sqrt{10}', 1), gold_ans: ['6\\sqrt{3}+6', 16.392304845413264]
BackVerify: 3500
** most_common: ('5', 4), gold_ans: ['14', 14]
** most_common: ('1.5', 7), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('6', 4), gold_ans: ['4', 4]
** most_common: ('403', 2), gold_ans: ['264', 264]
** most_common: ('64π', 7), gold_ans: ['16\\pi', 50.26548245743669]
** most_common: ('3', 2), gold_ans: ['\\frac{25}{13}', 1.9230769230769231]
** most_common: ('1', 4), gold_ans: ['-1', -1]
** most_common: ('1.0', 2), gold_ans: ['3', 3]
** most_common: ('\\frac{2}{3}', 5), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('1', 6), gold_ans: ['\\frac{\\}{p}i4+2-\\sqrt{2}', None]
** most_common: ('(8\\sin\\phi\\cos\\theta,-8\\sin\\phi\\sin\\theta,8\\cos\\phi)', 1), gold_ans: ['(8,3,-1)', 82]
** most_common: ('4', 7), gold_ans: ['2', 2]
** most_common: ('14+7√2', 3), gold_ans: ['14+7\\sqrt{2}', 23.899494936611664]
** most_common: ('5', 4), gold_ans: ['9', 9]
** most_common: ('-7', 3), gold_ans: ['14', 14]
** most_common: ('144', 4), gold_ans: ['288', 288]
** most_common: ('5', 5), gold_ans: ['2x^2+3x', None]
** most_common: ('12', 1), gold_ans: ['3', 3]
** most_common: ('-6', 7), gold_ans: ['-6', -6]
** most_common: ('78', 6), gold_ans: ['78', 78]
** most_common: ('8', 3), gold_ans: ['8', 8]
** most_common: ('24', 2), gold_ans: ['40', 40]
** most_common: ('16', 2), gold_ans: ['37', 37]
** most_common: ('2', 2), gold_ans: ['1', 1]
** most_common: ('30', 6), gold_ans: ['30', 30]
** most_common: ('105', 2), gold_ans: ['105', 105]
** most_common: ('1', 3), gold_ans: ['0', 0]
** most_common: ('3', 4), gold_ans: ['5', 5]
** most_common: ('√41', 2), gold_ans: ['14\\pi', 43.982297150257104]
** most_common: ('400', 8), gold_ans: ['400', 400]
** most_common: ('1', 5), gold_ans: ['0', 0]
** most_common: ('1', 2), gold_ans: ['-1', -1]
** most_common: ('(4,1)', 3), gold_ans: ['(1,1)', 11]
** most_common: ('(-6,7)', 2), gold_ans: ['(-\\infty,-14)\\cup(-3,\\infty)', None]
** most_common: ('1', 4), gold_ans: ['\\frac{7}{3}', 2.3333333333333335]
** most_common: ('4005', 8), gold_ans: ['4005', 4005]
** most_common: ('\\frac{28}{441}', 2), gold_ans: ['\\frac{8}{63}', 0.12698412698412698]
** most_common: ('12', 10), gold_ans: ['12', 12]
** most_common: ('12', 12), gold_ans: ['10', 10]
** most_common: ('36', 5), gold_ans: ['36', 36]
** most_common: ('-i√52', 2), gold_ans: ['4+6i', None]
** most_common: ('3', 3), gold_ans: ['3', 3]
** most_common: ('0', 10), gold_ans: ['0', 0]
** most_common: ('33', 1), gold_ans: ['66', 66]
** most_common: ('6x-5', 6), gold_ans: ['6x-5', None]
** most_common: ('5', 9), gold_ans: ['5', 5]
** most_common: ('1', 4), gold_ans: ['1', 1]
** most_common: ('3π/256', 2), gold_ans: ['\\frac{27\\pi}{1024}', 0.08283496254582462]
** most_common: ('\\frac{\\pi}{2}', 4), gold_ans: ['0,\\pi,2\\pi', None]
** most_common: ('162', 5), gold_ans: ['72', 72]
BackVerify: 3550
** most_common: ('627', 7), gold_ans: ['628', 628]
** most_common: ('(10,0)', 1), gold_ans: ['(8,-2)', 6]
** most_common: ('64', 8), gold_ans: ['68', 68]
** most_common: ('0', 2), gold_ans: ['4', 4]
** most_common: ('4', 7), gold_ans: ['2', 2]
** most_common: ('Wednesday', 4), gold_ans: ['\\text{Sunday}', None]
** most_common: ('13', 9), gold_ans: ['13', 13]
** most_common: ('0', 3), gold_ans: ['\\text{ellipse}', None]
** most_common: ('10004', 4), gold_ans: ['10{,}000', None]
** most_common: ('-\\frac{16}{63}', 3), gold_ans: ['-\\frac{16}{63}', -0.25396825396825395]
** most_common: ('534', 3), gold_ans: ['534', 534]
** most_common: ('2', 2), gold_ans: ['\\sin3x', None]
** most_common: ('1', 1), gold_ans: ['36', 36]
** most_common: ('4', 7), gold_ans: ['4', 4]
** most_common: ('2', 3), gold_ans: ['6', 6]
** most_common: ('1', 2), gold_ans: ['1', 1]
** most_common: ('-0.5773502691896257', 3), gold_ans: ['-\\frac{\\sqrt{3}}{3}', -0.5773502691896257]
** most_common: ('22', 7), gold_ans: ['22', 22]
** most_common: ('100', 4), gold_ans: ['14', 14]
** most_common: ('1.216', 6), gold_ans: ['1.21', 1.21]
** most_common: ('3.6', 3), gold_ans: ['\\text{Evelyn}', None]
** most_common: ('2x+1', 3), gold_ans: ['2x+3', None]
** most_common: ('0', 2), gold_ans: ['25', 25]
** most_common: ('0', 2), gold_ans: ['8', 8]
** most_common: ('3', 2), gold_ans: ['7', 7]
** most_common: ('2√2', 2), gold_ans: ['\\frac{7}{2}', 3.5]
** most_common: ('16', 12), gold_ans: ['16', 16]
** most_common: ('64', 5), gold_ans: ['16', 16]
** most_common: ('1', 2), gold_ans: ['\\begin{pmatrix}1\\-2\\-1\\end{pmatrix}', None]
** most_common: ('2', 10), gold_ans: ['2', 2]
** most_common: ('0', 2), gold_ans: ['\\frac{5\\pi}{4}', 3.9269908169872414]
** most_common: ('\\frac{30}{11}', 3), gold_ans: ['\\frac{30}{11}', 2.727272727272727]
** most_common: ('0', 6), gold_ans: ['(0,1]', None]
** most_common: ('7.5', 6), gold_ans: ['7.5', 7.5]
** most_common: ('5225', 1), gold_ans: ['15,600', 15600]
** most_common: ('3z(3z-3)(z-3)', 5), gold_ans: ['9z(z^2-3z+3)', None]
** most_common: ('1', 3), gold_ans: ['251', 251]
** most_common: ('', 2), gold_ans: ['161', 161]
** most_common: ('28', 9), gold_ans: ['28', 28]
** most_common: ('\\frac{65}{729}', 2), gold_ans: ['\\frac{416}{27}', 15.407407407407407]
** most_common: ('90', 9), gold_ans: ['90', 90]
** most_common: ('1.47', 1), gold_ans: ['7', 7]
** most_common: ('25', 3), gold_ans: ['87', 87]
** most_common: ('undefined', 2), gold_ans: ['315', 315]
** most_common: ('1', 11), gold_ans: ['1', 1]
** most_common: ('30', 11), gold_ans: ['30', 30]
** most_common: ('25', 5), gold_ans: ['31', 31]
** most_common: ('9', 3), gold_ans: ['13', 13]
** most_common: ('300', 6), gold_ans: ['300', 300]
** most_common: ('6', 5), gold_ans: ['6', 6]
BackVerify: 3600
** most_common: ('5', 8), gold_ans: ['5', 5]
** most_common: ('32000', 3), gold_ans: ['25,000', 25000]
** most_common: ('1', 4), gold_ans: ['10', 10]
** most_common: ('0', 3), gold_ans: ['\\frac{2}{1005}', 0.001990049751243781]
** most_common: ('(1,1)', 2), gold_ans: ['(\\frac{1}{2},\\frac{\\sqrt{7}}{2})', None]
** most_common: ('5.454', 1), gold_ans: ['105', 105]
** most_common: ('(x-3)^2+(y-3)^2=(\\frac{16}{3}-5)^2', 1), gold_ans: ['\\frac{x^2}{16}-\\frac{y^2}{9}=1', None]
** most_common: ('1,023', 2), gold_ans: ['53', 53]
** most_common: ('401', 2), gold_ans: ['425', 425]
** most_common: ('-2', 2), gold_ans: ['-10', -10]
** most_common: ('(-0.5,2.5)', 2), gold_ans: ['(-\\frac{5}{2},-\\frac{5}{2})', -2.5]
** most_common: ('6', 5), gold_ans: ['8', 8]
** most_common: ('15', 2), gold_ans: ['(60,-88,25,4)', -88194]
** most_common: ('8', 2), gold_ans: ['8', 8]
** most_common: ('4', 2), gold_ans: ['10\\sqrt{3}', 17.320508075688775]
** most_common: ('(-2,6)', 3), gold_ans: ['(-\\frac{3}{2},6)', -1.5]
** most_common: ('2', 2), gold_ans: ['-\\frac{1}{2}', -0.5]
** most_common: ('2', 7), gold_ans: ['0', 0]
** most_common: ('30', 2), gold_ans: ['900', 900]
** most_common: ('56', 8), gold_ans: ['56', 56]
** most_common: ('-8', 11), gold_ans: ['-8', -8]
** most_common: ('4000', 10), gold_ans: ['4000', 4000]
** most_common: ('0.0369', 1), gold_ans: ['\\frac{20}{27}', 0.7407407407407407]
** most_common: ('\\frac{2}{7}', 1), gold_ans: ['3\\sqrt{3}', 5.196152422706632]
** most_common: ('80', 9), gold_ans: ['80', 80]
** most_common: ('24', 5), gold_ans: ['24', 24]
** most_common: ('1684.67', 1), gold_ans: ['2040', 2040]
** most_common: ('7.78', 7), gold_ans: ['7.78', 7.78]
** most_common: ('12', 9), gold_ans: ['8', 8]
** most_common: ('96', 8), gold_ans: ['96', 96]
** most_common: ('31', 2), gold_ans: ['325', 325]
** most_common: ('0', 9), gold_ans: ['0', 0]
** most_common: ('32', 1), gold_ans: ['43', 43]
** most_common: ('3', 4), gold_ans: ['6', 6]
** most_common: ('1', 6), gold_ans: ['0', 0]
** most_common: ('2', 4), gold_ans: ['-\\sqrt{x-2}+2', None]
** most_common: ('40.0', 4), gold_ans: ['40', 40]
** most_common: ('(-∞,13)', 2), gold_ans: ['(1,4-\\sqrt{3})\\cup(4+\\sqrt{3},7)', None]
** most_common: ('96', 1), gold_ans: ['351', 351]
** most_common: ('1', 5), gold_ans: ['2', 2]
** most_common: ('10', 12), gold_ans: ['10', 10]
** most_common: ('4', 2), gold_ans: ['3\\sqrt{5}', 6.708203932499369]
** most_common: ('(1,2,-6,-1)', 1), gold_ans: ['(1,-2,2,-3)', -24]
** most_common: ('(-∞,2/3)∪(1,∞)', 1), gold_ans: ['[\\frac{1}{2},\\frac{4}{3}]', 0.5]
** most_common: ('20', 3), gold_ans: ['4\\sqrt{13}', 14.422205101855956]
** most_common: ('16', 2), gold_ans: ['62', 62]
** most_common: ('0', 5), gold_ans: ['6', 6]
** most_common: ('21', 10), gold_ans: ['21', 21]
** most_common: ('1', 12), gold_ans: ['1', 1]
** most_common: ('25', 3), gold_ans: ['75', 75]
BackVerify: 3650
** most_common: ('0.5', 7), gold_ans: ['\\frac{5}{9}', 0.5555555555555556]
** most_common: ('1', 4), gold_ans: ['4', 4]
** most_common: ('\\frac{5}{3}', 4), gold_ans: ['\\frac{5}{3}', 1.6666666666666667]
** most_common: ('1021_3', 3), gold_ans: ['1202_3', 12023]
** most_common: ('720', 7), gold_ans: ['1440', 1440]
** most_common: ('20', 10), gold_ans: ['20', 20]
** most_common: ('12', 5), gold_ans: ['1\\frac{12}{13}', 8.615384615384615]
** most_common: ('1', 4), gold_ans: ['1,-3', -2]
** most_common: ('2007', 6), gold_ans: ['18', 18]
** most_common: ('-\\frac{2\\sqrt{3}}{3}', 4), gold_ans: ['-\\frac{2\\sqrt{3}}{3}', -1.1547005383792515]
** most_common: ('2', 3), gold_ans: ['6', 6]
** most_common: ('cos13', 2), gold_ans: ['\\cos13', 1.620906917604419]
** most_common: ('2', 11), gold_ans: ['3', 3]
** most_common: ('4', 4), gold_ans: ['\\frac{1}{5}', 0.2]
** most_common: ('33π', 11), gold_ans: ['7\\pi', 21.991148575128552]
** most_common: ('3737', 3), gold_ans: ['7602_8', 76028]
** most_common: ('6', 3), gold_ans: ['17', 17]
** most_common: ('35', 9), gold_ans: ['5', 5]
** most_common: ('100000', 2), gold_ans: ['-125', -125]
** most_common: ('8281', 8), gold_ans: ['8281', 8281]
** most_common: ('4', 3), gold_ans: ['79', 79]
** most_common: ('2', 4), gold_ans: ['5', 5]
** most_common: ('4', 11), gold_ans: ['4', 4]
** most_common: ('7', 2), gold_ans: ['63', 63]
** most_common: ('0.5833', 5), gold_ans: ['\\frac{7}{12}', 0.5833333333333334]
** most_common: ('1.44', 8), gold_ans: ['\\frac{36}{25}', 1.44]
** most_common: ('2520', 5), gold_ans: ['2520', 2520]
** most_common: ('9', 9), gold_ans: ['9', 9]
** most_common: ('1', 4), gold_ans: ['41', 41]
** most_common: ('14', 7), gold_ans: ['14', 14]
** most_common: ('560', 4), gold_ans: ['1920', 1920]
** most_common: ('2', 8), gold_ans: ['4', 4]
** most_common: ('\\frac{\\sqrt{24}}{25}', 1), gold_ans: ['-\\frac{7}{12}', -0.5833333333333334]
** most_common: ('60', 7), gold_ans: ['60', 60]
** most_common: ('75', 8), gold_ans: ['75', 75]
** most_common: ('40', 2), gold_ans: ['16', 16]
** most_common: ('3', 5), gold_ans: ['3', 3]
** most_common: ('1', 4), gold_ans: ['0', 0]
** most_common: ('3', 4), gold_ans: ['-2', -2]
** most_common: ('2136', 1), gold_ans: ['314', 314]
** most_common: ('\\begin{pmatrix}1\\-3\\4\\end{pmatrix}', 3), gold_ans: ['\\begin{pmatrix}5/2\\0\\5/2\\end{pmatrix}', None]
** most_common: ('1', 5), gold_ans: ['0', 0]
** most_common: ('0.1664', 4), gold_ans: ['\\frac{1}{6}', 0.16666666666666666]
** most_common: ('2500', 9), gold_ans: ['2500', 2500]
** most_common: ('16', 4), gold_ans: ['36', 36]
** most_common: ('1', 3), gold_ans: ['181', 181]
** most_common: ('2', 4), gold_ans: ['\\sqrt{5}-1', 1.2360679774997898]
** most_common: ('1', 2), gold_ans: ['1', 1]
** most_common: ('\\frac{3}{5}', 2), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('1', 8), gold_ans: ['7', 7]
BackVerify: 3700
** most_common: ('9c+6', 12), gold_ans: ['9c+6', None]
** most_common: ('24', 12), gold_ans: ['24', 24]
** most_common: ('2', 4), gold_ans: ['2', 2]
** most_common: ('10', 5), gold_ans: ['5', 5]
** most_common: ('1,4,16', 2), gold_ans: ['f(2)<f(1)<f(4)', None]
** most_common: ('33,379.75', 1), gold_ans: ['\\frac{266664}{5}', 53332.8]
** most_common: ('4', 7), gold_ans: ['4', 4]
** most_common: ('0,2π/3', 2), gold_ans: ['0,\\frac{2\\pi}{3},\\frac{4\\pi}{3},2\\pi', None]
** most_common: ('108', 11), gold_ans: ['108', 108]
** most_common: ('0.243681375', 1), gold_ans: ['\\frac{193}{512}', 0.376953125]
** most_common: ('5', 5), gold_ans: ['5', 5]
** most_common: ('76', 8), gold_ans: ['76', 76]
** most_common: ('8', 5), gold_ans: ['4', 4]
** most_common: ('10', 9), gold_ans: ['10', 10]
** most_common: ('0.25', 4), gold_ans: ['-\\frac{1}{4}', -0.25]
** most_common: ('-2', 9), gold_ans: ['-2', -2]
** most_common: ('5040', 4), gold_ans: ['21', 21]
** most_common: ('-1', 11), gold_ans: ['-1', -1]
** most_common: ('0', 2), gold_ans: ['\\frac{5}{12}', 0.4166666666666667]
** most_common: ('35', 2), gold_ans: ['144', 144]
** most_common: ('121', 3), gold_ans: ['121', 121]
** most_common: ('135', 9), gold_ans: ['135', 135]
** most_common: ('402', 5), gold_ans: ['402', 402]
** most_common: ('24', 11), gold_ans: ['24', 24]
** most_common: ('36', 9), gold_ans: ['24', 24]
** most_common: ('64', 1), gold_ans: ['\\sqrt{2}', 1.4142135623730951]
** most_common: ('14', 7), gold_ans: ['14', 14]
** most_common: ('4', 3), gold_ans: ['3', 3]
** most_common: ('1.25', 4), gold_ans: ['\\frac{15}{4}', 3.75]
** most_common: ('20', 2), gold_ans: ['30', 30]
** most_common: ('2900', 1), gold_ans: ['55', 55]
** most_common: ('1', 3), gold_ans: ['12', 12]
** most_common: ('\\frac{\\sqrt{39}}{2}', 1), gold_ans: ['\\frac{9}{2}', 4.5]
** most_common: ('144', 4), gold_ans: ['144', 144]
** most_common: ('6', 2), gold_ans: ['839', 839]
** most_common: ('1', 6), gold_ans: ['[\\frac{3}{2},2)', None]
** most_common: ('\\frac{1}{7}+\\frac{8}{3}i', 2), gold_ans: ['-5+4i', None]
** most_common: ('22', 1), gold_ans: ['24\\sqrt{2}', 33.94112549695428]
** most_common: ('2', 4), gold_ans: ['(2,1)', 21]
** most_common: ('-1', 3), gold_ans: ['-1', -1]
** most_common: ('4', 6), gold_ans: ['16', 16]
** most_common: ('12', 4), gold_ans: ['24', 24]
** most_common: ('12', 2), gold_ans: ['100', 100]
** most_common: ('0.125', 6), gold_ans: ['1.125', 1.125]
** most_common: ('350', 6), gold_ans: ['350', 350]
** most_common: ('0.0079440', 1), gold_ans: ['\\frac{17}{21}', 0.8095238095238095]
** most_common: ('(10,2)', 10), gold_ans: ['(10,2)', 102]
** most_common: ('50', 5), gold_ans: ['140', 140]
** most_common: ('(C)', 5), gold_ans: ['\\text{(C)}', None]
** most_common: ('CAF', 2), gold_ans: ['\\text{ACF}', None]
BackVerify: 3750
** most_common: ('387.5', 1), gold_ans: ['2300', 2300]
** most_common: ('7944.13', 2), gold_ans: ['7945', 7945]
** most_common: ('0', 2), gold_ans: ['2', 2]
** most_common: ('4.0', 2), gold_ans: ['8.5', 8.5]
** most_common: ('2', 4), gold_ans: ['9', 9]
** most_common: ('0', 4), gold_ans: ['0', 0]
** most_common: ('75', 11), gold_ans: ['75', 75]
** most_common: ('2017', 3), gold_ans: ['2013', 2013]
** most_common: ('2', 3), gold_ans: ['14', 14]
** most_common: ('-1,2', 3), gold_ans: ['2+\\sqrt{6},2-\\sqrt{6}', None]
** most_common: ('\\frac{3}{4}', 3), gold_ans: ['\\frac{9}{32}', 0.28125]
** most_common: ('91', 12), gold_ans: ['91', 91]
** most_common: ('2b', 4), gold_ans: ['2b', None]
** most_common: ('5', 9), gold_ans: ['7', 7]
** most_common: ('-14', 7), gold_ans: ['-14', -14]
** most_common: ('5', 4), gold_ans: ['5', 5]
** most_common: ('133', 2), gold_ans: ['47', 47]
** most_common: ('6.0', 3), gold_ans: ['\\frac{6\\sqrt{10}}{7}', 2.710523708715754]
** most_common: ('1.73205080757', 2), gold_ans: ['-\\frac{\\sqrt{3}}{3}', -0.5773502691896257]
** most_common: ('23', 5), gold_ans: ['23', 23]
** most_common: ('0', 2), gold_ans: ['\\frac{105}{4}', 26.25]
** most_common: ('2', 3), gold_ans: ['\\frac{13}{4}', 3.25]
** most_common: ('1', 2), gold_ans: ['28', 28]
** most_common: ('6', 4), gold_ans: ['7', 7]
** most_common: ('(\\frac{12}{17},2,-\\frac{32}{17})', 1), gold_ans: ['(8,4,2)', 842]
** most_common: ('0.0823', 2), gold_ans: ['\\frac{80}{243}', 0.3292181069958848]
** most_common: ('3', 6), gold_ans: ['3', 3]
** most_common: ('\\begin{pmatrix}\\frac{2}{\\sqrt{5}}\\-\\frac{1}{\\sqrt{5}}\\0\\end{pmatrix}', 4), gold_ans: ['\\begin{pmatrix}2/5\\-1/5\\0\\end{pmatrix}', None]
** most_common: ('3', 11), gold_ans: ['3', 3]
** most_common: ('0.5', 2), gold_ans: ['\\frac{27}{38}', 0.7105263157894737]
** most_common: ('25π', 10), gold_ans: ['25\\pi', 78.53981633974483]
** most_common: ('0', 3), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('0', 2), gold_ans: ['\\frac{3125}{46656}', 0.06697959533607682]
** most_common: ('10', 6), gold_ans: ['10', 10]
** most_common: ('1.325', 2), gold_ans: ['\\frac{\\pi}{2}', 1.5707963267948966]
** most_common: ('6', 3), gold_ans: ['120', 120]
** most_common: ('1', 11), gold_ans: ['1', 1]
** most_common: ('0', 10), gold_ans: ['4', 4]
** most_common: ('5', 2), gold_ans: ['-\\frac{9}{2}', -4.5]
** most_common: ('\\frac{2}{3}', 7), gold_ans: ['\\frac{2}{3}', 0.6666666666666666]
** most_common: ('5', 3), gold_ans: ['2\\sqrt{5}', 4.47213595499958]
** most_common: ('23', 4), gold_ans: ['71', 71]
** most_common: ('650', 10), gold_ans: ['650', 650]
** most_common: ('0', 2), gold_ans: ['-\\frac{4}{3}', -1.3333333333333333]
** most_common: ('(B)Circle', 6), gold_ans: ['\\text{(E)}', 2.718281828459045]
** most_common: ('240', 4), gold_ans: ['48', 48]
** most_common: ('\\frac{1}{3}', 2), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('12', 1), gold_ans: ['\\begin{pmatrix}1\\4\\3\\end{pmatrix}', None]
** most_common: ('25.5', 5), gold_ans: ['110', 110]
** most_common: ('0', 4), gold_ans: ['-5', -5]
BackVerify: 3800
** most_common: ('4', 8), gold_ans: ['4', 4]
** most_common: ('\\frac{1}{840}', 6), gold_ans: ['\\frac{1}{840}', 0.0011904761904761906]
** most_common: ('\\begin{pmatrix}1&0&0\\0&1&0\\0&0&-1\\end{pmatrix}', 4), gold_ans: ['\\begin{pmatrix}1&0&0\\0&1&0\\0&0&-1\\end{pmatrix}', None]
** most_common: ('π/4', 1), gold_ans: ['\\frac{3}{4}\\pi', 2.356194490192345]
** most_common: ('20', 8), gold_ans: ['20', 20]
** most_common: ('1', 2), gold_ans: ['7', 7]
** most_common: ('70', 10), gold_ans: ['70', 70]
** most_common: ('57', 5), gold_ans: ['57', 57]
** most_common: ('1881', 1), gold_ans: ['2101', 2101]
** most_common: ('-\\frac{1}{2}\\frac{b}{a}c', 1), gold_ans: ['\\frac{8}{15}', 0.5333333333333333]
** most_common: ('754', 5), gold_ans: ['754', 754]
** most_common: ('10', 2), gold_ans: ['10', 10]
** most_common: ('2√3', 4), gold_ans: ['2\\sqrt{3}', 3.4641016151377544]
** most_common: ('91.05', 1), gold_ans: ['82', 82]
** most_common: ('3', 4), gold_ans: ['5', 5]
** most_common: ('51', 2), gold_ans: ['50', 50]
** most_common: ('6', 2), gold_ans: ['4', 4]
** most_common: ('160', 11), gold_ans: ['160', 160]
** most_common: ('-11+27i', 4), gold_ans: ['-11+27i', None]
** most_common: ('10', 3), gold_ans: ['5', 5]
** most_common: ('4√3/3', 4), gold_ans: ['\\frac{4}{3}', 1.3333333333333333]
** most_common: ('0', 7), gold_ans: ['0', 0]
** most_common: ('14', 4), gold_ans: ['14', 14]
** most_common: ('1021_4', 2), gold_ans: ['1101_4', 11014]
** most_common: ('9π', 2), gold_ans: ['9\\pi', 28.274333882308138]
** most_common: ('2', 2), gold_ans: ['\\frac{9}{7}', 1.2857142857142858]
** most_common: ('6', 5), gold_ans: ['12', 12]
** most_common: ('-0.291666666666667', 5), gold_ans: ['-\\frac{7}{24}', -0.2916666666666667]
** most_common: ('144', 5), gold_ans: ['144', 144]
** most_common: ('11.5', 3), gold_ans: ['\\frac{23}{2}', 11.5]
** most_common: ('2', 2), gold_ans: ['188', 188]
** most_common: ('(1,-1)', 2), gold_ans: ['(-3,2)', -32]
** most_common: ('0', 4), gold_ans: ['10', 10]
** most_common: ('1050', 6), gold_ans: ['1050', 1050]
** most_common: ('(B)', 5), gold_ans: ['\\text{(E)}', 2.718281828459045]
** most_common: ('60', 3), gold_ans: ['120', 120]
** most_common: ('\\frac{36-20\\sqrt{2}}{31}', 1), gold_ans: ['\\frac{5}{9}', 0.5555555555555556]
** most_common: ('2', 4), gold_ans: ['2', 2]
** most_common: ('1', 2), gold_ans: ['41', 41]
** most_common: ('0', 4), gold_ans: ['40', 40]
** most_common: ('5', 3), gold_ans: ['-5', -5]
** most_common: ('4134', 1), gold_ans: ['245', 245]
** most_common: ('180', 12), gold_ans: ['180', 180]
** most_common: ('0', 12), gold_ans: ['0', 0]
** most_common: ('1', 6), gold_ans: ['1', 1]
** most_common: ('75', 8), gold_ans: ['75', 75]
** most_common: ('5√3', 4), gold_ans: ['75', 75]
** most_common: ('999', 3), gold_ans: ['92', 92]
** most_common: ('2', 5), gold_ans: ['5', 5]
** most_common: ('\\frac{1}{3}', 4), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
BackVerify: 3850
** most_common: ('1', 5), gold_ans: ['1', 1]
** most_common: ('\\frac{1}{32}', 4), gold_ans: ['\\frac{3}{16}', 0.1875]
** most_common: ('1', 4), gold_ans: ['2-\\sqrt{3}', 0.2679491924311227]
** most_common: ('144', 2), gold_ans: ['540', 540]
** most_common: ('-q', 3), gold_ans: ['-6', -6]
** most_common: ('9', 1), gold_ans: ['184', 184]
** most_common: ('0', 5), gold_ans: ['-1', -1]
** most_common: ('3', 2), gold_ans: ['8', 8]
** most_common: ('15', 11), gold_ans: ['15', 15]
** most_common: ('none', 2), gold_ans: ['-6,-3,-2,-1,1,2,3,6', -11247]
** most_common: ('60', 7), gold_ans: ['60', 60]
** most_common: ('4', 11), gold_ans: ['0', 0]
** most_common: ('1', 6), gold_ans: ['1', 1]
** most_common: ('252', 9), gold_ans: ['126', 126]
** most_common: ('7.81', 3), gold_ans: ['\\sqrt{61}', 7.810249675906654]
** most_common: ('0.0232', 1), gold_ans: ['\\frac{49}{54}', 0.9074074074074074]
** most_common: ('5', 6), gold_ans: ['1', 1]
** most_common: ('\\frac{4}{3}', 7), gold_ans: ['\\frac{3}{4}', 0.75]
** most_common: ('-√5', 1), gold_ans: ['-1', -1]
** most_common: ('(1,6)', 2), gold_ans: ['(2,12)', 212]
** most_common: ('0', 8), gold_ans: ['x-3z=0', None]
** most_common: ('1023', 3), gold_ans: ['1023', 1023]
** most_common: ('[0,π^2+(π/2)^2]', 1), gold_ans: ['[\\frac{\\pi^2}{8},\\frac{5\\pi^2}{4}]', None]
** most_common: ('60', 2), gold_ans: ['1209', 1209]
** most_common: ('-1', 4), gold_ans: ['\\frac{7}{4}', 1.75]
** most_common: ('6', 3), gold_ans: ['7', 7]
** most_common: ('166', 1), gold_ans: ['229', 229]
** most_common: ('4', 3), gold_ans: ['30', 30]
** most_common: ('20', 10), gold_ans: ['20', 20]
** most_common: ('6', 7), gold_ans: ['216', 216]
** most_common: ('1', 6), gold_ans: ['1', 1]
** most_common: ('8', 4), gold_ans: ['4', 4]
** most_common: ('7', 4), gold_ans: ['3', 3]
** most_common: ('16', 8), gold_ans: ['16', 16]
** most_common: ('2x', 6), gold_ans: ['2x', None]
** most_common: ('33', 9), gold_ans: ['33', 33]
** most_common: ('121', 1), gold_ans: ['1023', 1023]
** most_common: ('\\frac{5}{3}', 4), gold_ans: ['\\frac{5}{3}', 1.6666666666666667]
** most_common: ('(5/2,√29)', 1), gold_ans: ['(0,0)', 0]
** most_common: ('1', 10), gold_ans: ['\\frac{1-\\sqrt{5}}{2}', -0.6180339887498948]
** most_common: ('9', 8), gold_ans: ['9', 9]
** most_common: ('25', 4), gold_ans: ['25', 25]
** most_common: ('2', 6), gold_ans: ['2', 2]
** most_common: ('0.8571428571', 1), gold_ans: ['\\frac{6}{601}', 0.009983361064891847]
** most_common: ('\\frac{\\pi}{3}', 8), gold_ans: ['\\frac{\\pi}{3}', 1.0471975511965979]
** most_common: ('29', 2), gold_ans: ['1700', 1700]
** most_common: ('6', 9), gold_ans: ['6', 6]
** most_common: ('-7', 2), gold_ans: ['2', 2]
** most_common: ('(3,-5)', 12), gold_ans: ['(0,0)', 0]
** most_common: ('a+k+2', 1), gold_ans: ['2k', None]
BackVerify: 3900
** most_common: ('8', 7), gold_ans: ['8', 8]
** most_common: ('0.5', 3), gold_ans: ['\\frac{3}{860}', 0.0034883720930232558]
** most_common: ('4', 3), gold_ans: ['8', 8]
** most_common: ('101', 3), gold_ans: ['201', 201]
** most_common: ('-3', 2), gold_ans: ['4a-2', None]
** most_common: ('4', 3), gold_ans: ['8', 8]
** most_common: ('9', 4), gold_ans: ['7', 7]
** most_common: ('0.3', 3), gold_ans: ['\\frac{1}{10}', 0.1]
** most_common: ('11', 4), gold_ans: ['0', 0]
** most_common: ('\\frac{8}{5}', 1), gold_ans: ['2', 2]
** most_common: ('16', 2), gold_ans: ['16', 16]
** most_common: ('2', 4), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('0.6875', 3), gold_ans: ['\\frac{11}{16}', 0.6875]
** most_common: ('3600', 3), gold_ans: ['3600', 3600]
** most_common: ('72', 8), gold_ans: ['72', 72]
** most_common: ('26', 2), gold_ans: ['90', 90]
** most_common: ('0.375', 3), gold_ans: ['\\frac{3\\sqrt{5}}{4}', 1.6770509831248424]
** most_common: ('3', 5), gold_ans: ['3', 3]
** most_common: ('30', 4), gold_ans: ['84', 84]
** most_common: ('2', 9), gold_ans: ['3', 3]
** most_common: ('36', 7), gold_ans: ['72', 72]
** most_common: ('2', 2), gold_ans: ['2\\sqrt{3}', 3.4641016151377544]
** most_common: ('4', 2), gold_ans: ['61', 61]
** most_common: ('12,30000', 4), gold_ans: ['\\text{Devon}', None]
** most_common: ('22', 5), gold_ans: ['286', 286]
** most_common: ('22', 6), gold_ans: ['22', 22]
** most_common: ('-0.5', 2), gold_ans: ['2\\sqrt{3}', 3.4641016151377544]
** most_common: ('2.5', 11), gold_ans: ['\\frac{5}{2}', 2.5]
** most_common: ('\\frac{4}{7}', 4), gold_ans: ['\\frac{8}{7}', 1.1428571428571428]
** most_common: ('16π', 12), gold_ans: ['16\\pi', 50.26548245743669]
** most_common: ('-3,1,2', 2), gold_ans: ['1,2,-2,-3', 7]
** most_common: ('108', 4), gold_ans: ['108', 108]
** most_common: ('[31,0,0]', 1), gold_ans: ['\\begin{pmatrix}1\\2\\-3\\end{pmatrix}', None]
** most_common: ('2016', 2), gold_ans: ['-338016', -338016]
** most_common: ('23', 12), gold_ans: ['23', 23]
** most_common: ('4', 4), gold_ans: ['4', 4]
** most_common: ('30.2', 5), gold_ans: ['9', 9]
** most_common: ('3400', 6), gold_ans: ['3400', 3400]
** most_common: ('4.5', 12), gold_ans: ['4.5', 4.5]
** most_common: ('15', 11), gold_ans: ['\\frac{40}{3}', 13.333333333333334]
** most_common: ('1007.5', 3), gold_ans: ['62', 62]
** most_common: ('368.24', 3), gold_ans: ['368', 368]
** most_common: ('\\frac{1}{135}', 1), gold_ans: ['0', 0]
** most_common: ('-π/3', 4), gold_ans: ['-\\frac{\\pi}{6}', -0.5235987755982988]
** most_common: ('704000', 2), gold_ans: ['800000', 800000]
** most_common: ('undefined', 1), gold_ans: ['-63', -63]
** most_common: ('15', 3), gold_ans: ['20', 20]
** most_common: ('95', 3), gold_ans: ['63', 63]
** most_common: ('3', 3), gold_ans: ['3\\sqrt{3}', 5.196152422706632]
** most_common: ('135', 4), gold_ans: ['135', 135]
BackVerify: 3950
** most_common: ('10.0', 1), gold_ans: ['\\frac{5\\sqrt{42}}{27}', 1.2001371663718259]
** most_common: ('9', 8), gold_ans: ['9', 9]
** most_common: ('47', 1), gold_ans: ['300', 300]
** most_common: ('2', 6), gold_ans: ['4', 4]
** most_common: ('1', 3), gold_ans: ['6', 6]
** most_common: ('0.75', 6), gold_ans: ['\\frac{2}{3}', 0.6666666666666666]
** most_common: ('5', 5), gold_ans: ['5', 5]
** most_common: ('0', 2), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('15', 4), gold_ans: ['5', 5]
** most_common: ('3', 8), gold_ans: ['3', 3]
** most_common: ('\\frac{1}{8}', 5), gold_ans: ['\\frac{1}{8}', 0.125]
** most_common: ('338', 3), gold_ans: ['39', 39]
** most_common: ('(-11,9)', 3), gold_ans: ['(-11,9)', -119]
** most_common: ('6', 5), gold_ans: ['2+4\\sqrt{7}', 12.583005244258363]
** most_common: ('9', 6), gold_ans: ['4', 4]
** most_common: ('495', 6), gold_ans: ['495', 495]
** most_common: ('ellipse', 4), gold_ans: ['\\text{circle}', None]
** most_common: ('0.0542', 1), gold_ans: ['\\frac{9}{56}', 0.16071428571428573]
** most_common: ('0.75', 12), gold_ans: ['\\frac{3}{4}', 0.75]
** most_common: ('4', 7), gold_ans: ['6', 6]
** most_common: ('9', 3), gold_ans: ['7', 7]
** most_common: ('1', 4), gold_ans: ['5', 5]
** most_common: ('0.6', 1), gold_ans: ['-\\frac{\\sqrt{10}}{10}', -0.31622776601683794]
** most_common: ('12.5', 5), gold_ans: ['12', 12]
** most_common: ('0', 3), gold_ans: ['-2x^2+x-3', None]
** most_common: ('54', 10), gold_ans: ['54', 54]
** most_common: ('11', 7), gold_ans: ['5', 5]
** most_common: ('0.5', 10), gold_ans: ['\\frac{7}{2}', 3.5]
** most_common: ('3125', 11), gold_ans: ['3125', 3125]
** most_common: ('6', 3), gold_ans: ['48', 48]
** most_common: ('7', 4), gold_ans: ['7', 7]
** most_common: ('3', 8), gold_ans: ['3', 3]
** most_common: ('0', 4), gold_ans: ['592', 592]
** most_common: ('266.5', 8), gold_ans: ['228.3', 228.3]
** most_common: ('66', 8), gold_ans: ['66', 66]
** most_common: ('6', 2), gold_ans: ['3', 3]
** most_common: ('16', 3), gold_ans: ['48', 48]
** most_common: ('132', 11), gold_ans: ['132', 132]
** most_common: ('[25]', 2), gold_ans: ['[-36,104]', -36104]
** most_common: ('(7,4)', 8), gold_ans: ['(7,4)', 74]
** most_common: ('\\frac{1}{7}', 3), gold_ans: ['\\frac{1}{12}', 0.08333333333333333]
** most_common: ('25', 3), gold_ans: ['93', 93]
** most_common: ('\\frac{3}{13}', 4), gold_ans: ['\\frac{3}{13}', 0.23076923076923078]
** most_common: ('-π/3', 3), gold_ans: ['-\\frac{\\pi}{6}', -0.5235987755982988]
** most_common: ('2√5', 2), gold_ans: ['6', 6]
** most_common: ('9', 2), gold_ans: ['10+9\\sqrt{2}', 22.727922061357855]
** most_common: ('2008', 1), gold_ans: ['2000', 2000]
** most_common: ('36√3', 9), gold_ans: ['36\\sqrt{3}', 62.353829072479584]
** most_common: ('1.5', 4), gold_ans: ['2', 2]
** most_common: ('2.1', 6), gold_ans: ['\\frac{21}{31}', 0.6774193548387096]
BackVerify: 4000
** most_common: ('16', 2), gold_ans: ['45', 45]
** most_common: ('2', 6), gold_ans: ['\\begin{pmatrix}2&-3\\0&3\\end{pmatrix}', None]
** most_common: ('\\begin{pmatrix}3&-4\\1&-1\\end{pmatrix}', 1), gold_ans: ['\\begin{pmatrix}4033&-8064\\2016&-4031\\end{pmatrix}', None]
** most_common: ('\\frac{4}{9}', 8), gold_ans: ['\\frac{4}{9}', 0.4444444444444444]
** most_common: ('29', 4), gold_ans: ['31', 31]
** most_common: ('2.8284271247461903', 1), gold_ans: ['8', 8]
** most_common: ('183', 2), gold_ans: ['900', 900]
** most_common: ('8,001', 2), gold_ans: ['85,184', 85184]
** most_common: ('(B)Circle', 8), gold_ans: ['\\text{(B)}', None]
** most_common: ('5', 4), gold_ans: ['(9,11)', 911]
** most_common: ('1', 8), gold_ans: ['2', 2]
** most_common: ('(-5,3/10)', 2), gold_ans: ['\\begin{pmatrix}-5\\2\\end{pmatrix}', None]
** most_common: ('0', 6), gold_ans: ['0', 0]
** most_common: ('22', 4), gold_ans: ['6', 6]
** most_common: ('70', 5), gold_ans: ['90', 90]
** most_common: ('14', 4), gold_ans: ['14', 14]
** most_common: ('1', 5), gold_ans: ['0', 0]
** most_common: ('-18', 12), gold_ans: ['-18', -18]
** most_common: ('1', 4), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('1', 5), gold_ans: ['\\frac{781}{1024}', 0.7626953125]
** most_common: ('4', 2), gold_ans: ['11', 11]
** most_common: ('7', 7), gold_ans: ['8', 8]
** most_common: ('14Lπ', 2), gold_ans: ['256\\pi', 804.247719318987]
** most_common: ('1', 4), gold_ans: ['1', 1]
** most_common: ('27', 2), gold_ans: ['12', 12]
** most_common: ('13.18', 11), gold_ans: ['13.18', 13.18]
** most_common: ('1', 5), gold_ans: ['\\frac{1005}{1006}', 0.9990059642147118]
** most_common: ('0.8', 4), gold_ans: ['\\frac{2}{5}', 0.4]
** most_common: ('8', 9), gold_ans: ['8', 8]
** most_common: ('-0.5', 5), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('7', 10), gold_ans: ['8', 8]
** most_common: ('0.4', 10), gold_ans: ['\\frac{2}{5}', 0.4]
** most_common: ('7', 10), gold_ans: ['7', 7]
** most_common: ('24', 3), gold_ans: ['8', 8]
** most_common: ('\\frac{625}{4}', 5), gold_ans: ['\\frac{625}4', 156.25]
** most_common: ('0.5', 2), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('20', 3), gold_ans: ['20', 20]
** most_common: ('2', 4), gold_ans: ['2\\pi', 6.283185307179586]
** most_common: ('40320', 7), gold_ans: ['362,880', 362880]
** most_common: ('-1', 6), gold_ans: ['1', 1]
** most_common: ('10', 3), gold_ans: ['8', 8]
** most_common: ('139', 10), gold_ans: ['139', 139]
** most_common: ('12', 11), gold_ans: ['12', 12]
** most_common: ('2', 2), gold_ans: ['8080', 8080]
** most_common: ('15.5', 2), gold_ans: ['14.8', 14.8]
** most_common: ('16', 9), gold_ans: ['16', 16]
** most_common: ('9', 5), gold_ans: ['1', 1]
** most_common: ('3', 7), gold_ans: ['3', 3]
** most_common: ('-5', 12), gold_ans: ['-5', -5]
** most_common: ('5', 2), gold_ans: ['5', 5]
BackVerify: 4050
** most_common: ('1057251.0', 1), gold_ans: ['1940', 1940]
** most_common: ('1.0', 2), gold_ans: ['m+2', None]
** most_common: ('0.5', 2), gold_ans: ['\\frac{67}{89}', 0.7528089887640449]
** most_common: ('7121', 1), gold_ans: ['6152', 6152]
** most_common: ('42', 10), gold_ans: ['42', 42]
** most_common: ('500', 2), gold_ans: ['118', 118]
** most_common: ('12√5', 5), gold_ans: ['12\\sqrt{5}', 26.832815729997478]
** most_common: ('117', 7), gold_ans: ['117', 117]
** most_common: ('120', 3), gold_ans: ['72', 72]
** most_common: ('18', 8), gold_ans: ['18', 18]
** most_common: ('2', 6), gold_ans: ['-2', -2]
** most_common: ('38', 1), gold_ans: ['42', 42]
** most_common: ('1.5', 3), gold_ans: ['-\\frac{7}{4}', -1.75]
** most_common: ('6', 3), gold_ans: ['\\frac{13}{3}', 4.333333333333333]
** most_common: ('1296', 2), gold_ans: ['270', 270]
** most_common: ('10', 2), gold_ans: ['2\\sqrt{113}', 21.2602916254693]
** most_common: ('125.5', 6), gold_ans: ['125.5', 125.5]
** most_common: ('18', 8), gold_ans: ['18', 18]
** most_common: ('1', 3), gold_ans: ['-1,0,1', -101]
** most_common: ('n', 4), gold_ans: ['5', 5]
** most_common: ('12', 2), gold_ans: ['12', 12]
** most_common: ('37', 4), gold_ans: ['\\begin{pmatrix}0\\0\\0\\end{pmatrix}', None]
** most_common: ('\\frac{4}{13}', 5), gold_ans: ['\\frac{4}{13}', 0.3076923076923077]
** most_common: ('-3', 5), gold_ans: ['z^5-3z^4+6z^3-14z^2+14z-4', None]
** most_common: ('105+√11015', 1), gold_ans: ['145', 145]
** most_common: ('[-3a^2+3,-3a,-9a^3-6a^2+9a,2a^2-a-2,-2a+1,6a^3+4a^2-6a]', 1), gold_ans: ['\\begin{pmatrix}3&6\\2&7\\end{pmatrix}', None]
** most_common: ('\\begin{pmatrix}1\\1\\end{pmatrix}', 2), gold_ans: ['\\begin{pmatrix}23/8\\7/4\\end{pmatrix}', None]
** most_common: ('120', 5), gold_ans: ['120', 120]
** most_common: ('2', 10), gold_ans: ['0', 0]
** most_common: ('EA', 4), gold_ans: ['\\overline{CD}', None]
** most_common: ('0', 3), gold_ans: ['159', 159]
** most_common: ('\\frac{5}{18}', 3), gold_ans: ['\\frac{5}{18}', 0.2777777777777778]
** most_common: ('8', 2), gold_ans: ['\\frac{11}{2}', 5.5]
** most_common: ('160', 1), gold_ans: ['225', 225]
** most_common: ('undefined', 2), gold_ans: ['-14', -14]
** most_common: ('210', 8), gold_ans: ['210', 210]
** most_common: ('E', 5), gold_ans: ['A', None]
** most_common: ('7', 6), gold_ans: ['7', 7]
** most_common: ('384', 2), gold_ans: ['384', 384]
** most_common: ('1', 4), gold_ans: ['0,4', 4]
** most_common: ('1', 3), gold_ans: ['2', 2]
** most_common: ('3', 6), gold_ans: ['3', 3]
** most_common: ('0', 5), gold_ans: ['-\\frac{\\sqrt{3}}{2}', -0.8660254037844386]
** most_common: ('2', 2), gold_ans: ['4096\\sqrt{2}', 5792.618751480198]
** most_common: ('10', 10), gold_ans: ['10', 10]
** most_common: ('0.3846153846153846', 2), gold_ans: ['\\frac{\\sqrt{2}}{2}', 0.7071067811865476]
** most_common: ('15', 6), gold_ans: ['15', 15]
** most_common: ('16', 7), gold_ans: ['16', 16]
** most_common: ('5525', 1), gold_ans: ['5636', 5636]
** most_common: ('3', 3), gold_ans: ['-3', -3]
BackVerify: 4100
** most_common: ('1', 2), gold_ans: ['7', 7]
** most_common: ('29.5833333333', 1), gold_ans: ['108\\sqrt{3}', 187.06148721743875]
** most_common: ('2', 6), gold_ans: ['17', 17]
** most_common: ('3', 3), gold_ans: ['3', 3]
** most_common: ('18', 11), gold_ans: ['18', 18]
** most_common: ('8', 2), gold_ans: ['\\frac{17}{2}', 8.5]
** most_common: ('2', 4), gold_ans: ['5', 5]
** most_common: ('2500', 4), gold_ans: ['2500', 2500]
** most_common: ('12', 8), gold_ans: ['12', 12]
** most_common: ('9', 1), gold_ans: ['340', 340]
** most_common: ('5', 2), gold_ans: ['3,5,7', 357]
** most_common: ('330', 6), gold_ans: ['330', 330]
** most_common: ('1', 10), gold_ans: ['1', 1]
** most_common: ('-3', 4), gold_ans: ['16', 16]
** most_common: ('3', 7), gold_ans: ['3', 3]
** most_common: ('1', 2), gold_ans: ['6', 6]
** most_common: ('69', 11), gold_ans: ['69', 69]
** most_common: ('2', 9), gold_ans: ['2', 2]
** most_common: ('5', 8), gold_ans: ['5', 5]
** most_common: ('-1+√11', 2), gold_ans: ['-\\sqrt{11}-1', -4.3166247903554]
** most_common: ('402', 6), gold_ans: ['402', 402]
** most_common: ('17', 4), gold_ans: ['17', 17]
** most_common: ('0', 4), gold_ans: ['4', 4]
** most_common: ('2', 9), gold_ans: ['2', 2]
** most_common: ('17', 4), gold_ans: ['17', 17]
** most_common: ('0', 2), gold_ans: ['3+2\\sqrt{2}', 5.82842712474619]
** most_common: ('1', 5), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('2', 5), gold_ans: ['\\begin{pmatrix}2\\3\\1\\end{pmatrix}', None]
** most_common: ('4', 12), gold_ans: ['4', 4]
** most_common: ('2,2', 1), gold_ans: ['7,-2,', 5]
** most_common: ('(√2,-π/4,-6)', 4), gold_ans: ['(\\sqrt{2},\\frac{7\\pi}{4},-6)', None]
** most_common: ('0', 5), gold_ans: ['3', 3]
** most_common: ('3', 3), gold_ans: ['17', 17]
** most_common: ('\\frac{5}{18}', 2), gold_ans: ['\\frac{11}{36}', 0.3055555555555556]
** most_common: ('15', 2), gold_ans: ['13', 13]
** most_common: ('225', 3), gold_ans: ['225', 225]
** most_common: ('10', 4), gold_ans: ['2\\sqrt{10}', 6.324555320336759]
** most_common: ('1', 7), gold_ans: ['4', 4]
** most_common: ('\\frac{1}{2}', 4), gold_ans: ['\\frac{\\sqrt{6}}{3}', 0.816496580927726]
** most_common: ('36', 6), gold_ans: ['36', 36]
** most_common: ('15', 4), gold_ans: ['21', 21]
** most_common: ('1', 6), gold_ans: ['4', 4]
** most_common: ('0', 2), gold_ans: ['\\frac{3}{8}', 0.375]
** most_common: ('35', 10), gold_ans: ['35', 35]
** most_common: ('2', 3), gold_ans: ['2', 2]
** most_common: ('(1,2)', 5), gold_ans: ['(2,4)', 24]
** most_common: ('8', 4), gold_ans: ['8', 8]
** most_common: ('18', 2), gold_ans: ['16', 16]
** most_common: ('4', 3), gold_ans: ['12', 12]
** most_common: ('24', 6), gold_ans: ['8', 8]
BackVerify: 4150
** most_common: ('56', 3), gold_ans: ['448', 448]
** most_common: ('0', 6), gold_ans: ['4', 4]
** most_common: ('755', 3), gold_ans: ['215', 215]
** most_common: ('2', 4), gold_ans: ['8', 8]
** most_common: ('0.5-(1/2^2008)-(1/2^2009)', 1), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('2', 10), gold_ans: ['2', 2]
** most_common: ('3', 12), gold_ans: ['9', 9]
** most_common: ('6', 7), gold_ans: ['10', 10]
** most_common: ('0.375', 7), gold_ans: ['\\frac{3}{8}', 0.375]
** most_common: ('0', 5), gold_ans: ['0', 0]
** most_common: ('4', 10), gold_ans: ['4', 4]
** most_common: ('210', 2), gold_ans: ['864', 864]
** most_common: ('0', 4), gold_ans: ['4', 4]
** most_common: ('undefined', 1), gold_ans: ['\\frac{4}{5}', 0.8]
** most_common: ('0', 5), gold_ans: ['i', None]
** most_common: ('-4', 7), gold_ans: ['-10', -10]
** most_common: ('±2√2', 2), gold_ans: ['\\sqrt{5},-\\sqrt{5}', None]
** most_common: ('\\frac{12\\sqrt{2}+2\\sqrt{37}}{7}', 1), gold_ans: ['11', 11]
** most_common: ('1', 4), gold_ans: ['1', 1]
** most_common: ('0.55', 5), gold_ans: ['\\frac{11+9a}{20}', None]
** most_common: ('0.01', 6), gold_ans: ['\\text{Dana}', None]
** most_common: ('70', 7), gold_ans: ['90', 90]
** most_common: ('3', 4), gold_ans: ['8', 8]
** most_common: ('5', 5), gold_ans: ['6', 6]
** most_common: ('7', 5), gold_ans: ['11', 11]
** most_common: ('2145', 4), gold_ans: ['2145', 2145]
** most_common: ('254', 2), gold_ans: ['512', 512]
** most_common: ('6', 4), gold_ans: ['12', 12]
** most_common: ('6.8', 2), gold_ans: ['17', 17]
** most_common: ('(1/3,1/3,1/3)', 2), gold_ans: ['(\\frac{5}{3},\\frac{5}{3},\\frac{5}{3})', 1.6666666666666667]
** most_common: ('4', 5), gold_ans: ['4', 4]
** most_common: ('1:1', 9), gold_ans: ['1:1', None]
** most_common: ('0.8', 2), gold_ans: ['\\frac{4}{5}', 0.8]
** most_common: ('3', 3), gold_ans: ['5', 5]
** most_common: ('1', 5), gold_ans: ['x^2-7x+12', None]
** most_common: ('45', 2), gold_ans: ['80', 80]
** most_common: ('25', 1), gold_ans: ['127', 127]
** most_common: ('4096', 3), gold_ans: ['1', 1]
** most_common: ('\\begin{pmatrix}-16\\4\\32\\end{pmatrix}', 6), gold_ans: ['\\begin{pmatrix}-4/9\\1/9\\8/9\\end{pmatrix}', None]
** most_common: ('20', 10), gold_ans: ['20', 20]
** most_common: ('6', 3), gold_ans: ['9', 9]
** most_common: ('1', 5), gold_ans: ['\\frac{4}{9}', 0.4444444444444444]
** most_common: ('40', 5), gold_ans: ['32', 32]
** most_common: ('\\frac{729}{64}', 2), gold_ans: ['\\frac{243}{8}', 30.375]
** most_common: ('1.50', 3), gold_ans: ['0.75', 0.75]
** most_common: ('50', 5), gold_ans: ['140', 140]
** most_common: ('2', 2), gold_ans: ['\\sqrt{14}', 3.7416573867739413]
** most_common: ('40π', 6), gold_ans: ['40\\pi', 125.66370614359172]
** most_common: ('55', 3), gold_ans: ['6', 6]
** most_common: ('[-1,1]', 3), gold_ans: ['\\{-1\\}\\cup[0,7)', None]
BackVerify: 4200
** most_common: ('216', 4), gold_ans: ['226', 226]
** most_common: ('7', 10), gold_ans: ['7', 7]
** most_common: ('4', 5), gold_ans: ['22+12\\sqrt{2}', 38.97056274847714]
** most_common: ('-28', 2), gold_ans: ['6r^2-4r-24', None]
** most_common: ('\\frac{1}{3}', 2), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('2', 4), gold_ans: ['4', 4]
** most_common: ('10', 2), gold_ans: ['6\\sqrt{3}', 10.392304845413264]
** most_common: ('1.234', 1), gold_ans: ['\\frac{137}{111}', 1.2342342342342343]
** most_common: ('2.7', 5), gold_ans: ['5.5', 5.5]
** most_common: ('27', 4), gold_ans: ['18+2\\pi', 24.283185307179586]
** most_common: ('61', 2), gold_ans: ['60', 60]
** most_common: ('21', 10), gold_ans: ['21', 21]
** most_common: ('\\frac{1}{3}', 5), gold_ans: ['\\frac{19}{40}', 0.475]
** most_common: ('10', 4), gold_ans: ['9', 9]
** most_common: ('-\\frac{16}{5}', 1), gold_ans: ['4', 4]
** most_common: ('7', 5), gold_ans: ['-18', -18]
** most_common: ('6.2', 4), gold_ans: ['6\\frac{1}{5}', 12.2]
** most_common: ('3', 12), gold_ans: ['3', 3]
** most_common: ('8', 2), gold_ans: ['27', 27]
** most_common: ('31.5', 6), gold_ans: ['21', 21]
** most_common: ('4', 5), gold_ans: ['\\frac{6}{23}', 0.2608695652173913]
** most_common: ('(22,784)', 1), gold_ans: ['(46,2004)', 462004]
** most_common: ('(2,2)', 2), gold_ans: ['(-6,10)', -610]
** most_common: ('24', 4), gold_ans: ['49', 49]
** most_common: ('2', 4), gold_ans: ['2', 2]
** most_common: ('-5', 5), gold_ans: ['-5', -5]
** most_common: ('36', 6), gold_ans: ['54', 54]
** most_common: ('17', 12), gold_ans: ['17', 17]
** most_common: ('54', 2), gold_ans: ['108', 108]
** most_common: ('0', 4), gold_ans: ['4', 4]
** most_common: ('6.2', 2), gold_ans: ['1.4', 1.4]
** most_common: ('720', 1), gold_ans: ['512', 512]
** most_common: ('70', 6), gold_ans: ['70', 70]
** most_common: ('8', 2), gold_ans: ['8', 8]
** most_common: ('3', 3), gold_ans: ['8', 8]
** most_common: ('3', 3), gold_ans: ['-3', -3]
** most_common: ('22.25', 4), gold_ans: ['89', 89]
** most_common: ('76', 2), gold_ans: ['44', 44]
** most_common: ('2', 1), gold_ans: ['\\frac{12}{7}', 1.7142857142857142]
** most_common: ('2', 3), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('9000', 4), gold_ans: ['\\text{4:30p.m.}', None]
** most_common: ('197', 8), gold_ans: ['\\frac{197}{2}', 98.5]
** most_common: ('3', 5), gold_ans: ['3+\\frac{\\sqrt{69}}{3}', 5.768874620972691]
** most_common: ('9', 5), gold_ans: ['16', 16]
** most_common: ('10', 2), gold_ans: ['15', 15]
** most_common: ('-35', 3), gold_ans: ['0', 0]
** most_common: ('3', 4), gold_ans: ['(3,\\frac{11\\pi}{8},\\frac{4\\pi}{5})', None]
** most_common: ('10,091', 3), gold_ans: ['10455', 10455]
** most_common: ('12', 3), gold_ans: ['3', 3]
** most_common: ('540', 2), gold_ans: ['72', 72]
BackVerify: 4250
** most_common: ('112.5', 5), gold_ans: ['200', 200]
** most_common: ('-24', 5), gold_ans: ['-39', -39]
** most_common: ('8√3', 3), gold_ans: ['12', 12]
** most_common: ('1', 4), gold_ans: ['2', 2]
** most_common: ('8', 3), gold_ans: ['-4', -4]
** most_common: ('\\frac{1}{8}', 2), gold_ans: ['\\frac{5}{16}', 0.3125]
** most_common: ('2', 8), gold_ans: ['2', 2]
** most_common: ('98', 3), gold_ans: ['7', 7]
** most_common: ('120', 6), gold_ans: ['120', 120]
** most_common: ('10', 9), gold_ans: ['10', 10]
** most_common: ('√π', 3), gold_ans: ['2', 2]
** most_common: ('3', 2), gold_ans: ['\\sqrt{33}', 5.744562646538029]
** most_common: ('9', 2), gold_ans: ['10', 10]
** most_common: ('1', 4), gold_ans: ['3', 3]
** most_common: ('-0.5', 2), gold_ans: ['\\cos58', 7.969557584733964]
** most_common: ('14', 2), gold_ans: ['100', 100]
** most_common: ('42', 1), gold_ans: ['54', 54]
** most_common: ('\\frac{36}{350y}+1+\\frac{w}{z}', 1), gold_ans: ['\\frac{128}{75}', 1.7066666666666668]
** most_common: ('4', 6), gold_ans: ['8', 8]
** most_common: ('1', 10), gold_ans: ['1', 1]
** most_common: ('0.5', 6), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('128', 2), gold_ans: ['\\frac{128}{3}', 42.666666666666664]
** most_common: ('9π', 9), gold_ans: ['12\\pi', 37.69911184307752]
** most_common: ('1', 3), gold_ans: ['2', 2]
** most_common: ('6+4x', 1), gold_ans: ['18', 18]
** most_common: ('-2', 6), gold_ans: ['-2', -2]
** most_common: ('24,37', 1), gold_ans: ['19', 19]
** most_common: ('10', 9), gold_ans: ['10', 10]
** most_common: ('-3', 3), gold_ans: ['-2', -2]
** most_common: ('0', 3), gold_ans: ['2k', None]
** most_common: ('12', 3), gold_ans: ['516', 516]
** most_common: ('9', 4), gold_ans: ['6', 6]
** most_common: ('42', 2), gold_ans: ['60', 60]
** most_common: ('1', 2), gold_ans: ['3', 3]
** most_common: ('320', 5), gold_ans: ['385_9', 3859]
** most_common: ('7', 5), gold_ans: ['7', 7]
** most_common: ('30', 9), gold_ans: ['30', 30]
** most_common: ('108', 4), gold_ans: ['108', 108]
** most_common: ('21', 2), gold_ans: ['14', 14]
** most_common: ('odd', 6), gold_ans: ['\\text{neither}', None]
** most_common: ('60', 4), gold_ans: ['45', 45]
** most_common: ('-18', 1), gold_ans: ['-588', -588]
** most_common: ('7i-2', 5), gold_ans: ['-2+7i', None]
** most_common: ('99', 4), gold_ans: ['63', 63]
** most_common: ('1590', 1), gold_ans: ['1545', 1545]
** most_common: ('0.5', 4), gold_ans: ['-\\frac{1}{2}', -0.5]
** most_common: ('1728', 3), gold_ans: ['1584', 1584]
** most_common: ('0.75', 9), gold_ans: ['\\frac{3}{4}', 0.75]
** most_common: ('4π', 11), gold_ans: ['4\\pi', 12.566370614359172]
** most_common: ('2', 3), gold_ans: ['8', 8]
BackVerify: 4300
** most_common: ('3.5', 4), gold_ans: ['6+\\sqrt{6}', 8.449489742783179]
** most_common: ('0', 3), gold_ans: ['8', 8]
** most_common: ('\\frac{21875}{10350}', 1), gold_ans: ['\\frac{243}{625}', 0.3888]
** most_common: ('1', 3), gold_ans: ['\\sqrt{3}-4', -2.267949192431123]
** most_common: ('\\frac{36}{25}', 2), gold_ans: ['x^2+y^2=13', None]
** most_common: ('3.61', 6), gold_ans: ['5', 5]
** most_common: ('2', 6), gold_ans: ['3', 3]
** most_common: ('6', 10), gold_ans: ['6', 6]
** most_common: ('24', 4), gold_ans: ['64', 64]
** most_common: ('\\frac{2}{3}', 4), gold_ans: ['\\frac{5}{6}', 0.8333333333333334]
** most_common: ('16', 7), gold_ans: ['16', 16]
** most_common: ('16', 5), gold_ans: ['16', 16]
** most_common: ('1', 10), gold_ans: ['12', 12]
** most_common: ('14', 2), gold_ans: ['81', 81]
** most_common: ('4', 9), gold_ans: ['4', 4]
** most_common: ('0', 2), gold_ans: ['508', 508]
** most_common: ('0.48', 10), gold_ans: ['\\frac{12}{25}', 0.48]
** most_common: ('52', 11), gold_ans: ['52', 52]
** most_common: ('0', 4), gold_ans: ['\\frac{\\sqrt{3}}{2}', 0.8660254037844386]
** most_common: ('17', 9), gold_ans: ['17', 17]
** most_common: ('2π', 3), gold_ans: ['2\\pi', 6.283185307179586]
** most_common: ('0.00682', 2), gold_ans: ['\\frac{82}{147}', 0.5578231292517006]
** most_common: ('564', 9), gold_ans: ['564', 564]
** most_common: ('-2', 3), gold_ans: ['a^3+a^2', None]
** most_common: ('3', 6), gold_ans: ['(3,\\frac{\\pi}{2})', None]
** most_common: ('5√3/3', 6), gold_ans: ['\\frac{5\\sqrt{3}}{3}', 2.8867513459481287]
** most_common: ('105', 8), gold_ans: ['105', 105]
** most_common: ('1', 10), gold_ans: ['2', 2]
** most_common: ('4x^2-6x+4', 12), gold_ans: ['4x^2-6x+4', None]
** most_common: ('1.5', 4), gold_ans: ['4', 4]
** most_common: ('10', 2), gold_ans: ['17', 17]
** most_common: ('12', 4), gold_ans: ['thecorrectansweraswenormallydo,asthatwouldbeespeciallyconfusingforthisproblem.', None]
** most_common: ('5-10i', 2), gold_ans: ['-3+6i', None]
** most_common: ('0.25', 6), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('0', 2), gold_ans: ['4018', 4018]
** most_common: ('2√3', 2), gold_ans: ['-3,-2,\\frac{1}{3},\\frac{1}{2}', -3]
** most_common: ('1+y', 4), gold_ans: ['\\frac{1}{y}+y', None]
** most_common: ('ACEFHGIKLNOPQRSTUVWXYZ', 1), gold_ans: ['\\text{VW}', None]
** most_common: ('34', 11), gold_ans: ['9', 9]
** most_common: ('0', 2), gold_ans: ['898', 898]
** most_common: ('440', 8), gold_ans: ['440', 440]
** most_common: ('\\frac{1}{2}', 8), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('1', 4), gold_ans: ['[\\frac{1}{2},\\frac{3}{2}]', 0.5]
** most_common: ('F', 2), gold_ans: ['\\text{B,E,G}', None]
** most_common: ('1', 3), gold_ans: ['\\frac{1}{9}', 0.1111111111111111]
** most_common: ('1', 4), gold_ans: ['164', 164]
** most_common: ('3,-4', 5), gold_ans: ['(3,-4)', -1]
** most_common: ('37.5', 1), gold_ans: ['17', 17]
** most_common: ('53', 6), gold_ans: ['53', 53]
** most_common: ('21', 2), gold_ans: ['5', 5]
BackVerify: 4350
** most_common: ('10', 8), gold_ans: ['201', 201]
** most_common: ('3250', 11), gold_ans: ['3,250', 3250]
** most_common: ('700π', 4), gold_ans: ['900\\pi', 2827.4333882308138]
** most_common: ('3', 7), gold_ans: ['3', 3]
** most_common: ('17', 8), gold_ans: ['17', 17]
** most_common: ('-41', 11), gold_ans: ['-41', -41]
** most_common: ('0', 10), gold_ans: ['0', 0]
** most_common: ('0', 8), gold_ans: ['0', 0]
** most_common: ('499503', 1), gold_ans: ['1041', 1041]
** most_common: ('7x(x-1)(x-2)', 4), gold_ans: ['7x(x-1)(x-2)', None]
** most_common: ('-2,3', 1), gold_ans: ['2', 2]
** most_common: ('504', 11), gold_ans: ['504', 504]
** most_common: ('4', 8), gold_ans: ['4', 4]
** most_common: ('2', 8), gold_ans: ['2', 2]
** most_common: ('-5', 5), gold_ans: ['-4', -4]
** most_common: ('7.5', 5), gold_ans: ['\\sqrt{241}', 15.524174696260024]
** most_common: ('3', 11), gold_ans: ['3', 3]
** most_common: ('\\frac{25}{99}', 3), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('0.504', 6), gold_ans: ['\\frac{48}{95}', 0.5052631578947369]
** most_common: ('0.714285', 3), gold_ans: ['1.4', 1.4]
** most_common: ('3', 8), gold_ans: ['177', 177]
** most_common: ('-5,2', 1), gold_ans: ['1\\pm\\sqrt{19}', None]
** most_common: ('1', 3), gold_ans: ['8x^3-6x-1', None]
** most_common: ('-2,2', 3), gold_ans: ['1,3', 13]
** most_common: ('-10', 9), gold_ans: ['-10', -10]
** most_common: ('0', 4), gold_ans: ['1', 1]
** most_common: ('16', 10), gold_ans: ['16', 16]
** most_common: ('\\frac{5}{9}', 7), gold_ans: ['\\frac{5}{9}', 0.5555555555555556]
** most_common: ('12', 7), gold_ans: ['12', 12]
** most_common: ('0.707106781', 6), gold_ans: ['\\frac{\\sqrt{2}}{2}', 0.7071067811865476]
** most_common: ('1', 12), gold_ans: ['1', 1]
** most_common: ('2', 3), gold_ans: ['3', 3]
** most_common: ('4', 4), gold_ans: ['4', 4]
** most_common: ('0', 4), gold_ans: ['250', 250]
** most_common: ('\\frac{8}{63}', 2), gold_ans: ['\\frac{3}{56}', 0.05357142857142857]
** most_common: ('4', 5), gold_ans: ['0', 0]
** most_common: ('0', 6), gold_ans: ['11', 11]
** most_common: ('140', 10), gold_ans: ['140', 140]
** most_common: ('-1', 2), gold_ans: ['-\\frac{3}{4}', -0.75]
** most_common: ('65', 6), gold_ans: ['65', 65]
** most_common: ('91', 2), gold_ans: ['106', 106]
** most_common: ('0.648', 9), gold_ans: ['\\frac{81}{125}', 0.648]
** most_common: ('92', 1), gold_ans: ['31', 31]
** most_common: ('52', 4), gold_ans: ['52', 52]
** most_common: ('24', 9), gold_ans: ['24', 24]
** most_common: ('8√2', 3), gold_ans: ['6\\sqrt{2}', 8.48528137423857]
** most_common: ('3800', 3), gold_ans: ['3800', 3800]
** most_common: ('201.0', 1), gold_ans: ['31', 31]
** most_common: ('28', 5), gold_ans: ['28', 28]
** most_common: ('13', 10), gold_ans: ['\\text{13}', None]
BackVerify: 4400
** most_common: ('47', 11), gold_ans: ['47', 47]
** most_common: ('90', 2), gold_ans: ['450', 450]
** most_common: ('0.25', 4), gold_ans: ['0.25\\,', 0.25]
** most_common: ('0.2', 3), gold_ans: ['\\frac{9}{100}', 0.09]
** most_common: ('3', 3), gold_ans: ['12', 12]
** most_common: ('0.8969', 1), gold_ans: ['\\frac{47}{1001}', 0.04695304695304695]
** most_common: ('3', 6), gold_ans: ['2', 2]
** most_common: ('-\\frac{3\\pi}{2}', 3), gold_ans: ['\\frac{21}{2}\\pi', 32.98672286269283]
** most_common: ('x^3+2x^2+x', 5), gold_ans: ['x^3+2x^2+x', None]
** most_common: ('700', 11), gold_ans: ['700', 700]
** most_common: ('12π', 2), gold_ans: ['\\pi', 3.141592653589793]
** most_common: ('23', 7), gold_ans: ['23', 23]
** most_common: ('60', 3), gold_ans: ['15', 15]
** most_common: ('72', 2), gold_ans: ['5120', 5120]
** most_common: ('284', 4), gold_ans: ['284', 284]
** most_common: ('-1', 10), gold_ans: ['-1', -1]
** most_common: ('-2', 7), gold_ans: ['-1', -1]
** most_common: ('7,9,12,13', 2), gold_ans: ['7,9,12,13', 791213]
** most_common: ('-4,4', 4), gold_ans: ['-4,4', -44]
** most_common: ('0', 11), gold_ans: ['0', 0]
** most_common: ('125', 7), gold_ans: ['5', 5]
** most_common: ('4', 4), gold_ans: ['27', 27]
** most_common: ('78', 4), gold_ans: ['54', 54]
** most_common: ('54', 1), gold_ans: ['35', 35]
** most_common: ('180', 2), gold_ans: ['145', 145]
** most_common: ('32', 3), gold_ans: ['-256', -256]
** most_common: ('157', 2), gold_ans: ['313', 313]
** most_common: ('7z^96(4z+1)', 4), gold_ans: ['7z^{96}(4z+1)', None]
** most_common: ('2', 4), gold_ans: ['6', 6]
** most_common: ('-2', 5), gold_ans: ['-2x', None]
** most_common: ('28', 11), gold_ans: ['28', 28]
** most_common: ('4√2', 2), gold_ans: ['4+\\sqrt{2}', 5.414213562373095]
** most_common: ('2x+10', 1), gold_ans: ['4x-5y=-50', None]
** most_common: ('57', 3), gold_ans: ['46', 46]
** most_common: ('5', 12), gold_ans: ['5', 5]
** most_common: ('32', 2), gold_ans: ['\\frac{3840}{289}', 13.28719723183391]
** most_common: ('\\begin{pmatrix}0\\-12/13\\end{pmatrix}', 2), gold_ans: ['\\begin{pmatrix}12/13\\5/13\\end{pmatrix}', None]
** most_common: ('0', 2), gold_ans: ['(2,3)', 23]
** most_common: ('20', 8), gold_ans: ['20', 20]
** most_common: ('9', 7), gold_ans: ['9', 9]
** most_common: ('\\frac{15}{46656}', 2), gold_ans: ['\\frac{5}{162}', 0.030864197530864196]
** most_common: ('undefined', 1), gold_ans: ['-3', -3]
** most_common: ('-1', 3), gold_ans: ['6', 6]
** most_common: ('-2^n', 1), gold_ans: ['-2n^2-n', None]
** most_common: ('2', 7), gold_ans: ['8', 8]
** most_common: ('105', 4), gold_ans: ['105', 105]
** most_common: ('0', 4), gold_ans: ['48', 48]
** most_common: ('45', 8), gold_ans: ['45', 45]
** most_common: ('20', 8), gold_ans: ['20', 20]
** most_common: ('258', 3), gold_ans: ['81', 81]
BackVerify: 4450
** most_common: ('16', 4), gold_ans: ['128', 128]
** most_common: ('0', 2), gold_ans: ['6', 6]
** most_common: ('9', 6), gold_ans: ['30', 30]
** most_common: ('28', 3), gold_ans: ['(45x+28)(x+2)', None]
** most_common: ('Nosolution', 2), gold_ans: ['15', 15]
** most_common: ('15', 10), gold_ans: ['15', 15]
** most_common: ('36', 3), gold_ans: ['36', 36]
** most_common: ('4', 4), gold_ans: ['4', 4]
** most_common: ('\\frac{1}{6}', 9), gold_ans: ['\\frac{1}{6}', 0.16666666666666666]
** most_common: ('-2,6', 6), gold_ans: ['6,-2', 4]
** most_common: ('24', 2), gold_ans: ['960', 960]
** most_common: ('2030', 2), gold_ans: ['4060', 4060]
** most_common: ('\\frac{1}{3}', 2), gold_ans: ['\\frac{\\sqrt{3}}{9}', 0.19245008972987526]
** most_common: ('\\frac{4}{11}', 4), gold_ans: ['\\frac{4}{11}', 0.36363636363636365]
** most_common: ('120', 4), gold_ans: ['840', 840]
** most_common: ('1', 2), gold_ans: ['9', 9]
** most_common: ('\\frac{5}{8}', 4), gold_ans: ['\\frac{5}{8}', 0.625]
** most_common: ('4', 2), gold_ans: ['8', 8]
** most_common: ('\\frac{-(b-r-d)\\pm\\sqrt{(b-r-d)^2-36+12s+12e}}{6}', 2), gold_ans: ['3i,-3i', None]
** most_common: ('1', 5), gold_ans: ['2', 2]
** most_common: ('1.5', 9), gold_ans: ['(1,\\frac{9}{2})', 1]
** most_common: ('30', 2), gold_ans: ['50', 50]
** most_common: ('149', 4), gold_ans: ['149', 149]
** most_common: ('240', 3), gold_ans: ['480', 480]
** most_common: ('20√2', 3), gold_ans: ['10\\sqrt{2}', 14.142135623730951]
** most_common: ('13', 2), gold_ans: ['13', 13]
** most_common: ('12,500', 4), gold_ans: ['12500', 12500]
** most_common: ('3', 3), gold_ans: ['4', 4]
** most_common: ('1', 3), gold_ans: ['\\sqrt{5}', 2.23606797749979]
** most_common: ('7.07', 3), gold_ans: ['4.14', 4.14]
** most_common: ('1087', 5), gold_ans: ['1147', 1147]
** most_common: ('1', 2), gold_ans: ['17', 17]
** most_common: ('1', 6), gold_ans: ['1,2', 12]
** most_common: ('1', 6), gold_ans: ['1201', 1201]
** most_common: ('4', 8), gold_ans: ['2', 2]
** most_common: ('1', 8), gold_ans: ['1', 1]
** most_common: ('8', 2), gold_ans: ['2', 2]
** most_common: ('-0.9995', 1), gold_ans: ['-1', -1]
** most_common: ('6', 3), gold_ans: ['10', 10]
** most_common: ('1346', 2), gold_ans: ['194', 194]
** most_common: ('445', 7), gold_ans: ['445', 445]
** most_common: ('25.33', 8), gold_ans: ['52', 52]
** most_common: ('6', 9), gold_ans: ['12', 12]
** most_common: ('-7,3', 3), gold_ans: ['(-7,3)', -73]
** most_common: ('80', 7), gold_ans: ['80', 80]
** most_common: ('39', 5), gold_ans: ['13', 13]
** most_common: ('36', 2), gold_ans: ['36', 36]
** most_common: ('\\frac{5}{2}', 1), gold_ans: ['\\frac{5}{4}', 1.25]
** most_common: ('24', 8), gold_ans: ['24', 24]
** most_common: ('0.5', 3), gold_ans: ['\\frac{1}{4}', 0.25]
BackVerify: 4500
** most_common: ('3t-5', 7), gold_ans: ['6t-5', None]
** most_common: ('1', 3), gold_ans: ['(a+5)(b+2)', None]
** most_common: ('71', 2), gold_ans: ['23', 23]
** most_common: ('-2,-1,1', 3), gold_ans: ['-8,1', -81]
** most_common: ('0', 3), gold_ans: ['18', 18]
** most_common: ('2.9363', 2), gold_ans: ['30', 30]
** most_common: ('(B)Circle', 7), gold_ans: ['\\text{(C)}', None]
** most_common: ('51', 6), gold_ans: ['52', 52]
** most_common: ('1', 4), gold_ans: ['3', 3]
** most_common: ('60', 2), gold_ans: ['-59', -59]
** most_common: ('0', 2), gold_ans: ['\\frac{2x-7}{(x+1)(x-2)}', None]
** most_common: ('0.28', 5), gold_ans: ['\\frac{7}{25}', 0.28]
** most_common: ('70', 5), gold_ans: ['70', 70]
** most_common: ('45', 1), gold_ans: ['-9', -9]
** most_common: ('70', 11), gold_ans: ['70', 70]
** most_common: ('\\frac{n^2}{9}', 1), gold_ans: ['9', 9]
** most_common: ('0', 3), gold_ans: ['3', 3]
** most_common: ('1', 2), gold_ans: ['36', 36]
** most_common: ('0', 3), gold_ans: ['24', 24]
** most_common: ('3', 4), gold_ans: ['30', 30]
** most_common: ('-5', 4), gold_ans: ['-30', -30]
** most_common: ('7', 1), gold_ans: ['47', 47]
** most_common: ('4.85', 7), gold_ans: ['\\frac{160}{33}', 4.848484848484849]
** most_common: ('27', 9), gold_ans: ['27', 27]
** most_common: ('5.65685424949238', 2), gold_ans: ['\\sqrt{34}', 5.830951894845301]
** most_common: ('16', 4), gold_ans: ['18', 18]
** most_common: ('0', 2), gold_ans: ['\\frac{16\\pi}{3}', 16.755160819145566]
** most_common: ('1007', 4), gold_ans: ['1001', 1001]
** most_common: ('2', 9), gold_ans: ['2', 2]
** most_common: ('11.67', 6), gold_ans: ['11\\frac{2}{3}', 37.333333333333336]
** most_common: ('8', 4), gold_ans: ['16384', 16384]
** most_common: ('25', 3), gold_ans: ['25', 25]
** most_common: ('0.25', 1), gold_ans: ['\\frac{73}{100}', 0.73]
** most_common: ('2', 6), gold_ans: ['2x', None]
** most_common: ('5', 9), gold_ans: ['5', 5]
** most_common: ('-24', 5), gold_ans: ['x^4+x^2-10x-24', None]
** most_common: ('65', 11), gold_ans: ['65', 65]
** most_common: ('0', 5), gold_ans: ['144', 144]
** most_common: ('38', 2), gold_ans: ['20', 20]
** most_common: ('3', 4), gold_ans: ['10', 10]
** most_common: ('0', 2), gold_ans: ['\\frac{2807}{27}', 103.96296296296296]
** most_common: ('0', 5), gold_ans: ['2', 2]
** most_common: ('27√3', 2), gold_ans: ['3\\sqrt{3}', 5.196152422706632]
** most_common: ('3', 6), gold_ans: ['5\\sqrt{5}', 11.180339887498949]
** most_common: ('2', 2), gold_ans: ['4', 4]
** most_common: ('36', 2), gold_ans: ['18', 18]
** most_common: ('1.63', 2), gold_ans: ['0.63', 0.63]
** most_common: ('19', 2), gold_ans: ['8', 8]
** most_common: ('121', 12), gold_ans: ['121', 121]
** most_common: ('109', 3), gold_ans: ['-8', -8]
BackVerify: 4550
** most_common: ('(11x+5)/(x-2)', 4), gold_ans: ['\\frac{11x+5}{x-2}', None]
** most_common: ('12', 5), gold_ans: ['14', 14]
** most_common: ('5', 2), gold_ans: ['5', 5]
** most_common: ('0', 2), gold_ans: ['\\frac{1}{2}x+2', None]
** most_common: ('0', 4), gold_ans: ['5', 5]
** most_common: ('-2ap', 4), gold_ans: ['4', 4]
** most_common: ('0.25', 4), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('\\frac{7}{4}', 3), gold_ans: ['\\frac{7}{4}', 1.75]
** most_common: ('26', 9), gold_ans: ['11010_2', 110102]
** most_common: ('2', 5), gold_ans: ['2', 2]
** most_common: ('0.5833333333333333', 1), gold_ans: ['\\frac{11}{15}', 0.7333333333333333]
** most_common: ('3', 3), gold_ans: ['12', 12]
** most_common: ('1', 2), gold_ans: ['(-\\infty,4)', None]
** most_common: ('\\frac{4}{3}', 5), gold_ans: ['\\frac{4}{3}', 1.3333333333333333]
** most_common: ('24', 2), gold_ans: ['24', 24]
** most_common: ('106', 5), gold_ans: ['106', 106]
** most_common: ('4', 12), gold_ans: ['4', 4]
** most_common: ('13', 4), gold_ans: ['120', 120]
** most_common: ('0', 3), gold_ans: ['3', 3]
** most_common: ('0.5', 2), gold_ans: ['2', 2]
** most_common: ('8', 2), gold_ans: ['12', 12]
** most_common: ('120', 9), gold_ans: ['120', 120]
** most_common: ('40', 5), gold_ans: ['180', 180]
** most_common: ('-\\frac{4}{3}', 6), gold_ans: ['-\\frac{4}{3}', -1.3333333333333333]
** most_common: ('36', 3), gold_ans: ['34', 34]
** most_common: ('8', 6), gold_ans: ['8', 8]
** most_common: ('5', 12), gold_ans: ['5', 5]
** most_common: ('-6', 3), gold_ans: ['-8', -8]
** most_common: ('-2', 2), gold_ans: ['10', 10]
** most_common: ('3', 2), gold_ans: ['9', 9]
** most_common: ('3', 1), gold_ans: ['\\frac{255}{64}', 3.984375]
** most_common: ('4', 12), gold_ans: ['4', 4]
** most_common: ('16', 3), gold_ans: ['\\frac{68}{3}', 22.666666666666668]
** most_common: ('-1', 6), gold_ans: ['0', 0]
** most_common: ('0.7853981633974483', 4), gold_ans: ['-\\frac{\\pi}{4}', -0.7853981633974483]
** most_common: ('65%', 3), gold_ans: ['65', 65]
** most_common: ('147', 6), gold_ans: ['147', 147]
** most_common: ('1', 6), gold_ans: ['-0.25', -0.25]
** most_common: ('625', 3), gold_ans: ['625', 625]
** most_common: ('0', 4), gold_ans: ['1', 1]
** most_common: ('45', 2), gold_ans: ['90', 90]
** most_common: ('(4,5)', 3), gold_ans: ['(4,5)', 45]
** most_common: ('\\frac{31}{4}', 2), gold_ans: ['3\\frac{3}{8}', 4.125]
** most_common: ('2x(15x^2-4x+10)', 5), gold_ans: ['2x(15x^2-4x+10)', None]
** most_common: ('-18', 2), gold_ans: ['17', 17]
** most_common: ('0.02', 7), gold_ans: ['\\frac{1}{50}', 0.02]
** most_common: ('√65', 3), gold_ans: ['\\sqrt{65}', 8.06225774829855]
** most_common: ('6435', 7), gold_ans: ['6435', 6435]
** most_common: ('6', 6), gold_ans: ['6', 6]
** most_common: ('13', 2), gold_ans: ['5', 5]
BackVerify: 4600
** most_common: ('3', 5), gold_ans: ['\\sqrt{13}', 3.605551275463989]
** most_common: ('10', 5), gold_ans: ['10', 10]
** most_common: ('3', 4), gold_ans: ['49', 49]
** most_common: ('0', 3), gold_ans: ['-8x^4+7x^2-7x+8', None]
** most_common: ('225', 5), gold_ans: ['225', 225]
** most_common: ('50', 3), gold_ans: ['10', 10]
** most_common: ('27', 2), gold_ans: ['102', 102]
** most_common: ('0', 4), gold_ans: ['-\\frac{9}{4}', -2.25]
** most_common: ('0', 7), gold_ans: ['3\\sqrt{2}', 4.242640687119285]
** most_common: ('16.75', 10), gold_ans: ['16.75', 16.75]
** most_common: ('4', 3), gold_ans: ['1\\frac{4}{5}', 2.8]
** most_common: ('240', 9), gold_ans: ['240', 240]
** most_common: ('0.0032', 2), gold_ans: ['\\frac{1}{350}', 0.002857142857142857]
** most_common: ('45', 7), gold_ans: ['45', 45]
** most_common: ('5.7853981633974483', 1), gold_ans: ['8\\pi', 25.132741228718345]
** most_common: ('\\frac{1}{3}', 2), gold_ans: ['\\frac{7}{27}', 0.25925925925925924]
** most_common: ('2', 9), gold_ans: ['2', 2]
** most_common: ('-0.5', 12), gold_ans: ['-\\frac{1}{2}', -0.5]
** most_common: ('7', 11), gold_ans: ['7', 7]
** most_common: ('32-8π', 5), gold_ans: ['32-8\\pi', 6.867258771281654]
** most_common: ('11.0', 6), gold_ans: ['11', 11]
** most_common: ('2', 5), gold_ans: ['8', 8]
** most_common: ('25', 3), gold_ans: ['25', 25]
** most_common: ('79.2', 4), gold_ans: ['72', 72]
** most_common: ('500,001', 1), gold_ans: ['996506', 996506]
** most_common: ('104', 4), gold_ans: ['40', 40]
** most_common: ('36', 5), gold_ans: ['9', 9]
** most_common: ('2√6', 1), gold_ans: ['8', 8]
** most_common: ('-4', 12), gold_ans: ['-4', -4]
** most_common: ('330', 9), gold_ans: ['330', 330]
** most_common: ('30', 3), gold_ans: ['100', 100]
** most_common: ('0.707106781', 4), gold_ans: ['\\frac{2}{5}', 0.4]
** most_common: ('\\frac{3}{1}', 4), gold_ans: ['\\frac{23}{7}', 3.2857142857142856]
** most_common: ('0', 2), gold_ans: ['24', 24]
** most_common: ('0.75', 5), gold_ans: ['\\frac{3}{4}', 0.75]
** most_common: ('2304', 1), gold_ans: ['45', 45]
** most_common: ('-13', 2), gold_ans: ['-13', -13]
** most_common: ('44', 6), gold_ans: ['44', 44]
** most_common: ('8', 4), gold_ans: ['12', 12]
** most_common: ('11.312', 1), gold_ans: ['24', 24]
** most_common: ('0', 3), gold_ans: ['500', 500]
** most_common: ('2', 9), gold_ans: ['2', 2]
** most_common: ('17', 4), gold_ans: ['5', 5]
** most_common: ('0', 8), gold_ans: ['4', 4]
** most_common: ('0.9167', 3), gold_ans: ['\\frac{5}{7}', 0.7142857142857143]
** most_common: ('0', 4), gold_ans: ['\\frac{24}{5}', 4.8]
** most_common: ('27', 5), gold_ans: ['27', 27]
** most_common: ('28', 9), gold_ans: ['28', 28]
** most_common: ('1089', 1), gold_ans: ['202', 202]
** most_common: ('3', 12), gold_ans: ['3', 3]
BackVerify: 4650
** most_common: ('93', 1), gold_ans: ['111', 111]
** most_common: ('0.5', 11), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('\\begin{pmatrix}\\frac{16}{49}\\\\frac{48}{49}\\\\frac{24}{49}\\end{pmatrix}', 4), gold_ans: ['\\begin{pmatrix}16/49\\48/49\\24/49\\end{pmatrix}', None]
** most_common: ('4', 2), gold_ans: ['4', 4]
** most_common: ('82', 2), gold_ans: ['156', 156]
** most_common: ('10', 5), gold_ans: ['10', 10]
** most_common: ('3', 8), gold_ans: ['1', 1]
** most_common: ('45', 3), gold_ans: ['34', 34]
** most_common: ('121', 2), gold_ans: ['\\frac{121}{25}', 4.84]
** most_common: ('3', 3), gold_ans: ['30', 30]
** most_common: ('0', 3), gold_ans: ['0', 0]
** most_common: ('28', 4), gold_ans: ['506_7', 5067]
** most_common: ('-3.2', 6), gold_ans: ['(3,2)', 32]
** most_common: ('12', 2), gold_ans: ['12', 12]
** most_common: ('1', 2), gold_ans: ['\\frac{\\sqrt{3}}{3}', 0.5773502691896257]
** most_common: ('7', 10), gold_ans: ['7', 7]
** most_common: ('3', 2), gold_ans: ['\\frac{7}{8}', 0.875]
** most_common: ('B', 9), gold_ans: ['\\text{A}', None]
** most_common: ('0.72', 1), gold_ans: ['\\frac{11}{25}', 0.44]
** most_common: ('1968', 3), gold_ans: ['152A_{11}', None]
** most_common: ('2880', 4), gold_ans: ['2880', 2880]
** most_common: ('275', 1), gold_ans: ['231', 231]
** most_common: ('[0,∞)', 9), gold_ans: ['[0,\\infty)', None]
** most_common: ('0', 12), gold_ans: ['0', 0]
** most_common: ('0.5', 5), gold_ans: ['\\frac{5}{9}', 0.5555555555555556]
** most_common: ('111', 2), gold_ans: ['1030', 1030]
** most_common: ('3136', 1), gold_ans: ['32736', 32736]
** most_common: ('33', 2), gold_ans: ['33', 33]
** most_common: ('0', 2), gold_ans: ['828', 828]
** most_common: ('0.33', 7), gold_ans: ['\\frac{33}{100}', 0.33]
** most_common: ('3426', 1), gold_ans: ['129', 129]
** most_common: ('3', 10), gold_ans: ['3', 3]
** most_common: ('21', 9), gold_ans: ['21', 21]
** most_common: ('0.8', 2), gold_ans: ['\\frac{4}{5}', 0.8]
** most_common: ('20', 4), gold_ans: ['20', 20]
** most_common: ('(\\frac{2}{15},\\frac{1}{3})', 1), gold_ans: ['(\\frac{7}{45},\\frac{4}{45})', 0.15555555555555556]
** most_common: ('\\frac{1}{120}', 2), gold_ans: ['\\frac{1}{6}', 0.16666666666666666]
** most_common: ('41', 5), gold_ans: ['50', 50]
** most_common: ('(1,1)', 3), gold_ans: ['(\\frac{1}{\\sqrt{2}},\\frac{1}{\\sqrt{2}})', None]
** most_common: ('16', 4), gold_ans: ['\\frac{16}{65}', 0.24615384615384617]
** most_common: ('2041', 7), gold_ans: ['4210_{5}', None]
** most_common: ('0', 1), gold_ans: ['\\begin{pmatrix}0&1&0\\0&0&1\\1&1&1\\end{pmatrix}', None]
** most_common: ('70', 2), gold_ans: ['70', 70]
** most_common: ('3', 12), gold_ans: ['3', 3]
** most_common: ('24', 2), gold_ans: ['600', 600]
** most_common: ('9,000,000', 4), gold_ans: ['900,000,000', 900000000]
** most_common: ('\\frac{\\sqrt{6}}{3}', 3), gold_ans: ['\\frac{\\sqrt{6}}3', 0.816496580927726]
** most_common: ('24', 3), gold_ans: ['12', 12]
** most_common: ('2500', 7), gold_ans: ['2500', 2500]
** most_common: ('2', 4), gold_ans: ['9', 9]
BackVerify: 4700
** most_common: ('342', 1), gold_ans: ['443_5', 4435]
** most_common: ('6', 6), gold_ans: ['6', 6]
** most_common: ('5', 5), gold_ans: ['\\frac{99}{20}', 4.95]
** most_common: ('360', 2), gold_ans: ['360', 360]
** most_common: ('2', 6), gold_ans: ['2', 2]
** most_common: ('2', 1), gold_ans: ['(\\frac{15}{4},\\frac{1}{2},0)', 3.75]
** most_common: ('-14√π', 2), gold_ans: ['0', 0]
** most_common: ('3.5', 2), gold_ans: ['3', 3]
** most_common: ('-76', 2), gold_ans: ['-120', -120]
** most_common: ('n', 4), gold_ans: ['3', 3]
** most_common: ('\\frac{18}{33}', 3), gold_ans: ['\\frac{6}{11}', 0.5454545454545454]
** most_common: ('2', 3), gold_ans: ['\\frac{\\sqrt{20201}-1}{4}', 35.28255549492606]
** most_common: ('33.3', 2), gold_ans: ['7.2', 7.2]
** most_common: ('24', 6), gold_ans: ['24', 24]
** most_common: ('432', 2), gold_ans: ['384', 384]
** most_common: ('12', 11), gold_ans: ['12', 12]
** most_common: ('0.4444444444444444', 1), gold_ans: ['1', 1]
** most_common: ('165', 4), gold_ans: ['192', 192]
** most_common: ('5', 3), gold_ans: ['60', 60]
** most_common: ('34', 1), gold_ans: ['4x+5', None]
** most_common: ('8', 3), gold_ans: ['22', 22]
** most_common: ('2', 4), gold_ans: ['8', 8]
** most_common: ('105', 2), gold_ans: ['105', 105]
** most_common: ('36', 2), gold_ans: ['288\\pi', 904.7786842338604]
** most_common: ('6', 6), gold_ans: ['6', 6]
** most_common: ('4', 12), gold_ans: ['4', 4]
** most_common: ('0,1', 3), gold_ans: ['\\frac{3}{4},-\\frac{3}{4}', 0.75]
** most_common: ('90', 5), gold_ans: ['190', 190]
** most_common: ('194', 1), gold_ans: ['236', 236]
** most_common: ('(0,0)', 2), gold_ans: ['(-2,1)', -21]
** most_common: ('-10', 3), gold_ans: ['-10', -10]
** most_common: ('12', 3), gold_ans: ['48', 48]
** most_common: ('-7', 9), gold_ans: ['-7', -7]
** most_common: ('75', 6), gold_ans: ['75', 75]
** most_common: ('-\\frac{33}{65}', 2), gold_ans: ['-\\frac{33}{65}', -0.5076923076923077]
** most_common: ('30', 1), gold_ans: ['48', 48]
** most_common: ('81', 8), gold_ans: ['144', 144]
** most_common: ('14', 1), gold_ans: ['\\frac{29}{15}', 1.9333333333333333]
** most_common: ('95', 2), gold_ans: ['190', 190]
** most_common: ('odd', 5), gold_ans: ['\\text{even}', None]
** most_common: ('1', 4), gold_ans: ['2.2', 2.2]
** most_common: ('1', 6), gold_ans: ['(1,1)', 11]
** most_common: ('None', 4), gold_ans: ['10879', 10879]
** most_common: ('11', 12), gold_ans: ['11', 11]
** most_common: ('8', 5), gold_ans: ['8', 8]
** most_common: ('9240', 8), gold_ans: ['9,240', 9240]
** most_common: ('-13', 3), gold_ans: ['-13', -13]
** most_common: ('14', 5), gold_ans: ['14', 14]
** most_common: ('0,1', 8), gold_ans: ['0,1', 1]
** most_common: ('\\frac{49}{4}', 2), gold_ans: ['22', 22]
BackVerify: 4750
** most_common: ('60', 5), gold_ans: ['20', 20]
** most_common: ('2', 7), gold_ans: ['3', 3]
** most_common: ('1', 9), gold_ans: ['1', 1]
** most_common: ('1', 5), gold_ans: ['1', 1]
** most_common: ('550', 4), gold_ans: ['550', 550]
** most_common: ('14', 2), gold_ans: ['14', 14]
** most_common: ('2520', 2), gold_ans: ['3', 3]
** most_common: ('8', 2), gold_ans: ['8', 8]
** most_common: ('0.074', 3), gold_ans: ['\\frac{2}{27}', 0.07407407407407407]
** most_common: ('7', 6), gold_ans: ['8', 8]
** most_common: ('1', 6), gold_ans: ['6', 6]
** most_common: ('48', 2), gold_ans: ['96\\sqrt{3}', 166.27687752661222]
** most_common: ('17', 5), gold_ans: ['53', 53]
** most_common: ('9x^7/4', 1), gold_ans: ['18x^8', None]
** most_common: ('2', 2), gold_ans: ['22', 22]
** most_common: ('6', 2), gold_ans: ['10', 10]
** most_common: ('odd', 8), gold_ans: ['\\text{odd}', None]
** most_common: ('6', 3), gold_ans: ['6', 6]
** most_common: ('2', 3), gold_ans: ['2', 2]
** most_common: ('0', 8), gold_ans: ['0', 0]
** most_common: ('6', 11), gold_ans: ['6', 6]
** most_common: ('13,800', 2), gold_ans: ['15,625', 15625]
** most_common: ('\\frac{121}{64}', 3), gold_ans: ['\\frac{64}{121}', 0.5289256198347108]
** most_common: ('4', 10), gold_ans: ['5', 5]
** most_common: ('0.0', 2), gold_ans: ['-13.5', -13.5]
** most_common: ('1', 7), gold_ans: ['2007', 2007]
** most_common: ('(-∞,102)', 5), gold_ans: ['(2,12)\\cup(12,102)', None]
** most_common: ('52', 8), gold_ans: ['52', 52]
** most_common: ('1000', 2), gold_ans: ['512', 512]
** most_common: ('0', 1), gold_ans: ['108', 108]
** most_common: ('-\\frac{8}{3},-\\frac{7}{3},-\\frac{1}{3}', 1), gold_ans: ['(-\\frac{5}{3},\\frac{2}{3},\\frac{19}{3})', -1.6666666666666667]
** most_common: ('187.5', 11), gold_ans: ['187.5', 187.5]
** most_common: ('π', 3), gold_ans: ['3\\pi-\\frac{\\sqrt{3}}{2}', 8.558752556984942]
** most_common: ('0.8', 6), gold_ans: ['\\frac{4}{5}', 0.8]
** most_common: ('1', 6), gold_ans: ['\\frac{1}{12}', 0.08333333333333333]
** most_common: ('10', 12), gold_ans: ['10', 10]
** most_common: ('4', 3), gold_ans: ['5', 5]
** most_common: ('57.0', 1), gold_ans: ['87', 87]
** most_common: ('10', 10), gold_ans: ['6', 6]
** most_common: ('5', 6), gold_ans: ['5', 5]
** most_common: ('9', 12), gold_ans: ['9', 9]
** most_common: ('5', 11), gold_ans: ['5', 5]
** most_common: ('0', 2), gold_ans: ['2010', 2010]
** most_common: ('1024', 4), gold_ans: ['1024', 1024]
** most_common: ('Sunday', 3), gold_ans: ['\\text{Friday}', None]
** most_common: ('4√3', 5), gold_ans: ['8\\sqrt{3}', 13.856406460551018]
** most_common: ('(7+x,12+y)', 1), gold_ans: ['(-5,-4)', -9]
** most_common: ('7', 2), gold_ans: ['13', 13]
** most_common: ('5', 3), gold_ans: ['5', 5]
** most_common: ('19', 5), gold_ans: ['19', 19]
BackVerify: 4800
** most_common: ('21', 9), gold_ans: ['28', 28]
** most_common: ('-11', 5), gold_ans: ['11', 11]
** most_common: ('1.25', 7), gold_ans: ['1.25', 1.25]
** most_common: ('-1/2x^2+2x-3', 2), gold_ans: ['-\\frac{1}{2}x^2+4x-6', None]
** most_common: ('720', 6), gold_ans: ['480', 480]
** most_common: ('0', 5), gold_ans: ['11x+6y+5z+86=0', None]
** most_common: ('3', 6), gold_ans: ['12', 12]
** most_common: ('15+2*15*sqrt(15)-sqrt(d)+d', 1), gold_ans: ['18', 18]
** most_common: ('3360', 2), gold_ans: ['672', 672]
** most_common: ('20', 3), gold_ans: ['23', 23]
** most_common: ('\\frac{2}{5}', 4), gold_ans: ['(\\frac{2}{5},\\frac{1}{2})', 0.4]
** most_common: ('100.00', 3), gold_ans: ['86', 86]
** most_common: ('33', 10), gold_ans: ['33', 33]
** most_common: ('380', 5), gold_ans: ['380', 380]
** most_common: ('0.71', 2), gold_ans: ['0.43', 0.43]
** most_common: ('\\sqrt{3}', 4), gold_ans: ['\\sqrt{3}', 1.7320508075688772]
** most_common: ('7', 12), gold_ans: ['7', 7]
** most_common: ('47', 3), gold_ans: ['78', 78]
** most_common: ('354', 5), gold_ans: ['1112112_3', 11121123]
** most_common: ('12.96', 1), gold_ans: ['37.72', 37.72]
** most_common: ('2', 3), gold_ans: ['7', 7]
** most_common: ('12', 2), gold_ans: ['1440', 1440]
** most_common: ('0', 4), gold_ans: ['3', 3]
** most_common: ('180', 5), gold_ans: ['180', 180]
** most_common: ('1', 11), gold_ans: ['1', 1]
** most_common: ('12', 5), gold_ans: ['7', 7]
** most_common: ('7', 2), gold_ans: ['\\sqrt{7}', 2.6457513110645907]
** most_common: ('13.5', 1), gold_ans: ['47', 47]
** most_common: ('60', 7), gold_ans: ['2220', 2220]
** most_common: ('7.22', 4), gold_ans: ['5', 5]
** most_common: ('-6', 3), gold_ans: ['-6', -6]
** most_common: ('[-3,2]', 4), gold_ans: ['[-3,2]', -32]
** most_common: ('2', 2), gold_ans: ['3+\\sqrt{6}', 5.449489742783178]
** most_common: ('(3,1/3)', 1), gold_ans: ['(6,-\\frac{3}{8})', 6]
** most_common: ('e', 3), gold_ans: ['\\frac{1}{3600}', 0.0002777777777777778]
** most_common: ('0.5', 12), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('589', 1), gold_ans: ['44', 44]
** most_common: ('8', 12), gold_ans: ['8', 8]
** most_common: ('2', 9), gold_ans: ['2', 2]
** most_common: ('7.280109895009823', 1), gold_ans: ['\\sqrt{53}', 7.280109889280518]
** most_common: ('14π', 12), gold_ans: ['14\\pi', 43.982297150257104]
** most_common: ('-1', 3), gold_ans: ['11', 11]
** most_common: ('10', 6), gold_ans: ['10', 10]
** most_common: ('2', 12), gold_ans: ['2', 2]
** most_common: ('19', 3), gold_ans: ['29', 29]
** most_common: ('13', 7), gold_ans: ['13', 13]
** most_common: ('81', 2), gold_ans: ['17', 17]
** most_common: ('40', 3), gold_ans: ['52', 52]
** most_common: ('18', 3), gold_ans: ['30', 30]
** most_common: ('7', 7), gold_ans: ['7', 7]
BackVerify: 4850
** most_common: ('29', 9), gold_ans: ['29', 29]
** most_common: ('2', 3), gold_ans: ['4', 4]
** most_common: ('3', 6), gold_ans: ['3', 3]
** most_common: ('8', 2), gold_ans: ['8', 8]
** most_common: ('2', 3), gold_ans: ['2', 2]
** most_common: ('1', 3), gold_ans: ['(-\\infty,-2]\\cup[2,\\infty)', None]
** most_common: ('-4.0002', 1), gold_ans: ['-\\frac{11}{9}', -1.2222222222222223]
** most_common: ('30', 6), gold_ans: ['30', 30]
** most_common: ('-5,-4,1', 3), gold_ans: ['-4', -4]
** most_common: ('4.33', 2), gold_ans: ['\\frac{8}{3}', 2.6666666666666665]
** most_common: ('252.80', 6), gold_ans: ['200', 200]
** most_common: ('12', 4), gold_ans: ['9', 9]
** most_common: ('111', 5), gold_ans: ['222', 222]
** most_common: ('1', 2), gold_ans: ['p-q', None]
** most_common: ('0', 3), gold_ans: ['3', 3]
** most_common: ('[0,8/3]', 2), gold_ans: ['(\\frac{3}{5},\\frac{8}{3}]', None]
** most_common: ('\\begin{pmatrix}10\\-7\\6\\end{pmatrix}', 1), gold_ans: ['\\begin{pmatrix}5/3\\5/3\\4/3\\end{pmatrix}', None]
** most_common: ('[-4,6]', 3), gold_ans: ['[6,\\infty)', None]
** most_common: ('6.5', 2), gold_ans: ['82', 82]
** most_common: ('0', 5), gold_ans: ['\\frac{10}{3}', 3.3333333333333335]
** most_common: ('29,41,50', 5), gold_ans: ['27,93', 2793]
** most_common: ('7', 10), gold_ans: ['7', 7]
** most_common: ('0.5', 4), gold_ans: ['\\frac{1+\\sqrt{2}}{2}', 1.2071067811865475]
** most_common: ('-6x^2+12x+12', 2), gold_ans: ['-3(x+2)(x-1)', None]
** most_common: ('51', 2), gold_ans: ['88', 88]
** most_common: ('12225', 11), gold_ans: ['13225', 13225]
** most_common: ('5', 5), gold_ans: ['6', 6]
** most_common: ('0.111', 2), gold_ans: ['\\frac{10}{81}', 0.12345679012345678]
** most_common: ('160', 11), gold_ans: ['160', 160]
** most_common: ('21', 3), gold_ans: ['0', 0]
** most_common: ('18', 4), gold_ans: ['19', 19]
** most_common: ('1', 5), gold_ans: ['1', 1]
** most_common: ('\\frac{1}{6}', 2), gold_ans: ['\\frac{7}{18}', 0.3888888888888889]
** most_common: ('120', 5), gold_ans: ['120', 120]
** most_common: ('\\frac{R^2}{9}+\\frac{4b^2}{9}+\\frac{4c^2}{9}', 1), gold_ans: ['3R^2', None]
** most_common: ('125.5', 1), gold_ans: ['18', 18]
** most_common: ('0', 3), gold_ans: ['4\\sqrt{3}', 6.928203230275509]
** most_common: ('4', 12), gold_ans: ['4', 4]
** most_common: ('11', 4), gold_ans: ['11', 11]
** most_common: ('6', 4), gold_ans: ['60', 60]
** most_common: ('1.2+0.6i', 1), gold_ans: ['\\frac{7}{5}+\\frac{1}{5}i.', None]
** most_common: ('103041', 7), gold_ans: ['103041', 103041]
** most_common: ('49', 6), gold_ans: ['49', 49]
** most_common: ('137645', 1), gold_ans: ['5,866,608', 5866608]
** most_common: ('4', 1), gold_ans: ['\\sqrt{6}', 2.449489742783178]
** most_common: ('-0.16', 8), gold_ans: ['-\\frac{4}{25}', -0.16]
** most_common: ('1', 6), gold_ans: ['3-\\sqrt{7}', 0.3542486889354094]
** most_common: ('even', 6), gold_ans: ['\\text{even}', None]
** most_common: ('-2', 2), gold_ans: ['\\frac{x+2}{7}', None]
** most_common: ('2', 1), gold_ans: ['1058', 1058]
BackVerify: 4900
** most_common: ('36', 4), gold_ans: ['27', 27]
** most_common: ('25', 2), gold_ans: ['25', 25]
** most_common: ('16', 4), gold_ans: ['15', 15]
** most_common: ('715', 6), gold_ans: ['\\text{MAKE}', None]
** most_common: ('2', 2), gold_ans: ['(-11,-10,-7)', -28]
** most_common: ('4', 4), gold_ans: ['981', 981]
** most_common: ('5', 5), gold_ans: ['5', 5]
** most_common: ('625', 5), gold_ans: ['625', 625]
** most_common: ('1', 5), gold_ans: ['1', 1]
** most_common: ('3380', 8), gold_ans: ['3380', 3380]
** most_common: ('15', 6), gold_ans: ['15', 15]
** most_common: ('0.5', 3), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('?', 1), gold_ans: ['45', 45]
** most_common: ('2', 1), gold_ans: ['\\frac{19}{30}', 0.6333333333333333]
** most_common: ('3', 4), gold_ans: ['3', 3]
** most_common: ('0.5', 2), gold_ans: ['\\frac{59}{125}', 0.472]
** most_common: ('84.5', 12), gold_ans: ['84.5', 84.5]
** most_common: ('695', 12), gold_ans: ['695', 695]
** most_common: ('11', 9), gold_ans: ['11', 11]
** most_common: ('-9', 12), gold_ans: ['-27', -27]
** most_common: ('(4,∞)', 2), gold_ans: ['(-\\infty,-8)\\cup(8,\\infty)', None]
** most_common: ('13', 2), gold_ans: ['352', 352]
** most_common: ('3', 4), gold_ans: ['6', 6]
** most_common: ('27', 3), gold_ans: ['27', 27]
** most_common: ('0', 5), gold_ans: ['-1', -1]
** most_common: ('27', 2), gold_ans: ['46', 46]
** most_common: ('√20', 3), gold_ans: ['2\\sqrt{5}', 4.47213595499958]
** most_common: ('0', 2), gold_ans: ['\\frac{2}{3}', 0.6666666666666666]
** most_common: ('0', 2), gold_ans: ['1+\\sqrt{5}', 3.23606797749979]
** most_common: ('16', 2), gold_ans: ['\\frac{1}{5},-\\frac{1}{3}', 0.2]
** most_common: ('-30', 4), gold_ans: ['-15', -15]
** most_common: ('0', 3), gold_ans: ['6', 6]
** most_common: ('0.707106781', 6), gold_ans: ['\\frac{\\sqrt{2}}{2}', 0.7071067811865476]
** most_common: ('2', 3), gold_ans: ['2039191', 2039191]
** most_common: ('\\sqrt{21}', 5), gold_ans: ['\\sqrt{21}', 4.58257569495584]
** most_common: ('0', 2), gold_ans: ['-26', -26]
** most_common: ('-3', 3), gold_ans: ['[-3,-2]\\cup[0,1]', None]
** most_common: ('0.05', 6), gold_ans: ['\\frac{1}{20}', 0.05]
** most_common: ('2', 8), gold_ans: ['3', 3]
** most_common: ('1710', 8), gold_ans: ['1710', 1710]
** most_common: ('1169.01', 1), gold_ans: ['575', 575]
** most_common: ('8', 1), gold_ans: ['18', 18]
** most_common: ('6', 5), gold_ans: ['6', 6]
** most_common: ('-6', 5), gold_ans: ['\\begin{pmatrix}-6\\6\\end{pmatrix}', None]
** most_common: ('undefined', 4), gold_ans: ['4\\sqrt{3}', 6.928203230275509]
** most_common: ('29', 10), gold_ans: ['29', 29]
** most_common: ('4007', 5), gold_ans: ['4007', 4007]
** most_common: ('7', 7), gold_ans: ['7', 7]
** most_common: ('45', 5), gold_ans: ['45', 45]
** most_common: ('0.5', 3), gold_ans: ['\\frac{2}{5}', 0.4]
BackVerify: 4950
** most_common: ('80', 2), gold_ans: ['70\\sqrt{2}', 98.99494936611666]
** most_common: ('60', 4), gold_ans: ['75', 75]
** most_common: ('60', 4), gold_ans: ['2520', 2520]
** most_common: ('18225', 2), gold_ans: ['4624', 4624]
** most_common: ('27', 8), gold_ans: ['28', 28]
** most_common: ('2', 2), gold_ans: ['50', 50]
** most_common: ('84', 3), gold_ans: ['84', 84]
** most_common: ('6', 7), gold_ans: ['6', 6]
** most_common: ('1.25', 6), gold_ans: ['1\\frac{1}{4}', 2.75]
** most_common: ('3.5', 8), gold_ans: ['\\frac{7}{2}', 3.5]
** most_common: ('\\sqrt{[}3]{2}', 4), gold_ans: ['6', 6]
** most_common: ('0', 6), gold_ans: ['0', 0]
** most_common: ('1', 7), gold_ans: ['2x^{10}+2x^8+2x^6+2x^4+2x^2+2', None]
** most_common: ('3rq+6q-15r-30', 5), gold_ans: ['3qr+6q-15r-30', None]
** most_common: ('20', 10), gold_ans: ['20', 20]
** most_common: ('72', 2), gold_ans: ['6', 6]
** most_common: ('8', 6), gold_ans: ['8', 8]
** most_common: ('24', 4), gold_ans: ['9', 9]
** most_common: ('0.5', 2), gold_ans: ['\\frac{\\sqrt{3}}{4}', 0.4330127018922193]
** most_common: ('9', 4), gold_ans: ['36', 36]
** most_common: ('0.75', 1), gold_ans: ['\\frac{1}{13}', 0.07692307692307693]
** most_common: ('10', 3), gold_ans: ['\\frac{10}{9}', 1.1111111111111112]
** most_common: ('7', 5), gold_ans: ['11', 11]
** most_common: ('14996', 2), gold_ans: ['14{,}916', None]
** most_common: ('69', 5), gold_ans: ['69', 69]
** most_common: ('12', 3), gold_ans: ['12', 12]
** most_common: ('0', 3), gold_ans: ['2', 2]
** most_common: ('0', 2), gold_ans: ['5', 5]
** most_common: ('5-4\\cos\\frac{\\pi}{8}', 1), gold_ans: ['20+\\sqrt{2}', 21.414213562373096]
** most_common: ('-2', 2), gold_ans: ['-4', -4]
** most_common: ('25', 9), gold_ans: ['25', 25]
** most_common: ('1', 11), gold_ans: ['1', 1]
** most_common: ('\\frac{1}{80}', 2), gold_ans: ['\\frac{9}{32}', 0.28125]
** most_common: ('\\frac{3}{7}', 5), gold_ans: ['\\frac{3}{7}', 0.42857142857142855]
** most_common: ('1', 4), gold_ans: ['2', 2]
** most_common: ('-3', 2), gold_ans: ['\\frac{5}{2},-3', 2.5]
** most_common: ('26π', 7), gold_ans: ['26\\pi', 81.68140899333463]
** most_common: ('0.4', 3), gold_ans: ['\\frac{4}{25}', 0.16]
** most_common: ('99', 5), gold_ans: ['48', 48]
** most_common: ('448', 8), gold_ans: ['448', 448]
** most_common: ('1', 7), gold_ans: ['12', 12]
** most_common: ('1', 6), gold_ans: ['-1', -1]
** most_common: ('7', 11), gold_ans: ['7', 7]
** most_common: ('√5', 10), gold_ans: ['\\sqrt{5}', 2.23606797749979]
** most_common: ('\\frac{6}{\\sqrt{65}}', 5), gold_ans: ['\\begin{pmatrix}48/65\\6/65\\end{pmatrix}', None]
** most_common: ('36', 12), gold_ans: ['36', 36]
** most_common: ('1.36', 11), gold_ans: ['1.36', 1.36]
** most_common: ('5', 4), gold_ans: ['12', 12]
** most_common: ('151200', 2), gold_ans: ['12', 12]
** most_common: ('0.2143', 1), gold_ans: ['\\frac{1}{5}', 0.2]
** answer: 0.381, groundtruth_str: \frac{8}{21}
** groundtruth_num is not None
** is_fraction:  0.381
** groundtruth_num is (int, float)
** compare_two_numbers float 0.381 0.38095238095238093
** wrong
**  0 1
** answer: 1, groundtruth_str: \frac{99}{100}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.99
** wrong
**  0 2
** answer: 2, groundtruth_str: \sqrt{10}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 3.1622776601683795
** wrong
**  0 3
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1 3
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  2 3
** answer: 11, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 4
** wrong
**  2 4
** answer: 4, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 3
** wrong
**  2 5
** answer: 0, groundtruth_str: \frac{2a+b}{2}
** wrong
**  2 6
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  3 6
** answer: 60, groundtruth_str: 120
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 120
** wrong
**  3 7
** answer: 0.5, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.25
** wrong
**  3 8
** answer: 1, groundtruth_str: \frac{1}{\sqrt{3}}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.5773502691896257
** wrong
**  3 9
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  4 9
** answer: -4, groundtruth_str: -\frac{3}{4}
** groundtruth_num is not None
** is_fraction:  -4
** groundtruth_num is (int, float)
** compare_two_numbers float -4 -0.75
** wrong
**  4 10
** answer: 0, groundtruth_str: -\frac{119}{144}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 -0.8263888888888888
** wrong
**  4 11
** answer: -$\frac{2}{3}+8i, groundtruth_str: -15+8i
** wrong
**  4 12
** answer: 81, groundtruth_str: 81
** compare on lower
** correct
**  5 12
** answer: 1, groundtruth_str: \frac{1}{3}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.3333333333333333
** wrong
**  5 13
** answer: 3, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 7
** wrong
**  5 14
** answer: 4, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 10
** wrong
**  5 15
** answer: (-∞,1)∪(3,∞), groundtruth_str: (-\infty,-2)\cup(0,1)\cup(2,4)
** wrong
**  5 16
** answer: 4, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 8
** wrong
**  5 17
** answer: 3, groundtruth_str: -3
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 -3
** wrong
**  5 18
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  6 18
** answer: 5√2, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  5√2
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  6 19
** answer: 3, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 4
** wrong
**  6 20
** answer: 5, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 2
** wrong
**  6 21
** answer: 7.42, groundtruth_str: 159
** groundtruth_num is not None
** is_fraction:  7.42
** groundtruth_num is (int, float)
** compare_two_numbers int 7.42 159
** wrong
**  6 22
** answer: 16, groundtruth_str: \frac{1024}{27}
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers float 16 37.925925925925924
** wrong
**  6 23
** answer: 651, groundtruth_str: 3255
** groundtruth_num is not None
** is_fraction:  651
** groundtruth_num is (int, float)
** compare_two_numbers int 651 3255
** wrong
**  6 24
** answer: 4, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 24
** wrong
**  6 25
** answer: 7x^5+12x^2+3x+9, groundtruth_str: 7x^5+12x^2+3x+9
** compare on lower
** correct
**  7 25
** answer: 165, groundtruth_str: 165
** compare on lower
** correct
**  8 25
** answer: 68, groundtruth_str: 68
** compare on lower
** correct
**  9 25
** answer: 41.25, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  41.25
** groundtruth_num is (int, float)
** compare_two_numbers int 41.25 30
** wrong
**  9 26
** answer: 510, groundtruth_str: 1020
** groundtruth_num is not None
** is_fraction:  510
** groundtruth_num is (int, float)
** compare_two_numbers int 510 1020
** wrong
**  9 27
** answer: -2tan(x), groundtruth_str: 2\tanx
** wrong
**  9 28
** answer: 35.2, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  35.2
** groundtruth_num is (int, float)
** compare_two_numbers int 35.2 80
** wrong
**  9 29
** answer: (-∞,0)∪(0,∞), groundtruth_str: (-\infty,0)\cup(0,\infty)
** wrong
**  9 30
** answer: 980121, groundtruth_str: 978121
** groundtruth_num is not None
** is_fraction:  980121
** groundtruth_num is (int, float)
** compare_two_numbers int 980121 978121
** wrong
**  9 31
** answer: (-5,73), groundtruth_str: \begin{pmatrix}3/5\57/5\end{pmatrix}
** wrong
**  9 32
** answer: 2, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 0
** wrong
**  9 33
** answer: 2√√2, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  2√√2
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  9 34
** answer: 30, groundtruth_str: 90
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 90
** wrong
**  9 35
** answer: 8, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 7
** wrong
**  9 36
** answer: (-∞,∞), groundtruth_str: (-\infty,-\frac{6}{7})\cup(-\frac{6}{7},\infty)
** wrong
**  9 37
** answer: 10, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 0
** wrong
**  9 38
** answer: 7.5, groundtruth_str: \frac{15}{2}
** groundtruth_num is not None
** is_fraction:  7.5
** groundtruth_num is (int, float)
** compare_two_numbers float 7.5 7.5
** correct
**  10 38
** answer: -0.25, groundtruth_str: -\frac{1}{4}
** groundtruth_num is not None
** is_fraction:  -0.25
** groundtruth_num is (int, float)
** compare_two_numbers float -0.25 -0.25
** correct
**  11 38
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  12 38
** answer: (-3√3,3√3,-2), groundtruth_str: (3\sqrt{3},-9,-2)
** wrong
**  12 39
** answer: -3, groundtruth_str: -3
** compare on lower
** correct
**  13 39
** answer: 0, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 3
** wrong
**  13 40
** answer: 1, groundtruth_str: \frac{4}{3}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 1.3333333333333333
** wrong
**  13 41
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  14 41
** answer: 4, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 26
** wrong
**  14 42
** answer: \[\begin{pmatrix}\frac{1}{5}&\frac{4}{5}\0&1\end{pmatrix}\], groundtruth_str: \begin{pmatrix}1/5&4/5\0&1\end{pmatrix}
** wrong
**  14 43
** answer: 6, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 8
** wrong
**  14 44
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  15 44
** answer: 0.25, groundtruth_str: \frac{3}{16}
** groundtruth_num is not None
** is_fraction:  0.25
** groundtruth_num is (int, float)
** compare_two_numbers float 0.25 0.1875
** wrong
**  15 45
** answer: 8, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 20
** wrong
**  15 46
** answer: \frac{10}{13}, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  \frac{10}{13}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.7692307692307693 0.5
** wrong
**  15 47
** answer: 2, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 -1
** wrong
**  15 48
** answer: 22.5, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  22.5
** groundtruth_num is (int, float)
** compare_two_numbers int 22.5 36
** wrong
**  15 49
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  16 49
** answer: 1, groundtruth_str: 1,-2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 -1
** wrong
**  16 50
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  17 50
** answer: 5040, groundtruth_str: 6720
** groundtruth_num is not None
** is_fraction:  5040
** groundtruth_num is (int, float)
** compare_two_numbers int 5040 6720
** wrong
**  17 51
** answer: 17,575,000, groundtruth_str: 28121600
** groundtruth_num is not None
** is_fraction:  17,575,000
** groundtruth_num is (int, float)
** compare_two_numbers int 17575000 28121600
** wrong
**  17 52
** answer: undefined, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  undefined
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  17 53
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  18 53
** answer: 1, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 4
** wrong
**  18 54
** answer: 12, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 5
** wrong
**  18 55
** answer: (B)Circle, groundtruth_str: \text{(E)}
** wrong
**  18 56
** answer: 5, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 40
** wrong
**  18 57
** answer: 150, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  150
** groundtruth_num is (int, float)
** compare_two_numbers int 150 80
** wrong
**  18 58
** answer: 8, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 2
** wrong
**  18 59
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  19 59
** answer: -1≤x≤1orx≥3/2, groundtruth_str: (-\infty,\frac{3}{7}]\cup[\frac{3}{5},\infty)
** wrong
**  19 60
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  20 60
** answer: 63, groundtruth_str: 3968
** groundtruth_num is not None
** is_fraction:  63
** groundtruth_num is (int, float)
** compare_two_numbers int 63 3968
** wrong
**  20 61
** answer: 9π, groundtruth_str: 8\pi
** groundtruth_num is not None
** is_fraction:  9π
** groundtruth_num is (int, float)
** compare_two_numbers float 28.26 25.132741228718345
** wrong
**  20 62
** answer: 79, groundtruth_str: 32
** groundtruth_num is not None
** is_fraction:  79
** groundtruth_num is (int, float)
** compare_two_numbers int 79 32
** wrong
**  20 63
** answer: 117, groundtruth_str: 104
** groundtruth_num is not None
** is_fraction:  117
** groundtruth_num is (int, float)
** compare_two_numbers int 117 104
** wrong
**  20 64
** answer: 0, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 11
** wrong
**  20 65
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  21 65
** answer: 0.375, groundtruth_str: \frac{2}{5}
** groundtruth_num is not None
** is_fraction:  0.375
** groundtruth_num is (int, float)
** compare_two_numbers float 0.375 0.4
** wrong
**  21 66
** answer: (0,0,-90), groundtruth_str: (3,-3,1)
** groundtruth_num is not None
** is_fraction:  (0,0,-90)
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -28
** wrong
**  21 67
** answer: 0.4, groundtruth_str: \frac{9}{20}
** groundtruth_num is not None
** is_fraction:  0.4
** groundtruth_num is (int, float)
** compare_two_numbers float 0.4 0.45
** wrong
**  21 68
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  21 69
** answer: \frac{1}{9}, groundtruth_str: \frac{9}{10}
** groundtruth_num is not None
** is_fraction:  \frac{1}{9}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1111111111111111 0.9
** wrong
**  21 70
** answer: 4, groundtruth_str: \frac{16}{5}
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers float 4 3.2
** wrong
**  21 71
** answer: 1.3333, groundtruth_str: \frac{3}{4}
** groundtruth_num is not None
** is_fraction:  1.3333
** groundtruth_num is (int, float)
** compare_two_numbers float 1.3333 0.75
** wrong
**  21 72
** answer: 56, groundtruth_str: 56
** compare on lower
** correct
**  22 72
** answer: 0, groundtruth_str: 8+4\sqrt{3}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 14.928203230275509
** wrong
**  22 73
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  23 73
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  24 73
** answer: 17.333333333333332, groundtruth_str: 116
** groundtruth_num is not None
** is_fraction:  17.333333333333332
** groundtruth_num is (int, float)
** compare_two_numbers int 17.333333333333332 116
** wrong
**  24 74
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  25 74
** answer: 3x^2/2, groundtruth_str: \frac{3x^2}{2}
** wrong
**  25 75
** answer: 1, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 3
** wrong
**  25 76
** answer: 0.3846153846153846, groundtruth_str: \frac{12}{13}
** groundtruth_num is not None
** is_fraction:  0.3846153846153846
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3846153846153846 0.9230769230769231
** wrong
**  25 77
** answer: 0, groundtruth_str: -\frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 -0.5
** wrong
**  25 78
** answer: 84, groundtruth_str: 174
** groundtruth_num is not None
** is_fraction:  84
** groundtruth_num is (int, float)
** compare_two_numbers int 84 174
** wrong
**  25 79
** answer: 0.25, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  0.25
** groundtruth_num is (int, float)
** compare_two_numbers float 0.25 0.25
** correct
**  26 79
** answer: 144, groundtruth_str: 162
** groundtruth_num is not None
** is_fraction:  144
** groundtruth_num is (int, float)
** compare_two_numbers int 144 162
** wrong
**  26 80
** answer: 0.12, groundtruth_str: \frac{1}{10}
** groundtruth_num is not None
** is_fraction:  0.12
** groundtruth_num is (int, float)
** compare_two_numbers float 0.12 0.1
** wrong
**  26 81
** answer: (-3,-9), groundtruth_str: (15,-11)
** groundtruth_num is not None
** is_fraction:  (-3,-9)
** groundtruth_num is (int, float)
** compare_two_numbers int -3 4
** wrong
**  26 82
** answer: 53, groundtruth_str: 203
** groundtruth_num is not None
** is_fraction:  53
** groundtruth_num is (int, float)
** compare_two_numbers int 53 203
** wrong
**  26 83
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  27 83
** answer: 20π, groundtruth_str: 15\pi
** groundtruth_num is not None
** is_fraction:  20π
** groundtruth_num is (int, float)
** compare_two_numbers float 62.800000000000004 47.1238898038469
** wrong
**  27 84
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  28 84
** answer: 322, groundtruth_str: 321
** groundtruth_num is not None
** is_fraction:  322
** groundtruth_num is (int, float)
** compare_two_numbers int 322 321
** wrong
**  28 85
** answer: \frac{1}{8}, groundtruth_str: \frac{11}{16}
** groundtruth_num is not None
** is_fraction:  \frac{1}{8}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.125 0.6875
** wrong
**  28 86
** answer: 0, groundtruth_str: -6
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -6
** wrong
**  28 87
** answer: B, groundtruth_str: \text{A}
** wrong
**  28 88
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  29 88
** answer: 0.5, groundtruth_str: \frac{6}{7}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.8571428571428571
** wrong
**  29 89
** answer: \frac{17}{85}, groundtruth_str: \frac{36}{11}
** groundtruth_num is not None
** is_fraction:  \frac{17}{85}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2 3.272727272727273
** wrong
**  29 90
** answer: 24, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 15
** wrong
**  29 91
** answer: -0.5, groundtruth_str: -\frac{3}{2}
** groundtruth_num is not None
** is_fraction:  -0.5
** groundtruth_num is (int, float)
** compare_two_numbers float -0.5 -1.5
** wrong
**  29 92
** answer: 24, groundtruth_str: 70
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 70
** wrong
**  29 93
** answer: 15, groundtruth_str: \frac{21}{8}
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers float 15 2.625
** wrong
**  29 94
** answer: 393, groundtruth_str: 957
** groundtruth_num is not None
** is_fraction:  393
** groundtruth_num is (int, float)
** compare_two_numbers int 393 957
** wrong
**  29 95
** answer: 3.08, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  3.08
** groundtruth_num is (int, float)
** compare_two_numbers int 3.08 2
** wrong
**  29 96
** answer: 2, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 6
** wrong
**  29 97
** answer: -154, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  -154
** groundtruth_num is (int, float)
** compare_two_numbers int -154 8
** wrong
**  29 98
** answer: 19, groundtruth_str: 19
** compare on lower
** correct
**  30 98
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  31 98
** answer: \frac{2}{3}, groundtruth_str: \frac{1}{6}
** groundtruth_num is not None
** is_fraction:  \frac{2}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.6666666666666666 0.16666666666666666
** wrong
**  31 99
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  32 99
** answer: 37.50, groundtruth_str: 37.50
** compare on lower
** correct
**  33 99
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  34 99
** answer: 21, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  21
** groundtruth_num is (int, float)
** compare_two_numbers int 21 10
** wrong
**  34 100
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  35 100
** answer: 0,1, groundtruth_str: 0,1
** compare on lower
** correct
**  36 100
** answer: 1.1571, groundtruth_str: \frac{13}{6}
** groundtruth_num is not None
** is_fraction:  1.1571
** groundtruth_num is (int, float)
** compare_two_numbers float 1.1571 2.1666666666666665
** wrong
**  36 101
** answer: 25, groundtruth_str: x^2+10x+25
** wrong
**  36 102
** answer: 27.0, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  27.0
** groundtruth_num is (int, float)
** compare_two_numbers int 27 25
** wrong
**  36 103
** answer: -\frac{5}{2}, groundtruth_str: -8+2i
** wrong
**  36 104
** answer: 3, groundtruth_str: -2
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 -2
** wrong
**  36 105
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  37 105
** answer: B, groundtruth_str: \text{(C)}
** wrong
**  37 106
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  38 106
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  39 106
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  40 106
** answer: \frac{16}{81}, groundtruth_str: \frac{9}{32}
** groundtruth_num is not None
** is_fraction:  \frac{16}{81}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.19753086419753085 0.28125
** wrong
**  40 107
** answer: 2598960, groundtruth_str: 2,598,960
** groundtruth_num is not None
** is_fraction:  2598960
** groundtruth_num is (int, float)
** compare_two_numbers int 2598960 2598960
** correct
**  41 107
** answer: -1, groundtruth_str: -\frac{1}{2}
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers float -1 -0.5
** wrong
**  41 108
** answer: 15, groundtruth_str: -15
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 -15
** wrong
**  41 109
** answer: -106, groundtruth_str: 763
** groundtruth_num is not None
** is_fraction:  -106
** groundtruth_num is (int, float)
** compare_two_numbers int -106 763
** wrong
**  41 110
** answer: 3, groundtruth_str: -13x+3
** wrong
**  41 111
** answer: 240, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  240
** groundtruth_num is (int, float)
** compare_two_numbers int 240 9
** wrong
**  41 112
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  42 112
** answer: 262,144, groundtruth_str: 262144
** groundtruth_num is not None
** is_fraction:  262,144
** groundtruth_num is (int, float)
** compare_two_numbers int 262144 262144
** correct
**  43 112
** answer: \frac{25}{14}, groundtruth_str: 5
** compare on lower in
** correct
**  44 112
** answer: 668400, groundtruth_str: 666000
** groundtruth_num is not None
** is_fraction:  668400
** groundtruth_num is (int, float)
** compare_two_numbers int 668400 666000
** wrong
**  44 113
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  45 113
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  46 113
** answer: 400, groundtruth_str: 500a^7
** wrong
**  46 114
** answer: 2√2, groundtruth_str: 2\sqrt{5}
** groundtruth_num is not None
** is_fraction:  2√2
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  46 115
** answer: 27, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers int 27 7
** wrong
**  46 116
** answer: 3356, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  3356
** groundtruth_num is (int, float)
** compare_two_numbers int 3356 40
** wrong
**  46 117
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  47 117
** answer: 507, groundtruth_str: 507
** compare on lower
** correct
**  48 117
** answer: 4, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 6
** wrong
**  48 118
** answer: 80, groundtruth_str: 160
** groundtruth_num is not None
** is_fraction:  80
** groundtruth_num is (int, float)
** compare_two_numbers int 80 160
** wrong
**  48 119
** answer: 3, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 7
** wrong
**  48 120
** answer: (-7,2), groundtruth_str: (-\infty,-7)\cup(1,2)
** wrong
**  48 121
** answer: 8, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 10
** wrong
**  48 122
** answer: 0.5, groundtruth_str: (-\infty,0]\cup(\frac{1}{2},\frac{3}{2}]
** wrong
**  48 123
** answer: 220.0, groundtruth_str: 220
** groundtruth_num is not None
** is_fraction:  220.0
** groundtruth_num is (int, float)
** compare_two_numbers int 220 220
** correct
**  49 123
** answer: 575, groundtruth_str: 575
** compare on lower
** correct
**  50 123
** answer: 180, groundtruth_str: 150
** groundtruth_num is not None
** is_fraction:  180
** groundtruth_num is (int, float)
** compare_two_numbers int 180 150
** wrong
**  50 124
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  51 124
** answer: 0, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -1
** wrong
**  51 125
** answer: 0,1.42325, groundtruth_str: 2+\sqrt{3},-2+\sqrt{3}
** groundtruth_num is not None
** is_fraction:  0,1.42325
** groundtruth_num is (int, float)
** compare_two_numbers float 0 3.732050807568877
** wrong
**  51 126
** answer: 96, groundtruth_str: 224
** groundtruth_num is not None
** is_fraction:  96
** groundtruth_num is (int, float)
** compare_two_numbers int 96 224
** wrong
**  51 127
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  52 127
** answer: 1250, groundtruth_str: 1250
** compare on lower
** correct
**  53 127
** answer: 33, groundtruth_str: 33
** compare on lower
** correct
**  54 127
** answer: 3450, groundtruth_str: 3504
** groundtruth_num is not None
** is_fraction:  3450
** groundtruth_num is (int, float)
** compare_two_numbers int 3450 3504
** wrong
**  54 128
** answer: 5040, groundtruth_str: 1260
** groundtruth_num is not None
** is_fraction:  5040
** groundtruth_num is (int, float)
** compare_two_numbers int 5040 1260
** wrong
**  54 129
** answer: \frac{12}{13}, groundtruth_str: \frac{507}{595}
** groundtruth_num is not None
** is_fraction:  \frac{12}{13}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.9230769230769231 0.8521008403361344
** wrong
**  54 130
** answer: \begin{pmatrix}-a/8&-a/8\c&-a/4\end{pmatrix}, groundtruth_str: \begin{pmatrix}4&2\-1&1\end{pmatrix}
** wrong
**  54 131
** answer: 2013, groundtruth_str: 2079
** groundtruth_num is not None
** is_fraction:  2013
** groundtruth_num is (int, float)
** compare_two_numbers int 2013 2079
** wrong
**  54 132
** answer: 1, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 0
** wrong
**  54 133
** answer: 150, groundtruth_str: 150
** compare on lower
** correct
**  55 133
** answer: 96, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  96
** groundtruth_num is (int, float)
** compare_two_numbers int 96 80
** wrong
**  55 134
** answer: 7, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 18
** wrong
**  55 135
** answer: -2+3√2+6√3-2√6, groundtruth_str: -48
** groundtruth_num is not None
** is_fraction:  -2+3√2+6√3-2√6
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  55 136
** answer: -1/√10, groundtruth_str: \frac{1}{\sqrt{10}}
** groundtruth_num is not None
** is_fraction:  -1/√10
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  55 137
** answer: 0, groundtruth_str: 117649
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 117649
** wrong
**  55 138
** answer: 35, groundtruth_str: \frac{25}{52}
** groundtruth_num is not None
** is_fraction:  35
** groundtruth_num is (int, float)
** compare_two_numbers float 35 0.4807692307692308
** wrong
**  55 139
** answer: 13860, groundtruth_str: 13,800
** groundtruth_num is not None
** is_fraction:  13860
** groundtruth_num is (int, float)
** compare_two_numbers int 13860 13800
** wrong
**  55 140
** answer: 0.11, groundtruth_str: \frac{11}{100}
** groundtruth_num is not None
** is_fraction:  0.11
** groundtruth_num is (int, float)
** compare_two_numbers float 0.11 0.11
** correct
**  56 140
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  57 140
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  57 141
** answer: 625, groundtruth_str: 27648
** groundtruth_num is not None
** is_fraction:  625
** groundtruth_num is (int, float)
** compare_two_numbers int 625 27648
** wrong
**  57 142
** answer: 7√30, groundtruth_str: 14\sqrt{15}
** groundtruth_num is not None
** is_fraction:  7√30
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  57 143
** answer: -7, groundtruth_str: (4x-7)
** wrong
**  57 144
** answer: 0, groundtruth_str: \frac{1997}{2}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 998.5
** wrong
**  57 145
** answer: 82, groundtruth_str: 81
** groundtruth_num is not None
** is_fraction:  82
** groundtruth_num is (int, float)
** compare_two_numbers int 82 81
** wrong
**  57 146
** answer: (-∞,∞), groundtruth_str: (-\infty,0]\cup[4,\infty)
** wrong
**  57 147
** answer: 55, groundtruth_str: 55
** compare on lower
** correct
**  58 147
** answer: 129, groundtruth_str: 180
** groundtruth_num is not None
** is_fraction:  129
** groundtruth_num is (int, float)
** compare_two_numbers int 129 180
** wrong
**  58 148
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  59 148
** answer: 2000, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  2000
** groundtruth_num is (int, float)
** compare_two_numbers int 2000 -1
** wrong
**  59 149
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  60 149
** answer: 73.5, groundtruth_str: 73.5
** compare on lower
** correct
**  61 149
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  62 149
** answer: 1, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 8
** wrong
**  62 150
** answer: 26, groundtruth_str: 735
** groundtruth_num is not None
** is_fraction:  26
** groundtruth_num is (int, float)
** compare_two_numbers int 26 735
** wrong
**  62 151
** answer: 216, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  216
** groundtruth_num is (int, float)
** compare_two_numbers int 216 36
** wrong
**  62 152
** answer: 13, groundtruth_str: 111
** groundtruth_num is not None
** is_fraction:  13
** groundtruth_num is (int, float)
** compare_two_numbers int 13 111
** wrong
**  62 153
** answer: 40, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  40
** groundtruth_num is (int, float)
** compare_two_numbers int 40 17
** wrong
**  62 154
** answer: 0, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 1
** wrong
**  62 155
** answer: 1, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 5
** wrong
**  62 156
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  63 156
** answer: 1050, groundtruth_str: 3224
** groundtruth_num is not None
** is_fraction:  1050
** groundtruth_num is (int, float)
** compare_two_numbers int 1050 3224
** wrong
**  63 157
** answer: 26, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  26
** groundtruth_num is (int, float)
** compare_two_numbers int 26 21
** wrong
**  63 158
** answer: -21, groundtruth_str: -21
** compare on lower
** correct
**  64 158
** answer: 333333333, groundtruth_str: 111,111,111
** groundtruth_num is not None
** is_fraction:  333333333
** groundtruth_num is (int, float)
** compare_two_numbers int 333333333 111111111
** wrong
**  64 159
** answer: 14√2, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  14√2
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  64 160
** answer: 6, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 20
** wrong
**  64 161
** answer: 1, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 8
** wrong
**  64 162
** answer: 76, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  76
** groundtruth_num is (int, float)
** compare_two_numbers int 76 30
** wrong
**  64 163
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  65 163
** answer: \begin{pmatrix}4-k\7-2k\end{pmatrix}, groundtruth_str: \begin{pmatrix}2/5\-1/5\end{pmatrix}
** wrong
**  65 164
** answer: 25, groundtruth_str: 27
** groundtruth_num is not None
** is_fraction:  25
** groundtruth_num is (int, float)
** compare_two_numbers int 25 27
** wrong
**  65 165
** answer: 1, groundtruth_str: \frac{100}{81}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 1.2345679012345678
** wrong
**  65 166
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  66 166
** answer: 16, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 8
** wrong
**  66 167
** answer: 0, groundtruth_str: (-a,0)
** wrong
**  66 168
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  67 168
** answer: -6, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  -6
** groundtruth_num is (int, float)
** compare_two_numbers int -6 4
** wrong
**  67 169
** answer: ∞, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  ∞
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  67 170
** answer: odd, groundtruth_str: \text{odd}
** compare on lower
** correct
**  68 170
** answer: 159.96, groundtruth_str: 90
** groundtruth_num is not None
** is_fraction:  159.96
** groundtruth_num is (int, float)
** compare_two_numbers int 159.96 90
** wrong
**  68 171
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  69 171
** answer: 108, groundtruth_str: 87
** groundtruth_num is not None
** is_fraction:  108
** groundtruth_num is (int, float)
** compare_two_numbers int 108 87
** wrong
**  69 172
** answer: 1, groundtruth_str: 501
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 501
** wrong
**  69 173
** answer: 2, groundtruth_str: \frac{19}{540}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 0.03518518518518519
** wrong
**  69 174
** answer: 45, groundtruth_str: 86
** groundtruth_num is not None
** is_fraction:  45
** groundtruth_num is (int, float)
** compare_two_numbers int 45 86
** wrong
**  69 175
** answer: 0, groundtruth_str: 331
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 331
** wrong
**  69 176
** answer: 10.0, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  10.0
** groundtruth_num is (int, float)
** compare_two_numbers int 10 10
** correct
**  70 176
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  71 176
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  72 176
** answer: 003, groundtruth_str: 668
** groundtruth_num is not None
** is_fraction:  003
** groundtruth_num is (int, float)
** compare_two_numbers int 3 668
** wrong
**  72 177
** answer: 14400, groundtruth_str: 11,111,111,100
** groundtruth_num is not None
** is_fraction:  14400
** groundtruth_num is (int, float)
** compare_two_numbers int 14400 11111111100
** wrong
**  72 178
** answer: 2x^2+2x+3, groundtruth_str: 2x^2+5x-1
** wrong
**  72 179
** answer: 1.8, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1.8
** groundtruth_num is (int, float)
** compare_two_numbers int 1.8 2
** correct
**  73 179
** answer: -128, groundtruth_str: -128
** compare on lower
** correct
**  74 179
** answer: -1, groundtruth_str: -2
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers int -1 -2
** wrong
**  74 180
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  75 180
** answer: 1, groundtruth_str: 1+2\sqrt{3}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 4.464101615137754
** wrong
**  75 181
** answer: 44, groundtruth_str: \begin{pmatrix}11\44\end{pmatrix}
** wrong
**  75 182
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  76 182
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  77 182
** answer: 10,985,500, groundtruth_str: 25,972,650
** groundtruth_num is not None
** is_fraction:  10,985,500
** groundtruth_num is (int, float)
** compare_two_numbers int 10985500 25972650
** wrong
**  77 183
** answer: 3, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 1
** wrong
**  77 184
** answer: 480, groundtruth_str: 636
** groundtruth_num is not None
** is_fraction:  480
** groundtruth_num is (int, float)
** compare_two_numbers int 480 636
** wrong
**  77 185
** answer: (x-5)(x^2+7x-35), groundtruth_str: (x-5)(x^2-4x+7)
** wrong
**  77 186
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  78 186
** answer: 81, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  81
** groundtruth_num is (int, float)
** compare_two_numbers int 81 36
** wrong
**  78 187
** answer: -2, groundtruth_str: -\frac{14}{5}
** groundtruth_num is not None
** is_fraction:  -2
** groundtruth_num is (int, float)
** compare_two_numbers float -2 -2.8
** wrong
**  78 188
** answer: 76, groundtruth_str: 133
** groundtruth_num is not None
** is_fraction:  76
** groundtruth_num is (int, float)
** compare_two_numbers int 76 133
** wrong
**  78 189
** answer: 10000_2, groundtruth_str: 10000_2
** compare on lower
** correct
**  79 189
** answer: 10.0, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  10.0
** groundtruth_num is (int, float)
** compare_two_numbers int 10 10
** correct
**  80 189
** answer: -1, groundtruth_str: \frac{20}{9}
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers float -1 2.2222222222222223
** wrong
**  80 190
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  81 190
** answer: 0, groundtruth_str: \text{D}
** wrong
**  81 191
** answer: -\frac{\sqrt{2}}{2}+\frac{1}{\sqrt{2}}i, groundtruth_str: 6-5i
** wrong
**  81 192
** answer: 4, groundtruth_str: \frac{\sqrt{65}}{2}
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers float 4 4.031128874149275
** wrong
**  81 193
** answer: 6524.8, groundtruth_str: 391872
** groundtruth_num is not None
** is_fraction:  6524.8
** groundtruth_num is (int, float)
** compare_two_numbers int 6524.8 391872
** wrong
**  81 194
** answer: 0.25, groundtruth_str: 4+2\sqrt{2}
** groundtruth_num is not None
** is_fraction:  0.25
** groundtruth_num is (int, float)
** compare_two_numbers float 0.25 6.82842712474619
** wrong
**  81 195
** answer: -4, groundtruth_str: -42
** groundtruth_num is not None
** is_fraction:  -4
** groundtruth_num is (int, float)
** compare_two_numbers int -4 -42
** wrong
**  81 196
** answer: 1, groundtruth_str: \frac{5}{2}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 2.5
** wrong
**  81 197
** answer: 0.8537, groundtruth_str: \frac{427}{495}
** groundtruth_num is not None
** is_fraction:  0.8537
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8537 0.8626262626262626
** wrong
**  81 198
** answer: 1320, groundtruth_str: 1320
** compare on lower
** correct
**  82 198
** answer: \frac{1}{3}, groundtruth_str: \frac{2}{5}
** groundtruth_num is not None
** is_fraction:  \frac{1}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3333333333333333 0.4
** wrong
**  82 199
** answer: (-√17,√17), groundtruth_str: (-\sqrt{3},\sqrt{3})
** wrong
**  82 200
** answer: 5, groundtruth_str: \frac{250}{39}
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers float 5 6.410256410256411
** wrong
**  82 201
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  83 201
** answer: \frac{1}{33}, groundtruth_str: \frac{1}{33}
** compare on lower
** correct
**  84 201
** answer: -1, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers int -1 1
** wrong
**  84 202
** answer: 77, groundtruth_str: 103
** groundtruth_num is not None
** is_fraction:  77
** groundtruth_num is (int, float)
** compare_two_numbers int 77 103
** wrong
**  84 203
** answer: 39, groundtruth_str: 39
** compare on lower
** correct
**  85 203
** answer: 4, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 2
** wrong
**  85 204
** answer: 0, groundtruth_str: \frac{1}{5},\frac{1}{4},\frac{2}{5},\frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.2
** wrong
**  85 205
** answer: 60, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 36
** wrong
**  85 206
** answer: 544π/3, groundtruth_str: 600\pi
** groundtruth_num is not None
** is_fraction:  544π/3
** groundtruth_num is (int, float)
** compare_two_numbers float 569.3866666666667 1884.9555921538758
** wrong
**  85 207
** answer: (0,0), groundtruth_str: (-5,-7)
** groundtruth_num is not None
** is_fraction:  (0,0)
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -12
** wrong
**  85 208
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  86 208
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  87 208
** answer: 202, groundtruth_str: 202
** compare on lower
** correct
**  88 208
** answer: -12, groundtruth_str: -12
** compare on lower
** correct
**  89 208
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  90 208
** answer: \frac{4}{5}, groundtruth_str: \frac{3}{5},\frac{117}{125}
** groundtruth_num is not None
** is_fraction:  \frac{4}{5}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8 0.6
** wrong
**  90 209
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  91 209
** answer: 128π, groundtruth_str: 1250\pi
** groundtruth_num is not None
** is_fraction:  128π
** groundtruth_num is (int, float)
** compare_two_numbers float 401.92 3926.9908169872415
** wrong
**  91 210
** answer: 8, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 7
** wrong
**  91 211
** answer: -1.23, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  -1.23
** groundtruth_num is (int, float)
** compare_two_numbers int -1.23 8
** wrong
**  91 212
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  92 212
** answer: 9, groundtruth_str: 129
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 129
** wrong
**  92 213
** answer: 109, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  109
** groundtruth_num is (int, float)
** compare_two_numbers int 109 10
** wrong
**  92 214
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  93 214
** answer: 0.2109375, groundtruth_str: \frac{27}{512}
** groundtruth_num is not None
** is_fraction:  0.2109375
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2109375 0.052734375
** wrong
**  93 215
** answer: 12, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 6
** wrong
**  93 216
** answer: 8, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 19
** wrong
**  93 217
** answer: 180, groundtruth_str: 180
** compare on lower
** correct
**  94 217
** answer: \frac{2187}{128}, groundtruth_str: \frac{15309}{256}
** groundtruth_num is not None
** is_fraction:  \frac{2187}{128}
** groundtruth_num is (int, float)
** compare_two_numbers float 17.0859375 59.80078125
** wrong
**  94 218
** answer: 19, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  19
** groundtruth_num is (int, float)
** compare_two_numbers int 19 9
** wrong
**  94 219
** answer: 210, groundtruth_str: 210
** compare on lower
** correct
**  95 219
** answer: 0.25, groundtruth_str: \frac{5}{36}
** groundtruth_num is not None
** is_fraction:  0.25
** groundtruth_num is (int, float)
** compare_two_numbers float 0.25 0.1388888888888889
** wrong
**  95 220
** answer: (3√2/10,2√2/5,√2), groundtruth_str: (-13,-16,-18)
** groundtruth_num is not None
** is_fraction:  (3√2/10,2√2/5,√2)
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  95 221
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  96 221
** answer: \frac{5}{19}, groundtruth_str: \frac{4}{3}
** groundtruth_num is not None
** is_fraction:  \frac{5}{19}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2631578947368421 1.3333333333333333
** wrong
**  96 222
** answer: 96, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  96
** groundtruth_num is (int, float)
** compare_two_numbers int 96 40
** wrong
**  96 223
** answer: 4, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 8
** wrong
**  96 224
** answer: 8, groundtruth_str: 32
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 32
** wrong
**  96 225
** answer: x, groundtruth_str: -\sqrt{x-3}+3
** wrong
**  96 226
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  97 226
** answer: y^4-2y^3+7y^2+y-5, groundtruth_str: y^4-2y^3+7y^2+y-5
** compare on lower
** correct
**  98 226
** answer: \frac{11}{27}, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  \frac{11}{27}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.4074074074074074 0.5
** wrong
**  98 227
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  99 227
** answer: 0, groundtruth_str: 1+\sqrt{}2,\1-\sqrt{}2,\2+\sqrt{}3,\2-\sqrt{}3
** wrong
**  99 228
** answer: 5050, groundtruth_str: 5050
** compare on lower
** correct
**  100 228
** answer: 34, groundtruth_str: 34
** compare on lower
** correct
**  101 228
** answer: -1, groundtruth_str: -1
** compare on lower
** correct
**  102 228
** answer: 2, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 9
** wrong
**  102 229
** answer: 12.62, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  12.62
** groundtruth_num is (int, float)
** compare_two_numbers int 12.62 21
** wrong
**  102 230
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  103 230
** answer: 36√3, groundtruth_str: 36\sqrt{3}
** groundtruth_num is not None
** is_fraction:  36√3
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  103 231
** answer: 3, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 2
** wrong
**  103 232
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  104 232
** answer: 100, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  100
** groundtruth_num is (int, float)
** compare_two_numbers int 100 3
** wrong
**  104 233
** answer: π, groundtruth_str: \pi
** groundtruth_num is not None
** is_fraction:  π
** groundtruth_num is (int, float)
** compare_two_numbers float 3.14 3.141592653589793
** wrong
**  104 234
** answer: 0, groundtruth_str: \frac{4036082}{4036081}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 1.0000002477650969
** wrong
**  104 235
** answer: 5, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 15
** wrong
**  104 236
** answer: 45, groundtruth_str: 83
** groundtruth_num is not None
** is_fraction:  45
** groundtruth_num is (int, float)
** compare_two_numbers int 45 83
** wrong
**  104 237
** answer: \frac{328}{98}, groundtruth_str: \frac{3280}{999}
** groundtruth_num is not None
** is_fraction:  \frac{328}{98}
** groundtruth_num is (int, float)
** compare_two_numbers float 3.3469387755102042 3.2832832832832834
** wrong
**  104 238
** answer: 0.5, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.5
** correct
**  105 238
** answer: 2000, groundtruth_str: 2000
** compare on lower
** correct
**  106 238
** answer: 72, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  72
** groundtruth_num is (int, float)
** compare_two_numbers int 72 18
** wrong
**  106 239
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  107 239
** answer: 0.25, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  0.25
** groundtruth_num is (int, float)
** compare_two_numbers float 0.25 0.25
** correct
**  108 239
** answer: \frac{7}{9}, groundtruth_str: \frac{7}{9}
** compare on lower
** correct
**  109 239
** answer: 3, groundtruth_str: [3,\infty)
** wrong
**  109 240
** answer: 24, groundtruth_str: 156
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 156
** wrong
**  109 241
** answer: 0.333333333333, groundtruth_str: \frac{32\pi}{81}
** groundtruth_num is not None
** is_fraction:  0.333333333333
** groundtruth_num is (int, float)
** compare_two_numbers float 0.333333333333 1.241123023640412
** wrong
**  109 242
** answer: -2√7-1, groundtruth_str: -2\sqrt{7}-1
** groundtruth_num is not None
** is_fraction:  -2√7-1
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  109 243
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  110 243
** answer: \frac{1}{2}, groundtruth_str: \frac{1}{2},-\frac{1}{12}
** compare on lower in
** correct
**  111 243
** answer: (11,-13,3), groundtruth_str: \begin{pmatrix}11\-13\-1\end{pmatrix}
** wrong
**  111 244
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  112 244
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  113 244
** answer: √17, groundtruth_str: \sqrt{17}
** groundtruth_num is not None
** is_fraction:  √17
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  113 245
** answer: -\frac{4}{3}, groundtruth_str: -\frac{2}{3}
** groundtruth_num is not None
** is_fraction:  -\frac{4}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float -1.3333333333333333 -0.6666666666666666
** wrong
**  113 246
** answer: \frac{1}{6}, groundtruth_str: \frac{1}{5}
** groundtruth_num is not None
** is_fraction:  \frac{1}{6}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.16666666666666666 0.2
** wrong
**  113 247
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  114 247
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  115 247
** answer: 1, groundtruth_str: \text{ellipse}
** wrong
**  115 248
** answer: 87, groundtruth_str: 87
** compare on lower
** correct
**  116 248
** answer: 12, groundtruth_str: 6\sqrt{7}
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers float 12 15.874507866387544
** wrong
**  116 249
** answer: -6, groundtruth_str: -6
** compare on lower
** correct
**  117 249
** answer: 511, groundtruth_str: 1024
** groundtruth_num is not None
** is_fraction:  511
** groundtruth_num is (int, float)
** compare_two_numbers int 511 1024
** wrong
**  117 250
** answer: \frac{2}{9}, groundtruth_str: \frac{8}{17}
** groundtruth_num is not None
** is_fraction:  \frac{2}{9}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2222222222222222 0.47058823529411764
** wrong
**  117 251
** answer: 0.5, groundtruth_str: -\frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 -0.5
** wrong
**  117 252
** answer: 6, groundtruth_str: 2\sqrt{5}
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers float 6 4.47213595499958
** wrong
**  117 253
** answer: 5, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 4
** wrong
**  117 254
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  117 255
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  118 255
** answer: 3, groundtruth_str: -9
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 -9
** wrong
**  118 256
** answer: 2-√3, groundtruth_str: 2\sqrt{3}-2
** groundtruth_num is not None
** is_fraction:  2-√3
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  118 257
** answer: 0.5, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.5
** correct
**  119 257
** answer: 10+8+6√2, groundtruth_str: 24+6\sqrt{2}
** groundtruth_num is not None
** is_fraction:  10+8+6√2
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  119 258
** answer: 6√97, groundtruth_str: 54
** groundtruth_num is not None
** is_fraction:  6√97
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  119 259
** answer: 11, groundtruth_str: 112
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 112
** wrong
**  119 260
** answer: 1.5, groundtruth_str: \frac{3}{2}
** groundtruth_num is not None
** is_fraction:  1.5
** groundtruth_num is (int, float)
** compare_two_numbers float 1.5 1.5
** correct
**  120 260
** answer: [-1,1], groundtruth_str: [0,1)
** wrong
**  120 261
** answer: 0, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -1
** wrong
**  120 262
** answer: 0.0001953125, groundtruth_str: \frac{1}{11}
** groundtruth_num is not None
** is_fraction:  0.0001953125
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0001953125 0.09090909090909091
** wrong
**  120 263
** answer: 12.81, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  12.81
** groundtruth_num is (int, float)
** compare_two_numbers int 12.81 2
** wrong
**  120 264
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  121 264
** answer: 2, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 48
** wrong
**  121 265
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  122 265
** answer: 1.5π, groundtruth_str: \frac{3\pi}{4}
** groundtruth_num is not None
** is_fraction:  1.5π
** groundtruth_num is (int, float)
** compare_two_numbers float 4.71 2.356194490192345
** wrong
**  122 266
** answer: 30, groundtruth_str: 496
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 496
** wrong
**  122 267
** answer: 30, groundtruth_str: 900
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 900
** wrong
**  122 268
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  123 268
** answer: 0, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -1
** wrong
**  123 269
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  124 269
** answer: 16, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 20
** wrong
**  124 270
** answer: -\frac{2}{7}, groundtruth_str: -\frac{5}{7}
** groundtruth_num is not None
** is_fraction:  -\frac{2}{7}
** groundtruth_num is (int, float)
** compare_two_numbers float -0.2857142857142857 -0.7142857142857143
** wrong
**  124 271
** answer: 187.5, groundtruth_str: 300
** groundtruth_num is not None
** is_fraction:  187.5
** groundtruth_num is (int, float)
** compare_two_numbers int 187.5 300
** wrong
**  124 272
** answer: 9, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 36
** wrong
**  124 273
** answer: 1, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.5
** wrong
**  124 274
** answer: -50, groundtruth_str: -50
** compare on lower
** correct
**  125 274
** answer: 0, groundtruth_str: \sqrt{3}-1
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.7320508075688773
** wrong
**  125 275
** answer: 1.25, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  1.25
** groundtruth_num is (int, float)
** compare_two_numbers int 1.25 40
** wrong
**  125 276
** answer: 0.6, groundtruth_str: \frac{3}{5}
** groundtruth_num is not None
** is_fraction:  0.6
** groundtruth_num is (int, float)
** compare_two_numbers float 0.6 0.6
** correct
**  126 276
** answer: 2, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 14
** wrong
**  126 277
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  127 277
** answer: 3√3, groundtruth_str: \frac{75\sqrt{3}}{67}
** groundtruth_num is not None
** is_fraction:  3√3
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  127 278
** answer: 18.9, groundtruth_str: \frac{1}{11}
** groundtruth_num is not None
** is_fraction:  18.9
** groundtruth_num is (int, float)
** compare_two_numbers float 18.9 0.09090909090909091
** wrong
**  127 279
** answer: 60, groundtruth_str: 160
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 160
** wrong
**  127 280
** answer: 36, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  36
** groundtruth_num is (int, float)
** compare_two_numbers int 36 12
** wrong
**  127 281
** answer: 6, groundtruth_str: 0.54
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers float 6 0.54
** wrong
**  127 282
** answer: 3.21, groundtruth_str: 3.21
** compare on lower
** correct
**  128 282
** answer: 0, groundtruth_str: 676
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 676
** wrong
**  128 283
** answer: 1600, groundtruth_str: 1600
** compare on lower
** correct
**  129 283
** answer: (-\frac{1}{6},\frac{1}{6}), groundtruth_str: (-\frac{1}{6},\frac{1}{2})
** groundtruth_num is not None
** is_fraction:  (-\frac{1}{6},\frac{1}{6})
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  129 284
** answer: 3.7, groundtruth_str: 3.7
** compare on lower
** correct
**  130 284
** answer: 13.0, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  13.0
** groundtruth_num is (int, float)
** compare_two_numbers int 13 13
** correct
**  131 284
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  132 284
** answer: 10, groundtruth_str: 990
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 990
** wrong
**  132 285
** answer: 1, groundtruth_str: \frac{3}{2}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 1.5
** wrong
**  132 286
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  133 286
** answer: 59, groundtruth_str: 59
** compare on lower
** correct
**  134 286
** answer: 291, groundtruth_str: 291
** compare on lower
** correct
**  135 286
** answer: 660, groundtruth_str: 3300
** groundtruth_num is not None
** is_fraction:  660
** groundtruth_num is (int, float)
** compare_two_numbers int 660 3300
** wrong
**  135 287
** answer: 15, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 12
** wrong
**  135 288
** answer: 111, groundtruth_str: 8{,}880
** wrong
**  135 289
** answer: 0.75, groundtruth_str: \frac{3}{8}
** groundtruth_num is not None
** is_fraction:  0.75
** groundtruth_num is (int, float)
** compare_two_numbers float 0.75 0.375
** wrong
**  135 290
** answer: 61, groundtruth_str: 69
** groundtruth_num is not None
** is_fraction:  61
** groundtruth_num is (int, float)
** compare_two_numbers int 61 69
** wrong
**  135 291
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  136 291
** answer: \frac{11}{2}, groundtruth_str: \frac{11}{2}
** compare on lower
** correct
**  137 291
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  138 291
** answer: 7, groundtruth_str: 27
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 27
** wrong
**  138 292
** answer: 4.9, groundtruth_str: \sqrt{51}
** groundtruth_num is not None
** is_fraction:  4.9
** groundtruth_num is (int, float)
** compare_two_numbers float 4.9 7.14142842854285
** wrong
**  138 293
** answer: 0.44, groundtruth_str: 0.61
** groundtruth_num is not None
** is_fraction:  0.44
** groundtruth_num is (int, float)
** compare_two_numbers float 0.44 0.61
** wrong
**  138 294
** answer: 6871, groundtruth_str: x^9+6859
** wrong
**  138 295
** answer: (-∞,0), groundtruth_str: (-\infty,0)
** wrong
**  138 296
** answer: 360, groundtruth_str: 28
** groundtruth_num is not None
** is_fraction:  360
** groundtruth_num is (int, float)
** compare_two_numbers int 360 28
** wrong
**  138 297
** answer: 81, groundtruth_str: 144
** groundtruth_num is not None
** is_fraction:  81
** groundtruth_num is (int, float)
** compare_two_numbers int 81 144
** wrong
**  138 298
** answer: 10, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 8
** wrong
**  138 299
** answer: 2041_5, groundtruth_str: 4130_5
** groundtruth_num is not None
** is_fraction:  2041_5
** groundtruth_num is (int, float)
** compare_two_numbers int 2041 41305
** wrong
**  138 300
** answer: 216, groundtruth_str: 216
** compare on lower
** correct
**  139 300
** answer: 78, groundtruth_str: 78
** compare on lower
** correct
**  140 300
** answer: -106.67, groundtruth_str: 640
** groundtruth_num is not None
** is_fraction:  -106.67
** groundtruth_num is (int, float)
** compare_two_numbers int -106.67 640
** wrong
**  140 301
** answer: 8, groundtruth_str: 4\sqrt{2}
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers float 8 5.656854249492381
** wrong
**  140 302
** answer: 1, groundtruth_str: \frac{1}{z}
** wrong
**  140 303
** answer: 34, groundtruth_str: 96
** groundtruth_num is not None
** is_fraction:  34
** groundtruth_num is (int, float)
** compare_two_numbers int 34 96
** wrong
**  140 304
** answer: -5, groundtruth_str: -4
** groundtruth_num is not None
** is_fraction:  -5
** groundtruth_num is (int, float)
** compare_two_numbers int -5 -4
** wrong
**  140 305
** answer: -6, groundtruth_str: -6
** compare on lower
** correct
**  141 305
** answer: 1, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 4
** wrong
**  141 306
** answer: -8, groundtruth_str: \begin{pmatrix}-2\-2\1\end{pmatrix}
** wrong
**  141 307
** answer: 0.5, groundtruth_str: \frac{21}{64}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.328125
** wrong
**  141 308
** answer: 900, groundtruth_str: 900
** compare on lower
** correct
**  142 308
** answer: \binom{h+w-3}{h-2}, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  \binom{h+w-3}{h-2}
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  142 309
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  143 309
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  144 309
** answer: 120, groundtruth_str: 371,043,400
** groundtruth_num is not None
** is_fraction:  120
** groundtruth_num is (int, float)
** compare_two_numbers int 120 371043400
** wrong
**  144 310
** answer: 24, groundtruth_str: 35
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 35
** wrong
**  144 311
** answer: -1, groundtruth_str: -1
** compare on lower
** correct
**  145 311
** answer: 2520, groundtruth_str: 10,080
** groundtruth_num is not None
** is_fraction:  2520
** groundtruth_num is (int, float)
** compare_two_numbers int 2520 10080
** wrong
**  145 312
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  146 312
** answer: 274, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  274
** groundtruth_num is (int, float)
** compare_two_numbers int 274 20
** wrong
**  146 313
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  147 313
** answer: 919.5, groundtruth_str: 920.25
** groundtruth_num is not None
** is_fraction:  919.5
** groundtruth_num is (int, float)
** compare_two_numbers float 919.5 920.25
** wrong
**  147 314
** answer: 0.0120, groundtruth_str: \frac{1}{83}
** groundtruth_num is not None
** is_fraction:  0.0120
** groundtruth_num is (int, float)
** compare_two_numbers float 0.012 0.012048192771084338
** wrong
**  147 315
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  148 315
** answer: 1, groundtruth_str: \frac{31}{5}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 6.2
** wrong
**  148 316
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  149 316
** answer: 0.5, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers int 0.5 0
** correct
**  150 316
** answer: \frac{7}{12}, groundtruth_str: \frac{21}{43}
** groundtruth_num is not None
** is_fraction:  \frac{7}{12}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5833333333333334 0.4883720930232558
** wrong
**  150 317
** answer: 1, groundtruth_str: -\frac{5}{2}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 -2.5
** wrong
**  150 318
** answer: 1, groundtruth_str: \sqrt{2}-1
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.41421356237309503
** wrong
**  150 319
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  151 319
** answer: 3, groundtruth_str: 3n^2-18
** wrong
**  151 320
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  152 320
** answer: 123, groundtruth_str: 123
** compare on lower
** correct
**  153 320
** answer: 714, groundtruth_str: 740
** groundtruth_num is not None
** is_fraction:  714
** groundtruth_num is (int, float)
** compare_two_numbers int 714 740
** wrong
**  153 321
** answer: 120, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  120
** groundtruth_num is (int, float)
** compare_two_numbers int 120 12
** wrong
**  153 322
** answer: 4, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 16
** wrong
**  153 323
** answer: 25, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  25
** groundtruth_num is (int, float)
** compare_two_numbers int 25 10
** wrong
**  153 324
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  154 324
** answer: 1.5, groundtruth_str: 0.5
** groundtruth_num is not None
** is_fraction:  1.5
** groundtruth_num is (int, float)
** compare_two_numbers float 1.5 0.5
** wrong
**  154 325
** answer: 0, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 4
** wrong
**  154 326
** answer: 0, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 7
** wrong
**  154 327
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  155 327
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  156 327
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  157 327
** answer: \frac{18}{49}, groundtruth_str: \frac{18}{343}
** groundtruth_num is not None
** is_fraction:  \frac{18}{49}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3673469387755102 0.052478134110787174
** wrong
**  157 328
** answer: 2, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 1
** wrong
**  157 329
** answer: 12121, groundtruth_str: 10901
** groundtruth_num is not None
** is_fraction:  12121
** groundtruth_num is (int, float)
** compare_two_numbers int 12121 10901
** wrong
**  157 330
** answer: 1.7321, groundtruth_str: \sqrt{3}
** groundtruth_num is not None
** is_fraction:  1.7321
** groundtruth_num is (int, float)
** compare_two_numbers float 1.7321 1.7320508075688772
** wrong
**  157 331
** answer: 3, groundtruth_str: \text{Friday}
** wrong
**  157 332
** answer: 7, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 6
** wrong
**  157 333
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  158 333
** answer: 13.3333, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  13.3333
** groundtruth_num is (int, float)
** compare_two_numbers int 13.3333 25
** wrong
**  158 334
** answer: 1144, groundtruth_str: 664_7
** groundtruth_num is not None
** is_fraction:  1144
** groundtruth_num is (int, float)
** compare_two_numbers int 1144 6647
** wrong
**  158 335
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  159 335
** answer: 6p^4+5p^2-4, groundtruth_str: 6p^4+5p^2-4
** compare on lower
** correct
**  160 335
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  160 336
** answer: 25, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  25
** groundtruth_num is (int, float)
** compare_two_numbers int 25 12
** wrong
**  160 337
** answer: 5958, groundtruth_str: 5937
** groundtruth_num is not None
** is_fraction:  5958
** groundtruth_num is (int, float)
** compare_two_numbers int 5958 5937
** wrong
**  160 338
** answer: 30, groundtruth_str: 23
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 23
** wrong
**  160 339
** answer: 1, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 11
** wrong
**  160 340
** answer: 0.5, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.5
** correct
**  161 340
** answer: 3.125, groundtruth_str: \frac{25}{8}
** groundtruth_num is not None
** is_fraction:  3.125
** groundtruth_num is (int, float)
** compare_two_numbers float 3.125 3.125
** correct
**  162 340
** answer: 32, groundtruth_str: 41
** groundtruth_num is not None
** is_fraction:  32
** groundtruth_num is (int, float)
** compare_two_numbers int 32 41
** wrong
**  162 341
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  162 342
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  163 342
** answer: 1.5, groundtruth_str: -\frac{1}{2}
** groundtruth_num is not None
** is_fraction:  1.5
** groundtruth_num is (int, float)
** compare_two_numbers float 1.5 -0.5
** wrong
**  163 343
** answer: 71, groundtruth_str: 71
** compare on lower
** correct
**  164 343
** answer: -\frac{1}{3}, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  -\frac{1}{3}
** groundtruth_num is (int, float)
** compare_two_numbers int -0.3333333333333333 2
** wrong
**  164 344
** answer: 4, groundtruth_str: -\sqrt{3}
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers float 4 -1.7320508075688772
** wrong
**  164 345
** answer: 0.03125, groundtruth_str: \frac{1}{32}
** groundtruth_num is not None
** is_fraction:  0.03125
** groundtruth_num is (int, float)
** compare_two_numbers float 0.03125 0.03125
** correct
**  165 345
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  166 345
** answer: 4, groundtruth_str: \frac{16}{3}
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers float 4 5.333333333333333
** wrong
**  166 346
** answer: 360, groundtruth_str: 360
** compare on lower
** correct
**  167 346
** answer: √3, groundtruth_str: 3\pm2\sqrt{2}
** wrong
**  167 347
** answer: 24.0, groundtruth_str: 1152
** groundtruth_num is not None
** is_fraction:  24.0
** groundtruth_num is (int, float)
** compare_two_numbers int 24 1152
** wrong
**  167 348
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  168 348
** answer: 0.0151, groundtruth_str: \frac{72}{425}
** groundtruth_num is not None
** is_fraction:  0.0151
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0151 0.16941176470588235
** wrong
**  168 349
** answer: 2.0, groundtruth_str: (-\frac{8}{3},\frac{4}{3},-\frac{1}{3})
** groundtruth_num is not None
** is_fraction:  2.0
** groundtruth_num is (int, float)
** compare_two_numbers float 2 -2.6666666666666665
** wrong
**  168 350
** answer: 292.1, groundtruth_str: 62.8
** groundtruth_num is not None
** is_fraction:  292.1
** groundtruth_num is (int, float)
** compare_two_numbers float 292.1 62.8
** wrong
**  168 351
** answer: 26, groundtruth_str: \begin{pmatrix}-3\11\7\end{pmatrix}
** wrong
**  168 352
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  169 352
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  170 352
** answer: 4, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 20
** wrong
**  170 353
** answer: 18, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 20
** wrong
**  170 354
** answer: 1, groundtruth_str: \frac{1}{5120}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.0001953125
** wrong
**  170 355
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  171 355
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  172 355
** answer: 16,341.19, groundtruth_str: 16,386.16
** groundtruth_num is not None
** is_fraction:  16,341.19
** groundtruth_num is (int, float)
** compare_two_numbers float 16341.19 16386.16
** wrong
**  172 356
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  173 356
** answer: 337.5, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  337.5
** groundtruth_num is (int, float)
** compare_two_numbers int 337.5 9
** wrong
**  173 357
** answer: odd, groundtruth_str: \text{even}
** wrong
**  173 358
** answer: -13.0625, groundtruth_str: \frac{19}{4}
** groundtruth_num is not None
** is_fraction:  -13.0625
** groundtruth_num is (int, float)
** compare_two_numbers float -13.0625 4.75
** wrong
**  173 359
** answer: 1, groundtruth_str: x^2+2
** wrong
**  173 360
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  174 360
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  175 360
** answer: \frac{1}{2}, groundtruth_str: \frac{2}{5}
** groundtruth_num is not None
** is_fraction:  \frac{1}{2}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.4
** wrong
**  175 361
** answer: C, groundtruth_str: \text{(C)}
** wrong
**  175 362
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  176 362
** answer: -0.143, groundtruth_str: \frac{3}{7}
** groundtruth_num is not None
** is_fraction:  -0.143
** groundtruth_num is (int, float)
** compare_two_numbers float -0.143 0.42857142857142855
** wrong
**  176 363
** answer: 1, groundtruth_str: \text{Saturday}
** wrong
**  176 364
** answer: √37, groundtruth_str: \sqrt{85}
** groundtruth_num is not None
** is_fraction:  √37
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  176 365
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  177 365
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  178 365
** answer: \frac{5}{12}, groundtruth_str: \frac{23}{36}
** groundtruth_num is not None
** is_fraction:  \frac{5}{12}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.4166666666666667 0.6388888888888888
** wrong
**  178 366
** answer: 0, groundtruth_str: [0,\frac{343}{27}]
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 0
** correct
**  179 366
** answer: 567, groundtruth_str: 567
** compare on lower
** correct
**  180 366
** answer: 34, groundtruth_str: 34
** compare on lower
** correct
**  181 366
** answer: 67, groundtruth_str: 55
** groundtruth_num is not None
** is_fraction:  67
** groundtruth_num is (int, float)
** compare_two_numbers int 67 55
** wrong
**  181 367
** answer: \frac{\sqrt{2}}{7}, groundtruth_str: -\frac{17}{19}
** groundtruth_num is not None
** is_fraction:  \frac{\sqrt{2}}{7}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.20203050891044216 -0.8947368421052632
** wrong
**  181 368
** answer: 4, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 6
** wrong
**  181 369
** answer: 2, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 1
** wrong
**  181 370
** answer: 3.25, groundtruth_str: 3.25
** compare on lower
** correct
**  182 370
** answer: 1, groundtruth_str: 6x
** wrong
**  182 371
** answer: 8x, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  8x
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  182 372
** answer: 0.5, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.5
** correct
**  183 372
** answer: 1, groundtruth_str: 2\sqrt{3}+3
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 6.464101615137754
** wrong
**  183 373
** answer: 64-16\pi, groundtruth_str: 8\pi-16
** groundtruth_num is not None
** is_fraction:  64-16\pi
** groundtruth_num is (int, float)
** compare_two_numbers float 13.759999999999998 9.132741228718347
** wrong
**  183 374
** answer: -\frac{3}{4}, groundtruth_str: -\frac{49}{12}
** groundtruth_num is not None
** is_fraction:  -\frac{3}{4}
** groundtruth_num is (int, float)
** compare_two_numbers float -0.75 -4.083333333333333
** wrong
**  183 375
** answer: 8, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 6
** wrong
**  183 376
** answer: 36, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  36
** groundtruth_num is (int, float)
** compare_two_numbers int 36 48
** wrong
**  183 377
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  184 377
** answer: 1820, groundtruth_str: 210
** groundtruth_num is not None
** is_fraction:  1820
** groundtruth_num is (int, float)
** compare_two_numbers int 1820 210
** wrong
**  184 378
** answer: 5, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 17
** wrong
**  184 379
** answer: 2, groundtruth_str: 1000
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 1000
** wrong
**  184 380
** answer: 307, groundtruth_str: 22
** groundtruth_num is not None
** is_fraction:  307
** groundtruth_num is (int, float)
** compare_two_numbers int 307 22
** wrong
**  184 381
** answer: [0,∞), groundtruth_str: (-5,\infty)
** wrong
**  184 382
** answer: 2, groundtruth_str: \frac{39}{64}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 0.609375
** wrong
**  184 383
** answer: 5.28, groundtruth_str: 41
** groundtruth_num is not None
** is_fraction:  5.28
** groundtruth_num is (int, float)
** compare_two_numbers int 5.28 41
** wrong
**  184 384
** answer: -5, groundtruth_str: \frac{3}{2}
** groundtruth_num is not None
** is_fraction:  -5
** groundtruth_num is (int, float)
** compare_two_numbers float -5 1.5
** wrong
**  184 385
** answer: 11, groundtruth_str: 89
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 89
** wrong
**  184 386
** answer: \frac{36}{121}, groundtruth_str: \frac{36}{121}
** compare on lower
** correct
**  185 386
** answer: π+8, groundtruth_str: 6\pi+2
** groundtruth_num is not None
** is_fraction:  π+8
** groundtruth_num is (int, float)
** compare_two_numbers float 11.14 20.84955592153876
** wrong
**  185 387
** answer: 1001, groundtruth_str: 10090
** groundtruth_num is not None
** is_fraction:  1001
** groundtruth_num is (int, float)
** compare_two_numbers int 1001 10090
** wrong
**  185 388
** answer: 1, groundtruth_str: \frac{1}{3}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.3333333333333333
** wrong
**  185 389
** answer: 360, groundtruth_str: 12441600
** groundtruth_num is not None
** is_fraction:  360
** groundtruth_num is (int, float)
** compare_two_numbers int 360 12441600
** wrong
**  185 390
** answer: 30.72, groundtruth_str: 11.5
** groundtruth_num is not None
** is_fraction:  30.72
** groundtruth_num is (int, float)
** compare_two_numbers float 30.72 11.5
** wrong
**  185 391
** answer: 2, groundtruth_str: 34
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 34
** wrong
**  185 392
** answer: 0.1111, groundtruth_str: \frac{1}{9}
** groundtruth_num is not None
** is_fraction:  0.1111
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1111 0.1111111111111111
** wrong
**  185 393
** answer: \begin{pmatrix}-2\3\-1\end{pmatrix}, groundtruth_str: (7,21,35)
** groundtruth_num is not None
** is_fraction:  \begin{pmatrix}-2\3\-1\end{pmatrix}
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  185 394
** answer: -0.5, groundtruth_str: -\frac{1}{2}
** groundtruth_num is not None
** is_fraction:  -0.5
** groundtruth_num is (int, float)
** compare_two_numbers float -0.5 -0.5
** correct
**  186 394
** answer: 65, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  65
** groundtruth_num is (int, float)
** compare_two_numbers int 65 40
** wrong
**  186 395
** answer: 2, groundtruth_str: -2
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 -2
** wrong
**  186 396
** answer: 25, groundtruth_str: 43
** groundtruth_num is not None
** is_fraction:  25
** groundtruth_num is (int, float)
** compare_two_numbers int 25 43
** wrong
**  186 397
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  187 397
** answer: 0, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 6
** wrong
**  187 398
** answer: 24310, groundtruth_str: 4495
** groundtruth_num is not None
** is_fraction:  24310
** groundtruth_num is (int, float)
** compare_two_numbers int 24310 4495
** wrong
**  187 399
** answer: 24456.92, groundtruth_str: 348
** groundtruth_num is not None
** is_fraction:  24456.92
** groundtruth_num is (int, float)
** compare_two_numbers int 24456.92 348
** wrong
**  187 400
** answer: 1, groundtruth_str: \frac{1}{8}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.125
** wrong
**  187 401
** answer: 6, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 60
** wrong
**  187 402
** answer: 210, groundtruth_str: 210
** compare on lower
** correct
**  188 402
** answer: 6,720, groundtruth_str: 1680
** groundtruth_num is not None
** is_fraction:  6,720
** groundtruth_num is (int, float)
** compare_two_numbers int 6720 1680
** wrong
**  188 403
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  189 403
** answer: 336, groundtruth_str: 336
** compare on lower
** correct
**  190 403
** answer: √8016217, groundtruth_str: 4014013
** groundtruth_num is not None
** is_fraction:  √8016217
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  190 404
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  191 404
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  192 404
** answer: 204, groundtruth_str: 156
** groundtruth_num is not None
** is_fraction:  204
** groundtruth_num is (int, float)
** compare_two_numbers int 204 156
** wrong
**  192 405
** answer: 26, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  26
** groundtruth_num is (int, float)
** compare_two_numbers int 26 13
** wrong
**  192 406
** answer: 76.80, groundtruth_str: 76.80
** compare on lower
** correct
**  193 406
** answer: 6, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 13
** wrong
**  193 407
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  193 408
** answer: 3, groundtruth_str: 102
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 102
** wrong
**  193 409
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  194 409
** answer: 10, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 20
** wrong
**  194 410
** answer: 5999, groundtruth_str: 5999
** compare on lower
** correct
**  195 410
** answer: 1, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 6
** wrong
**  195 411
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  196 411
** answer: 1, groundtruth_str: \frac{1}{3}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.3333333333333333
** wrong
**  196 412
** answer: 0, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 1
** wrong
**  196 413
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  197 413
** answer: 0, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 8
** wrong
**  197 414
** answer: 10, groundtruth_str: 180
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 180
** wrong
**  197 415
** answer: 10x, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  10x
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  197 416
** answer: 0.752, groundtruth_str: \frac{8}{17}
** groundtruth_num is not None
** is_fraction:  0.752
** groundtruth_num is (int, float)
** compare_two_numbers float 0.752 0.47058823529411764
** wrong
**  197 417
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  198 417
** answer: 355.0, groundtruth_str: 210
** groundtruth_num is not None
** is_fraction:  355.0
** groundtruth_num is (int, float)
** compare_two_numbers int 355 210
** wrong
**  198 418
** answer: 5, groundtruth_str: -30
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 -30
** wrong
**  198 419
** answer: 0, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 6
** wrong
**  198 420
** answer: \frac{13}{30}, groundtruth_str: \frac{13}{30}
** compare on lower
** correct
**  199 420
** answer: 35, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  35
** groundtruth_num is (int, float)
** compare_two_numbers int 35 45
** wrong
**  199 421
** answer: 0, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 10
** wrong
**  199 422
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  200 422
** answer: 0, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 60
** wrong
**  200 423
** answer: 1105.67, groundtruth_str: 1\frac{1}{10}
** groundtruth_num is not None
** is_fraction:  1105.67
** groundtruth_num is (int, float)
** compare_two_numbers float 1105.67 1.1
** wrong
**  200 424
** answer: 1, groundtruth_str: -668i
** wrong
**  200 425
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  201 425
** answer: 9.0, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  9.0
** groundtruth_num is (int, float)
** compare_two_numbers int 9 9
** correct
**  202 425
** answer: 3, groundtruth_str: \frac{24}{5}
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers float 3 4.8
** wrong
**  202 426
** answer: 41, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  41
** groundtruth_num is (int, float)
** compare_two_numbers int 41 40
** wrong
**  202 427
** answer: 4, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 6
** wrong
**  202 428
** answer: 24, groundtruth_str: 64
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 64
** wrong
**  202 429
** answer: 2.5, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  2.5
** groundtruth_num is (int, float)
** compare_two_numbers int 2.5 5
** wrong
**  202 430
** answer: \frac{3}{8}, groundtruth_str: \frac{1}{16}
** groundtruth_num is not None
** is_fraction:  \frac{3}{8}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.375 0.0625
** wrong
**  202 431
** answer: 31, groundtruth_str: 31
** compare on lower
** correct
**  203 431
** answer: 0, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 9
** wrong
**  203 432
** answer: 38, groundtruth_str: 38
** compare on lower
** correct
**  204 432
** answer: 4, groundtruth_str: \frac{25}{2}
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers float 4 12.5
** wrong
**  204 433
** answer: 0.10, groundtruth_str: 0.03
** groundtruth_num is not None
** is_fraction:  0.10
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1 0.03
** wrong
**  204 434
** answer: 0.5, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.5
** correct
**  205 434
** answer: 5, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 1
** wrong
**  205 435
** answer: \frac{4}{3}, groundtruth_str: \frac{4}{3}
** compare on lower
** correct
**  206 435
** answer: 23, groundtruth_str: 97
** groundtruth_num is not None
** is_fraction:  23
** groundtruth_num is (int, float)
** compare_two_numbers int 23 97
** wrong
**  206 436
** answer: 5, groundtruth_str: \sqrt{}5
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers float 5 2.23606797749979
** wrong
**  206 437
** answer: 10.0, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  10.0
** groundtruth_num is (int, float)
** compare_two_numbers int 10 10
** correct
**  207 437
** answer: -2a/b, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  -2a/b
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  207 438
** answer: 882, groundtruth_str: 162
** groundtruth_num is not None
** is_fraction:  882
** groundtruth_num is (int, float)
** compare_two_numbers int 882 162
** wrong
**  207 439
** answer: 6, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 12
** wrong
**  207 440
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  208 440
** answer: -23, groundtruth_str: -5
** groundtruth_num is not None
** is_fraction:  -23
** groundtruth_num is (int, float)
** compare_two_numbers int -23 -5
** wrong
**  208 441
** answer: 333, groundtruth_str: 333
** compare on lower
** correct
**  209 441
** answer: 3, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 5
** wrong
**  209 442
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  210 442
** answer: 6, groundtruth_str: \sqrt{66}
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers float 6 8.12403840463596
** wrong
**  210 443
** answer: 59, groundtruth_str: -376
** groundtruth_num is not None
** is_fraction:  59
** groundtruth_num is (int, float)
** compare_two_numbers int 59 -376
** wrong
**  210 444
** answer: 0.9, groundtruth_str: \frac{9}{10}
** groundtruth_num is not None
** is_fraction:  0.9
** groundtruth_num is (int, float)
** compare_two_numbers float 0.9 0.9
** correct
**  211 444
** answer: 1, groundtruth_str: -\frac{1}{16}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 -0.0625
** wrong
**  211 445
** answer: 20, groundtruth_str: 10\;\text{edges}
** wrong
**  211 446
** answer: 0.5, groundtruth_str: -2+\sqrt{3}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 -0.2679491924311227
** wrong
**  211 447
** answer: 6, groundtruth_str: 52
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 52
** wrong
**  211 448
** answer: 12, groundtruth_str: 420
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 420
** wrong
**  211 449
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  212 449
** answer: 225, groundtruth_str: 225
** compare on lower
** correct
**  213 449
** answer: 51, groundtruth_str: 66
** groundtruth_num is not None
** is_fraction:  51
** groundtruth_num is (int, float)
** compare_two_numbers int 51 66
** wrong
**  213 450
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  214 450
** answer: 0.05, groundtruth_str: \frac{11}{221}
** groundtruth_num is not None
** is_fraction:  0.05
** groundtruth_num is (int, float)
** compare_two_numbers float 0.05 0.049773755656108594
** wrong
**  214 451
** answer: ?, groundtruth_str: 254
** groundtruth_num is not None
** is_fraction:  ?
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  214 452
** answer: 10, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 15
** wrong
**  214 453
** answer: 2, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 3
** wrong
**  214 454
** answer: 4, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 3
** wrong
**  214 455
** answer: 107, groundtruth_str: 107
** compare on lower
** correct
**  215 455
** answer: 3, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 19
** wrong
**  215 456
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  216 456
** answer: 1, groundtruth_str: \frac{2}{3}\sqrt{3}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 1.1547005383792515
** wrong
**  216 457
** answer: 0, groundtruth_str: \frac{70}{39}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 1.794871794871795
** wrong
**  216 458
** answer: 8641, groundtruth_str: 18,107
** groundtruth_num is not None
** is_fraction:  8641
** groundtruth_num is (int, float)
** compare_two_numbers int 8641 18107
** wrong
**  216 459
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  217 459
** answer: 1188, groundtruth_str: 1188
** compare on lower
** correct
**  218 459
** answer: 240, groundtruth_str: 180
** groundtruth_num is not None
** is_fraction:  240
** groundtruth_num is (int, float)
** compare_two_numbers int 240 180
** wrong
**  218 460
** answer: 225, groundtruth_str: 200
** groundtruth_num is not None
** is_fraction:  225
** groundtruth_num is (int, float)
** compare_two_numbers int 225 200
** wrong
**  218 461
** answer: 3√3, groundtruth_str: 6\sqrt{3}
** groundtruth_num is not None
** is_fraction:  3√3
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  218 462
** answer: 0, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 3
** wrong
**  218 463
** answer: 10.62, groundtruth_str: 140
** groundtruth_num is not None
** is_fraction:  10.62
** groundtruth_num is (int, float)
** compare_two_numbers int 10.62 140
** wrong
**  218 464
** answer: 3, groundtruth_str: \frac{47}{24}
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers float 3 1.9583333333333333
** wrong
**  218 465
** answer: \frac{1}{3}, groundtruth_str: \frac{1}{3}
** compare on lower
** correct
**  219 465
** answer: 0.5, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.5
** correct
**  220 465
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  221 465
** answer: 1:03, groundtruth_str: \text{1:03PM}
** wrong
**  221 466
** answer: \frac{1}{3}, groundtruth_str: \frac{2}{3}
** groundtruth_num is not None
** is_fraction:  \frac{1}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3333333333333333 0.6666666666666666
** wrong
**  221 467
** answer: 36, groundtruth_str: 29700
** groundtruth_num is not None
** is_fraction:  36
** groundtruth_num is (int, float)
** compare_two_numbers int 36 29700
** wrong
**  221 468
** answer: 0.026316, groundtruth_str: \frac{1}{144}
** groundtruth_num is not None
** is_fraction:  0.026316
** groundtruth_num is (int, float)
** compare_two_numbers float 0.026316 0.006944444444444444
** wrong
**  221 469
** answer: 15, groundtruth_str: 2x^2-2x+3
** wrong
**  221 470
** answer: 4, groundtruth_str: \begin{pmatrix}6\3\0\end{pmatrix}
** wrong
**  221 471
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  222 471
** answer: 121, groundtruth_str: 120
** groundtruth_num is not None
** is_fraction:  121
** groundtruth_num is (int, float)
** compare_two_numbers int 121 120
** wrong
**  222 472
** answer: -150, groundtruth_str: -150
** compare on lower
** correct
**  223 472
** answer: 75, groundtruth_str: 51
** groundtruth_num is not None
** is_fraction:  75
** groundtruth_num is (int, float)
** compare_two_numbers int 75 51
** wrong
**  223 473
** answer: 8, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 7
** wrong
**  223 474
** answer: 9901, groundtruth_str: 9901
** compare on lower
** correct
**  224 474
** answer: -1.25, groundtruth_str: -2
** groundtruth_num is not None
** is_fraction:  -1.25
** groundtruth_num is (int, float)
** compare_two_numbers int -1.25 -2
** wrong
**  224 475
** answer: 3, groundtruth_str: \frac{2}{3}
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers float 3 0.6666666666666666
** wrong
**  224 476
** answer: 2,4,9, groundtruth_str: 39
** groundtruth_num is not None
** is_fraction:  2,4,9
** groundtruth_num is (int, float)
** compare_two_numbers int 2 39
** wrong
**  224 477
** answer: -2,2, groundtruth_str: \frac{7}{3}
** groundtruth_num is not None
** is_fraction:  -2,2
** groundtruth_num is (int, float)
** compare_two_numbers float -2 2.3333333333333335
** wrong
**  224 478
** answer: 1.0, groundtruth_str: (2,4)
** groundtruth_num is not None
** is_fraction:  1.0
** groundtruth_num is (int, float)
** compare_two_numbers int 1 24
** wrong
**  224 479
** answer: 233, groundtruth_str: 233
** compare on lower
** correct
**  225 479
** answer: 8/5t, groundtruth_str: \frac{8t}{3}
** wrong
**  225 480
** answer: 720, groundtruth_str: 720
** compare on lower
** correct
**  226 480
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  227 480
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  227 481
** answer: \frac{-2}{3}, groundtruth_str: \frac{5}{6}
** groundtruth_num is not None
** is_fraction:  \frac{-2}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float -0.6666666666666666 0.8333333333333334
** wrong
**  227 482
** answer: \frac{\pi}{6}, groundtruth_str: \frac{\pi}{3}
** groundtruth_num is not None
** is_fraction:  \frac{\pi}{6}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5233333333333333 1.0471975511965979
** wrong
**  227 483
** answer: 7, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 25
** wrong
**  227 484
** answer: 0.1184, groundtruth_str: \frac{12}{35}
** groundtruth_num is not None
** is_fraction:  0.1184
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1184 0.34285714285714286
** wrong
**  227 485
** answer: 1.05, groundtruth_str: \frac{21}{20}
** groundtruth_num is not None
** is_fraction:  1.05
** groundtruth_num is (int, float)
** compare_two_numbers float 1.05 1.05
** correct
**  228 485
** answer: 25, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  25
** groundtruth_num is (int, float)
** compare_two_numbers int 25 9
** wrong
**  228 486
** answer: 1.0, groundtruth_str: 1.3
** groundtruth_num is not None
** is_fraction:  1.0
** groundtruth_num is (int, float)
** compare_two_numbers float 1 1.3
** wrong
**  228 487
** answer: 6+9i, groundtruth_str: 6+9i
** compare on lower
** correct
**  229 487
** answer: 17, groundtruth_str: 51
** groundtruth_num is not None
** is_fraction:  17
** groundtruth_num is (int, float)
** compare_two_numbers int 17 51
** wrong
**  229 488
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  230 488
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  231 488
** answer: 40, groundtruth_str: 40_9
** groundtruth_num is not None
** is_fraction:  40
** groundtruth_num is (int, float)
** compare_two_numbers int 40 409
** wrong
**  231 489
** answer: -120, groundtruth_str: -120
** compare on lower
** correct
**  232 489
** answer: -i\sqrt{61}, groundtruth_str: 4\sqrt{3}+2i
** groundtruth_num is not None
** is_fraction:  -i\sqrt{61}
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  232 490
** answer: 2, groundtruth_str: 29
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 29
** wrong
**  232 491
** answer: 180, groundtruth_str: 210
** groundtruth_num is not None
** is_fraction:  180
** groundtruth_num is (int, float)
** compare_two_numbers int 180 210
** wrong
**  232 492
** answer: (2,-1,1), groundtruth_str: \begin{pmatrix}-1/3\2/3\5/3\end{pmatrix}
** wrong
**  232 493
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  233 493
** answer: 0.28, groundtruth_str: \frac{24}{25}
** groundtruth_num is not None
** is_fraction:  0.28
** groundtruth_num is (int, float)
** compare_two_numbers float 0.28 0.96
** wrong
**  233 494
** answer: 2, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 26
** wrong
**  233 495
** answer: 2,-2, groundtruth_str: -1,2
** groundtruth_num is not None
** is_fraction:  2,-2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 -12
** wrong
**  233 496
** answer: 445, groundtruth_str: 350
** groundtruth_num is not None
** is_fraction:  445
** groundtruth_num is (int, float)
** compare_two_numbers int 445 350
** wrong
**  233 497
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  234 497
** answer: 0.1111111111111111, groundtruth_str: \frac{1}{9}
** groundtruth_num is not None
** is_fraction:  0.1111111111111111
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1111111111111111 0.1111111111111111
** correct
**  235 497
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  236 497
** answer: 31, groundtruth_str: 31
** compare on lower
** correct
**  237 497
** answer: \frac{3}{4},-\frac{3}{4}, groundtruth_str: \frac{3}{4},-\frac{3}{4}
** compare on lower
** correct
**  238 497
** answer: 180, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  180
** groundtruth_num is (int, float)
** compare_two_numbers int 180 6
** wrong
**  238 498
** answer: 1, groundtruth_str: 272
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 272
** wrong
**  238 499
** answer: 20, groundtruth_str: \text{June20}
** wrong
**  238 500
** answer: 64, groundtruth_str: 576
** groundtruth_num is not None
** is_fraction:  64
** groundtruth_num is (int, float)
** compare_two_numbers int 64 576
** wrong
**  238 501
** answer: (0,0), groundtruth_str: (2,3)
** groundtruth_num is not None
** is_fraction:  (0,0)
** groundtruth_num is (int, float)
** compare_two_numbers int 0 23
** wrong
**  238 502
** answer: \sqrt{3}, groundtruth_str: \sqrt{3}
** compare on lower
** correct
**  239 502
** answer: 4, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 12
** wrong
**  239 503
** answer: -3, groundtruth_str: \begin{pmatrix}7&1\-1&-3\end{pmatrix}
** wrong
**  239 504
** answer: -1,1, groundtruth_str: -4,-2,-1,1,2,4
** groundtruth_num is not None
** is_fraction:  -1,1
** groundtruth_num is (int, float)
** compare_two_numbers int -1 -1130
** wrong
**  239 505
** answer: 0, groundtruth_str: 100
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 100
** wrong
**  239 506
** answer: 841, groundtruth_str: 841
** compare on lower
** correct
**  240 506
** answer: 98x^2-266x+361, groundtruth_str: 361
** groundtruth_num is not None
** is_fraction:  98x^2-266x+361
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  240 507
** answer: 2, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 50
** wrong
**  240 508
** answer: 5.0, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  5.0
** groundtruth_num is (int, float)
** compare_two_numbers int 5 5
** correct
**  241 508
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  242 508
** answer: -36, groundtruth_str: 28
** groundtruth_num is not None
** is_fraction:  -36
** groundtruth_num is (int, float)
** compare_two_numbers int -36 28
** wrong
**  242 509
** answer: 499, groundtruth_str: 499
** compare on lower
** correct
**  243 509
** answer: \frac{24}{105}, groundtruth_str: \frac{209}{210}
** groundtruth_num is not None
** is_fraction:  \frac{24}{105}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.22857142857142856 0.9952380952380953
** wrong
**  243 510
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  243 511
** answer: 868.8, groundtruth_str: 868.8
** compare on lower
** correct
**  244 511
** answer: 62, groundtruth_str: 118
** groundtruth_num is not None
** is_fraction:  62
** groundtruth_num is (int, float)
** compare_two_numbers int 62 118
** wrong
**  244 512
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  245 512
** answer: undefined, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  undefined
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  245 513
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  246 513
** answer: 110.36, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  110.36
** groundtruth_num is (int, float)
** compare_two_numbers int 110.36 1
** wrong
**  246 514
** answer: D, groundtruth_str: \text{C,E}
** wrong
**  246 515
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  247 515
** answer: 8090, groundtruth_str: 8000
** groundtruth_num is not None
** is_fraction:  8090
** groundtruth_num is (int, float)
** compare_two_numbers int 8090 8000
** wrong
**  247 516
** answer: 495, groundtruth_str: 495
** compare on lower
** correct
**  248 516
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  249 516
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  249 517
** answer: 48, groundtruth_str: 192
** groundtruth_num is not None
** is_fraction:  48
** groundtruth_num is (int, float)
** compare_two_numbers int 48 192
** wrong
**  249 518
** answer: 1296, groundtruth_str: 1681
** groundtruth_num is not None
** is_fraction:  1296
** groundtruth_num is (int, float)
** compare_two_numbers int 1296 1681
** wrong
**  249 519
** answer: 2310, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  2310
** groundtruth_num is (int, float)
** compare_two_numbers int 2310 17
** wrong
**  249 520
** answer: 110, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  110
** groundtruth_num is (int, float)
** compare_two_numbers int 110 20
** wrong
**  249 521
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  250 521
** answer: (4,-7), groundtruth_str: (4,-7)
** compare on lower
** correct
**  251 521
** answer: 6, groundtruth_str: (-6,0)
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 -60
** wrong
**  251 522
** answer: 16, groundtruth_str: -8192
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 -8192
** wrong
**  251 523
** answer: -0.1349, groundtruth_str: 2,6
** groundtruth_num is not None
** is_fraction:  -0.1349
** groundtruth_num is (int, float)
** compare_two_numbers int -0.1349 26
** wrong
**  251 524
** answer: 1396.0, groundtruth_str: 1260
** groundtruth_num is not None
** is_fraction:  1396.0
** groundtruth_num is (int, float)
** compare_two_numbers int 1396 1260
** wrong
**  251 525
** answer: 120, groundtruth_str: 720
** groundtruth_num is not None
** is_fraction:  120
** groundtruth_num is (int, float)
** compare_two_numbers int 120 720
** wrong
**  251 526
** answer: \frac{4}{3}, groundtruth_str: \frac{4}{3}
** compare on lower
** correct
**  252 526
** answer: -6, groundtruth_str: -3\sqrt{5}-5
** groundtruth_num is not None
** is_fraction:  -6
** groundtruth_num is (int, float)
** compare_two_numbers float -6 -11.70820393249937
** wrong
**  252 527
** answer: 4, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 6
** wrong
**  252 528
** answer: 3.605551275463989, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  3.605551275463989
** groundtruth_num is (int, float)
** compare_two_numbers int 3.605551275463989 25
** wrong
**  252 529
** answer: 23, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  23
** groundtruth_num is (int, float)
** compare_two_numbers int 23 15
** wrong
**  252 530
** answer: 9, groundtruth_str: \frac{2\sqrt{149}}{3}
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers float 9 8.137703743822469
** wrong
**  252 531
** answer: 3, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 8
** wrong
**  252 532
** answer: 9, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 8
** wrong
**  252 533
** answer: 0, groundtruth_str: -9
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -9
** wrong
**  252 534
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  253 534
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  254 534
** answer: 6, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 3
** wrong
**  254 535
** answer: 5, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 10
** wrong
**  254 536
** answer: D, groundtruth_str: \text{E}
** groundtruth_num is not None
** is_fraction:  D
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  254 537
** answer: 0, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 2
** wrong
**  254 538
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  255 538
** answer: -2x+20, groundtruth_str: -2x+20
** compare on lower
** correct
**  256 538
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  257 538
** answer: 2004, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  2004
** groundtruth_num is (int, float)
** compare_two_numbers int 2004 0
** wrong
**  257 539
** answer: 140, groundtruth_str: 100
** groundtruth_num is not None
** is_fraction:  140
** groundtruth_num is (int, float)
** compare_two_numbers int 140 100
** wrong
**  257 540
** answer: 0, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 1
** wrong
**  257 541
** answer: 0.8, groundtruth_str: \frac{4}{5}
** groundtruth_num is not None
** is_fraction:  0.8
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8 0.8
** correct
**  258 541
** answer: 4, groundtruth_str: \frac{4}{3}
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers float 4 1.3333333333333333
** wrong
**  258 542
** answer: 153, groundtruth_str: 41
** groundtruth_num is not None
** is_fraction:  153
** groundtruth_num is (int, float)
** compare_two_numbers int 153 41
** wrong
**  258 543
** answer: 2x^3-10x^2-24x+72, groundtruth_str: 2x^3-10x^2-24x+72
** compare on lower
** correct
**  259 543
** answer: 30, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 17
** wrong
**  259 544
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  260 544
** answer: 1, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 4
** wrong
**  260 545
** answer: 0, groundtruth_str: \begin{pmatrix}1/2\1/2\1/2\end{pmatrix}
** wrong
**  260 546
** answer: 1, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 3
** wrong
**  260 547
** answer: 2, groundtruth_str: \frac{108}{25}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 4.32
** wrong
**  260 548
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  261 548
** answer: 1, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 4
** wrong
**  261 549
** answer: (1,4), groundtruth_str: (4,10)
** groundtruth_num is not None
** is_fraction:  (1,4)
** groundtruth_num is (int, float)
** compare_two_numbers int 1 410
** wrong
**  261 550
** answer: -12.5, groundtruth_str: -10
** groundtruth_num is not None
** is_fraction:  -12.5
** groundtruth_num is (int, float)
** compare_two_numbers int -12.5 -10
** wrong
**  261 551
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  262 551
** answer: 0.2222222222222222, groundtruth_str: \frac{2}{9}
** groundtruth_num is not None
** is_fraction:  0.2222222222222222
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2222222222222222 0.2222222222222222
** correct
**  263 551
** answer: 108, groundtruth_str: 144
** groundtruth_num is not None
** is_fraction:  108
** groundtruth_num is (int, float)
** compare_two_numbers int 108 144
** wrong
**  263 552
** answer: \frac{11}{36}, groundtruth_str: \frac{11}{36}
** compare on lower
** correct
**  264 552
** answer: 11, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 16
** wrong
**  264 553
** answer: 12-x, groundtruth_str: 4(3-x)(3+x)
** wrong
**  264 554
** answer: 0, groundtruth_str: (1,2,3)
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 123
** wrong
**  264 555
** answer: \frac{-49}{40}, groundtruth_str: -56
** groundtruth_num is not None
** is_fraction:  \frac{-49}{40}
** groundtruth_num is (int, float)
** compare_two_numbers int -1.225 -56
** wrong
**  264 556
** answer: 1001, groundtruth_str: 1016
** groundtruth_num is not None
** is_fraction:  1001
** groundtruth_num is (int, float)
** compare_two_numbers int 1001 1016
** wrong
**  264 557
** answer: 2, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 5
** wrong
**  264 558
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  265 558
** answer: 1, groundtruth_str: \sqrt{2}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 1.4142135623730951
** wrong
**  265 559
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  266 559
** answer: -44, groundtruth_str: -102
** groundtruth_num is not None
** is_fraction:  -44
** groundtruth_num is (int, float)
** compare_two_numbers int -44 -102
** wrong
**  266 560
** answer: 720, groundtruth_str: 360
** groundtruth_num is not None
** is_fraction:  720
** groundtruth_num is (int, float)
** compare_two_numbers int 720 360
** wrong
**  266 561
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  267 561
** answer: 7(x-3)(x+3), groundtruth_str: 7(x+3)(x-3)
** wrong
**  267 562
** answer: undefined, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  undefined
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  267 563
** answer: 18.8888888889\ldots, groundtruth_str: 25\pi
** groundtruth_num is not None
** is_fraction:  18.8888888889\ldots
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  267 564
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  268 564
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  269 564
** answer: 0, groundtruth_str: -\frac{5}{4}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 -1.25
** wrong
**  269 565
** answer: 2, groundtruth_str: 224
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 224
** wrong
**  269 566
** answer: 5760, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  5760
** groundtruth_num is (int, float)
** compare_two_numbers int 5760 3
** wrong
**  269 567
** answer: 0.25, groundtruth_str: 432
** groundtruth_num is not None
** is_fraction:  0.25
** groundtruth_num is (int, float)
** compare_two_numbers int 0.25 432
** wrong
**  269 568
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  270 568
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  271 568
** answer: Nosolution, groundtruth_str: -\frac{11}{2}
** groundtruth_num is not None
** is_fraction:  Nosolution
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  271 569
** answer: 12, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 13
** wrong
**  271 570
** answer: 4,6,14,15, groundtruth_str: 4,6,14,15
** compare on lower
** correct
**  272 570
** answer: 53,760, groundtruth_str: 1023
** groundtruth_num is not None
** is_fraction:  53,760
** groundtruth_num is (int, float)
** compare_two_numbers int 53760 1023
** wrong
**  272 571
** answer: (1,4), groundtruth_str: (1,4)
** compare on lower
** correct
**  273 571
** answer: 2, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 8
** wrong
**  273 572
** answer: 2007, groundtruth_str: 1004
** groundtruth_num is not None
** is_fraction:  2007
** groundtruth_num is (int, float)
** compare_two_numbers int 2007 1004
** wrong
**  273 573
** answer: 26, groundtruth_str: 16+12\sqrt{2}
** groundtruth_num is not None
** is_fraction:  26
** groundtruth_num is (int, float)
** compare_two_numbers float 26 32.97056274847714
** wrong
**  273 574
** answer: -25, groundtruth_str: -25
** compare on lower
** correct
**  274 574
** answer: (1,1), groundtruth_str: (4,1)
** groundtruth_num is not None
** is_fraction:  (1,1)
** groundtruth_num is (int, float)
** compare_two_numbers int 1 41
** wrong
**  274 575
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  275 575
** answer: \frac{\sqrt{5}}{6}, groundtruth_str: \frac{1}{6}
** groundtruth_num is not None
** is_fraction:  \frac{\sqrt{5}}{6}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.37267799624996495 0.16666666666666666
** wrong
**  275 576
** answer: -x+13, groundtruth_str: 5x-3
** wrong
**  275 577
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  276 577
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  277 577
** answer: 2.0, groundtruth_str: (3,2,4)
** groundtruth_num is not None
** is_fraction:  2.0
** groundtruth_num is (int, float)
** compare_two_numbers int 2 324
** wrong
**  277 578
** answer: \frac{1}{8}, groundtruth_str: \frac{3}{28}
** groundtruth_num is not None
** is_fraction:  \frac{1}{8}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.125 0.10714285714285714
** wrong
**  277 579
** answer: 0, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 4
** wrong
**  277 580
** answer: 4, groundtruth_str: 4\sqrt{2}
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers float 4 5.656854249492381
** wrong
**  277 581
** answer: 119, groundtruth_str: 119
** compare on lower
** correct
**  278 581
** answer: 2, groundtruth_str: \frac{2}{3}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 0.6666666666666666
** wrong
**  278 582
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  279 582
** answer: 1150, groundtruth_str: 1160
** groundtruth_num is not None
** is_fraction:  1150
** groundtruth_num is (int, float)
** compare_two_numbers int 1150 1160
** wrong
**  279 583
** answer: 7, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 4
** wrong
**  279 584
** answer: 0,7, groundtruth_str: 0,4
** groundtruth_num is not None
** is_fraction:  0,7
** groundtruth_num is (int, float)
** compare_two_numbers int 0 4
** wrong
**  279 585
** answer: 0.8667, groundtruth_str: \frac{13}{15}
** groundtruth_num is not None
** is_fraction:  0.8667
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8667 0.8666666666666667
** wrong
**  279 586
** answer: 68, groundtruth_str: 68
** compare on lower
** correct
**  280 586
** answer: \frac{10}{3}, groundtruth_str: \frac{10}{3}
** compare on lower
** correct
**  281 586
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  282 586
** answer: 190, groundtruth_str: 53
** groundtruth_num is not None
** is_fraction:  190
** groundtruth_num is (int, float)
** compare_two_numbers int 190 53
** wrong
**  282 587
** answer: 64, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  64
** groundtruth_num is (int, float)
** compare_two_numbers int 64 10
** wrong
**  282 588
** answer: 0, groundtruth_str: 4022030
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 4022030
** wrong
**  282 589
** answer: 1, groundtruth_str: \frac{c}{a}
** wrong
**  282 590
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  283 590
** answer: 64, groundtruth_str: 64
** compare on lower
** correct
**  284 590
** answer: 3,2,1,0, groundtruth_str: 12,10,6
** groundtruth_num is not None
** is_fraction:  3,2,1,0
** groundtruth_num is (int, float)
** compare_two_numbers int 3 12106
** wrong
**  284 591
** answer: 900, groundtruth_str: 90
** groundtruth_num is not None
** is_fraction:  900
** groundtruth_num is (int, float)
** compare_two_numbers int 900 90
** wrong
**  284 592
** answer: ?(sincetheexactvalueofxcannotbefoundwithoutthevalueofy), groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  ?(sincetheexactvalueofxcannotbefoundwithoutthevalueofy)
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  284 593
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  285 593
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  286 593
** answer: 20.00, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  20.00
** groundtruth_num is (int, float)
** compare_two_numbers int 20 6
** wrong
**  286 594
** answer: 1, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 5
** wrong
**  286 595
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  287 595
** answer: 10, groundtruth_str: 100
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 100
** wrong
**  287 596
** answer: -5, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  -5
** groundtruth_num is (int, float)
** compare_two_numbers int -5 5
** wrong
**  287 597
** answer: 2^(h-w), groundtruth_str: 210
** groundtruth_num is not None
** is_fraction:  2^(h-w)
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  287 598
** answer: 0.0128, groundtruth_str: \frac{1904}{6561}
** groundtruth_num is not None
** is_fraction:  0.0128
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0128 0.29019966468526137
** wrong
**  287 599
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  288 599
** answer: -1, groundtruth_str: \frac{1}{2004!}
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers float -1 1.8752519366931903
** wrong
**  288 600
** answer: 158, groundtruth_str: 158
** compare on lower
** correct
**  289 600
** answer: undefined, groundtruth_str: \frac{16}{3}
** groundtruth_num is not None
** is_fraction:  undefined
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  289 601
** answer: √173, groundtruth_str: \sqrt{22}
** groundtruth_num is not None
** is_fraction:  √173
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  289 602
** answer: E, groundtruth_str: \text{(P)}
** wrong
**  289 603
** answer: 4, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 10
** wrong
**  289 604
** answer: 90, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  90
** groundtruth_num is (int, float)
** compare_two_numbers int 90 45
** wrong
**  289 605
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  290 605
** answer: 1, groundtruth_str: 2004\sqrt{2}-2003
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 831.0839789956825
** wrong
**  290 606
** answer: 6, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 18
** wrong
**  290 607
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  291 607
** answer: 0, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 4
** wrong
**  291 608
** answer: 6.244998405188271, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  6.244998405188271
** groundtruth_num is (int, float)
** compare_two_numbers int 6.244998405188271 80
** wrong
**  291 609
** answer: 1800, groundtruth_str: 17,280
** groundtruth_num is not None
** is_fraction:  1800
** groundtruth_num is (int, float)
** compare_two_numbers int 1800 17280
** wrong
**  291 610
** answer: \frac{1}{6}, groundtruth_str: \frac{1}{6}
** compare on lower
** correct
**  292 610
** answer: \frac{3}{2}, groundtruth_str: \frac{3}{2}
** compare on lower
** correct
**  293 610
** answer: \frac{3}{32}, groundtruth_str: \frac{3}{32}
** compare on lower
** correct
**  294 610
** answer: 76, groundtruth_str: 76
** compare on lower
** correct
**  295 610
** answer: \frac{32}{3}, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  \frac{32}{3}
** groundtruth_num is (int, float)
** compare_two_numbers int 10.666666666666666 40
** wrong
**  295 611
** answer: 1, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 4
** wrong
**  295 612
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  296 612
** answer: \begin{pmatrix}\frac{13}{5}\\frac{13}{5}\end{pmatrix}, groundtruth_str: \begin{pmatrix}1/5\-18/5\end{pmatrix}
** wrong
**  296 613
** answer: 2+3√3, groundtruth_str: (8,14)
** groundtruth_num is not None
** is_fraction:  2+3√3
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  296 614
** answer: 192, groundtruth_str: 192
** compare on lower
** correct
**  297 614
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  298 614
** answer: 0.131, groundtruth_str: \frac{13}{17}
** groundtruth_num is not None
** is_fraction:  0.131
** groundtruth_num is (int, float)
** compare_two_numbers float 0.131 0.7647058823529411
** wrong
**  298 615
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  299 615
** answer: 24, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 0
** wrong
**  299 616
** answer: -12, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  -12
** groundtruth_num is (int, float)
** compare_two_numbers int -12 0
** wrong
**  299 617
** answer: 1, groundtruth_str: -\frac{1}{2}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 -0.5
** wrong
**  299 618
** answer: 2, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 1
** wrong
**  299 619
** answer: 33-3, groundtruth_str: \begin{pmatrix}3\3\-3\end{pmatrix}
** wrong
**  299 620
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  300 620
** answer: \frac{19}{28}, groundtruth_str: \frac{5}{12}
** groundtruth_num is not None
** is_fraction:  \frac{19}{28}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.6785714285714286 0.4166666666666667
** wrong
**  300 621
** answer: 1, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 3
** wrong
**  300 622
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  301 622
** answer: -4, groundtruth_str: 8,-112
** groundtruth_num is not None
** is_fraction:  -4
** groundtruth_num is (int, float)
** compare_two_numbers int -4 -104
** wrong
**  301 623
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  301 624
** answer: 56, groundtruth_str: -128-128\sqrt{3}i
** wrong
**  301 625
** answer: 1, groundtruth_str: \secx
** wrong
**  301 626
** answer: 0.42, groundtruth_str: \frac{7}{15}
** groundtruth_num is not None
** is_fraction:  0.42
** groundtruth_num is (int, float)
** compare_two_numbers float 0.42 0.4666666666666667
** wrong
**  301 627
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  302 627
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  303 627
** answer: 156, groundtruth_str: 156
** compare on lower
** correct
**  304 627
** answer: 27, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers int 27 6
** wrong
**  304 628
** answer: 4√3, groundtruth_str: 8\sqrt{3}\text{squareinches}
** wrong
**  304 629
** answer: -2, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  -2
** groundtruth_num is (int, float)
** compare_two_numbers int -2 -1
** wrong
**  304 630
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  305 630
** answer: 16000, groundtruth_str: 40,000
** groundtruth_num is not None
** is_fraction:  16000
** groundtruth_num is (int, float)
** compare_two_numbers int 16000 40000
** wrong
**  305 631
** answer: 986473, groundtruth_str: 987,436
** groundtruth_num is not None
** is_fraction:  986473
** groundtruth_num is (int, float)
** compare_two_numbers int 986473 987436
** wrong
**  305 632
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  306 632
** answer: 78, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  78
** groundtruth_num is (int, float)
** compare_two_numbers int 78 18
** wrong
**  306 633
** answer: -56, groundtruth_str: -56
** compare on lower
** correct
**  307 633
** answer: 12, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 8
** wrong
**  307 634
** answer: 0.8, groundtruth_str: 1.8
** groundtruth_num is not None
** is_fraction:  0.8
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8 1.8
** wrong
**  307 635
** answer: 0, groundtruth_str: \begin{pmatrix}-3\-2\9\end{pmatrix}
** wrong
**  307 636
** answer: \frac{2}{9}, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  \frac{2}{9}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2222222222222222 0.25
** wrong
**  307 637
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  308 637
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  309 637
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  310 637
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  311 637
** answer: 0.5, groundtruth_str: \frac{11}{18}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.6111111111111112
** wrong
**  311 638
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  312 638
** answer: 0.6, groundtruth_str: \frac{9}{25}
** groundtruth_num is not None
** is_fraction:  0.6
** groundtruth_num is (int, float)
** compare_two_numbers float 0.6 0.36
** wrong
**  312 639
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  313 639
** answer: 4π+24, groundtruth_str: 24+4\pi
** groundtruth_num is not None
** is_fraction:  4π+24
** groundtruth_num is (int, float)
** compare_two_numbers float 36.56 36.56637061435917
** wrong
**  313 640
** answer: 350, groundtruth_str: 350
** compare on lower
** correct
**  314 640
** answer: -3, groundtruth_str: \begin{pmatrix}6\-15\end{pmatrix}
** wrong
**  314 641
** answer: (22/5,3), groundtruth_str: (6,5)
** groundtruth_num is not None
** is_fraction:  (22/5,3)
** groundtruth_num is (int, float)
** compare_two_numbers int 4.4 65
** wrong
**  314 642
** answer: 72, groundtruth_str: 72
** compare on lower
** correct
**  315 642
** answer: 90, groundtruth_str: 70,110
** groundtruth_num is not None
** is_fraction:  90
** groundtruth_num is (int, float)
** compare_two_numbers int 90 70110
** wrong
**  315 643
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  316 643
** answer: 0.875, groundtruth_str: \frac{7}{8}
** groundtruth_num is not None
** is_fraction:  0.875
** groundtruth_num is (int, float)
** compare_two_numbers float 0.875 0.875
** correct
**  317 643
** answer: 3, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 9
** wrong
**  317 644
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  318 644
** answer: 3, groundtruth_str: -3
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 -3
** wrong
**  318 645
** answer: 4000, groundtruth_str: 4,000
** groundtruth_num is not None
** is_fraction:  4000
** groundtruth_num is (int, float)
** compare_two_numbers int 4000 4000
** correct
**  319 645
** answer: 0, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -1
** wrong
**  319 646
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  320 646
** answer: 90, groundtruth_str: \text{east}
** wrong
**  320 647
** answer: 20, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  20
** groundtruth_num is (int, float)
** compare_two_numbers int 20 5
** wrong
**  320 648
** answer: 0.1667, groundtruth_str: \frac{1}{6}
** groundtruth_num is not None
** is_fraction:  0.1667
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1667 0.16666666666666666
** wrong
**  320 649
** answer: 72, groundtruth_str: 18\sqrt{3}
** groundtruth_num is not None
** is_fraction:  72
** groundtruth_num is (int, float)
** compare_two_numbers float 72 31.176914536239792
** wrong
**  320 650
** answer: 0.25, groundtruth_str: \frac{1}{5}
** groundtruth_num is not None
** is_fraction:  0.25
** groundtruth_num is (int, float)
** compare_two_numbers float 0.25 0.2
** wrong
**  320 651
** answer: 1, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 9
** wrong
**  320 652
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  321 652
** answer: 9, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 2
** wrong
**  321 653
** answer: 4x(2x-1)(4x+5), groundtruth_str: 4x(8x^2-x+5)
** wrong
**  321 654
** answer: 0.0103, groundtruth_str: \frac{5}{54}
** groundtruth_num is not None
** is_fraction:  0.0103
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0103 0.09259259259259259
** wrong
**  321 655
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  322 655
** answer: 0, groundtruth_str: 819
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 819
** wrong
**  322 656
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  323 656
** answer: 0.5, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.25
** wrong
**  323 657
** answer: -1, groundtruth_str: -\frac{1}{7}
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers float -1 -0.14285714285714285
** wrong
**  323 658
** answer: 0, groundtruth_str: -99
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -99
** wrong
**  323 659
** answer: 111111, groundtruth_str: F
** wrong
**  323 660
** answer: 65, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  65
** groundtruth_num is (int, float)
** compare_two_numbers int 65 40
** wrong
**  323 661
** answer: π, groundtruth_str: 5\pi
** groundtruth_num is not None
** is_fraction:  π
** groundtruth_num is (int, float)
** compare_two_numbers float 3.14 15.707963267948966
** wrong
**  323 662
** answer: 64, groundtruth_str: 64
** compare on lower
** correct
**  324 662
** answer: 3, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 5
** wrong
**  324 663
** answer: 0.25, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  0.25
** groundtruth_num is (int, float)
** compare_two_numbers float 0.25 0.25
** correct
**  325 663
** answer: 6, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 15
** wrong
**  325 664
** answer: 0.0625, groundtruth_str: \frac{1}{256}
** groundtruth_num is not None
** is_fraction:  0.0625
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0625 0.00390625
** wrong
**  325 665
** answer: 4, groundtruth_str: \frac{16\sqrt{3}}{9}
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers float 4 3.079201435678004
** wrong
**  325 666
** answer: 14,625, groundtruth_str: 58,500
** groundtruth_num is not None
** is_fraction:  14,625
** groundtruth_num is (int, float)
** compare_two_numbers int 14625 58500
** wrong
**  325 667
** answer: -∞, groundtruth_str: (-\infty,0]
** wrong
**  325 668
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  326 668
** answer: 4-2π, groundtruth_str: 8-2\pi
** groundtruth_num is not None
** is_fraction:  4-2π
** groundtruth_num is (int, float)
** compare_two_numbers float -2.2800000000000002 1.7168146928204135
** wrong
**  326 669
** answer: 961, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  961
** groundtruth_num is (int, float)
** compare_two_numbers int 961 12
** wrong
**  326 670
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  327 670
** answer: 0, groundtruth_str: \sqrt{6}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 2.449489742783178
** wrong
**  327 671
** answer: 2970, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  2970
** groundtruth_num is (int, float)
** compare_two_numbers int 2970 3
** wrong
**  327 672
** answer: 0, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 4
** wrong
**  327 673
** answer: 1, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 3
** wrong
**  327 674
** answer: (-∞,-1/2)∪(-1/2,∞), groundtruth_str: (-\infty,-\frac{1}{2})\cup(-\frac{1}{2},\infty)
** wrong
**  327 675
** answer: 4, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 13
** wrong
**  327 676
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  328 676
** answer: 0,22.5,45,67.5, groundtruth_str: 27,63,99,135,171
** groundtruth_num is not None
** is_fraction:  0,22.5,45,67.5
** groundtruth_num is (int, float)
** compare_two_numbers int 0 276399135171
** wrong
**  328 677
** answer: 12, groundtruth_str: \begin{pmatrix}1&2\6&-1\end{pmatrix}
** wrong
**  328 678
** answer: 2+2k, groundtruth_str: 2k+2
** wrong
**  328 679
** answer: 0, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 1
** wrong
**  328 680
** answer: 1475, groundtruth_str: 98,770
** groundtruth_num is not None
** is_fraction:  1475
** groundtruth_num is (int, float)
** compare_two_numbers int 1475 98770
** wrong
**  328 681
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  329 681
** answer: 208, groundtruth_str: 152
** groundtruth_num is not None
** is_fraction:  208
** groundtruth_num is (int, float)
** compare_two_numbers int 208 152
** wrong
**  329 682
** answer: 0.5, groundtruth_str: \frac{1+\sqrt{5}}{4}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.8090169943749475
** wrong
**  329 683
** answer: 900, groundtruth_str: 900
** compare on lower
** correct
**  330 683
** answer: 6, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 5
** wrong
**  330 684
** answer: 44, groundtruth_str: 54
** groundtruth_num is not None
** is_fraction:  44
** groundtruth_num is (int, float)
** compare_two_numbers int 44 54
** wrong
**  330 685
** answer: -\frac{4}{3}, groundtruth_str: -4
** groundtruth_num is not None
** is_fraction:  -\frac{4}{3}
** groundtruth_num is (int, float)
** compare_two_numbers int -1.3333333333333333 -4
** wrong
**  330 686
** answer: 0.4, groundtruth_str: \frac{3}{5}
** groundtruth_num is not None
** is_fraction:  0.4
** groundtruth_num is (int, float)
** compare_two_numbers float 0.4 0.6
** wrong
**  330 687
** answer: 0.0000197, groundtruth_str: \frac{12}{5,525}
** groundtruth_num is not None
** is_fraction:  0.0000197
** groundtruth_num is (int, float)
** compare_two_numbers float 1.97e-05 2.4
** wrong
**  330 688
** answer: 4, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 60
** wrong
**  330 689
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  331 689
** answer: \frac{19}{4}, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  \frac{19}{4}
** groundtruth_num is (int, float)
** compare_two_numbers float 4.75 0.25
** wrong
**  331 690
** answer: 22.5, groundtruth_str: 22.5
** compare on lower
** correct
**  332 690
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  333 690
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  334 690
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  335 690
** answer: (1,0,0), groundtruth_str: (\frac{11}{15},\frac{11}{60},\frac{1}{12})
** groundtruth_num is not None
** is_fraction:  (1,0,0)
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.7333333333333333
** wrong
**  335 691
** answer: 0.9, groundtruth_str: \frac{1}{5}
** groundtruth_num is not None
** is_fraction:  0.9
** groundtruth_num is (int, float)
** compare_two_numbers float 0.9 0.2
** wrong
**  335 692
** answer: 49, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  49
** groundtruth_num is (int, float)
** compare_two_numbers int 49 0
** wrong
**  335 693
** answer: \frac{-\sqrt{[}3]{4}}{2^2}+2i\sqrt{[}3]{4}-\frac{\sqrt{[}3]{4}}{2}-i\frac{\sqrt{[}3]{4}}{2}, groundtruth_str: -375+500i
** wrong
**  335 694
** answer: 282.6, groundtruth_str: 90\pi
** groundtruth_num is not None
** is_fraction:  282.6
** groundtruth_num is (int, float)
** compare_two_numbers float 282.6 282.7433388230814
** wrong
**  335 695
** answer: 3√10, groundtruth_str: \frac{15\sqrt{7}}{14}
** groundtruth_num is not None
** is_fraction:  3√10
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  335 696
** answer: 2√2, groundtruth_str: \sqrt{17}
** groundtruth_num is not None
** is_fraction:  2√2
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  335 697
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  336 697
** answer: 138, groundtruth_str: 69
** groundtruth_num is not None
** is_fraction:  138
** groundtruth_num is (int, float)
** compare_two_numbers int 138 69
** wrong
**  336 698
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  337 698
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  338 698
** answer: 234000, groundtruth_str: 54000
** groundtruth_num is not None
** is_fraction:  234000
** groundtruth_num is (int, float)
** compare_two_numbers int 234000 54000
** wrong
**  338 699
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  339 699
** answer: 2.6, groundtruth_str: \frac{13}{5}
** groundtruth_num is not None
** is_fraction:  2.6
** groundtruth_num is (int, float)
** compare_two_numbers float 2.6 2.6
** correct
**  340 699
** answer: 5√21, groundtruth_str: 5\sqrt{21}
** groundtruth_num is not None
** is_fraction:  5√21
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  340 700
** answer: 63, groundtruth_str: 49
** groundtruth_num is not None
** is_fraction:  63
** groundtruth_num is (int, float)
** compare_two_numbers int 63 49
** wrong
**  340 701
** answer: 36√5, groundtruth_str: 72+72\sqrt{2}
** groundtruth_num is not None
** is_fraction:  36√5
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  340 702
** answer: 165, groundtruth_str: 9240
** groundtruth_num is not None
** is_fraction:  165
** groundtruth_num is (int, float)
** compare_two_numbers int 165 9240
** wrong
**  340 703
** answer: 2, groundtruth_str: -2
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 -2
** wrong
**  340 704
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  341 704
** answer: 2, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 9
** wrong
**  341 705
** answer: 0.5, groundtruth_str: \frac{\sqrt{6}}{3}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.816496580927726
** wrong
**  341 706
** answer: 2548, groundtruth_str: 2743
** groundtruth_num is not None
** is_fraction:  2548
** groundtruth_num is (int, float)
** compare_two_numbers int 2548 2743
** wrong
**  341 707
** answer: 8, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 3
** wrong
**  341 708
** answer: 20.0, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  20.0
** groundtruth_num is (int, float)
** compare_two_numbers int 20 20
** correct
**  342 708
** answer: 0, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 2
** wrong
**  342 709
** answer: -4,4, groundtruth_str: \frac{9}{4},-\frac{9}{4}
** groundtruth_num is not None
** is_fraction:  -4,4
** groundtruth_num is (int, float)
** compare_two_numbers float -4 2.25
** wrong
**  342 710
** answer: 12, groundtruth_str: 28800
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 28800
** wrong
**  342 711
** answer: 130, groundtruth_str: 130
** compare on lower
** correct
**  343 711
** answer: 102, groundtruth_str: 103
** groundtruth_num is not None
** is_fraction:  102
** groundtruth_num is (int, float)
** compare_two_numbers int 102 103
** wrong
**  343 712
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  344 712
** answer: 720, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  720
** groundtruth_num is (int, float)
** compare_two_numbers int 720 60
** wrong
**  344 713
** answer: 0.0667, groundtruth_str: \frac{1}{12}
** groundtruth_num is not None
** is_fraction:  0.0667
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0667 0.08333333333333333
** wrong
**  344 714
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  345 714
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  346 714
** answer: 9, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 15
** wrong
**  346 715
** answer: 0.09523809523809524, groundtruth_str: \frac{2}{21}
** groundtruth_num is not None
** is_fraction:  0.09523809523809524
** groundtruth_num is (int, float)
** compare_two_numbers float 0.09523809523809525 0.09523809523809523
** correct
**  347 715
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  348 715
** answer: 2, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 6
** wrong
**  348 716
** answer: 6439, groundtruth_str: 9604
** groundtruth_num is not None
** is_fraction:  6439
** groundtruth_num is (int, float)
** compare_two_numbers int 6439 9604
** wrong
**  348 717
** answer: 783,200, groundtruth_str: 864000
** groundtruth_num is not None
** is_fraction:  783,200
** groundtruth_num is (int, float)
** compare_two_numbers int 783200 864000
** wrong
**  348 718
** answer: (-∞,-3)∪(-3,-1)∪(-1,∞), groundtruth_str: (-\infty,-2]\cup[-1,\infty)
** wrong
**  348 719
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  349 719
** answer: 111, groundtruth_str: 777
** groundtruth_num is not None
** is_fraction:  111
** groundtruth_num is (int, float)
** compare_two_numbers int 111 777
** wrong
**  349 720
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  350 720
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  351 720
** answer: 2, groundtruth_str: 134
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 134
** wrong
**  351 721
** answer: even, groundtruth_str: \text{even}
** compare on lower
** correct
**  352 721
** answer: C,E, groundtruth_str: \text{A,D}
** wrong
**  352 722
** answer: 16, groundtruth_str: -128
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 -128
** wrong
**  352 723
** answer: 48, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  48
** groundtruth_num is (int, float)
** compare_two_numbers int 48 24
** wrong
**  352 724
** answer: -7, groundtruth_str: -49
** groundtruth_num is not None
** is_fraction:  -7
** groundtruth_num is (int, float)
** compare_two_numbers int -7 -49
** wrong
**  352 725
** answer: -5, groundtruth_str: -5
** compare on lower
** correct
**  353 725
** answer: 3, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 7
** wrong
**  353 726
** answer: 12, groundtruth_str: -2
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 -2
** wrong
**  353 727
** answer: 0.8660254037844386, groundtruth_str: \frac{\sqrt{3}}{2}
** groundtruth_num is not None
** is_fraction:  0.8660254037844386
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8660254037844386 0.8660254037844386
** correct
**  354 727
** answer: 9a^2, groundtruth_str: 65536
** groundtruth_num is not None
** is_fraction:  9a^2
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  354 728
** answer: 0, groundtruth_str: -150
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -150
** wrong
**  354 729
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  355 729
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  356 729
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  357 729
** answer: 0.1175, groundtruth_str: \frac{2}{17}
** groundtruth_num is not None
** is_fraction:  0.1175
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1175 0.11764705882352941
** wrong
**  357 730
** answer: 15, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 6
** wrong
**  357 731
** answer: -7, groundtruth_str: -16
** groundtruth_num is not None
** is_fraction:  -7
** groundtruth_num is (int, float)
** compare_two_numbers int -7 -16
** wrong
**  357 732
** answer: 4, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 6
** wrong
**  357 733
** answer: 0, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.25
** wrong
**  357 734
** answer: 0, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -1
** wrong
**  357 735
** answer: -9, groundtruth_str: -15
** groundtruth_num is not None
** is_fraction:  -9
** groundtruth_num is (int, float)
** compare_two_numbers int -9 -15
** wrong
**  357 736
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  358 736
** answer: 5+6√2, groundtruth_str: 5+6\sqrt{2}
** groundtruth_num is not None
** is_fraction:  5+6√2
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  358 737
** answer: 100, groundtruth_str: 140
** groundtruth_num is not None
** is_fraction:  100
** groundtruth_num is (int, float)
** compare_two_numbers int 100 140
** wrong
**  358 738
** answer: 0.1111111111111111, groundtruth_str: -\frac{7}{9}
** groundtruth_num is not None
** is_fraction:  0.1111111111111111
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1111111111111111 -0.7777777777777778
** wrong
**  358 739
** answer: 23,500-4500\pi, groundtruth_str: 27000-4500\pi
** groundtruth_num is not None
** is_fraction:  23,500-4500\pi
** groundtruth_num is (int, float)
** compare_two_numbers float 9370 12862.83305884593
** wrong
**  358 740
** answer: \sqrt{7200x^3}, groundtruth_str: 36x\sqrt{35x}
** wrong
**  358 741
** answer: [-2,7], groundtruth_str: x\in[-2,7]
** wrong
**  358 742
** answer: 6, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 9
** wrong
**  358 743
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  359 743
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  360 743
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  361 743
** answer: 38.252, groundtruth_str: 18.90
** groundtruth_num is not None
** is_fraction:  38.252
** groundtruth_num is (int, float)
** compare_two_numbers float 38.252 18.9
** wrong
**  361 744
** answer: -8, groundtruth_str: -64
** groundtruth_num is not None
** is_fraction:  -8
** groundtruth_num is (int, float)
** compare_two_numbers int -8 -64
** wrong
**  361 745
** answer: 216, groundtruth_str: 216
** compare on lower
** correct
**  362 745
** answer: 2sqrt(15), groundtruth_str: 2\sqrt{22}
** groundtruth_num is not None
** is_fraction:  2sqrt(15)
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  362 746
** answer: -7, groundtruth_str: -7
** compare on lower
** correct
**  363 746
** answer: 6.75, groundtruth_str: 6\frac{3}{4}
** groundtruth_num is not None
** is_fraction:  6.75
** groundtruth_num is (int, float)
** compare_two_numbers float 6.75 15.75
** wrong
**  363 747
** answer: 0, groundtruth_str: 23.31
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 23.31
** wrong
**  363 748
** answer: 3, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 4
** wrong
**  363 749
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  364 749
** answer: 16, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 48
** wrong
**  364 750
** answer: 485000, groundtruth_str: 115,000
** groundtruth_num is not None
** is_fraction:  485000
** groundtruth_num is (int, float)
** compare_two_numbers int 485000 115000
** wrong
**  364 751
** answer: 1, groundtruth_str: \frac{2007}{2008}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.9995019920318725
** wrong
**  364 752
** answer: \frac{200}{49}, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  \frac{200}{49}
** groundtruth_num is (int, float)
** compare_two_numbers int 4.081632653061225 40
** wrong
**  364 753
** answer: 0, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 6
** wrong
**  364 754
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  365 754
** answer: 374, groundtruth_str: 556
** groundtruth_num is not None
** is_fraction:  374
** groundtruth_num is (int, float)
** compare_two_numbers int 374 556
** wrong
**  365 755
** answer: \frac{1}{2}, groundtruth_str: \frac{5}{9}
** groundtruth_num is not None
** is_fraction:  \frac{1}{2}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.5555555555555556
** wrong
**  365 756
** answer: 0, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 4
** wrong
**  365 757
** answer: 0.707106781, groundtruth_str: \frac{\sqrt{2}}{2}
** groundtruth_num is not None
** is_fraction:  0.707106781
** groundtruth_num is (int, float)
** compare_two_numbers float 0.707106781 0.7071067811865476
** correct
**  366 757
** answer: 93, groundtruth_str: 47
** groundtruth_num is not None
** is_fraction:  93
** groundtruth_num is (int, float)
** compare_two_numbers int 93 47
** wrong
**  366 758
** answer: 740688, groundtruth_str: 1,000,000
** groundtruth_num is not None
** is_fraction:  740688
** groundtruth_num is (int, float)
** compare_two_numbers int 740688 1000000
** wrong
**  366 759
** answer: -4, groundtruth_str: -5
** groundtruth_num is not None
** is_fraction:  -4
** groundtruth_num is (int, float)
** compare_two_numbers int -4 -5
** wrong
**  366 760
** answer: 2, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 1
** wrong
**  366 761
** answer: 78, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  78
** groundtruth_num is (int, float)
** compare_two_numbers int 78 10
** wrong
**  366 762
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  367 762
** answer: 0.6, groundtruth_str: \frac{24}{25}
** groundtruth_num is not None
** is_fraction:  0.6
** groundtruth_num is (int, float)
** compare_two_numbers float 0.6 0.96
** wrong
**  367 763
** answer: -, groundtruth_str: 129
** groundtruth_num is not None
** is_fraction:  -
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  367 764
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  368 764
** answer: 5√2, groundtruth_str: (5\sqrt{2},5\sqrt{2})
** wrong
**  368 765
** answer: 0.0833, groundtruth_str: \frac{1}{12}
** groundtruth_num is not None
** is_fraction:  0.0833
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0833 0.08333333333333333
** wrong
**  368 766
** answer: 1, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.25
** wrong
**  368 767
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  369 767
** answer: (5,-10), groundtruth_str: (5,-10)
** compare on lower
** correct
**  370 767
** answer: 0, groundtruth_str: \pi
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 3.141592653589793
** wrong
**  370 768
** answer: 1, groundtruth_str: \frac{1}{3}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.3333333333333333
** wrong
**  370 769
** answer: 292i, groundtruth_str: 292i
** compare on lower
** correct
**  371 769
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  372 769
** answer: 0, groundtruth_str: 92
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 92
** wrong
**  372 770
** answer: \frac{3\pi}{4}, groundtruth_str: \frac{3\pi}{4}
** compare on lower
** correct
**  373 770
** answer: 5, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 2
** wrong
**  373 771
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  374 771
** answer: \frac{5}{2}+4i, groundtruth_str: 3+5i
** wrong
**  374 772
** answer: 74,966, groundtruth_str: 74726
** groundtruth_num is not None
** is_fraction:  74,966
** groundtruth_num is (int, float)
** compare_two_numbers int 74966 74726
** wrong
**  374 773
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  375 773
** answer: 3.33, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  3.33
** groundtruth_num is (int, float)
** compare_two_numbers int 3.33 25
** wrong
**  375 774
** answer: 100, groundtruth_str: 140
** groundtruth_num is not None
** is_fraction:  100
** groundtruth_num is (int, float)
** compare_two_numbers int 100 140
** wrong
**  375 775
** answer: 0, groundtruth_str: \text{E}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 2.718
** wrong
**  375 776
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  376 776
** answer: -3,3/17, groundtruth_str: \frac{2}{5}
** groundtruth_num is not None
** is_fraction:  -3,3/17
** groundtruth_num is (int, float)
** compare_two_numbers float -3 0.4
** wrong
**  376 777
** answer: 75, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  75
** groundtruth_num is (int, float)
** compare_two_numbers int 75 50
** wrong
**  376 778
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  377 778
** answer: 0, groundtruth_str: 6710
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 6710
** wrong
**  377 779
** answer: 5/√89, groundtruth_str: \frac{\sqrt{39}}{8}
** groundtruth_num is not None
** is_fraction:  5/√89
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  377 780
** answer: 1, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 0
** wrong
**  377 781
** answer: 1020, groundtruth_str: 1200_7
** groundtruth_num is not None
** is_fraction:  1020
** groundtruth_num is (int, float)
** compare_two_numbers int 1020 12007
** wrong
**  377 782
** answer: 2, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 1
** wrong
**  377 783
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  378 783
** answer: 0, groundtruth_str: \frac{3}{4}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.75
** wrong
**  378 784
** answer: 37.68, groundtruth_str: 12\pi
** groundtruth_num is not None
** is_fraction:  37.68
** groundtruth_num is (int, float)
** compare_two_numbers float 37.68 37.69911184307752
** wrong
**  378 785
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  379 785
** answer: \frac{13}{144}, groundtruth_str: \frac{13}{144}
** compare on lower
** correct
**  380 785
** answer: 0.5, groundtruth_str: \frac{1}{6}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.16666666666666666
** wrong
**  380 786
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  381 786
** answer: \frac{2}{3}, groundtruth_str: \frac{3}{4}
** groundtruth_num is not None
** is_fraction:  \frac{2}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.6666666666666666 0.75
** wrong
**  381 787
** answer: 2, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 6
** wrong
**  381 788
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  381 789
** answer: 4.67, groundtruth_str: \frac{14}{3}
** groundtruth_num is not None
** is_fraction:  4.67
** groundtruth_num is (int, float)
** compare_two_numbers float 4.67 4.666666666666667
** wrong
**  381 790
** answer: 5, groundtruth_str: \frac{27}{10}
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers float 5 2.7
** wrong
**  381 791
** answer: 27, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers int 27 12
** wrong
**  381 792
** answer: 64, groundtruth_str: 64
** compare on lower
** correct
**  382 792
** answer: 19, groundtruth_str: 19
** compare on lower
** correct
**  383 792
** answer: approximately1.222, groundtruth_str: 74
** groundtruth_num is not None
** is_fraction:  approximately1.222
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  383 793
** answer: 0.0129, groundtruth_str: \frac{11}{850}
** groundtruth_num is not None
** is_fraction:  0.0129
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0129 0.012941176470588235
** wrong
**  383 794
** answer: 38.68, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  38.68
** groundtruth_num is (int, float)
** compare_two_numbers int 38.68 36
** wrong
**  383 795
** answer: -4, groundtruth_str: -4
** compare on lower
** correct
**  384 795
** answer: 0.5556, groundtruth_str: \frac{5}{9}
** groundtruth_num is not None
** is_fraction:  0.5556
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5556 0.5555555555555556
** wrong
**  384 796
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  385 796
** answer: 10, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 20
** wrong
**  385 797
** answer: -4, groundtruth_str: -4
** compare on lower
** correct
**  386 797
** answer: -2, groundtruth_str: -2
** compare on lower
** correct
**  387 797
** answer: 7.5, groundtruth_str: 7.5
** compare on lower
** correct
**  388 797
** answer: (√80,π/4,π/6), groundtruth_str: (8\sqrt{2},\frac{\pi}{4},\frac{\pi}{6})
** wrong
**  388 798
** answer: 6, groundtruth_str: 54
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 54
** wrong
**  388 799
** answer: 60, groundtruth_str: 90
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 90
** wrong
**  388 800
** answer: 192π, groundtruth_str: 96\pi+120
** groundtruth_num is not None
** is_fraction:  192π
** groundtruth_num is (int, float)
** compare_two_numbers float 602.88 421.59289474462014
** wrong
**  388 801
** answer: 144, groundtruth_str: 144
** compare on lower
** correct
**  389 801
** answer: 6, groundtruth_str: 3(x-2)(x+1)
** wrong
**  389 802
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  390 802
** answer: 9.0, groundtruth_str: 4.5
** groundtruth_num is not None
** is_fraction:  9.0
** groundtruth_num is (int, float)
** compare_two_numbers float 9 4.5
** wrong
**  390 803
** answer: 1, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 3
** wrong
**  390 804
** answer: 8, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 9
** wrong
**  390 805
** answer: 10080, groundtruth_str: 10,236
** groundtruth_num is not None
** is_fraction:  10080
** groundtruth_num is (int, float)
** compare_two_numbers int 10080 10236
** wrong
**  390 806
** answer: 1.5625, groundtruth_str: \cfrac{25}{16}
** wrong
**  390 807
** answer: 49, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  49
** groundtruth_num is (int, float)
** compare_two_numbers int 49 15
** wrong
**  390 808
** answer: 8, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 6
** wrong
**  390 809
** answer: 0,90, groundtruth_str: 45,135
** groundtruth_num is not None
** is_fraction:  0,90
** groundtruth_num is (int, float)
** compare_two_numbers int 0 45135
** wrong
**  390 810
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  391 810
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  392 810
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  393 810
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  394 810
** answer: 9, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 11
** wrong
**  394 811
** answer: -2,-1,1,2, groundtruth_str: -2,1
** groundtruth_num is not None
** is_fraction:  -2,-1,1,2
** groundtruth_num is (int, float)
** compare_two_numbers int -2 -21
** wrong
**  394 812
** answer: \begin{pmatrix}\frac{4}{5}&-\frac{1}{5}\-\frac{1}{5}&\frac{9}{5}\end{pmatrix}, groundtruth_str: \begin{pmatrix}-4/5&-3/5\-3/5&4/5\end{pmatrix}
** wrong
**  394 813
** answer: (1,10), groundtruth_str: (2,5)
** groundtruth_num is not None
** is_fraction:  (1,10)
** groundtruth_num is (int, float)
** compare_two_numbers int 1 25
** wrong
**  394 814
** answer: 7.8128, groundtruth_str: \frac{14\sqrt{3}}{3}
** groundtruth_num is not None
** is_fraction:  7.8128
** groundtruth_num is (int, float)
** compare_two_numbers float 7.8128 8.082903768654761
** wrong
**  394 815
** answer: 0.035, groundtruth_str: \frac{5}{143}
** groundtruth_num is not None
** is_fraction:  0.035
** groundtruth_num is (int, float)
** compare_two_numbers float 0.035 0.03496503496503497
** wrong
**  394 816
** answer: 1, groundtruth_str: 89
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 89
** wrong
**  394 817
** answer: 3, groundtruth_str: -\frac{3}{2},-1,7
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers float 3 -1.5
** wrong
**  394 818
** answer: 2, groundtruth_str: -3
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 -3
** wrong
**  394 819
** answer: [0,1], groundtruth_str: [1,4]
** groundtruth_num is not None
** is_fraction:  [0,1]
** groundtruth_num is (int, float)
** compare_two_numbers int 0 14
** wrong
**  394 820
** answer: 0, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -1
** wrong
**  394 821
** answer: 0.3, groundtruth_str: \frac{3}{10}
** groundtruth_num is not None
** is_fraction:  0.3
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3 0.3
** correct
**  395 821
** answer: [0,25], groundtruth_str: [0,25]
** compare on lower
** correct
**  396 821
** answer: 16, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 0
** wrong
**  396 822
** answer: 39916800, groundtruth_str: 34,650
** groundtruth_num is not None
** is_fraction:  39916800
** groundtruth_num is (int, float)
** compare_two_numbers int 39916800 34650
** wrong
**  396 823
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  397 823
** answer: -3, groundtruth_str: -3
** compare on lower
** correct
**  398 823
** answer: \frac{3\pi}{4}, groundtruth_str: \frac{3\pi}{4}
** compare on lower
** correct
**  399 823
** answer: 19, groundtruth_str: 19
** compare on lower
** correct
**  400 823
** answer: 1251, groundtruth_str: 1251
** compare on lower
** correct
**  401 823
** answer: 0.0833, groundtruth_str: \frac{1}{12}
** groundtruth_num is not None
** is_fraction:  0.0833
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0833 0.08333333333333333
** wrong
**  401 824
** answer: 835, groundtruth_str: 835
** compare on lower
** correct
**  402 824
** answer: 864, groundtruth_str: 144
** groundtruth_num is not None
** is_fraction:  864
** groundtruth_num is (int, float)
** compare_two_numbers int 864 144
** wrong
**  402 825
** answer: 5.0, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  5.0
** groundtruth_num is (int, float)
** compare_two_numbers int 5 5
** correct
**  403 825
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  404 825
** answer: B, groundtruth_str: \text{(D)}
** wrong
**  404 826
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  405 826
** answer: 1, groundtruth_str: 3996
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 3996
** wrong
**  405 827
** answer: 1275, groundtruth_str: 1275
** compare on lower
** correct
**  406 827
** answer: -36, groundtruth_str: \begin{pmatrix}11\-36\-3\end{pmatrix}
** wrong
**  406 828
** answer: 4, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 3
** wrong
**  406 829
** answer: 5r^5, groundtruth_str: 5r^5
** compare on lower
** correct
**  407 829
** answer: 1, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 0
** wrong
**  407 830
** answer: \frac{25}{8}, groundtruth_str: \frac{25}{8}
** compare on lower
** correct
**  408 830
** answer: 2, groundtruth_str: 2+\sqrt{3}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 3.732050807568877
** wrong
**  408 831
** answer: 234, groundtruth_str: 78
** groundtruth_num is not None
** is_fraction:  234
** groundtruth_num is (int, float)
** compare_two_numbers int 234 78
** wrong
**  408 832
** answer: 7, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 8
** wrong
**  408 833
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  409 833
** answer: 130, groundtruth_str: 130
** compare on lower
** correct
**  410 833
** answer: 6, groundtruth_str: 109
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 109
** wrong
**  410 834
** answer: 5, groundtruth_str: 35
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 35
** wrong
**  410 835
** answer: \frac{2}{3}, groundtruth_str: \frac{4}{3}
** groundtruth_num is not None
** is_fraction:  \frac{2}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.6666666666666666 1.3333333333333333
** wrong
**  410 836
** answer: (0,2\sqrt{[}3]{\tan^210}), groundtruth_str: (2,-1)
** groundtruth_num is not None
** is_fraction:  (0,2\sqrt{[}3]{\tan^210})
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  410 837
** answer: 390625, groundtruth_str: 1,000,000,000
** groundtruth_num is not None
** is_fraction:  390625
** groundtruth_num is (int, float)
** compare_two_numbers int 390625 1000000000
** wrong
**  410 838
** answer: 260, groundtruth_str: 260
** compare on lower
** correct
**  411 838
** answer: 12, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 14
** wrong
**  411 839
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  412 839
** answer: \frac{757}{10000}, groundtruth_str: \frac{19}{330}
** groundtruth_num is not None
** is_fraction:  \frac{757}{10000}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0757 0.05757575757575758
** wrong
**  412 840
** answer: -80, groundtruth_str: 15x-80
** wrong
**  412 841
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  413 841
** answer: 6, groundtruth_str: 96
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 96
** wrong
**  413 842
** answer: 680, groundtruth_str: 680
** compare on lower
** correct
**  414 842
** answer: 2, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 6
** wrong
**  414 843
** answer: 88.5, groundtruth_str: 79
** groundtruth_num is not None
** is_fraction:  88.5
** groundtruth_num is (int, float)
** compare_two_numbers int 88.5 79
** wrong
**  414 844
** answer: 144, groundtruth_str: 200
** groundtruth_num is not None
** is_fraction:  144
** groundtruth_num is (int, float)
** compare_two_numbers int 144 200
** wrong
**  414 845
** answer: 2tan(x), groundtruth_str: 2-2\sqrt{2}
** groundtruth_num is not None
** is_fraction:  2tan(x)
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  414 846
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  415 846
** answer: 81, groundtruth_str: 243
** groundtruth_num is not None
** is_fraction:  81
** groundtruth_num is (int, float)
** compare_two_numbers int 81 243
** wrong
**  415 847
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  416 847
** answer: 1, groundtruth_str: -7
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 -7
** wrong
**  416 848
** answer: 0.0031, groundtruth_str: \frac{7}{72}
** groundtruth_num is not None
** is_fraction:  0.0031
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0031 0.09722222222222222
** wrong
**  416 849
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  417 849
** answer: 41, groundtruth_str: 697
** groundtruth_num is not None
** is_fraction:  41
** groundtruth_num is (int, float)
** compare_two_numbers int 41 697
** wrong
**  417 850
** answer: 100, groundtruth_str: 29800
** groundtruth_num is not None
** is_fraction:  100
** groundtruth_num is (int, float)
** compare_two_numbers int 100 29800
** wrong
**  417 851
** answer: 9, groundtruth_str: 451
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 451
** wrong
**  417 852
** answer: 0.5, groundtruth_str: \frac{1023}{1024}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.9990234375
** wrong
**  417 853
** answer: 3, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 2
** wrong
**  417 854
** answer: 8, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 9
** wrong
**  417 855
** answer: \frac{3\sqrt{3}}{4}, groundtruth_str: \frac{3\sqrt{3}}{4}
** compare on lower
** correct
**  418 855
** answer: 49, groundtruth_str: 49
** compare on lower
** correct
**  419 855
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  420 855
** answer: 2, groundtruth_str: 44
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 44
** wrong
**  420 856
** answer: 181, groundtruth_str: 181
** compare on lower
** correct
**  421 856
** answer: 47, groundtruth_str: 133
** groundtruth_num is not None
** is_fraction:  47
** groundtruth_num is (int, float)
** compare_two_numbers int 47 133
** wrong
**  421 857
** answer: 1680, groundtruth_str: 336
** groundtruth_num is not None
** is_fraction:  1680
** groundtruth_num is (int, float)
** compare_two_numbers int 1680 336
** wrong
**  421 858
** answer: 8, groundtruth_str: 28
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 28
** wrong
**  421 859
** answer: 104, groundtruth_str: 104
** compare on lower
** correct
**  422 859
** answer: 4410.0, groundtruth_str: 2100
** groundtruth_num is not None
** is_fraction:  4410.0
** groundtruth_num is (int, float)
** compare_two_numbers int 4410 2100
** wrong
**  422 860
** answer: 1+3i, groundtruth_str: 9+11i
** wrong
**  422 861
** answer: 60, groundtruth_str: 120
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 120
** wrong
**  422 862
** answer: 0, groundtruth_str: 5x-7y+11z+4=0
** wrong
**  422 863
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  423 863
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  424 863
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  425 863
** answer: 3-2f(x), groundtruth_str: 3-2f(x)
** compare on lower
** correct
**  426 863
** answer: 12π, groundtruth_str: 12\pi
** groundtruth_num is not None
** is_fraction:  12π
** groundtruth_num is (int, float)
** compare_two_numbers float 37.68 37.69911184307752
** wrong
**  426 864
** answer: 46.5, groundtruth_str: 47
** groundtruth_num is not None
** is_fraction:  46.5
** groundtruth_num is (int, float)
** compare_two_numbers int 46.5 47
** wrong
**  426 865
** answer: 72, groundtruth_str: 72
** compare on lower
** correct
**  427 865
** answer: 1, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 12
** wrong
**  427 866
** answer: 1, groundtruth_str: 3,11,33
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 31133
** wrong
**  427 867
** answer: 0, groundtruth_str: -\frac{1}{16}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 -0.0625
** wrong
**  427 868
** answer: 102, groundtruth_str: 39
** groundtruth_num is not None
** is_fraction:  102
** groundtruth_num is (int, float)
** compare_two_numbers int 102 39
** wrong
**  427 869
** answer: 23.5, groundtruth_str: -23.5
** groundtruth_num is not None
** is_fraction:  23.5
** groundtruth_num is (int, float)
** compare_two_numbers float 23.5 -23.5
** wrong
**  427 870
** answer: 1, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 5
** wrong
**  427 871
** answer: 9, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 8
** wrong
**  427 872
** answer: 18.5, groundtruth_str: 27.2
** groundtruth_num is not None
** is_fraction:  18.5
** groundtruth_num is (int, float)
** compare_two_numbers float 18.5 27.2
** wrong
**  427 873
** answer: 15, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 7
** wrong
**  427 874
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  427 875
** answer: -0.8660254037844386, groundtruth_str: -\frac{\sqrt{3}}{2}
** groundtruth_num is not None
** is_fraction:  -0.8660254037844386
** groundtruth_num is (int, float)
** compare_two_numbers float -0.8660254037844386 -0.8660254037844386
** correct
**  428 875
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  429 875
** answer: 11, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 7
** wrong
**  429 876
** answer: -5.5, groundtruth_str: -6.5
** groundtruth_num is not None
** is_fraction:  -5.5
** groundtruth_num is (int, float)
** compare_two_numbers float -5.5 -6.5
** wrong
**  429 877
** answer: 96, groundtruth_str: 64
** groundtruth_num is not None
** is_fraction:  96
** groundtruth_num is (int, float)
** compare_two_numbers int 96 64
** wrong
**  429 878
** answer: 268, groundtruth_str: 268
** compare on lower
** correct
**  430 878
** answer: 3, groundtruth_str: -3
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 -3
** wrong
**  430 879
** answer: 1, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 19
** wrong
**  430 880
** answer: -7, groundtruth_str: -7
** compare on lower
** correct
**  431 880
** answer: -13,3, groundtruth_str: [-13,3]
** groundtruth_num is not None
** is_fraction:  -13,3
** groundtruth_num is (int, float)
** compare_two_numbers int -13 -133
** wrong
**  431 881
** answer: \frac{7}{2}, groundtruth_str: \frac{63}{8}
** groundtruth_num is not None
** is_fraction:  \frac{7}{2}
** groundtruth_num is (int, float)
** compare_two_numbers float 3.5 7.875
** wrong
**  431 882
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  432 882
** answer: \frac{2}{5}, groundtruth_str: \frac{7}{20}
** groundtruth_num is not None
** is_fraction:  \frac{2}{5}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.4 0.35
** wrong
**  432 883
** answer: 32, groundtruth_str: 53
** groundtruth_num is not None
** is_fraction:  32
** groundtruth_num is (int, float)
** compare_two_numbers int 32 53
** wrong
**  432 884
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  433 884
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  434 884
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  435 884
** answer: \frac{15}{17}, groundtruth_str: \frac{5}{13}
** groundtruth_num is not None
** is_fraction:  \frac{15}{17}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8823529411764706 0.38461538461538464
** wrong
**  435 885
** answer: (B)Circle, groundtruth_str: \text{(D)}
** wrong
**  435 886
** answer: 38, groundtruth_str: \frac{240}{13}
** groundtruth_num is not None
** is_fraction:  38
** groundtruth_num is (int, float)
** compare_two_numbers float 38 18.46153846153846
** wrong
**  435 887
** answer: 10, groundtruth_str: \frac{7}{2}
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers float 10 3.5
** wrong
**  435 888
** answer: 2x^2-18, groundtruth_str: 2x^2-18
** compare on lower
** correct
**  436 888
** answer: 6, groundtruth_str: \sqrt{6}+3\sqrt{2}
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers float 6 6.6921304299024635
** wrong
**  436 889
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  437 889
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  438 889
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  439 889
** answer: 19, groundtruth_str: 19
** compare on lower
** correct
**  440 889
** answer: A, groundtruth_str: \text{(A)}
** wrong
**  440 890
** answer: 0, groundtruth_str: \frac{\sqrt{2}}{20}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.07071067811865475
** wrong
**  440 891
** answer: 6, groundtruth_str: \mbox{Saturday}
** wrong
**  440 892
** answer: \frac{2}{21}, groundtruth_str: \frac{1}{3}
** groundtruth_num is not None
** is_fraction:  \frac{2}{21}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.09523809523809523 0.3333333333333333
** wrong
**  440 893
** answer: 21, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  21
** groundtruth_num is (int, float)
** compare_two_numbers int 21 26
** wrong
**  440 894
** answer: 2.0, groundtruth_str: 3.5
** groundtruth_num is not None
** is_fraction:  2.0
** groundtruth_num is (int, float)
** compare_two_numbers float 2 3.5
** wrong
**  440 895
** answer: 0.055555, groundtruth_str: \frac{2}{5}
** groundtruth_num is not None
** is_fraction:  0.055555
** groundtruth_num is (int, float)
** compare_two_numbers float 0.055555 0.4
** wrong
**  440 896
** answer: 0, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 1
** wrong
**  440 897
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  441 897
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  442 897
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  443 897
** answer: -0.8660254037844386, groundtruth_str: -\frac{1}{2}
** groundtruth_num is not None
** is_fraction:  -0.8660254037844386
** groundtruth_num is (int, float)
** compare_two_numbers float -0.8660254037844386 -0.5
** wrong
**  443 898
** answer: 0.5, groundtruth_str: \frac{1}{16}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.0625
** wrong
**  443 899
** answer: 0, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.25
** wrong
**  443 900
** answer: 2, groundtruth_str: \pi-2
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 1.1415926535897933
** wrong
**  443 901
** answer: 30, groundtruth_str: -10
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 -10
** wrong
**  443 902
** answer: 372, groundtruth_str: 1208
** groundtruth_num is not None
** is_fraction:  372
** groundtruth_num is (int, float)
** compare_two_numbers int 372 1208
** wrong
**  443 903
** answer: (-2,5,-1), groundtruth_str: (-2,5,-1)
** compare on lower
** correct
**  444 903
** answer: \frac{2}{5}, groundtruth_str: \frac{2}{5}
** compare on lower
** correct
**  445 903
** answer: -1, groundtruth_str: -1
** compare on lower
** correct
**  446 903
** answer: 6, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 10
** wrong
**  446 904
** answer: 200, groundtruth_str: 90
** groundtruth_num is not None
** is_fraction:  200
** groundtruth_num is (int, float)
** compare_two_numbers int 200 90
** wrong
**  446 905
** answer: 0.381, groundtruth_str: \frac{8}{21}
** groundtruth_num is not None
** is_fraction:  0.381
** groundtruth_num is (int, float)
** compare_two_numbers float 0.381 0.38095238095238093
** wrong
**  446 906
** answer: 198, groundtruth_str: 198
** compare on lower
** correct
**  447 906
** answer: 5040, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  5040
** groundtruth_num is (int, float)
** compare_two_numbers int 5040 6
** wrong
**  447 907
** answer: -\frac{19}{21}, groundtruth_str: \frac{19}{21}
** compare on lower in
** correct
**  448 907
** answer: \frac{1}{10}, groundtruth_str: \frac{1}{5}
** groundtruth_num is not None
** is_fraction:  \frac{1}{10}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1 0.2
** wrong
**  448 908
** answer: 80, groundtruth_str: 110
** groundtruth_num is not None
** is_fraction:  80
** groundtruth_num is (int, float)
** compare_two_numbers int 80 110
** wrong
**  448 909
** answer: 32000, groundtruth_str: 32,000
** groundtruth_num is not None
** is_fraction:  32000
** groundtruth_num is (int, float)
** compare_two_numbers int 32000 32000
** correct
**  449 909
** answer: 8.5, groundtruth_str: 2x-1
** wrong
**  449 910
** answer: 1, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 7
** wrong
**  449 911
** answer: 78533, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  78533
** groundtruth_num is (int, float)
** compare_two_numbers int 78533 10
** wrong
**  449 912
** answer: -\frac{4}{5}, groundtruth_str: -\frac{4}{5}
** compare on lower
** correct
**  450 912
** answer: 1, groundtruth_str: 0,1
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 1
** correct
**  451 912
** answer: 39.68, groundtruth_str: \text{Navin}
** wrong
**  451 913
** answer: 785.25π, groundtruth_str: 525\pi
** groundtruth_num is not None
** is_fraction:  785.25π
** groundtruth_num is (int, float)
** compare_two_numbers float 2465.685 1649.3361431346414
** wrong
**  451 914
** answer: 0.1667(12/720), groundtruth_str: \frac{1}{15}
** groundtruth_num is not None
** is_fraction:  0.1667(12/720)
** groundtruth_num is (int, float)
** compare_two_numbers float 0.002778333333333333 0.06666666666666667
** wrong
**  451 915
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  452 915
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  453 915
** answer: 2, groundtruth_str: \frac{3}{2}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 1.5
** wrong
**  453 916
** answer: \frac{1}{10}, groundtruth_str: \frac{1}{10}
** compare on lower
** correct
**  454 916
** answer: 5, groundtruth_str: -5
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 -5
** wrong
**  454 917
** answer: 31, groundtruth_str: 1024
** groundtruth_num is not None
** is_fraction:  31
** groundtruth_num is (int, float)
** compare_two_numbers int 31 1024
** wrong
**  454 918
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  455 918
** answer: 12.6, groundtruth_str: 12\frac{3}{5}
** groundtruth_num is not None
** is_fraction:  12.6
** groundtruth_num is (int, float)
** compare_two_numbers float 12.6 24.6
** wrong
**  455 919
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  456 919
** answer: -3, groundtruth_str: -3
** compare on lower
** correct
**  457 919
** answer: 4.95, groundtruth_str: 4.95
** compare on lower
** correct
**  458 919
** answer: 76, groundtruth_str: 76
** compare on lower
** correct
**  459 919
** answer: 0, groundtruth_str: 81
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 81
** wrong
**  459 920
** answer: 3, groundtruth_str: 2\sqrt{2}+\sqrt{6}
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers float 3 5.277916867529369
** wrong
**  459 921
** answer: 0.15, groundtruth_str: 0.15
** compare on lower
** correct
**  460 921
** answer: 45, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  45
** groundtruth_num is (int, float)
** compare_two_numbers int 45 5
** wrong
**  460 922
** answer: 13, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  13
** groundtruth_num is (int, float)
** compare_two_numbers int 13 2
** wrong
**  460 923
** answer: 0.1833, groundtruth_str: \frac{11}{60}
** groundtruth_num is not None
** is_fraction:  0.1833
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1833 0.18333333333333332
** wrong
**  460 924
** answer: \frac{8}{3}, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  \frac{8}{3}
** groundtruth_num is (int, float)
** compare_two_numbers int 2.6666666666666665 20
** wrong
**  460 925
** answer: 0, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 1
** wrong
**  460 926
** answer: 5, groundtruth_str: \frac{\sqrt{6}}{6}
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers float 5 0.408248290463863
** wrong
**  460 927
** answer: 2, groundtruth_str: 576
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 576
** wrong
**  460 928
** answer: -1, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers int -1 0
** wrong
**  460 929
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  461 929
** answer: 1010000, groundtruth_str: 1000000
** groundtruth_num is not None
** is_fraction:  1010000
** groundtruth_num is (int, float)
** compare_two_numbers int 1010000 1000000
** wrong
**  461 930
** answer: 80, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  80
** groundtruth_num is (int, float)
** compare_two_numbers int 80 50
** wrong
**  461 931
** answer: -15, groundtruth_str: \begin{pmatrix}-7\16\5\end{pmatrix}
** wrong
**  461 932
** answer: (-2,-4), groundtruth_str: (-\frac{2}{7},-\frac{34}{7})
** groundtruth_num is not None
** is_fraction:  (-2,-4)
** groundtruth_num is (int, float)
** compare_two_numbers float -2 -0.2857142857142857
** wrong
**  461 933
** answer: 31, groundtruth_str: 248
** groundtruth_num is not None
** is_fraction:  31
** groundtruth_num is (int, float)
** compare_two_numbers int 31 248
** wrong
**  461 934
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  462 934
** answer: undefined, groundtruth_str: \frac{46}{3}
** groundtruth_num is not None
** is_fraction:  undefined
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  462 935
** answer: 0.666666666666667, groundtruth_str: \frac{1}{3}
** groundtruth_num is not None
** is_fraction:  0.666666666666667
** groundtruth_num is (int, float)
** compare_two_numbers float 0.666666666666667 0.3333333333333333
** wrong
**  462 936
** answer: 97, groundtruth_str: 97
** compare on lower
** correct
**  463 936
** answer: 2, groundtruth_str: 49
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 49
** wrong
**  463 937
** answer: 924, groundtruth_str: 214
** groundtruth_num is not None
** is_fraction:  924
** groundtruth_num is (int, float)
** compare_two_numbers int 924 214
** wrong
**  463 938
** answer: 12.49, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  12.49
** groundtruth_num is (int, float)
** compare_two_numbers int 12.49 13
** wrong
**  463 939
** answer: 1.071, groundtruth_str: \frac{5049}{20200}
** groundtruth_num is not None
** is_fraction:  1.071
** groundtruth_num is (int, float)
** compare_two_numbers float 1.071 0.24995049504950495
** wrong
**  463 940
** answer: 54.5, groundtruth_str: 59
** groundtruth_num is not None
** is_fraction:  54.5
** groundtruth_num is (int, float)
** compare_two_numbers int 54.5 59
** wrong
**  463 941
** answer: 1, groundtruth_str: \begin{pmatrix}2&7\13&-2\end{pmatrix}
** wrong
**  463 942
** answer: 0, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 2
** wrong
**  463 943
** answer: 1981, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  1981
** groundtruth_num is (int, float)
** compare_two_numbers int 1981 13
** wrong
**  463 944
** answer: 2, groundtruth_str: -2,-1,1,2
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 -114
** wrong
**  463 945
** answer: -0.5, groundtruth_str: -0.50
** groundtruth_num is not None
** is_fraction:  -0.5
** groundtruth_num is (int, float)
** compare_two_numbers float -0.5 -0.5
** correct
**  464 945
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  464 946
** answer: 1, groundtruth_str: 84
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 84
** wrong
**  464 947
** answer: 99, groundtruth_str: 44
** groundtruth_num is not None
** is_fraction:  99
** groundtruth_num is (int, float)
** compare_two_numbers int 99 44
** wrong
**  464 948
** answer: 1, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 3
** wrong
**  464 949
** answer: 30.96, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  30.96
** groundtruth_num is (int, float)
** compare_two_numbers int 30.96 45
** wrong
**  464 950
** answer: 14, groundtruth_str: \frac{14}{13}
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers float 14 1.0769230769230769
** wrong
**  464 951
** answer: 11, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 14
** wrong
**  464 952
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  465 952
** answer: \frac{155}{3}, groundtruth_str: \frac{31}{6}
** groundtruth_num is not None
** is_fraction:  \frac{155}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 51.666666666666664 5.166666666666667
** wrong
**  465 953
** answer: 6x, groundtruth_str: \frac{35}{4}
** groundtruth_num is not None
** is_fraction:  6x
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  465 954
** answer: 0.375, groundtruth_str: \frac{3}{8}
** groundtruth_num is not None
** is_fraction:  0.375
** groundtruth_num is (int, float)
** compare_two_numbers float 0.375 0.375
** correct
**  466 954
** answer: B, groundtruth_str: \text{B}
** compare on lower
** correct
**  467 954
** answer: \frac{\frac{1}{29}-\tan(\frac{B}{2})}{1+\frac{1}{29}\tan(\frac{B}{2})}, groundtruth_str: -\frac{1}{14}
** groundtruth_num is not None
** is_fraction:  \frac{\frac{1}{29}-\tan(\frac{B}{2})}{1+\frac{1}{29}\tan(\frac{B}{2})}
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  467 955
** answer: 4, groundtruth_str: 6\sqrt{6}
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers float 4 14.696938456699069
** wrong
**  467 956
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  468 956
** answer: -4, groundtruth_str: -4
** compare on lower
** correct
**  469 956
** answer: 0.5, groundtruth_str: \frac{1}{5}+\frac{3}{5}i
** wrong
**  469 957
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  470 957
** answer: 943, groundtruth_str: 891
** groundtruth_num is not None
** is_fraction:  943
** groundtruth_num is (int, float)
** compare_two_numbers int 943 891
** wrong
**  470 958
** answer: \frac{20}{3}, groundtruth_str: \frac{109}{150}
** groundtruth_num is not None
** is_fraction:  \frac{20}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 6.666666666666667 0.7266666666666667
** wrong
**  470 959
** answer: 3722, groundtruth_str: 3702
** groundtruth_num is not None
** is_fraction:  3722
** groundtruth_num is (int, float)
** compare_two_numbers int 3722 3702
** wrong
**  470 960
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  471 960
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  472 960
** answer: 51.43, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  51.43
** groundtruth_num is (int, float)
** compare_two_numbers int 51.43 36
** wrong
**  472 961
** answer: 5000, groundtruth_str: 5000
** compare on lower
** correct
**  473 961
** answer: 2x^5, groundtruth_str: -x^7-2x^5+x^2
** wrong
**  473 962
** answer: 137.5, groundtruth_str: 137\frac{1}{2}
** groundtruth_num is not None
** is_fraction:  137.5
** groundtruth_num is (int, float)
** compare_two_numbers float 137.5 685.5
** wrong
**  473 963
** answer: 1, groundtruth_str: 5x^2+21x
** wrong
**  473 964
** answer: 87, groundtruth_str: 1414
** groundtruth_num is not None
** is_fraction:  87
** groundtruth_num is (int, float)
** compare_two_numbers int 87 1414
** wrong
**  473 965
** answer: 117, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  117
** groundtruth_num is (int, float)
** compare_two_numbers int 117 17
** wrong
**  473 966
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  474 966
** answer: 8.07, groundtruth_str: \frac{44}{3}
** groundtruth_num is not None
** is_fraction:  8.07
** groundtruth_num is (int, float)
** compare_two_numbers float 8.07 14.666666666666666
** wrong
**  474 967
** answer: (1,2), groundtruth_str: (\frac{27}{8},\frac{15}{8})
** groundtruth_num is not None
** is_fraction:  (1,2)
** groundtruth_num is (int, float)
** compare_two_numbers float 1 3.375
** wrong
**  474 968
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  475 968
** answer: 288, groundtruth_str: 288
** compare on lower
** correct
**  476 968
** answer: 90, groundtruth_str: 135
** groundtruth_num is not None
** is_fraction:  90
** groundtruth_num is (int, float)
** compare_two_numbers int 90 135
** wrong
**  476 969
** answer: 3, groundtruth_str: \frac{3}{2}
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers float 3 1.5
** wrong
**  476 970
** answer: B,C,D,F,G, groundtruth_str: \text{C,F,H}
** wrong
**  476 971
** answer: 56, groundtruth_str: 56
** compare on lower
** correct
**  477 971
** answer: 34.98, groundtruth_str: \text{C}
** wrong
**  477 972
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  478 972
** answer: 3.57142857142857, groundtruth_str: \frac{7}{24}
** groundtruth_num is not None
** is_fraction:  3.57142857142857
** groundtruth_num is (int, float)
** compare_two_numbers float 3.57142857142857 0.2916666666666667
** wrong
**  478 973
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  479 973
** answer: 26, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  26
** groundtruth_num is (int, float)
** compare_two_numbers int 26 11
** wrong
**  479 974
** answer: 6√35, groundtruth_str: 12\sqrt{35}
** groundtruth_num is not None
** is_fraction:  6√35
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  479 975
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  480 975
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  481 975
** answer: -5, groundtruth_str: -5
** compare on lower
** correct
**  482 975
** answer: 3003003, groundtruth_str: 90{,}900{,}909
** wrong
**  482 976
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  483 976
** answer: (0,0), groundtruth_str: (-7,10)
** groundtruth_num is not None
** is_fraction:  (0,0)
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -710
** wrong
**  483 977
** answer: 22, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  22
** groundtruth_num is (int, float)
** compare_two_numbers int 22 14
** wrong
**  483 978
** answer: 300, groundtruth_str: 400
** groundtruth_num is not None
** is_fraction:  300
** groundtruth_num is (int, float)
** compare_two_numbers int 300 400
** wrong
**  483 979
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  484 979
** answer: 0,π,π/6,5π/6, groundtruth_str: \frac{\pi}{4},\frac{9\pi}{4}
** groundtruth_num is not None
** is_fraction:  0,π,π/6,5π/6
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.785
** wrong
**  484 980
** answer: 764, groundtruth_str: 298
** groundtruth_num is not None
** is_fraction:  764
** groundtruth_num is (int, float)
** compare_two_numbers int 764 298
** wrong
**  484 981
** answer: 3.33, groundtruth_str: \frac{10}{3}
** groundtruth_num is not None
** is_fraction:  3.33
** groundtruth_num is (int, float)
** compare_two_numbers float 3.33 3.3333333333333335
** wrong
**  484 982
** answer: 72, groundtruth_str: 72
** compare on lower
** correct
**  485 982
** answer: 23419, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  23419
** groundtruth_num is (int, float)
** compare_two_numbers int 23419 0
** wrong
**  485 983
** answer: 2, groundtruth_str: 34
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 34
** wrong
**  485 984
** answer: 64, groundtruth_str: 64
** compare on lower
** correct
**  486 984
** answer: 563.51, groundtruth_str: 563.51
** compare on lower
** correct
**  487 984
** answer: 3, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 0
** wrong
**  487 985
** answer: 4800, groundtruth_str: 4800
** compare on lower
** correct
**  488 985
** answer: 1, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 0
** wrong
**  488 986
** answer: 1, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.5
** wrong
**  488 987
** answer: 56, groundtruth_str: 56
** compare on lower
** correct
**  489 987
** answer: 7, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 3
** wrong
**  489 988
** answer: 8, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 1
** wrong
**  489 989
** answer: -99, groundtruth_str: -99
** compare on lower
** correct
**  490 989
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  491 989
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  492 989
** answer: -3,2,4, groundtruth_str: 2,-3,4
** groundtruth_num is not None
** is_fraction:  -3,2,4
** groundtruth_num is (int, float)
** compare_two_numbers int -3 -32
** wrong
**  492 990
** answer: 1+5i, groundtruth_str: -1-5i
** wrong
**  492 991
** answer: 823.38, groundtruth_str: \frac{648}{\pi}
** groundtruth_num is not None
** is_fraction:  823.38
** groundtruth_num is (int, float)
** compare_two_numbers float 823.38 206.26480624709635
** wrong
**  492 992
** answer: -1, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers int -1 4
** wrong
**  492 993
** answer: 9, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 0
** wrong
**  492 994
** answer: \frac{1}{3}, groundtruth_str: \frac{1}{9}
** groundtruth_num is not None
** is_fraction:  \frac{1}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3333333333333333 0.1111111111111111
** wrong
**  492 995
** answer: 120, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  120
** groundtruth_num is (int, float)
** compare_two_numbers int 120 20
** wrong
**  492 996
** answer: \frac{5}{3}, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  \frac{5}{3}
** groundtruth_num is (int, float)
** compare_two_numbers int 1.6666666666666667 1
** wrong
**  492 997
** answer: (-4,1), groundtruth_str: (-4,1)
** compare on lower
** correct
**  493 997
** answer: \frac{1}{50}\begin{pmatrix}1&7\7&49\end{pmatrix}, groundtruth_str: \begin{pmatrix}1/50&7/50\7/50&49/50\end{pmatrix}
** wrong
**  493 998
** answer: 600, groundtruth_str: 600
** compare on lower
** correct
**  494 998
** answer: 66, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  66
** groundtruth_num is (int, float)
** compare_two_numbers int 66 3
** wrong
**  494 999
** answer: 8, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 9
** wrong
**  494 1000
** answer: 4, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 16
** wrong
**  494 1001
** answer: -36, groundtruth_str: -36
** compare on lower
** correct
**  495 1001
** answer: 312, groundtruth_str: 312
** compare on lower
** correct
**  496 1001
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  497 1001
** answer: 1, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 6
** wrong
**  497 1002
** answer: 4.18879, groundtruth_str: \frac{4}{3}\pi
** groundtruth_num is not None
** is_fraction:  4.18879
** groundtruth_num is (int, float)
** compare_two_numbers float 4.18879 4.188790204786391
** correct
**  498 1002
** answer: x^4-2x^3-5x^2+4x-1, groundtruth_str: x^4-4x^3+5x^2+2x-1
** wrong
**  498 1003
** answer: 8000, groundtruth_str: 8000
** compare on lower
** correct
**  499 1003
** answer: 3.24, groundtruth_str: 3.24
** compare on lower
** correct
**  500 1003
** answer: 0.1629, groundtruth_str: \frac{13}{90}
** groundtruth_num is not None
** is_fraction:  0.1629
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1629 0.14444444444444443
** wrong
**  500 1004
** answer: 180, groundtruth_str: 120
** groundtruth_num is not None
** is_fraction:  180
** groundtruth_num is (int, float)
** compare_two_numbers int 180 120
** wrong
**  500 1005
** answer: 1728a-439.93, groundtruth_str: 38
** groundtruth_num is not None
** is_fraction:  1728a-439.93
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  500 1006
** answer: 5, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 7
** wrong
**  500 1007
** answer: \begin{pmatrix}\frac{1}{5}\-\frac{3}{5}\end{pmatrix}, groundtruth_str: \begin{pmatrix}1/5\-3/5\end{pmatrix}
** wrong
**  500 1008
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  501 1008
** answer: \frac{8}{27}, groundtruth_str: \frac{16}{27}
** groundtruth_num is not None
** is_fraction:  \frac{8}{27}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2962962962962963 0.5925925925925926
** wrong
**  501 1009
** answer: 512, groundtruth_str: 512
** compare on lower
** correct
**  502 1009
** answer: 6, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 10
** wrong
**  502 1010
** answer: 6/√5, groundtruth_str: \frac{6\sqrt{5}}{5}
** groundtruth_num is not None
** is_fraction:  6/√5
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  502 1011
** answer: 84, groundtruth_str: 84
** compare on lower
** correct
**  503 1011
** answer: 0, groundtruth_str: 180
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 180
** wrong
**  503 1012
** answer: 20, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  20
** groundtruth_num is (int, float)
** compare_two_numbers int 20 7
** wrong
**  503 1013
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  504 1013
** answer: 9, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 12
** wrong
**  504 1014
** answer: 2.8284271247461903, groundtruth_str: 2\sqrt{10}
** groundtruth_num is not None
** is_fraction:  2.8284271247461903
** groundtruth_num is (int, float)
** compare_two_numbers float 2.8284271247461903 6.324555320336759
** wrong
**  504 1015
** answer: 125, groundtruth_str: 125
** compare on lower
** correct
**  505 1015
** answer: 120, groundtruth_str: 360
** groundtruth_num is not None
** is_fraction:  120
** groundtruth_num is (int, float)
** compare_two_numbers int 120 360
** wrong
**  505 1016
** answer: 1.5, groundtruth_str: \frac{3}{2}
** groundtruth_num is not None
** is_fraction:  1.5
** groundtruth_num is (int, float)
** compare_two_numbers float 1.5 1.5
** correct
**  506 1016
** answer: 33, groundtruth_str: 24,-3
** groundtruth_num is not None
** is_fraction:  33
** groundtruth_num is (int, float)
** compare_two_numbers int 33 21
** wrong
**  506 1017
** answer: 42_7, groundtruth_str: 42_7
** compare on lower
** correct
**  507 1017
** answer: 32-4π, groundtruth_str: 28-2\pi
** groundtruth_num is not None
** is_fraction:  32-4π
** groundtruth_num is (int, float)
** compare_two_numbers float 19.439999999999998 21.716814692820414
** wrong
**  507 1018
** answer: 401, groundtruth_str: 401
** compare on lower
** correct
**  508 1018
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  509 1018
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  510 1018
** answer: \frac{1}{3}, groundtruth_str: 33\frac{1}{3}
** compare on lower in
** correct
**  511 1018
** answer: 9, groundtruth_str: \frac{33}{2}
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers float 9 16.5
** wrong
**  511 1019
** answer: -2, groundtruth_str: -6
** groundtruth_num is not None
** is_fraction:  -2
** groundtruth_num is (int, float)
** compare_two_numbers int -2 -6
** wrong
**  511 1020
** answer: 9, groundtruth_str: 27
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 27
** wrong
**  511 1021
** answer: 135, groundtruth_str: 135
** compare on lower
** correct
**  512 1021
** answer: 0.175, groundtruth_str: \frac{128}{1875}
** groundtruth_num is not None
** is_fraction:  0.175
** groundtruth_num is (int, float)
** compare_two_numbers float 0.175 0.06826666666666667
** wrong
**  512 1022
** answer: 56, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  56
** groundtruth_num is (int, float)
** compare_two_numbers int 56 24
** wrong
**  512 1023
** answer: 5, groundtruth_str: [5,5\sqrt{2}]
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 5
** correct
**  513 1023
** answer: 0, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 20
** wrong
**  513 1024
** answer: 120, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  120
** groundtruth_num is (int, float)
** compare_two_numbers int 120 16
** wrong
**  513 1025
** answer: 0, groundtruth_str: -3
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -3
** wrong
**  513 1026
** answer: 12, groundtruth_str: 144
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 144
** wrong
**  513 1027
** answer: 3, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 4
** wrong
**  513 1028
** answer: 10, groundtruth_str: \frac{40}{9}
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers float 10 4.444444444444445
** wrong
**  513 1029
** answer: 96π, groundtruth_str: 96\pi
** groundtruth_num is not None
** is_fraction:  96π
** groundtruth_num is (int, float)
** compare_two_numbers float 301.44 301.59289474462014
** wrong
**  513 1030
** answer: 120, groundtruth_str: 147
** groundtruth_num is not None
** is_fraction:  120
** groundtruth_num is (int, float)
** compare_two_numbers int 120 147
** wrong
**  513 1031
** answer: 1, groundtruth_str: 2\sqrt{3}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 3.4641016151377544
** wrong
**  513 1032
** answer: 0, groundtruth_str: -\frac{31}{8}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 -3.875
** wrong
**  513 1033
** answer: 0.923077, groundtruth_str: \frac{12}{13}
** groundtruth_num is not None
** is_fraction:  0.923077
** groundtruth_num is (int, float)
** compare_two_numbers float 0.923077 0.9230769230769231
** correct
**  514 1033
** answer: 30, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 18
** wrong
**  514 1034
** answer: 0.8, groundtruth_str: \frac{4}{5}
** groundtruth_num is not None
** is_fraction:  0.8
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8 0.8
** correct
**  515 1034
** answer: 4.25, groundtruth_str: 7\pi
** groundtruth_num is not None
** is_fraction:  4.25
** groundtruth_num is (int, float)
** compare_two_numbers float 4.25 21.991148575128552
** wrong
**  515 1035
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  516 1035
** answer: 8, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 5
** wrong
**  516 1036
** answer: -8, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  -8
** groundtruth_num is (int, float)
** compare_two_numbers int -8 0
** wrong
**  516 1037
** answer: 1.5, groundtruth_str: \sqrt{3}
** groundtruth_num is not None
** is_fraction:  1.5
** groundtruth_num is (int, float)
** compare_two_numbers float 1.5 1.7320508075688772
** wrong
**  516 1038
** answer: B, groundtruth_str: \text{(E)}
** wrong
**  516 1039
** answer: \frac{7}{13}, groundtruth_str: \frac{2}{9}
** groundtruth_num is not None
** is_fraction:  \frac{7}{13}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5384615384615384 0.2222222222222222
** wrong
**  516 1040
** answer: 14, groundtruth_str: \sqrt{109}
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers float 14 10.44030650891055
** wrong
**  516 1041
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  517 1041
** answer: 72, groundtruth_str: \begin{pmatrix}-1&0\0&-1\end{pmatrix}
** wrong
**  517 1042
** answer: 400, groundtruth_str: 400
** compare on lower
** correct
**  518 1042
** answer: 6, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 12
** wrong
**  518 1043
** answer: 34, groundtruth_str: 34
** compare on lower
** correct
**  519 1043
** answer: 96, groundtruth_str: 52
** groundtruth_num is not None
** is_fraction:  96
** groundtruth_num is (int, float)
** compare_two_numbers int 96 52
** wrong
**  519 1044
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  520 1044
** answer: 12, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 8
** wrong
**  520 1045
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  521 1045
** answer: 6, groundtruth_str: 52
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 52
** wrong
**  521 1046
** answer: 100-48\sqrt{2}, groundtruth_str: 100-48\sqrt{2}
** compare on lower
** correct
**  522 1046
** answer: 437, groundtruth_str: 973
** groundtruth_num is not None
** is_fraction:  437
** groundtruth_num is (int, float)
** compare_two_numbers int 437 973
** wrong
**  522 1047
** answer: 288, groundtruth_str: 288
** compare on lower
** correct
**  523 1047
** answer: 4, groundtruth_str: -4
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 -4
** wrong
**  523 1048
** answer: 1, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 8
** wrong
**  523 1049
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  524 1049
** answer: 0.25, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  0.25
** groundtruth_num is (int, float)
** compare_two_numbers int 0.25 1
** wrong
**  524 1050
** answer: (0,4.67), groundtruth_str: (3,-3)
** groundtruth_num is not None
** is_fraction:  (0,4.67)
** groundtruth_num is (int, float)
** compare_two_numbers int 0 0
** correct
**  525 1050
** answer: 21, groundtruth_str: 64
** groundtruth_num is not None
** is_fraction:  21
** groundtruth_num is (int, float)
** compare_two_numbers int 21 64
** wrong
**  525 1051
** answer: 44, groundtruth_str: 1963
** groundtruth_num is not None
** is_fraction:  44
** groundtruth_num is (int, float)
** compare_two_numbers int 44 1963
** wrong
**  525 1052
** answer: 720, groundtruth_str: 180
** groundtruth_num is not None
** is_fraction:  720
** groundtruth_num is (int, float)
** compare_two_numbers int 720 180
** wrong
**  525 1053
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  526 1053
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  527 1053
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  528 1053
** answer: 10√2, groundtruth_str: 10\sqrt{}2
** groundtruth_num is not None
** is_fraction:  10√2
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  528 1054
** answer: 132, groundtruth_str: 105
** groundtruth_num is not None
** is_fraction:  132
** groundtruth_num is (int, float)
** compare_two_numbers int 132 105
** wrong
**  528 1055
** answer: (-∞,-4/5)∪(4/5,∞), groundtruth_str: (-7,-2)
** groundtruth_num is not None
** is_fraction:  (-∞,-4/5)∪(4/5,∞)
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  528 1056
** answer: 3, groundtruth_str: -8
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 -8
** wrong
**  528 1057
** answer: 60, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 80
** wrong
**  528 1058
** answer: 30, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 25
** wrong
**  528 1059
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  529 1059
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  530 1059
** answer: 16, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 1
** wrong
**  530 1060
** answer: 21, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  21
** groundtruth_num is (int, float)
** compare_two_numbers int 21 17
** wrong
**  530 1061
** answer: 97969, groundtruth_str: 97969
** compare on lower
** correct
**  531 1061
** answer: 2.5, groundtruth_str: 2.50
** groundtruth_num is not None
** is_fraction:  2.5
** groundtruth_num is (int, float)
** compare_two_numbers float 2.5 2.5
** correct
**  532 1061
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  533 1061
** answer: 16, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 12
** wrong
**  533 1062
** answer: -√7,√7, groundtruth_str: -5,1,4
** groundtruth_num is not None
** is_fraction:  -√7,√7
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  533 1063
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  534 1063
** answer: 7, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 10
** wrong
**  534 1064
** answer: 20, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  20
** groundtruth_num is (int, float)
** compare_two_numbers int 20 6
** wrong
**  534 1065
** answer: 0, groundtruth_str: 104
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 104
** wrong
**  534 1066
** answer: 2110, groundtruth_str: 2107
** groundtruth_num is not None
** is_fraction:  2110
** groundtruth_num is (int, float)
** compare_two_numbers int 2110 2107
** wrong
**  534 1067
** answer: 1.25, groundtruth_str: 3.5
** groundtruth_num is not None
** is_fraction:  1.25
** groundtruth_num is (int, float)
** compare_two_numbers float 1.25 3.5
** wrong
**  534 1068
** answer: 547, groundtruth_str: 13535
** groundtruth_num is not None
** is_fraction:  547
** groundtruth_num is (int, float)
** compare_two_numbers int 547 13535
** wrong
**  534 1069
** answer: 2, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 5
** wrong
**  534 1070
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  535 1070
** answer: \frac{3}{4}, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  \frac{3}{4}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.75 0.25
** wrong
**  535 1071
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  536 1071
** answer: 462, groundtruth_str: 270
** groundtruth_num is not None
** is_fraction:  462
** groundtruth_num is (int, float)
** compare_two_numbers int 462 270
** wrong
**  536 1072
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  537 1072
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  538 1072
** answer: 1, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.25
** wrong
**  538 1073
** answer: 72, groundtruth_str: 64
** groundtruth_num is not None
** is_fraction:  72
** groundtruth_num is (int, float)
** compare_two_numbers int 72 64
** wrong
**  538 1074
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  539 1074
** answer: 0.06, groundtruth_str: \frac{3}{50}
** groundtruth_num is not None
** is_fraction:  0.06
** groundtruth_num is (int, float)
** compare_two_numbers float 0.06 0.06
** correct
**  540 1074
** answer: π, groundtruth_str: \pi
** groundtruth_num is not None
** is_fraction:  π
** groundtruth_num is (int, float)
** compare_two_numbers float 3.14 3.141592653589793
** wrong
**  540 1075
** answer: 10837, groundtruth_str: 37
** groundtruth_num is not None
** is_fraction:  10837
** groundtruth_num is (int, float)
** compare_two_numbers int 10837 37
** wrong
**  540 1076
** answer: 81, groundtruth_str: 81
** compare on lower
** correct
**  541 1076
** answer: 9, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 12
** wrong
**  541 1077
** answer: 1, groundtruth_str: x^2+6x-4
** wrong
**  541 1078
** answer: [-13.571428571428573,3.5], groundtruth_str: \begin{pmatrix}3&-3\4&-2\end{pmatrix}
** wrong
**  541 1079
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  542 1079
** answer: -7, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  -7
** groundtruth_num is (int, float)
** compare_two_numbers int -7 7
** wrong
**  542 1080
** answer: 0.3333, groundtruth_str: \frac{1}{3}
** groundtruth_num is not None
** is_fraction:  0.3333
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3333 0.3333333333333333
** wrong
**  542 1081
** answer: 31, groundtruth_str: 32
** groundtruth_num is not None
** is_fraction:  31
** groundtruth_num is (int, float)
** compare_two_numbers int 31 32
** wrong
**  542 1082
** answer: \frac{5}{4}, groundtruth_str: (\frac{17}{4},0)
** groundtruth_num is not None
** is_fraction:  \frac{5}{4}
** groundtruth_num is (int, float)
** compare_two_numbers float 1.25 4.25
** wrong
**  542 1083
** answer: 76, groundtruth_str: 90
** groundtruth_num is not None
** is_fraction:  76
** groundtruth_num is (int, float)
** compare_two_numbers int 76 90
** wrong
**  542 1084
** answer: 0, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 4
** wrong
**  542 1085
** answer: 2, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 3
** wrong
**  542 1086
** answer: 4, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 3
** wrong
**  542 1087
** answer: 0.96, groundtruth_str: -\frac{24}{25}
** groundtruth_num is not None
** is_fraction:  0.96
** groundtruth_num is (int, float)
** compare_two_numbers float 0.96 -0.96
** wrong
**  542 1088
** answer: 2.8284271247461903, groundtruth_str: 2\sqrt{2}
** groundtruth_num is not None
** is_fraction:  2.8284271247461903
** groundtruth_num is (int, float)
** compare_two_numbers float 2.8284271247461903 2.8284271247461903
** correct
**  543 1088
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  544 1088
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  545 1088
** answer: 93, groundtruth_str: 162
** groundtruth_num is not None
** is_fraction:  93
** groundtruth_num is (int, float)
** compare_two_numbers int 93 162
** wrong
**  545 1089
** answer: 3, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 4
** wrong
**  545 1090
** answer: (15,-29), groundtruth_str: (15,-29)
** compare on lower
** correct
**  546 1090
** answer: 1, groundtruth_str: 2\sqrt{2}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 2.8284271247461903
** wrong
**  546 1091
** answer: 0.6, groundtruth_str: 0.6
** compare on lower
** correct
**  547 1091
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  548 1091
** answer: 12, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 36
** wrong
**  548 1092
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  549 1092
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  550 1092
** answer: 27, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers int 27 19
** wrong
**  550 1093
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  551 1093
** answer: 105, groundtruth_str: 105
** compare on lower
** correct
**  552 1093
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  553 1093
** answer: 67,232, groundtruth_str: 61,328
** groundtruth_num is not None
** is_fraction:  67,232
** groundtruth_num is (int, float)
** compare_two_numbers int 67232 61328
** wrong
**  553 1094
** answer: 2, groundtruth_str: -2
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 -2
** wrong
**  553 1095
** answer: 2, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 14
** wrong
**  553 1096
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  554 1096
** answer: 0, groundtruth_str: \sqrt{5}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 2.23606797749979
** wrong
**  554 1097
** answer: \begin{pmatrix}-\frac{7}{2}\\frac{43}{8}\-\frac{73}{8}\end{pmatrix}, groundtruth_str: \begin{pmatrix}-2\3\3\end{pmatrix}
** wrong
**  554 1098
** answer: 101, groundtruth_str: 549
** groundtruth_num is not None
** is_fraction:  101
** groundtruth_num is (int, float)
** compare_two_numbers int 101 549
** wrong
**  554 1099
** answer: √2, groundtruth_str: \sqrt{2}
** groundtruth_num is not None
** is_fraction:  √2
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  554 1100
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  555 1100
** answer: A, groundtruth_str: C
** wrong
**  555 1101
** answer: 8, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 18
** wrong
**  555 1102
** answer: 9, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 13
** wrong
**  555 1103
** answer: 0, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 8
** wrong
**  555 1104
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  556 1104
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  557 1104
** answer: \frac{1}{4}, groundtruth_str: 1:2
** groundtruth_num is not None
** is_fraction:  \frac{1}{4}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.25 0.5
** wrong
**  557 1105
** answer: 1680, groundtruth_str: 729
** groundtruth_num is not None
** is_fraction:  1680
** groundtruth_num is (int, float)
** compare_two_numbers int 1680 729
** wrong
**  557 1106
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  558 1106
** answer: 18,300, groundtruth_str: 32,760
** groundtruth_num is not None
** is_fraction:  18,300
** groundtruth_num is (int, float)
** compare_two_numbers int 18300 32760
** wrong
**  558 1107
** answer: 24, groundtruth_str: 23
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 23
** wrong
**  558 1108
** answer: 48, groundtruth_str: 48\pi
** groundtruth_num is not None
** is_fraction:  48
** groundtruth_num is (int, float)
** compare_two_numbers float 48 150.79644737231007
** wrong
**  558 1109
** answer: 0, groundtruth_str: -\frac{7}{17}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 -0.4117647058823529
** wrong
**  558 1110
** answer: √46, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  √46
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  558 1111
** answer: 4, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 8
** wrong
**  558 1112
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  558 1113
** answer: 2, groundtruth_str: -2
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 -2
** wrong
**  558 1114
** answer: 0.5, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers int 0.5 12
** wrong
**  558 1115
** answer: 18, groundtruth_str: 27
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 27
** wrong
**  558 1116
** answer: 1, groundtruth_str: \frac{7}{2}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 3.5
** wrong
**  558 1117
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  559 1117
** answer: 0, groundtruth_str: \frac{7}{8}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.875
** wrong
**  559 1118
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  560 1118
** answer: 0.2, groundtruth_str: \frac{3}{16}
** groundtruth_num is not None
** is_fraction:  0.2
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2 0.1875
** wrong
**  560 1119
** answer: 2, groundtruth_str: -4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 -4
** wrong
**  560 1120
** answer: 0, groundtruth_str: \frac{1}{18}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.05555555555555555
** wrong
**  560 1121
** answer: 4,-16,4,-8, groundtruth_str: (1,-16,-4,43)
** groundtruth_num is not None
** is_fraction:  4,-16,4,-8
** groundtruth_num is (int, float)
** compare_two_numbers int 4 -458
** wrong
**  560 1122
** answer: 94, groundtruth_str: 4561
** groundtruth_num is not None
** is_fraction:  94
** groundtruth_num is (int, float)
** compare_two_numbers int 94 4561
** wrong
**  560 1123
** answer: 512, groundtruth_str: 5120
** groundtruth_num is not None
** is_fraction:  512
** groundtruth_num is (int, float)
** compare_two_numbers int 512 5120
** wrong
**  560 1124
** answer: \frac{2}{3}, groundtruth_str: \frac{2}{3}
** compare on lower
** correct
**  561 1124
** answer: 3, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 21
** wrong
**  561 1125
** answer: (-6,2), groundtruth_str: \begin{pmatrix}1\3\end{pmatrix}
** wrong
**  561 1126
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  562 1126
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  563 1126
** answer: 1, groundtruth_str: \frac{11}{2}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 5.5
** wrong
**  563 1127
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  564 1127
** answer: \frac{27}{1024}, groundtruth_str: \frac{1}{128}
** groundtruth_num is not None
** is_fraction:  \frac{27}{1024}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0263671875 0.0078125
** wrong
**  564 1128
** answer: 31, groundtruth_str: 31
** compare on lower
** correct
**  565 1128
** answer: \frac{-40}{153}, groundtruth_str: -\frac{40}{153}
** groundtruth_num is not None
** is_fraction:  \frac{-40}{153}
** groundtruth_num is (int, float)
** compare_two_numbers float -0.26143790849673204 -0.26143790849673204
** correct
**  566 1128
** answer: 33, groundtruth_str: 33
** compare on lower
** correct
**  567 1128
** answer: 150609, groundtruth_str: 11218
** groundtruth_num is not None
** is_fraction:  150609
** groundtruth_num is (int, float)
** compare_two_numbers int 150609 11218
** wrong
**  567 1129
** answer: \frac{-4}{3}, groundtruth_str: -2
** groundtruth_num is not None
** is_fraction:  \frac{-4}{3}
** groundtruth_num is (int, float)
** compare_two_numbers int -1.3333333333333333 -2
** wrong
**  567 1130
** answer: 6, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 4
** wrong
**  567 1131
** answer: 14.5, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  14.5
** groundtruth_num is (int, float)
** compare_two_numbers int 14.5 26
** wrong
**  567 1132
** answer: 190, groundtruth_str: \frac{10}{19}
** groundtruth_num is not None
** is_fraction:  190
** groundtruth_num is (int, float)
** compare_two_numbers float 190 0.5263157894736842
** wrong
**  567 1133
** answer: 2, groundtruth_str: \sqrt{2}+\sqrt{6}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 3.8637033051562732
** wrong
**  567 1134
** answer: 50, groundtruth_str: 100
** groundtruth_num is not None
** is_fraction:  50
** groundtruth_num is (int, float)
** compare_two_numbers int 50 100
** wrong
**  567 1135
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  568 1135
** answer: 42, groundtruth_str: 68
** groundtruth_num is not None
** is_fraction:  42
** groundtruth_num is (int, float)
** compare_two_numbers int 42 68
** wrong
**  568 1136
** answer: 16, groundtruth_str: \frac{64}{3}
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers float 16 21.333333333333332
** wrong
**  568 1137
** answer: 5, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 8
** wrong
**  568 1138
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  569 1138
** answer: 0, groundtruth_str: -\frac{1}{4}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 -0.25
** wrong
**  569 1139
** answer: 0, groundtruth_str: \begin{pmatrix}1&2\-3&-5\end{pmatrix}
** wrong
**  569 1140
** answer: 1, groundtruth_str: 5\sqrt{2}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 7.0710678118654755
** wrong
**  569 1141
** answer: \frac{h^2}{m}, groundtruth_str: \frac{h^2}{m}
** compare on lower
** correct
**  570 1141
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  571 1141
** answer: -1, groundtruth_str: -1
** compare on lower
** correct
**  572 1141
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  573 1141
** answer: 1, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 12
** wrong
**  573 1142
** answer: 24, groundtruth_str: 32
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 32
** wrong
**  573 1143
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  574 1143
** answer: 0, groundtruth_str: \frac{1}{3}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.3333333333333333
** wrong
**  574 1144
** answer: 1, groundtruth_str: \frac{\sqrt{5}-1}{2}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.6180339887498949
** wrong
**  574 1145
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  575 1145
** answer: 2, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 5
** wrong
**  575 1146
** answer: (-\infty,\infty), groundtruth_str: [-2,0]
** groundtruth_num is not None
** is_fraction:  (-\infty,\infty)
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  575 1147
** answer: 0.179167, groundtruth_str: \frac{5}{28}
** groundtruth_num is not None
** is_fraction:  0.179167
** groundtruth_num is (int, float)
** compare_two_numbers float 0.179167 0.17857142857142858
** wrong
**  575 1148
** answer: 0.5, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.5
** correct
**  576 1148
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  577 1148
** answer: 7, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 21
** wrong
**  577 1149
** answer: 180, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  180
** groundtruth_num is (int, float)
** compare_two_numbers int 180 12
** wrong
**  577 1150
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  578 1150
** answer: 126, groundtruth_str: 126
** compare on lower
** correct
**  579 1150
** answer: 30, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 8
** wrong
**  579 1151
** answer: 20, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  20
** groundtruth_num is (int, float)
** compare_two_numbers int 20 18
** wrong
**  579 1152
** answer: 12, groundtruth_str: \sqrt{15}
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers float 12 3.872983346207417
** wrong
**  579 1153
** answer: 3, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 10
** wrong
**  579 1154
** answer: \frac{\frac{1}{3}\cos\theta}{1-2\cos\theta}, groundtruth_str: \frac{\sqrt{35}}{3}
** groundtruth_num is not None
** is_fraction:  \frac{\frac{1}{3}\cos\theta}{1-2\cos\theta}
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  579 1155
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  580 1155
** answer: 120, groundtruth_str: 116
** groundtruth_num is not None
** is_fraction:  120
** groundtruth_num is (int, float)
** compare_two_numbers int 120 116
** wrong
**  580 1156
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  581 1156
** answer: 998, groundtruth_str: 7004
** groundtruth_num is not None
** is_fraction:  998
** groundtruth_num is (int, float)
** compare_two_numbers int 998 7004
** wrong
**  581 1157
** answer: [-4,∞), groundtruth_str: (-\infty,-5]\cup[5,\infty)
** wrong
**  581 1158
** answer: 0, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 2
** wrong
**  581 1159
** answer: 18, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 36
** wrong
**  581 1160
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  582 1160
** answer: \begin{pmatrix}1\7\end{pmatrix}, groundtruth_str: \begin{pmatrix}1\7\end{pmatrix}
** compare on lower
** correct
**  583 1160
** answer: 0.0625, groundtruth_str: \frac{1}{16}
** groundtruth_num is not None
** is_fraction:  0.0625
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0625 0.0625
** correct
**  584 1160
** answer: 0.0637, groundtruth_str: \frac{13}{204}
** groundtruth_num is not None
** is_fraction:  0.0637
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0637 0.06372549019607843
** wrong
**  584 1161
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  585 1161
** answer: 2, groundtruth_str: 51
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 51
** wrong
**  585 1162
** answer: 1, groundtruth_str: \frac{1}{5}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.2
** wrong
**  585 1163
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  586 1163
** answer: \frac{121}{45}, groundtruth_str: \frac{56}{5}
** groundtruth_num is not None
** is_fraction:  \frac{121}{45}
** groundtruth_num is (int, float)
** compare_two_numbers float 2.688888888888889 11.2
** wrong
**  586 1164
** answer: -0.7071, groundtruth_str: -\frac{\sqrt{2}}{2}
** groundtruth_num is not None
** is_fraction:  -0.7071
** groundtruth_num is (int, float)
** compare_two_numbers float -0.7071 -0.7071067811865476
** wrong
**  586 1165
** answer: 30, groundtruth_str: 255
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 255
** wrong
**  586 1166
** answer: 4, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 8
** wrong
**  586 1167
** answer: 1, groundtruth_str: x^2-5
** wrong
**  586 1168
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  587 1168
** answer: 18.714285714, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  18.714285714
** groundtruth_num is (int, float)
** compare_two_numbers int 18.714285714 19
** correct
**  588 1168
** answer: even, groundtruth_str: \text{odd}
** wrong
**  588 1169
** answer: 42, groundtruth_str: 154
** groundtruth_num is not None
** is_fraction:  42
** groundtruth_num is (int, float)
** compare_two_numbers int 42 154
** wrong
**  588 1170
** answer: (-16,-4), groundtruth_str: (-16,-4)
** compare on lower
** correct
**  589 1170
** answer: 4, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 19
** wrong
**  589 1171
** answer: 2, groundtruth_str: x+1
** wrong
**  589 1172
** answer: 3, groundtruth_str: 341
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 341
** wrong
**  589 1173
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  589 1174
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  590 1174
** answer: 4, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 10
** wrong
**  590 1175
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  591 1175
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  592 1175
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  593 1175
** answer: 143, groundtruth_str: 143
** compare on lower
** correct
**  594 1175
** answer: 0.2, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  0.2
** groundtruth_num is (int, float)
** compare_two_numbers int 0.2 1
** wrong
**  594 1176
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  595 1176
** answer: 9, groundtruth_str: 100
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 100
** wrong
**  595 1177
** answer: 0, groundtruth_str: 936
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 936
** wrong
**  595 1178
** answer: C, groundtruth_str: \text{(B)}
** wrong
**  595 1179
** answer: 4, groundtruth_str: 29
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 29
** wrong
**  595 1180
** answer: 6,006,010, groundtruth_str: 75,075
** groundtruth_num is not None
** is_fraction:  6,006,010
** groundtruth_num is (int, float)
** compare_two_numbers int 6006010 75075
** wrong
**  595 1181
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  596 1181
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  597 1181
** answer: 8, groundtruth_str: 82
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 82
** wrong
**  597 1182
** answer: 39,600, groundtruth_str: 3600
** groundtruth_num is not None
** is_fraction:  39,600
** groundtruth_num is (int, float)
** compare_two_numbers int 39600 3600
** wrong
**  597 1183
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  598 1183
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  599 1183
** answer: 0.25, groundtruth_str: 3:1
** groundtruth_num is not None
** is_fraction:  0.25
** groundtruth_num is (int, float)
** compare_two_numbers int 0.25 3
** wrong
**  599 1184
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  600 1184
** answer: 503, groundtruth_str: \frac{2009}{4}
** groundtruth_num is not None
** is_fraction:  503
** groundtruth_num is (int, float)
** compare_two_numbers float 503 502.25
** wrong
**  600 1185
** answer: 135, groundtruth_str: 135
** compare on lower
** correct
**  601 1185
** answer: -20, groundtruth_str: 79
** groundtruth_num is not None
** is_fraction:  -20
** groundtruth_num is (int, float)
** compare_two_numbers int -20 79
** wrong
**  601 1186
** answer: 3, groundtruth_str: 561
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 561
** wrong
**  601 1187
** answer: 5, groundtruth_str: \sqrt{5}
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers float 5 2.23606797749979
** wrong
**  601 1188
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  602 1188
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  603 1188
** answer: 16, groundtruth_str: 66
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 66
** wrong
**  603 1189
** answer: 5, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 16
** wrong
**  603 1190
** answer: 25π, groundtruth_str: 25\pi
** groundtruth_num is not None
** is_fraction:  25π
** groundtruth_num is (int, float)
** compare_two_numbers float 78.5 78.53981633974483
** wrong
**  603 1191
** answer: \begin{pmatrix}2&3\-1&5\end{pmatrix}, groundtruth_str: \begin{pmatrix}8&12\-4&20\end{pmatrix}
** wrong
**  603 1192
** answer: 4, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 9
** wrong
**  603 1193
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  604 1193
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  605 1193
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  606 1193
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  607 1193
** answer: 0.6667, groundtruth_str: \frac{2}{3}
** groundtruth_num is not None
** is_fraction:  0.6667
** groundtruth_num is (int, float)
** compare_two_numbers float 0.6667 0.6666666666666666
** wrong
**  607 1194
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  608 1194
** answer: 0.5, groundtruth_str: \frac{2}{5}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.4
** wrong
**  608 1195
** answer: √73, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  √73
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  608 1196
** answer: \begin{bmatrix}0&0&0\0&1&1\0&1&1\end{bmatrix}, groundtruth_str: \begin{pmatrix}0&0&0\0&1&0\0&0&1\end{pmatrix}
** wrong
**  608 1197
** answer: 11, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 19
** wrong
**  608 1198
** answer: 1951, groundtruth_str: 1951
** compare on lower
** correct
**  609 1198
** answer: 3720.0, groundtruth_str: 3720
** groundtruth_num is not None
** is_fraction:  3720.0
** groundtruth_num is (int, float)
** compare_two_numbers int 3720 3720
** correct
**  610 1198
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  611 1198
** answer: x, groundtruth_str: -\frac{1}{2x}
** wrong
**  611 1199
** answer: 18, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 50
** wrong
**  611 1200
** answer: 0.5, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers int 0.5 0
** correct
**  612 1200
** answer: \frac{\sqrt{3}}{2}, groundtruth_str: \frac{\sqrt{3}}{2}
** compare on lower
** correct
**  613 1200
** answer: 17, groundtruth_str: 38
** groundtruth_num is not None
** is_fraction:  17
** groundtruth_num is (int, float)
** compare_two_numbers int 17 38
** wrong
**  613 1201
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  614 1201
** answer: 3, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 6
** wrong
**  614 1202
** answer: 5, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 8
** wrong
**  614 1203
** answer: 3, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 7
** wrong
**  614 1204
** answer: 191, groundtruth_str: 175
** groundtruth_num is not None
** is_fraction:  191
** groundtruth_num is (int, float)
** compare_two_numbers int 191 175
** wrong
**  614 1205
** answer: 225, groundtruth_str: 50,625
** groundtruth_num is not None
** is_fraction:  225
** groundtruth_num is (int, float)
** compare_two_numbers int 225 50625
** wrong
**  614 1206
** answer: -3, groundtruth_str: -3
** compare on lower
** correct
**  615 1206
** answer: 16, groundtruth_str: 2\sqrt{22}
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers float 16 9.38083151964686
** wrong
**  615 1207
** answer: 3, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 12
** wrong
**  615 1208
** answer: 3, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 8
** wrong
**  615 1209
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  616 1209
** answer: 1, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 80
** wrong
**  616 1210
** answer: 0.9128742287, groundtruth_str: -\frac{24}{25}
** groundtruth_num is not None
** is_fraction:  0.9128742287
** groundtruth_num is (int, float)
** compare_two_numbers float 0.9128742287 -0.96
** wrong
**  616 1211
** answer: \frac{9}{5}, groundtruth_str: \frac{9}{5}
** compare on lower
** correct
**  617 1211
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  618 1211
** answer: -9, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  -9
** groundtruth_num is (int, float)
** compare_two_numbers int -9 9
** wrong
**  618 1212
** answer: 3, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 12
** wrong
**  618 1213
** answer: 990, groundtruth_str: 990
** compare on lower
** correct
**  619 1213
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  620 1213
** answer: 8, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 15
** wrong
**  620 1214
** answer: 6.125, groundtruth_str: \frac{49}{8}
** groundtruth_num is not None
** is_fraction:  6.125
** groundtruth_num is (int, float)
** compare_two_numbers float 6.125 6.125
** correct
**  621 1214
** answer: 1, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 18
** wrong
**  621 1215
** answer: 7.38, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  7.38
** groundtruth_num is (int, float)
** compare_two_numbers int 7.38 10
** wrong
**  621 1216
** answer: 1, groundtruth_str: 2004
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2004
** wrong
**  621 1217
** answer: 100, groundtruth_str: 70
** groundtruth_num is not None
** is_fraction:  100
** groundtruth_num is (int, float)
** compare_two_numbers int 100 70
** wrong
**  621 1218
** answer: 90, groundtruth_str: 5400
** groundtruth_num is not None
** is_fraction:  90
** groundtruth_num is (int, float)
** compare_two_numbers int 90 5400
** wrong
**  621 1219
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  622 1219
** answer: 16, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 30
** wrong
**  622 1220
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  623 1220
** answer: 31, groundtruth_str: 28
** groundtruth_num is not None
** is_fraction:  31
** groundtruth_num is (int, float)
** compare_two_numbers int 31 28
** wrong
**  623 1221
** answer: 1, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 24
** wrong
**  623 1222
** answer: 3.5, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  3.5
** groundtruth_num is (int, float)
** compare_two_numbers int 3.5 6
** wrong
**  623 1223
** answer: 9.5, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  9.5
** groundtruth_num is (int, float)
** compare_two_numbers int 9.5 15
** wrong
**  623 1224
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  623 1225
** answer: 123.12, groundtruth_str: 123
** groundtruth_num is not None
** is_fraction:  123.12
** groundtruth_num is (int, float)
** compare_two_numbers int 123.12 123
** correct
**  624 1225
** answer: 6840, groundtruth_str: 6840
** compare on lower
** correct
**  625 1225
** answer: 81, groundtruth_str: 81
** compare on lower
** correct
**  626 1225
** answer: anyvalue, groundtruth_str: \frac{1}{9}
** groundtruth_num is not None
** is_fraction:  anyvalue
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  626 1226
** answer: 12, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 24
** wrong
**  626 1227
** answer: [1,9], groundtruth_str: [1,9]
** compare on lower
** correct
**  627 1227
** answer: -20.175, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  -20.175
** groundtruth_num is (int, float)
** compare_two_numbers int -20.175 18
** wrong
**  627 1228
** answer: 3964791193, groundtruth_str: \frac{1777}{1492}
** groundtruth_num is not None
** is_fraction:  3964791193
** groundtruth_num is (int, float)
** compare_two_numbers float 3964791193 1.1910187667560321
** wrong
**  627 1229
** answer: 2\cos60, groundtruth_str: 2\cos15
** groundtruth_num is not None
** is_fraction:  2\cos60
** groundtruth_num is (int, float)
** compare_two_numbers float -1.9048259608303126 5.403023058681397
** wrong
**  627 1230
** answer: \frac{4}{9}, groundtruth_str: \frac{1}{6}
** groundtruth_num is not None
** is_fraction:  \frac{4}{9}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.4444444444444444 0.16666666666666666
** wrong
**  627 1231
** answer: 0, groundtruth_str: \begin{pmatrix}-1\-8\2\end{pmatrix}
** wrong
**  627 1232
** answer: \frac{1}{6}, groundtruth_str: \frac{91}{216}
** groundtruth_num is not None
** is_fraction:  \frac{1}{6}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.16666666666666666 0.4212962962962963
** wrong
**  627 1233
** answer: 1234, groundtruth_str: 1155
** groundtruth_num is not None
** is_fraction:  1234
** groundtruth_num is (int, float)
** compare_two_numbers int 1234 1155
** wrong
**  627 1234
** answer: undefined, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  undefined
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  627 1235
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  628 1235
** answer: \frac{1}{3}, groundtruth_str: \frac{1}{3}
** compare on lower
** correct
**  629 1235
** answer: \frac{2}{3}, groundtruth_str: \frac{2}{3}
** compare on lower
** correct
**  630 1235
** answer: 9, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 10
** wrong
**  630 1236
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  631 1236
** answer: 9, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 12
** wrong
**  631 1237
** answer: 3.7, groundtruth_str: 3.5
** groundtruth_num is not None
** is_fraction:  3.7
** groundtruth_num is (int, float)
** compare_two_numbers float 3.7 3.5
** wrong
**  631 1238
** answer: \frac{84}{7}, groundtruth_str: 8\frac{4}{7}
** groundtruth_num is not None
** is_fraction:  \frac{84}{7}
** groundtruth_num is (int, float)
** compare_two_numbers int 12 12
** correct
**  632 1238
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  633 1238
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  634 1238
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  635 1238
** answer: -1≤x≤1, groundtruth_str: [-\frac{\pi}{2},\frac{\pi}{2}]
** groundtruth_num is not None
** is_fraction:  -1≤x≤1
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  635 1239
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  636 1239
** answer: 1, groundtruth_str: \sqrt{3}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 1.7320508075688772
** wrong
**  636 1240
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  637 1240
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  638 1240
** answer: 49, groundtruth_str: 49
** compare on lower
** correct
**  639 1240
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  640 1240
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  641 1240
** answer: 3, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 5
** wrong
**  641 1241
** answer: 6, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 12
** wrong
**  641 1242
** answer: 4, groundtruth_str: (4,\pi)
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 4
** correct
**  642 1242
** answer: 4, groundtruth_str: 216
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 216
** wrong
**  642 1243
** answer: π/3, groundtruth_str: -\frac{\pi}{3}
** groundtruth_num is not None
** is_fraction:  π/3
** groundtruth_num is (int, float)
** compare_two_numbers float 1.0466666666666666 -1.0471975511965976
** wrong
**  642 1244
** answer: \frac{4}{9}, groundtruth_str: \frac{4}{9}
** compare on lower
** correct
**  643 1244
** answer: (-∞,2)∪(2,3)∪(3,∞), groundtruth_str: (-\infty,2)\cup(3,\infty)
** wrong
**  643 1245
** answer: 1.9242272147951837e-7, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  1.9242272147951837e-7
** groundtruth_num is (int, float)
** compare_two_numbers int -1.7699504301866913 0
** wrong
**  643 1246
** answer: 0, groundtruth_str: -4
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -4
** wrong
**  643 1247
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  644 1247
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  645 1247
** answer: 4800, groundtruth_str: 1599
** groundtruth_num is not None
** is_fraction:  4800
** groundtruth_num is (int, float)
** compare_two_numbers int 4800 1599
** wrong
**  645 1248
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  646 1248
** answer: 5.5,-1,1, groundtruth_str: (\frac{11}{2},-1,1)
** groundtruth_num is not None
** is_fraction:  5.5,-1,1
** groundtruth_num is (int, float)
** compare_two_numbers float 5.5 5.5
** correct
**  647 1248
** answer: 6x^2+18x+12, groundtruth_str: 6x^2+30x+36
** wrong
**  647 1249
** answer: 4, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 16
** wrong
**  647 1250
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  648 1250
** answer: -2,1, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  -2,1
** groundtruth_num is (int, float)
** compare_two_numbers int -2 1
** wrong
**  648 1251
** answer: 1, groundtruth_str: -\frac{2010012}{2010013}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 -0.99999950249078
** wrong
**  648 1252
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  649 1252
** answer: 4, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 10
** wrong
**  649 1253
** answer: 3, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 9
** wrong
**  649 1254
** answer: 140, groundtruth_str: 140
** compare on lower
** correct
**  650 1254
** answer: 39366, groundtruth_str: 41230
** groundtruth_num is not None
** is_fraction:  39366
** groundtruth_num is (int, float)
** compare_two_numbers int 39366 41230
** wrong
**  650 1255
** answer: 0.5, groundtruth_str: 500
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers int 0.5 500
** wrong
**  650 1256
** answer: 4, groundtruth_str: \frac{8}{3}
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers float 4 2.6666666666666665
** wrong
**  650 1257
** answer: \frac{3}{2}, groundtruth_str: -\frac{1}{8}
** groundtruth_num is not None
** is_fraction:  \frac{3}{2}
** groundtruth_num is (int, float)
** compare_two_numbers float 1.5 -0.125
** wrong
**  650 1258
** answer: 20, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  20
** groundtruth_num is (int, float)
** compare_two_numbers int 20 10
** wrong
**  650 1259
** answer: 4, groundtruth_str: 3\frac{1}{8}
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers float 4 3.875
** wrong
**  650 1260
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  651 1260
** answer: 3, groundtruth_str: 333
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 333
** wrong
**  651 1261
** answer: b^5-b^4+2b^3+b^2-b, groundtruth_str: 100100
** groundtruth_num is not None
** is_fraction:  b^5-b^4+2b^3+b^2-b
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  651 1262
** answer: -8, groundtruth_str: -8
** compare on lower
** correct
**  652 1262
** answer: 15, groundtruth_str: 400
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 400
** wrong
**  652 1263
** answer: 16, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 11
** wrong
**  652 1264
** answer: 512, groundtruth_str: 512
** compare on lower
** correct
**  653 1264
** answer: p, groundtruth_str: p+q-r
** wrong
**  653 1265
** answer: 12x-34, groundtruth_str: -34+12x
** wrong
**  653 1266
** answer: 0, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 80
** wrong
**  653 1267
** answer: \frac{7}{6}, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  \frac{7}{6}
** groundtruth_num is (int, float)
** compare_two_numbers int 1.1666666666666667 3
** wrong
**  653 1268
** answer: -0.8660254037844386, groundtruth_str: \frac{\sqrt{3}}{2}
** groundtruth_num is not None
** is_fraction:  -0.8660254037844386
** groundtruth_num is (int, float)
** compare_two_numbers float -0.8660254037844386 0.8660254037844386
** wrong
**  653 1269
** answer: 60, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 40
** wrong
**  653 1270
** answer: 2, groundtruth_str: \sqrt{5}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 2.23606797749979
** wrong
**  653 1271
** answer: 4π, groundtruth_str: \frac{8\pi}5
** groundtruth_num is not None
** is_fraction:  4π
** groundtruth_num is (int, float)
** compare_two_numbers float 12.56 5.026548245743669
** wrong
**  653 1272
** answer: -9, groundtruth_str: -9
** compare on lower
** correct
**  654 1272
** answer: (21,22), groundtruth_str: (6,7)
** groundtruth_num is not None
** is_fraction:  (21,22)
** groundtruth_num is (int, float)
** compare_two_numbers int 21 67
** wrong
**  654 1273
** answer: 1, groundtruth_str: 0.50
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.5
** wrong
**  654 1274
** answer: C, groundtruth_str: \text{(B)}
** wrong
**  654 1275
** answer: 144, groundtruth_str: 144
** compare on lower
** correct
**  655 1275
** answer: 3, groundtruth_str: \frac{3}{2}
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers float 3 1.5
** wrong
**  655 1276
** answer: -1.8, groundtruth_str: -\frac{9}{5}
** groundtruth_num is not None
** is_fraction:  -1.8
** groundtruth_num is (int, float)
** compare_two_numbers float -1.8 -1.8
** correct
**  656 1276
** answer: 1, groundtruth_str: \frac{8}{3}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 2.6666666666666665
** wrong
**  656 1277
** answer: 1, groundtruth_str: 67
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 67
** wrong
**  656 1278
** answer: 13, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  13
** groundtruth_num is (int, float)
** compare_two_numbers int 13 11
** wrong
**  656 1279
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  657 1279
** answer: 0.3, groundtruth_str: \frac{7}{20}
** groundtruth_num is not None
** is_fraction:  0.3
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3 0.35
** wrong
**  657 1280
** answer: 2√3, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  2√3
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  657 1281
** answer: 150, groundtruth_str: 160
** groundtruth_num is not None
** is_fraction:  150
** groundtruth_num is (int, float)
** compare_two_numbers int 150 160
** wrong
**  657 1282
** answer: 168, groundtruth_str: 288
** groundtruth_num is not None
** is_fraction:  168
** groundtruth_num is (int, float)
** compare_two_numbers int 168 288
** wrong
**  657 1283
** answer: (-∞,∞), groundtruth_str: (-\infty,-3)
** wrong
**  657 1284
** answer: 252, groundtruth_str: 128
** groundtruth_num is not None
** is_fraction:  252
** groundtruth_num is (int, float)
** compare_two_numbers int 252 128
** wrong
**  657 1285
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  658 1285
** answer: 3.5, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  3.5
** groundtruth_num is (int, float)
** compare_two_numbers int 3.5 2
** wrong
**  658 1286
** answer: 115, groundtruth_str: 55
** groundtruth_num is not None
** is_fraction:  115
** groundtruth_num is (int, float)
** compare_two_numbers int 115 55
** wrong
**  658 1287
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  659 1287
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  660 1287
** answer: 0.05, groundtruth_str: 3.2
** groundtruth_num is not None
** is_fraction:  0.05
** groundtruth_num is (int, float)
** compare_two_numbers float 0.05 3.2
** wrong
**  660 1288
** answer: 26, groundtruth_str: [46,\infty)
** wrong
**  660 1289
** answer: 0, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 2
** wrong
**  660 1290
** answer: C, groundtruth_str: \text{C}
** compare on lower
** correct
**  661 1290
** answer: 1, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 36
** wrong
**  661 1291
** answer: 0, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 1
** wrong
**  661 1292
** answer: 1.25, groundtruth_str: 0.8
** groundtruth_num is not None
** is_fraction:  1.25
** groundtruth_num is (int, float)
** compare_two_numbers float 1.25 0.8
** wrong
**  661 1293
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  662 1293
** answer: 150, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  150
** groundtruth_num is (int, float)
** compare_two_numbers int 150 7
** wrong
**  662 1294
** answer: 28.0, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  28.0
** groundtruth_num is (int, float)
** compare_two_numbers int 28 20
** wrong
**  662 1295
** answer: 63, groundtruth_str: 63
** compare on lower
** correct
**  663 1295
** answer: 0.5, groundtruth_str: 4,20
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers int 0.5 420
** wrong
**  663 1296
** answer: -4, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  -4
** groundtruth_num is (int, float)
** compare_two_numbers int -4 20
** wrong
**  663 1297
** answer: π, groundtruth_str: \pi
** groundtruth_num is not None
** is_fraction:  π
** groundtruth_num is (int, float)
** compare_two_numbers float 3.14 3.141592653589793
** wrong
**  663 1298
** answer: 78, groundtruth_str: 78
** compare on lower
** correct
**  664 1298
** answer: 112, groundtruth_str: 22
** groundtruth_num is not None
** is_fraction:  112
** groundtruth_num is (int, float)
** compare_two_numbers int 112 22
** wrong
**  664 1299
** answer: \frac{40}{243}, groundtruth_str: \frac{40}{243}
** compare on lower
** correct
**  665 1299
** answer: 24, groundtruth_str: 163
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 163
** wrong
**  665 1300
** answer: \frac{9}{19}, groundtruth_str: \frac{9}{19}
** compare on lower
** correct
**  666 1300
** answer: 7.50, groundtruth_str: 7.50
** compare on lower
** correct
**  667 1300
** answer: 15, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 13
** wrong
**  667 1301
** answer: \frac{1}{9}, groundtruth_str: \frac{8}{45}
** groundtruth_num is not None
** is_fraction:  \frac{1}{9}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1111111111111111 0.17777777777777778
** wrong
**  667 1302
** answer: 18, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 36
** wrong
**  667 1303
** answer: 6√10, groundtruth_str: 8\sqrt{55}
** groundtruth_num is not None
** is_fraction:  6√10
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  667 1304
** answer: -4s^2+7, groundtruth_str: 3s^2
** wrong
**  667 1305
** answer: 0, groundtruth_str: 112
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 112
** wrong
**  667 1306
** answer: 76, groundtruth_str: 76
** compare on lower
** correct
**  668 1306
** answer: 9, groundtruth_str: 104
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 104
** wrong
**  668 1307
** answer: 1, groundtruth_str: (0,1)
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 0
** wrong
**  668 1308
** answer: 280, groundtruth_str: 280
** compare on lower
** correct
**  669 1308
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  670 1308
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  671 1308
** answer: 25, groundtruth_str: 25\,\text{km}
** wrong
**  671 1309
** answer: 6, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 18
** wrong
**  671 1310
** answer: \frac{\sqrt{35}}{18}, groundtruth_str: \frac{1}{9}
** groundtruth_num is not None
** is_fraction:  \frac{\sqrt{35}}{18}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.32867109906108977 0.1111111111111111
** wrong
**  671 1311
** answer: 3.302775637731994, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  3.302775637731994
** groundtruth_num is (int, float)
** compare_two_numbers int 3.302775637731994 2
** wrong
**  671 1312
** answer: x^5-x^4+x^3-x^2+x+1, groundtruth_str: x^5-x^4+x^3-x^2+x-1
** wrong
**  671 1313
** answer: 2+√3, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  2+√3
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  671 1314
** answer: 637.49, groundtruth_str: 450
** groundtruth_num is not None
** is_fraction:  637.49
** groundtruth_num is (int, float)
** compare_two_numbers int 637.49 450
** wrong
**  671 1315
** answer: -1, groundtruth_str: -2
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers int -1 -2
** wrong
**  671 1316
** answer: 13, groundtruth_str: 104
** groundtruth_num is not None
** is_fraction:  13
** groundtruth_num is (int, float)
** compare_two_numbers int 13 104
** wrong
**  671 1317
** answer: 0.1667, groundtruth_str: \frac{1}{6}
** groundtruth_num is not None
** is_fraction:  0.1667
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1667 0.16666666666666666
** wrong
**  671 1318
** answer: 8.0, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  8.0
** groundtruth_num is (int, float)
** compare_two_numbers int 8 8
** correct
**  672 1318
** answer: undefined, groundtruth_str: 116-75i
** wrong
**  672 1319
** answer: 0,π, groundtruth_str: \pi
** groundtruth_num is not None
** is_fraction:  0,π
** groundtruth_num is (int, float)
** compare_two_numbers float 0 3.141592653589793
** wrong
**  672 1320
** answer: 15, groundtruth_str: \frac{3}{2}
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers float 15 1.5
** wrong
**  672 1321
** answer: 3, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 15
** wrong
**  672 1322
** answer: 0.5, groundtruth_str: \frac{7}{8}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.875
** wrong
**  672 1323
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  673 1323
** answer: 215_6, groundtruth_str: 25_{6}
** groundtruth_num is not None
** is_fraction:  215_6
** groundtruth_num is (int, float)
** compare_two_numbers int 215 25
** wrong
**  673 1324
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  674 1324
** answer: 1500, groundtruth_str: 1500
** compare on lower
** correct
**  675 1324
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  676 1324
** answer: 12, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 16
** wrong
**  676 1325
** answer: 18√2, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  18√2
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  676 1326
** answer: (1,6), groundtruth_str: (-1,8)
** groundtruth_num is not None
** is_fraction:  (1,6)
** groundtruth_num is (int, float)
** compare_two_numbers int 1 -18
** wrong
**  676 1327
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  677 1327
** answer: -1, groundtruth_str: (-4x^2+x+1)(4x^2+x+1)
** wrong
**  677 1328
** answer: 6.0, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  6.0
** groundtruth_num is (int, float)
** compare_two_numbers int 6 6
** correct
**  678 1328
** answer: 60, groundtruth_str: 49
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 49
** wrong
**  678 1329
** answer: 20, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  20
** groundtruth_num is (int, float)
** compare_two_numbers int 20 16
** wrong
**  678 1330
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  679 1330
** answer: 1518, groundtruth_str: 1518
** compare on lower
** correct
**  680 1330
** answer: 8, groundtruth_str: 8-i
** wrong
**  680 1331
** answer: 5040, groundtruth_str: 5040
** compare on lower
** correct
**  681 1331
** answer: 9.0, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  9.0
** groundtruth_num is (int, float)
** compare_two_numbers int 9 9
** correct
**  682 1331
** answer: 1.6, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  1.6
** groundtruth_num is (int, float)
** compare_two_numbers int 1.6 25
** wrong
**  682 1332
** answer: 7p+4e, groundtruth_str: 7p+4e
** compare on lower
** correct
**  683 1332
** answer: 2, groundtruth_str: 2^{2005}
** wrong
**  683 1333
** answer: \frac{11}{3}, groundtruth_str: \frac{14}{3}
** groundtruth_num is not None
** is_fraction:  \frac{11}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 3.6666666666666665 4.666666666666667
** wrong
**  683 1334
** answer: 33, groundtruth_str: 27
** groundtruth_num is not None
** is_fraction:  33
** groundtruth_num is (int, float)
** compare_two_numbers int 33 27
** wrong
**  683 1335
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  684 1335
** answer: 180, groundtruth_str: 906
** groundtruth_num is not None
** is_fraction:  180
** groundtruth_num is (int, float)
** compare_two_numbers int 180 906
** wrong
**  684 1336
** answer: 30, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 18
** wrong
**  684 1337
** answer: 0.25, groundtruth_str: \frac{5}{9}
** groundtruth_num is not None
** is_fraction:  0.25
** groundtruth_num is (int, float)
** compare_two_numbers float 0.25 0.5555555555555556
** wrong
**  684 1338
** answer: 0.8, groundtruth_str: \frac{10}{11}
** groundtruth_num is not None
** is_fraction:  0.8
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8 0.9090909090909091
** wrong
**  684 1339
** answer: 40, groundtruth_str: 55
** groundtruth_num is not None
** is_fraction:  40
** groundtruth_num is (int, float)
** compare_two_numbers int 40 55
** wrong
**  684 1340
** answer: 0.1667, groundtruth_str: \frac{1}{6}
** groundtruth_num is not None
** is_fraction:  0.1667
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1667 0.16666666666666666
** wrong
**  684 1341
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  685 1341
** answer: (-25,355,-519,\frac{2060}{3}), groundtruth_str: (4,1,4,0)
** groundtruth_num is not None
** is_fraction:  (-25,355,-519,\frac{2060}{3})
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  685 1342
** answer: 1, groundtruth_str: -4
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 -4
** wrong
**  685 1343
** answer: 3, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 5
** wrong
**  685 1344
** answer: 12313, groundtruth_str: 11189
** groundtruth_num is not None
** is_fraction:  12313
** groundtruth_num is (int, float)
** compare_two_numbers int 12313 11189
** wrong
**  685 1345
** answer: 4, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 3
** wrong
**  685 1346
** answer: 1080, groundtruth_str: 5400
** groundtruth_num is not None
** is_fraction:  1080
** groundtruth_num is (int, float)
** compare_two_numbers int 1080 5400
** wrong
**  685 1347
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  686 1347
** answer: 12, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 16
** wrong
**  686 1348
** answer: 36, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  36
** groundtruth_num is (int, float)
** compare_two_numbers int 36 8
** wrong
**  686 1349
** answer: 348.54, groundtruth_str: \sqrt{74}
** groundtruth_num is not None
** is_fraction:  348.54
** groundtruth_num is (int, float)
** compare_two_numbers float 348.54 8.602325267042627
** wrong
**  686 1350
** answer: \frac{4}{9}, groundtruth_str: \frac{8}{9}
** groundtruth_num is not None
** is_fraction:  \frac{4}{9}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.4444444444444444 0.8888888888888888
** wrong
**  686 1351
** answer: 5.0, groundtruth_str: 7.2
** groundtruth_num is not None
** is_fraction:  5.0
** groundtruth_num is (int, float)
** compare_two_numbers float 5 7.2
** wrong
**  686 1352
** answer: 2.5, groundtruth_str: 125
** groundtruth_num is not None
** is_fraction:  2.5
** groundtruth_num is (int, float)
** compare_two_numbers int 2.5 125
** wrong
**  686 1353
** answer: 18081.5, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  18081.5
** groundtruth_num is (int, float)
** compare_two_numbers int 18081.5 0
** wrong
**  686 1354
** answer: 12, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 24
** wrong
**  686 1355
** answer: c^2-a^2, groundtruth_str: 32R^2-3(a^2+b^2+c^2)
** wrong
**  686 1356
** answer: 0.25, groundtruth_str: \frac{1}{8}
** groundtruth_num is not None
** is_fraction:  0.25
** groundtruth_num is (int, float)
** compare_two_numbers float 0.25 0.125
** wrong
**  686 1357
** answer: 14.5, groundtruth_str: (7,6)
** groundtruth_num is not None
** is_fraction:  14.5
** groundtruth_num is (int, float)
** compare_two_numbers int 14.5 76
** wrong
**  686 1358
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  687 1358
** answer: -1, groundtruth_str: -81
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers int -1 -81
** wrong
**  687 1359
** answer: 6, groundtruth_str: \begin{pmatrix}6/5\-17/5\end{pmatrix}
** wrong
**  687 1360
** answer: undefined, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  undefined
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  687 1361
** answer: 0.196, groundtruth_str: \frac{16}{81}
** groundtruth_num is not None
** is_fraction:  0.196
** groundtruth_num is (int, float)
** compare_two_numbers float 0.196 0.19753086419753085
** wrong
**  687 1362
** answer: 619, groundtruth_str: 687
** groundtruth_num is not None
** is_fraction:  619
** groundtruth_num is (int, float)
** compare_two_numbers int 619 687
** wrong
**  687 1363
** answer: 1536, groundtruth_str: 192
** groundtruth_num is not None
** is_fraction:  1536
** groundtruth_num is (int, float)
** compare_two_numbers int 1536 192
** wrong
**  687 1364
** answer: 9π, groundtruth_str: 9\pi
** groundtruth_num is not None
** is_fraction:  9π
** groundtruth_num is (int, float)
** compare_two_numbers float 28.26 28.274333882308138
** wrong
**  687 1365
** answer: -6, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  -6
** groundtruth_num is (int, float)
** compare_two_numbers int -6 0
** wrong
**  687 1366
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  688 1366
** answer: neither, groundtruth_str: \text{neither}
** compare on lower
** correct
**  689 1366
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  690 1366
** answer: 15554, groundtruth_str: 15554
** compare on lower
** correct
**  691 1366
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  692 1366
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  693 1366
** answer: 217, groundtruth_str: 217
** compare on lower
** correct
**  694 1366
** answer: 96, groundtruth_str: 144
** groundtruth_num is not None
** is_fraction:  96
** groundtruth_num is (int, float)
** compare_two_numbers int 96 144
** wrong
**  694 1367
** answer: 15, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 4
** wrong
**  694 1368
** answer: 57, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  57
** groundtruth_num is (int, float)
** compare_two_numbers int 57 6
** wrong
**  694 1369
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  695 1369
** answer: 11, groundtruth_str: -11
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 -11
** wrong
**  695 1370
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  696 1370
** answer: \begin{pmatrix}7\-2\end{pmatrix}, groundtruth_str: \begin{pmatrix}7\-2\end{pmatrix}
** compare on lower
** correct
**  697 1370
** answer: (\frac{4}{5},\frac{1}{5}), groundtruth_str: (\frac{4}{3},-\frac{1}{3})
** groundtruth_num is not None
** is_fraction:  (\frac{4}{5},\frac{1}{5})
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  697 1371
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  698 1371
** answer: 54, groundtruth_str: 54
** compare on lower
** correct
**  699 1371
** answer: 127, groundtruth_str: 165
** groundtruth_num is not None
** is_fraction:  127
** groundtruth_num is (int, float)
** compare_two_numbers int 127 165
** wrong
**  699 1372
** answer: 13, groundtruth_str: 81
** groundtruth_num is not None
** is_fraction:  13
** groundtruth_num is (int, float)
** compare_two_numbers int 13 81
** wrong
**  699 1373
** answer: (0,0), groundtruth_str: (1,-2)
** groundtruth_num is not None
** is_fraction:  (0,0)
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -1
** wrong
**  699 1374
** answer: 11, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 7
** wrong
**  699 1375
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  699 1376
** answer: \frac{25}{3}, groundtruth_str: \frac{25}{3}
** compare on lower
** correct
**  700 1376
** answer: 12, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 0
** wrong
**  700 1377
** answer: 86, groundtruth_str: 1076
** groundtruth_num is not None
** is_fraction:  86
** groundtruth_num is (int, float)
** compare_two_numbers int 86 1076
** wrong
**  700 1378
** answer: 7and8, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  7and8
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  700 1379
** answer: 0, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 7
** wrong
**  700 1380
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  701 1380
** answer: -5, groundtruth_str: -5
** compare on lower
** correct
**  702 1380
** answer: 1, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 4
** wrong
**  702 1381
** answer: 61, groundtruth_str: 61
** compare on lower
** correct
**  703 1381
** answer: 2π√2028, groundtruth_str: 78\pi
** groundtruth_num is not None
** is_fraction:  2π√2028
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  703 1382
** answer: 0.73, groundtruth_str: 0.73
** compare on lower
** correct
**  704 1382
** answer: 4, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 2
** wrong
**  704 1383
** answer: D, groundtruth_str: \text{D}
** compare on lower
** correct
**  705 1383
** answer: 1, groundtruth_str: \sqrt{5}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 2.23606797749979
** wrong
**  705 1384
** answer: 165, groundtruth_str: 165
** compare on lower
** correct
**  706 1384
** answer: \frac{7}{36}, groundtruth_str: \frac{1}{108}
** groundtruth_num is not None
** is_fraction:  \frac{7}{36}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.19444444444444445 0.009259259259259259
** wrong
**  706 1385
** answer: -15, groundtruth_str: -9
** groundtruth_num is not None
** is_fraction:  -15
** groundtruth_num is (int, float)
** compare_two_numbers int -15 -9
** wrong
**  706 1386
** answer: 0.1111, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0.1111
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1111 0.5
** wrong
**  706 1387
** answer: 0.1, groundtruth_str: \frac{1}{3}
** groundtruth_num is not None
** is_fraction:  0.1
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1 0.3333333333333333
** wrong
**  706 1388
** answer: 476, groundtruth_str: 2112_6
** groundtruth_num is not None
** is_fraction:  476
** groundtruth_num is (int, float)
** compare_two_numbers int 476 21126
** wrong
**  706 1389
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  707 1389
** answer: 0, groundtruth_str: -7
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -7
** wrong
**  707 1390
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  708 1390
** answer: 1.2, groundtruth_str: \frac{6}{5}
** groundtruth_num is not None
** is_fraction:  1.2
** groundtruth_num is (int, float)
** compare_two_numbers float 1.2 1.2
** correct
**  709 1390
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  710 1390
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  711 1390
** answer: 256, groundtruth_str: 256
** compare on lower
** correct
**  712 1390
** answer: 8, groundtruth_str: \frac{192\sqrt{14}}{25}
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers float 8 28.73592873042387
** wrong
**  712 1391
** answer: 0, groundtruth_str: 900
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 900
** wrong
**  712 1392
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  713 1392
** answer: 4, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 3
** wrong
**  713 1393
** answer: 0, groundtruth_str: \frac{14}{3}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 4.666666666666667
** wrong
**  713 1394
** answer: 16, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 36
** wrong
**  713 1395
** answer: 60, groundtruth_str: 120
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 120
** wrong
**  713 1396
** answer: 144, groundtruth_str: 720
** groundtruth_num is not None
** is_fraction:  144
** groundtruth_num is (int, float)
** compare_two_numbers int 144 720
** wrong
**  713 1397
** answer: \frac{10}{11}, groundtruth_str: \frac{10}{11}
** compare on lower
** correct
**  714 1397
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  715 1397
** answer: 1475, groundtruth_str: 255
** groundtruth_num is not None
** is_fraction:  1475
** groundtruth_num is (int, float)
** compare_two_numbers int 1475 255
** wrong
**  715 1398
** answer: 1, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 19
** wrong
**  715 1399
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  716 1399
** answer: 16/3π, groundtruth_str: \frac{176}{3}\pi
** groundtruth_num is not None
** is_fraction:  16/3π
** groundtruth_num is (int, float)
** compare_two_numbers float 16.746666666666666 184.30676901060122
** wrong
**  716 1400
** answer: 0, groundtruth_str: -\frac{\sqrt{3}}{2}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 -0.8660254037844386
** wrong
**  716 1401
** answer: 19, groundtruth_str: 19
** compare on lower
** correct
**  717 1401
** answer: 0, groundtruth_str: -14
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -14
** wrong
**  717 1402
** answer: 100, groundtruth_str: 105
** groundtruth_num is not None
** is_fraction:  100
** groundtruth_num is (int, float)
** compare_two_numbers int 100 105
** wrong
**  717 1403
** answer: 99π, groundtruth_str: 99\pi
** groundtruth_num is not None
** is_fraction:  99π
** groundtruth_num is (int, float)
** compare_two_numbers float 310.86 311.01767270538954
** wrong
**  717 1404
** answer: 2, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 3
** wrong
**  717 1405
** answer: 8, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 9
** wrong
**  717 1406
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  717 1407
** answer: 3, groundtruth_str: 3x^2-34x+88
** wrong
**  717 1408
** answer: -\frac{1}{2}, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  -\frac{1}{2}
** groundtruth_num is (int, float)
** compare_two_numbers int -0.5 -1
** wrong
**  717 1409
** answer: 1, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 4
** wrong
**  717 1410
** answer: 8, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 26
** wrong
**  717 1411
** answer: 12π, groundtruth_str: 12\pi
** groundtruth_num is not None
** is_fraction:  12π
** groundtruth_num is (int, float)
** compare_two_numbers float 37.68 37.69911184307752
** wrong
**  717 1412
** answer: 3, groundtruth_str: \frac{4}{27}
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers float 3 0.14814814814814814
** wrong
**  717 1413
** answer: 3, groundtruth_str: 73
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 73
** wrong
**  717 1414
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  718 1414
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  719 1414
** answer: 6, groundtruth_str: 29
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 29
** wrong
**  719 1415
** answer: 2012, groundtruth_str: 2015
** groundtruth_num is not None
** is_fraction:  2012
** groundtruth_num is (int, float)
** compare_two_numbers int 2012 2015
** wrong
**  719 1416
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  720 1416
** answer: 0, groundtruth_str: 51
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 51
** wrong
**  720 1417
** answer: \frac{7}{3}, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  \frac{7}{3}
** groundtruth_num is (int, float)
** compare_two_numbers int 2.3333333333333335 1
** wrong
**  720 1418
** answer: 1, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 13
** wrong
**  720 1419
** answer: -16, groundtruth_str: -16
** compare on lower
** correct
**  721 1419
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  722 1419
** answer: 144, groundtruth_str: 144\mbox{m}^3
** wrong
**  722 1420
** answer: 24, groundtruth_str: 96
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 96
** wrong
**  722 1421
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  723 1421
** answer: 1, groundtruth_str: 126
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 126
** wrong
**  723 1422
** answer: 0.5, groundtruth_str: \frac{\sqrt{3}}{3}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.5773502691896257
** wrong
**  723 1423
** answer: 0.35, groundtruth_str: \frac{11}{20}
** groundtruth_num is not None
** is_fraction:  0.35
** groundtruth_num is (int, float)
** compare_two_numbers float 0.35 0.55
** wrong
**  723 1424
** answer: 3, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 6
** wrong
**  723 1425
** answer: 5, groundtruth_str: 44
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 44
** wrong
**  723 1426
** answer: 55, groundtruth_str: 55
** compare on lower
** correct
**  724 1426
** answer: 28, groundtruth_str: 11\sqrt{5}+11
** groundtruth_num is not None
** is_fraction:  28
** groundtruth_num is (int, float)
** compare_two_numbers float 28 35.596747752497684
** wrong
**  724 1427
** answer: 0.00, groundtruth_str: 15.08
** groundtruth_num is not None
** is_fraction:  0.00
** groundtruth_num is (int, float)
** compare_two_numbers float 0 15.08
** wrong
**  724 1428
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  724 1429
** answer: 720, groundtruth_str: 120
** groundtruth_num is not None
** is_fraction:  720
** groundtruth_num is (int, float)
** compare_two_numbers int 720 120
** wrong
**  724 1430
** answer: 4t, groundtruth_str: 4t
** compare on lower
** correct
**  725 1430
** answer: 7, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 10
** wrong
**  725 1431
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  726 1431
** answer: 5, groundtruth_str: \frac{5\sqrt{6}}{3}
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers float 5 4.08248290463863
** wrong
**  726 1432
** answer: 100, groundtruth_str: 70
** groundtruth_num is not None
** is_fraction:  100
** groundtruth_num is (int, float)
** compare_two_numbers int 100 70
** wrong
**  726 1433
** answer: \begin{pmatrix}\frac{12}{13}\-\frac{18}{13}\end{pmatrix}, groundtruth_str: \begin{pmatrix}12/13\-18/13\end{pmatrix}
** wrong
**  726 1434
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  727 1434
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  728 1434
** answer: 119, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  119
** groundtruth_num is (int, float)
** compare_two_numbers int 119 15
** wrong
**  728 1435
** answer: 137, groundtruth_str: 142
** groundtruth_num is not None
** is_fraction:  137
** groundtruth_num is (int, float)
** compare_two_numbers int 137 142
** wrong
**  728 1436
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  729 1436
** answer: 15, groundtruth_str: 31
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 31
** wrong
**  729 1437
** answer: 153, groundtruth_str: 306
** groundtruth_num is not None
** is_fraction:  153
** groundtruth_num is (int, float)
** compare_two_numbers int 153 306
** wrong
**  729 1438
** answer: 6, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 18
** wrong
**  729 1439
** answer: 389,720, groundtruth_str: 3600
** groundtruth_num is not None
** is_fraction:  389,720
** groundtruth_num is (int, float)
** compare_two_numbers int 389720 3600
** wrong
**  729 1440
** answer: 326.5, groundtruth_str: 326.5
** compare on lower
** correct
**  730 1440
** answer: 24, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 10
** wrong
**  730 1441
** answer: 10, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 21
** wrong
**  730 1442
** answer: 949, groundtruth_str: 949
** compare on lower
** correct
**  731 1442
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  732 1442
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  733 1442
** answer: -0.803921569790251, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  -0.803921569790251
** groundtruth_num is (int, float)
** compare_two_numbers int -0.803921569790251 2
** wrong
**  733 1443
** answer: 5625, groundtruth_str: 600
** groundtruth_num is not None
** is_fraction:  5625
** groundtruth_num is (int, float)
** compare_two_numbers int 5625 600
** wrong
**  733 1444
** answer: 1, groundtruth_str: 1+\sqrt{2}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 2.414213562373095
** wrong
**  733 1445
** answer: 4, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 8
** wrong
**  733 1446
** answer: 0.804907765, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  0.804907765
** groundtruth_num is (int, float)
** compare_two_numbers int 0.804907765 13
** wrong
**  733 1447
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  734 1447
** answer: 3, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 7
** wrong
**  734 1448
** answer: 2x^9-8x^7+9x^6-16x^5-12x^4+9x^3-24x^2, groundtruth_str: 2x^9-8x^7+9x^6-16x^5-12x^4+9x^3-24x^2
** compare on lower
** correct
**  735 1448
** answer: 1050, groundtruth_str: 1052
** groundtruth_num is not None
** is_fraction:  1050
** groundtruth_num is (int, float)
** compare_two_numbers int 1050 1052
** wrong
**  735 1449
** answer: 1, groundtruth_str: 225
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 225
** wrong
**  735 1450
** answer: 13.5, groundtruth_str: 13.5
** compare on lower
** correct
**  736 1450
** answer: 0.5, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.5
** correct
**  737 1450
** answer: 12, groundtruth_str: 87.5
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers float 12 87.5
** wrong
**  737 1451
** answer: 3.5, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  3.5
** groundtruth_num is (int, float)
** compare_two_numbers int 3.5 5
** wrong
**  737 1452
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  738 1452
** answer: 210, groundtruth_str: 210
** compare on lower
** correct
**  739 1452
** answer: approximately4π-4, groundtruth_str: 4\pi-2\sqrt{3}
** groundtruth_num is not None
** is_fraction:  approximately4π-4
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  739 1453
** answer: 1.0, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  1.0
** groundtruth_num is (int, float)
** compare_two_numbers int 1 1
** correct
**  740 1453
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  741 1453
** answer: 5, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 2
** wrong
**  741 1454
** answer: 0.5, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.5
** correct
**  742 1454
** answer: 8.832âˆš3, groundtruth_str: 4\sqrt{2}
** groundtruth_num is not None
** is_fraction:  8.832âˆš3
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  742 1455
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  742 1456
** answer: 24π, groundtruth_str: 30\pi+9\sqrt{3}
** groundtruth_num is not None
** is_fraction:  24π
** groundtruth_num is (int, float)
** compare_two_numbers float 75.36 109.8362368758137
** wrong
**  742 1457
** answer: 10000, groundtruth_str: \frac{20000}{\pi}
** groundtruth_num is not None
** is_fraction:  10000
** groundtruth_num is (int, float)
** compare_two_numbers float 10000 6366.197723675813
** wrong
**  742 1458
** answer: \frac{1}{8}, groundtruth_str: \frac{3}{16}
** groundtruth_num is not None
** is_fraction:  \frac{1}{8}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.125 0.1875
** wrong
**  742 1459
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  743 1459
** answer: 0, groundtruth_str: \frac{11}{65}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.16923076923076924
** wrong
**  743 1460
** answer: 0, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -1
** wrong
**  743 1461
** answer: 0.25, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  0.25
** groundtruth_num is (int, float)
** compare_two_numbers float 0.25 0.25
** correct
**  744 1461
** answer: 4, groundtruth_str: -3
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 -3
** wrong
**  744 1462
** answer: 7, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 12
** wrong
**  744 1463
** answer: 1, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 -1
** wrong
**  744 1464
** answer: 0, groundtruth_str: -9
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -9
** wrong
**  744 1465
** answer: 120, groundtruth_str: 144
** groundtruth_num is not None
** is_fraction:  120
** groundtruth_num is (int, float)
** compare_two_numbers int 120 144
** wrong
**  744 1466
** answer: 20, groundtruth_str: 29
** groundtruth_num is not None
** is_fraction:  20
** groundtruth_num is (int, float)
** compare_two_numbers int 20 29
** wrong
**  744 1467
** answer: \frac{1}{8}, groundtruth_str: \frac{1}{8}
** compare on lower
** correct
**  745 1467
** answer: \begin{pmatrix}\frac{\sqrt{2}}{2}&-\frac{\sqrt{2}}{2}\\frac{\sqrt{2}}{2}&\frac{\sqrt{2}}{2}\end{pmatrix}, groundtruth_str: \begin{pmatrix}1/\sqrt{2}&1/\sqrt{2}\-1/\sqrt{2}&1/\sqrt{2}\end{pmatrix}
** wrong
**  745 1468
** answer: -1, groundtruth_str: -1
** compare on lower
** correct
**  746 1468
** answer: -48, groundtruth_str: -48
** compare on lower
** correct
**  747 1468
** answer: -4, groundtruth_str: [-4,0)
** wrong
**  747 1469
** answer: 0, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 30
** wrong
**  747 1470
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  748 1470
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  749 1470
** answer: (1,-1), groundtruth_str: (2,-1)
** groundtruth_num is not None
** is_fraction:  (1,-1)
** groundtruth_num is (int, float)
** compare_two_numbers int 1 1
** correct
**  750 1470
** answer: 3, groundtruth_str: 2\sqrt{5}
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers float 3 4.47213595499958
** wrong
**  750 1471
** answer: 2, groundtruth_str: \frac{3}{4}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 0.75
** wrong
**  750 1472
** answer: 24, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 6
** wrong
**  750 1473
** answer: 128, groundtruth_str: (128,2)
** groundtruth_num is not None
** is_fraction:  128
** groundtruth_num is (int, float)
** compare_two_numbers int 128 1282
** wrong
**  750 1474
** answer: 12, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 17
** wrong
**  750 1475
** answer: 73, groundtruth_str: 73
** compare on lower
** correct
**  751 1475
** answer: 90, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  90
** groundtruth_num is (int, float)
** compare_two_numbers int 90 18
** wrong
**  751 1476
** answer: 0.5, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.5
** correct
**  752 1476
** answer: 0, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 6
** wrong
**  752 1477
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  753 1477
** answer: 7, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 14
** wrong
**  753 1478
** answer: [-10,4], groundtruth_str: [-10,4]
** compare on lower
** correct
**  754 1478
** answer: 9, groundtruth_str: x^3+27
** wrong
**  754 1479
** answer: 2017, groundtruth_str: 4036
** groundtruth_num is not None
** is_fraction:  2017
** groundtruth_num is (int, float)
** compare_two_numbers int 2017 4036
** wrong
**  754 1480
** answer: 1, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 3
** wrong
**  754 1481
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  755 1481
** answer: 1, groundtruth_str: \frac{1}{12}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.08333333333333333
** wrong
**  755 1482
** answer: 27, groundtruth_str: 363
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers int 27 363
** wrong
**  755 1483
** answer: 91.36, groundtruth_str: 46
** groundtruth_num is not None
** is_fraction:  91.36
** groundtruth_num is (int, float)
** compare_two_numbers int 91.36 46
** wrong
**  755 1484
** answer: 777, groundtruth_str: 777
** compare on lower
** correct
**  756 1484
** answer: 30, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 21
** wrong
**  756 1485
** answer: 16380, groundtruth_str: 16,471
** groundtruth_num is not None
** is_fraction:  16380
** groundtruth_num is (int, float)
** compare_two_numbers int 16380 16471
** wrong
**  756 1486
** answer: 0, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 13
** wrong
**  756 1487
** answer: 0, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 9
** wrong
**  756 1488
** answer: 2√2, groundtruth_str: \sqrt{6}
** groundtruth_num is not None
** is_fraction:  2√2
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  756 1489
** answer: 140, groundtruth_str: 70
** groundtruth_num is not None
** is_fraction:  140
** groundtruth_num is (int, float)
** compare_two_numbers int 140 70
** wrong
**  756 1490
** answer: 1, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 3
** wrong
**  756 1491
** answer: 210, groundtruth_str: 5,460
** groundtruth_num is not None
** is_fraction:  210
** groundtruth_num is (int, float)
** compare_two_numbers int 210 5460
** wrong
**  756 1492
** answer: 0.2, groundtruth_str: \frac{1}{5}
** groundtruth_num is not None
** is_fraction:  0.2
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2 0.2
** correct
**  757 1492
** answer: 313, groundtruth_str: 314
** groundtruth_num is not None
** is_fraction:  313
** groundtruth_num is (int, float)
** compare_two_numbers int 313 314
** wrong
**  757 1493
** answer: 2+7i, groundtruth_str: 2+7i
** compare on lower
** correct
**  758 1493
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  759 1493
** answer: -9, groundtruth_str: -9
** compare on lower
** correct
**  760 1493
** answer: 0.01, groundtruth_str: 0.0011_{2}
** groundtruth_num is not None
** is_fraction:  0.01
** groundtruth_num is (int, float)
** compare_two_numbers float 0.01 0.0011
** wrong
**  760 1494
** answer: -49, groundtruth_str: -49
** compare on lower
** correct
**  761 1494
** answer: 532.5, groundtruth_str: \frac{639}{40}
** groundtruth_num is not None
** is_fraction:  532.5
** groundtruth_num is (int, float)
** compare_two_numbers float 532.5 15.975
** wrong
**  761 1495
** answer: 2, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 7
** wrong
**  761 1496
** answer: -3, groundtruth_str: -3
** compare on lower
** correct
**  762 1496
** answer: 169, groundtruth_str: 169
** compare on lower
** correct
**  763 1496
** answer: 2, groundtruth_str: \frac{3}{2}+\frac{3}{2}i
** wrong
**  763 1497
** answer: 4, groundtruth_str: 54
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 54
** wrong
**  763 1498
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  764 1498
** answer: 1, groundtruth_str: x^3-3x^2+9x-9
** wrong
**  764 1499
** answer: 60, groundtruth_str: 120
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 120
** wrong
**  764 1500
** answer: 1, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 20
** wrong
**  764 1501
** answer: (-∞,1)∪(1,∞), groundtruth_str: (-5,\sqrt{26}]
** wrong
**  764 1502
** answer: 6, groundtruth_str: 22
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 22
** wrong
**  764 1503
** answer: 1+3i, groundtruth_str: -5+3i
** wrong
**  764 1504
** answer: 127, groundtruth_str: 127
** compare on lower
** correct
**  765 1504
** answer: 15, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 13
** wrong
**  765 1505
** answer: 18, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 15
** wrong
**  765 1506
** answer: 5, groundtruth_str: \frac{24}{5}
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers float 5 4.8
** wrong
**  765 1507
** answer: 1, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 3
** wrong
**  765 1508
** answer: 108, groundtruth_str: 108
** compare on lower
** correct
**  766 1508
** answer: 9, groundtruth_str: 2.5
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers float 9 2.5
** wrong
**  766 1509
** answer: -1, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers int -1 0
** wrong
**  766 1510
** answer: 2, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 12
** wrong
**  766 1511
** answer: 2, groundtruth_str: \{1\pm\sqrt{5},-2\}
** wrong
**  766 1512
** answer: 21a^5-7a^4-16a^2+32a, groundtruth_str: 21a^5-7a^4-16a^2+32a
** compare on lower
** correct
**  767 1512
** answer: 154, groundtruth_str: 90
** groundtruth_num is not None
** is_fraction:  154
** groundtruth_num is (int, float)
** compare_two_numbers int 154 90
** wrong
**  767 1513
** answer: 125, groundtruth_str: 300
** groundtruth_num is not None
** is_fraction:  125
** groundtruth_num is (int, float)
** compare_two_numbers int 125 300
** wrong
**  767 1514
** answer: 2, groundtruth_str: 3\sqrt{3}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 5.196152422706632
** wrong
**  767 1515
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  768 1515
** answer: 1.9, groundtruth_str: 1\frac{9}{10}
** groundtruth_num is not None
** is_fraction:  1.9
** groundtruth_num is (int, float)
** compare_two_numbers float 1.9 1.9
** correct
**  769 1515
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  770 1515
** answer: 5, groundtruth_str: \frac{3}{2}
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers float 5 1.5
** wrong
**  770 1516
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  771 1516
** answer: 144, groundtruth_str: 720
** groundtruth_num is not None
** is_fraction:  144
** groundtruth_num is (int, float)
** compare_two_numbers int 144 720
** wrong
**  771 1517
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  772 1517
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  773 1517
** answer: 27, groundtruth_str: 46
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers int 27 46
** wrong
**  773 1518
** answer: 5π, groundtruth_str: 9\pi
** groundtruth_num is not None
** is_fraction:  5π
** groundtruth_num is (int, float)
** compare_two_numbers float 15.700000000000001 28.274333882308138
** wrong
**  773 1519
** answer: 4.5, groundtruth_str: \frac{9}{2}
** groundtruth_num is not None
** is_fraction:  4.5
** groundtruth_num is (int, float)
** compare_two_numbers float 4.5 4.5
** correct
**  774 1519
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  775 1519
** answer: -8, groundtruth_str: -8
** compare on lower
** correct
**  776 1519
** answer: 11, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 9
** wrong
**  776 1520
** answer: 18, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 30
** wrong
**  776 1521
** answer: 24, groundtruth_str: 204_5
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 2045
** wrong
**  776 1522
** answer: 6, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 11
** wrong
**  776 1523
** answer: 111, groundtruth_str: 111
** compare on lower
** correct
**  777 1523
** answer: 1, groundtruth_str: D
** wrong
**  777 1524
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  777 1525
** answer: 0.5, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.5
** correct
**  778 1525
** answer: 16, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 18
** wrong
**  778 1526
** answer: 1.00, groundtruth_str: 3.75
** groundtruth_num is not None
** is_fraction:  1.00
** groundtruth_num is (int, float)
** compare_two_numbers float 1 3.75
** wrong
**  778 1527
** answer: 48, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  48
** groundtruth_num is (int, float)
** compare_two_numbers int 48 6
** wrong
**  778 1528
** answer: 4^{48}/(\sqrt{5}+1)^{384}, groundtruth_str: 125
** groundtruth_num is not None
** is_fraction:  4^{48}/(\sqrt{5}+1)^{384}
** groundtruth_num is (int, float)
** compare_two_numbers int 1.127476225175628e-167 125
** wrong
**  778 1529
** answer: -30, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  -30
** groundtruth_num is (int, float)
** compare_two_numbers int -30 30
** wrong
**  778 1530
** answer: \frac{2}{7}, groundtruth_str: \frac{4}{35}
** groundtruth_num is not None
** is_fraction:  \frac{2}{7}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2857142857142857 0.11428571428571428
** wrong
**  778 1531
** answer: 0.8, groundtruth_str: \frac{3}{5}
** groundtruth_num is not None
** is_fraction:  0.8
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8 0.6
** wrong
**  778 1532
** answer: 0, groundtruth_str: -8
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -8
** wrong
**  778 1533
** answer: 8, groundtruth_str: 23
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 23
** wrong
**  778 1534
** answer: 40, groundtruth_str: 42
** groundtruth_num is not None
** is_fraction:  40
** groundtruth_num is (int, float)
** compare_two_numbers int 40 42
** wrong
**  778 1535
** answer: 3, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 4
** wrong
**  778 1536
** answer: 3.43, groundtruth_str: \frac{24}{7}
** groundtruth_num is not None
** is_fraction:  3.43
** groundtruth_num is (int, float)
** compare_two_numbers float 3.43 3.4285714285714284
** wrong
**  778 1537
** answer: 0.6, groundtruth_str: \frac{3}{5}
** groundtruth_num is not None
** is_fraction:  0.6
** groundtruth_num is (int, float)
** compare_two_numbers float 0.6 0.6
** correct
**  779 1537
** answer: 0.7333, groundtruth_str: \frac{11}{15}
** groundtruth_num is not None
** is_fraction:  0.7333
** groundtruth_num is (int, float)
** compare_two_numbers float 0.7333 0.7333333333333333
** wrong
**  779 1538
** answer: -1, groundtruth_str: -1
** compare on lower
** correct
**  780 1538
** answer: 1, groundtruth_str: (3,4]
** wrong
**  780 1539
** answer: 120, groundtruth_str: 47
** groundtruth_num is not None
** is_fraction:  120
** groundtruth_num is (int, float)
** compare_two_numbers int 120 47
** wrong
**  780 1540
** answer: 13, groundtruth_str: 1999
** groundtruth_num is not None
** is_fraction:  13
** groundtruth_num is (int, float)
** compare_two_numbers int 13 1999
** wrong
**  780 1541
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  781 1541
** answer: \frac{5}{12}, groundtruth_str: \frac{5}{12}
** compare on lower
** correct
**  782 1541
** answer: 0.5, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.5
** correct
**  783 1541
** answer: -7, groundtruth_str: -7
** compare on lower
** correct
**  784 1541
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  785 1541
** answer: 0, groundtruth_str: 163
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 163
** wrong
**  785 1542
** answer: 8.5, groundtruth_str: 8.5
** compare on lower
** correct
**  786 1542
** answer: 720, groundtruth_str: 240
** groundtruth_num is not None
** is_fraction:  720
** groundtruth_num is (int, float)
** compare_two_numbers int 720 240
** wrong
**  786 1543
** answer: -30, groundtruth_str: 8\sqrt{3}
** groundtruth_num is not None
** is_fraction:  -30
** groundtruth_num is (int, float)
** compare_two_numbers float -30 13.856406460551018
** wrong
**  786 1544
** answer: 0, groundtruth_str: -2
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -2
** wrong
**  786 1545
** answer: 9.3, groundtruth_str: (9,3)
** groundtruth_num is not None
** is_fraction:  9.3
** groundtruth_num is (int, float)
** compare_two_numbers int 9.3 93
** wrong
**  786 1546
** answer: 12.5, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  12.5
** groundtruth_num is (int, float)
** compare_two_numbers int 12.5 10
** wrong
**  786 1547
** answer: x^2-1, groundtruth_str: x^2
** wrong
**  786 1548
** answer: (-∞,5)∪(5,∞), groundtruth_str: (5,\infty)
** wrong
**  786 1549
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  787 1549
** answer: 32+4√15+12√6+12√7+4√30+4√35+4√42, groundtruth_str: 84
** groundtruth_num is not None
** is_fraction:  32+4√15+12√6+12√7+4√30+4√35+4√42
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  787 1550
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  788 1550
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  789 1550
** answer: -1/5i, groundtruth_str: \frac{i}{5}
** wrong
**  789 1551
** answer: 54, groundtruth_str: 84
** groundtruth_num is not None
** is_fraction:  54
** groundtruth_num is (int, float)
** compare_two_numbers int 54 84
** wrong
**  789 1552
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  790 1552
** answer: 454, groundtruth_str: 33840
** groundtruth_num is not None
** is_fraction:  454
** groundtruth_num is (int, float)
** compare_two_numbers int 454 33840
** wrong
**  790 1553
** answer: 0, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 1
** wrong
**  790 1554
** answer: 12, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 8
** wrong
**  790 1555
** answer: 28.8, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  28.8
** groundtruth_num is (int, float)
** compare_two_numbers int 28.8 12
** wrong
**  790 1556
** answer: 1, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 8
** wrong
**  790 1557
** answer: \frac{1}{32}, groundtruth_str: \frac{11}{32}
** groundtruth_num is not None
** is_fraction:  \frac{1}{32}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.03125 0.34375
** wrong
**  790 1558
** answer: -114, groundtruth_str: -114
** compare on lower
** correct
**  791 1558
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  792 1558
** answer: 364, groundtruth_str: 364
** compare on lower
** correct
**  793 1558
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  794 1558
** answer: 4, groundtruth_str: \frac{3}{2}
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers float 4 1.5
** wrong
**  794 1559
** answer: 6.5, groundtruth_str: -46
** groundtruth_num is not None
** is_fraction:  6.5
** groundtruth_num is (int, float)
** compare_two_numbers int 6.5 -46
** wrong
**  794 1560
** answer: 18, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 8
** wrong
**  794 1561
** answer: 4, groundtruth_str: 208
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 208
** wrong
**  794 1562
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  795 1562
** answer: 4, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 6
** wrong
**  795 1563
** answer: 0.7625, groundtruth_str: \frac{49}{64}
** groundtruth_num is not None
** is_fraction:  0.7625
** groundtruth_num is (int, float)
** compare_two_numbers float 0.7625 0.765625
** wrong
**  795 1564
** answer: 720, groundtruth_str: 72
** groundtruth_num is not None
** is_fraction:  720
** groundtruth_num is (int, float)
** compare_two_numbers int 720 72
** wrong
**  795 1565
** answer: 363, groundtruth_str: 363
** compare on lower
** correct
**  796 1565
** answer: 13, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  13
** groundtruth_num is (int, float)
** compare_two_numbers int 13 3
** wrong
**  796 1566
** answer: (r+5)(r+5), groundtruth_str: (r+5)^2
** wrong
**  796 1567
** answer: 12, groundtruth_str: 117
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 117
** wrong
**  796 1568
** answer: 1, groundtruth_str: 384
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 384
** wrong
**  796 1569
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  797 1569
** answer: \begin{pmatrix}3\1\-1\end{pmatrix}, groundtruth_str: \begin{pmatrix}2\-1\-5\end{pmatrix}
** wrong
**  797 1570
** answer: (3/2,5), groundtruth_str: (\frac{3}{4},5)
** groundtruth_num is not None
** is_fraction:  (3/2,5)
** groundtruth_num is (int, float)
** compare_two_numbers float 1.5 0.75
** wrong
**  797 1571
** answer: 98888, groundtruth_str: 89898
** groundtruth_num is not None
** is_fraction:  98888
** groundtruth_num is (int, float)
** compare_two_numbers int 98888 89898
** wrong
**  797 1572
** answer: 5, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 10
** wrong
**  797 1573
** answer: 0.3125, groundtruth_str: \frac{3}{16}
** groundtruth_num is not None
** is_fraction:  0.3125
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3125 0.1875
** wrong
**  797 1574
** answer: 1, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 3
** wrong
**  797 1575
** answer: (8/3,-3,1/3), groundtruth_str: (-\frac{2}{3},-\frac{7}{3},\frac{14}{9})
** groundtruth_num is not None
** is_fraction:  (8/3,-3,1/3)
** groundtruth_num is (int, float)
** compare_two_numbers float 2.6666666666666665 -0.6666666666666666
** wrong
**  797 1576
** answer: 0, groundtruth_str: 440
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 440
** wrong
**  797 1577
** answer: 27, groundtruth_str: 52
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers int 27 52
** wrong
**  797 1578
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  798 1578
** answer: 0.1389, groundtruth_str: \frac{5}{36}
** groundtruth_num is not None
** is_fraction:  0.1389
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1389 0.1388888888888889
** wrong
**  798 1579
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  799 1579
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  800 1579
** answer: 1430, groundtruth_str: 195
** groundtruth_num is not None
** is_fraction:  1430
** groundtruth_num is (int, float)
** compare_two_numbers int 1430 195
** wrong
**  800 1580
** answer: 36, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  36
** groundtruth_num is (int, float)
** compare_two_numbers int 36 12
** wrong
**  800 1581
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  801 1581
** answer: 19, groundtruth_str: 31
** groundtruth_num is not None
** is_fraction:  19
** groundtruth_num is (int, float)
** compare_two_numbers int 19 31
** wrong
**  801 1582
** answer: 1457, groundtruth_str: 327680
** groundtruth_num is not None
** is_fraction:  1457
** groundtruth_num is (int, float)
** compare_two_numbers int 1457 327680
** wrong
**  801 1583
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  802 1583
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  803 1583
** answer: 3926.0, groundtruth_str: 1950
** groundtruth_num is not None
** is_fraction:  3926.0
** groundtruth_num is (int, float)
** compare_two_numbers int 3926 1950
** wrong
**  803 1584
** answer: neither, groundtruth_str: \text{odd}
** wrong
**  803 1585
** answer: 5, groundtruth_str: 5k
** wrong
**  803 1586
** answer: 23, groundtruth_str: 43
** groundtruth_num is not None
** is_fraction:  23
** groundtruth_num is (int, float)
** compare_two_numbers int 23 43
** wrong
**  803 1587
** answer: 2880, groundtruth_str: 14,400
** groundtruth_num is not None
** is_fraction:  2880
** groundtruth_num is (int, float)
** compare_two_numbers int 2880 14400
** wrong
**  803 1588
** answer: 1.5, groundtruth_str: \frac{3}{2}
** groundtruth_num is not None
** is_fraction:  1.5
** groundtruth_num is (int, float)
** compare_two_numbers float 1.5 1.5
** correct
**  804 1588
** answer: 125, groundtruth_str: 125
** compare on lower
** correct
**  805 1588
** answer: 12, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 5
** wrong
**  805 1589
** answer: 0, groundtruth_str: -2016
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -2016
** wrong
**  805 1590
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  806 1590
** answer: 0.2, groundtruth_str: \frac{1}{3}
** groundtruth_num is not None
** is_fraction:  0.2
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2 0.3333333333333333
** wrong
**  806 1591
** answer: 2, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 6
** wrong
**  806 1592
** answer: 70, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  70
** groundtruth_num is (int, float)
** compare_two_numbers int 70 15
** wrong
**  806 1593
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  807 1593
** answer: 729, groundtruth_str: 729
** compare on lower
** correct
**  808 1593
** answer: -1, groundtruth_str: (-\frac{1}{4},-2)
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers float -1 -0.25
** wrong
**  808 1594
** answer: 216, groundtruth_str: 144
** groundtruth_num is not None
** is_fraction:  216
** groundtruth_num is (int, float)
** compare_two_numbers int 216 144
** wrong
**  808 1595
** answer: 24024, groundtruth_str: 384
** groundtruth_num is not None
** is_fraction:  24024
** groundtruth_num is (int, float)
** compare_two_numbers int 24024 384
** wrong
**  808 1596
** answer: \frac{1}{8}, groundtruth_str: \frac{1}{8}
** compare on lower
** correct
**  809 1596
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  810 1596
** answer: (0,0), groundtruth_str: (4,24)
** groundtruth_num is not None
** is_fraction:  (0,0)
** groundtruth_num is (int, float)
** compare_two_numbers int 0 424
** wrong
**  810 1597
** answer: 139, groundtruth_str: 139
** compare on lower
** correct
**  811 1597
** answer: 667, groundtruth_str: 672
** groundtruth_num is not None
** is_fraction:  667
** groundtruth_num is (int, float)
** compare_two_numbers int 667 672
** wrong
**  811 1598
** answer: 354224848179261915075, groundtruth_str: 100
** groundtruth_num is not None
** is_fraction:  354224848179261915075
** groundtruth_num is (int, float)
** compare_two_numbers int 354224848179261931520 100
** wrong
**  811 1599
** answer: 54, groundtruth_str: \frac{13}{3}
** groundtruth_num is not None
** is_fraction:  54
** groundtruth_num is (int, float)
** compare_two_numbers float 54 4.333333333333333
** wrong
**  811 1600
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  812 1600
** answer: 40.91, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  40.91
** groundtruth_num is (int, float)
** compare_two_numbers int 40.91 50
** wrong
**  812 1601
** answer: 6, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 0
** wrong
**  812 1602
** answer: 2*x*\sin\theta*x+2*x-1+\sin\theta, groundtruth_str: -x^3
** wrong
**  812 1603
** answer: 15, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 12
** wrong
**  812 1604
** answer: 69, groundtruth_str: 69
** compare on lower
** correct
**  813 1604
** answer: \frac{1}{3}, groundtruth_str: \frac{2}{9}
** groundtruth_num is not None
** is_fraction:  \frac{1}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3333333333333333 0.2222222222222222
** wrong
**  813 1605
** answer: 3, groundtruth_str: -71
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 -71
** wrong
**  813 1606
** answer: 75, groundtruth_str: 78
** groundtruth_num is not None
** is_fraction:  75
** groundtruth_num is (int, float)
** compare_two_numbers int 75 78
** wrong
**  813 1607
** answer: 0.20, groundtruth_str: 0.20
** compare on lower
** correct
**  814 1607
** answer: -90, groundtruth_str: 90
** groundtruth_num is not None
** is_fraction:  -90
** groundtruth_num is (int, float)
** compare_two_numbers int -90 90
** wrong
**  814 1608
** answer: \frac{1}{6}, groundtruth_str: \frac{1}{6}
** compare on lower
** correct
**  815 1608
** answer: 4950, groundtruth_str: 4950
** compare on lower
** correct
**  816 1608
** answer: 1449, groundtruth_str: 141_{13}
** groundtruth_num is not None
** is_fraction:  1449
** groundtruth_num is (int, float)
** compare_two_numbers int 1449 141
** wrong
**  816 1609
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  816 1610
** answer: 1, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 5
** wrong
**  816 1611
** answer: \frac{-120}{49}, groundtruth_str: -2
** groundtruth_num is not None
** is_fraction:  \frac{-120}{49}
** groundtruth_num is (int, float)
** compare_two_numbers int -2.4489795918367347 -2
** correct
**  817 1611
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  818 1611
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  819 1611
** answer: 90, groundtruth_str: 270
** groundtruth_num is not None
** is_fraction:  90
** groundtruth_num is (int, float)
** compare_two_numbers int 90 270
** wrong
**  819 1612
** answer: 2, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 6
** wrong
**  819 1613
** answer: 2, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 1
** wrong
**  819 1614
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  820 1614
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  821 1614
** answer: \frac{2}{5}, groundtruth_str: \frac{1}{3}
** groundtruth_num is not None
** is_fraction:  \frac{2}{5}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.4 0.3333333333333333
** wrong
**  821 1615
** answer: 2, groundtruth_str: \text{Tuesday}
** wrong
**  821 1616
** answer: 41, groundtruth_str: x^2-10x+41
** wrong
**  821 1617
** answer: 4, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 3
** wrong
**  821 1618
** answer: 29.17, groundtruth_str: 28
** groundtruth_num is not None
** is_fraction:  29.17
** groundtruth_num is (int, float)
** compare_two_numbers int 29.17 28
** wrong
**  821 1619
** answer: 6, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 2
** wrong
**  821 1620
** answer: 55, groundtruth_str: 54
** groundtruth_num is not None
** is_fraction:  55
** groundtruth_num is (int, float)
** compare_two_numbers int 55 54
** wrong
**  821 1621
** answer: 19, groundtruth_str: x+6
** wrong
**  821 1622
** answer: 986, groundtruth_str: 935
** groundtruth_num is not None
** is_fraction:  986
** groundtruth_num is (int, float)
** compare_two_numbers int 986 935
** wrong
**  821 1623
** answer: 4, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers float 4 0.5
** wrong
**  821 1624
** answer: 76, groundtruth_str: 122
** groundtruth_num is not None
** is_fraction:  76
** groundtruth_num is (int, float)
** compare_two_numbers int 76 122
** wrong
**  821 1625
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  822 1625
** answer: 54, groundtruth_str: 54
** compare on lower
** correct
**  823 1625
** answer: 49, groundtruth_str: 49
** compare on lower
** correct
**  824 1625
** answer: 28, groundtruth_str: \frac{11}{13}
** groundtruth_num is not None
** is_fraction:  28
** groundtruth_num is (int, float)
** compare_two_numbers float 28 0.8461538461538461
** wrong
**  824 1626
** answer: 220, groundtruth_str: 220
** compare on lower
** correct
**  825 1626
** answer: 0, groundtruth_str: \frac{25}{31}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.8064516129032258
** wrong
**  825 1627
** answer: 36, groundtruth_str: 97
** groundtruth_num is not None
** is_fraction:  36
** groundtruth_num is (int, float)
** compare_two_numbers int 36 97
** wrong
**  825 1628
** answer: 0, groundtruth_str: 2003
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 2003
** wrong
**  825 1629
** answer: \frac{1004^2}{2007^2}, groundtruth_str: \frac{5}{8}
** groundtruth_num is not None
** is_fraction:  \frac{1004^2}{2007^2}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.25024919011660485 0.625
** wrong
**  825 1630
** answer: 1, groundtruth_str: 78
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 78
** wrong
**  825 1631
** answer: 316, groundtruth_str: \begin{pmatrix}31&50\-18&-29\end{pmatrix}
** wrong
**  825 1632
** answer: 103.85, groundtruth_str: 108
** groundtruth_num is not None
** is_fraction:  103.85
** groundtruth_num is (int, float)
** compare_two_numbers int 103.85 108
** wrong
**  825 1633
** answer: -4, groundtruth_str: -4
** compare on lower
** correct
**  826 1633
** answer: 8, groundtruth_str: 23
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 23
** wrong
**  826 1634
** answer: 12,16,-12, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  12,16,-12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 36
** wrong
**  826 1635
** answer: 78, groundtruth_str: 78
** compare on lower
** correct
**  827 1635
** answer: -4, groundtruth_str: -4
** compare on lower
** correct
**  828 1635
** answer: 31,500, groundtruth_str: 771,400
** groundtruth_num is not None
** is_fraction:  31,500
** groundtruth_num is (int, float)
** compare_two_numbers int 31500 771400
** wrong
**  828 1636
** answer: 0, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 16
** wrong
**  828 1637
** answer: -3, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  -3
** groundtruth_num is (int, float)
** compare_two_numbers float -3 0.5
** wrong
**  828 1638
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  829 1638
** answer: 1.5, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1.5
** groundtruth_num is (int, float)
** compare_two_numbers int 1.5 3
** wrong
**  829 1639
** answer: 31, groundtruth_str: 31
** compare on lower
** correct
**  830 1639
** answer: 84, groundtruth_str: 84
** compare on lower
** correct
**  831 1639
** answer: π, groundtruth_str: 2\pi+4
** groundtruth_num is not None
** is_fraction:  π
** groundtruth_num is (int, float)
** compare_two_numbers float 3.14 10.283185307179586
** wrong
**  831 1640
** answer: 7,3,-1,-5, groundtruth_str: 9,-7
** groundtruth_num is not None
** is_fraction:  7,3,-1,-5
** groundtruth_num is (int, float)
** compare_two_numbers int 7 2
** wrong
**  831 1641
** answer: 68, groundtruth_str: 75
** groundtruth_num is not None
** is_fraction:  68
** groundtruth_num is (int, float)
** compare_two_numbers int 68 75
** wrong
**  831 1642
** answer: 1, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 3
** wrong
**  831 1643
** answer: 4, groundtruth_str: 68
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 68
** wrong
**  831 1644
** answer: 24, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 18
** wrong
**  831 1645
** answer: 3, groundtruth_str: 39
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 39
** wrong
**  831 1646
** answer: 0, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.25
** wrong
**  831 1647
** answer: 0, groundtruth_str: 73
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 73
** wrong
**  831 1648
** answer: 8, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 7
** wrong
**  831 1649
** answer: 2, groundtruth_str: A
** wrong
**  831 1650
** answer: 0, groundtruth_str: -\sqrt{14}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 -3.7416573867739413
** wrong
**  831 1651
** answer: 3, groundtruth_str: \frac{11}{7}
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers float 3 1.5714285714285714
** wrong
**  831 1652
** answer: 1, groundtruth_str: 3^{2007}
** wrong
**  831 1653
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  831 1654
** answer: 2880, groundtruth_str: 2880
** compare on lower
** correct
**  832 1654
** answer: 60, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 12
** wrong
**  832 1655
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  833 1655
** answer: 1, groundtruth_str: -\frac{3}{8}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 -0.375
** wrong
**  833 1656
** answer: 2π, groundtruth_str: \pi
** groundtruth_num is not None
** is_fraction:  2π
** groundtruth_num is (int, float)
** compare_two_numbers float 6.28 3.141592653589793
** wrong
**  833 1657
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  834 1657
** answer: 4.5, groundtruth_str: 4.5
** compare on lower
** correct
**  835 1657
** answer: -1, groundtruth_str: \begin{pmatrix}0&-15\-2&-4\end{pmatrix}
** wrong
**  835 1658
** answer: 0.3525, groundtruth_str: 0.35625
** groundtruth_num is not None
** is_fraction:  0.3525
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3525 0.35625
** wrong
**  835 1659
** answer: 67.5, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  67.5
** groundtruth_num is (int, float)
** compare_two_numbers int 67.5 45
** wrong
**  835 1660
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  836 1660
** answer: ∞, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  ∞
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  836 1661
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  837 1661
** answer: 35, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  35
** groundtruth_num is (int, float)
** compare_two_numbers int 35 3
** wrong
**  837 1662
** answer: 7.5, groundtruth_str: 7.5
** compare on lower
** correct
**  838 1662
** answer: 300, groundtruth_str: 2516_8
** groundtruth_num is not None
** is_fraction:  300
** groundtruth_num is (int, float)
** compare_two_numbers int 300 25168
** wrong
**  838 1663
** answer: 110, groundtruth_str: 110
** compare on lower
** correct
**  839 1663
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  840 1663
** answer: 100, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  100
** groundtruth_num is (int, float)
** compare_two_numbers int 100 48
** wrong
**  840 1664
** answer: 0.38, groundtruth_str: 0.38
** compare on lower
** correct
**  841 1664
** answer: \sqrt{[}3]{\sqrt{x}}, groundtruth_str: \sqrt{x}
** compare on lower in
** correct
**  842 1664
** answer: 28, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  28
** groundtruth_num is (int, float)
** compare_two_numbers int 28 16
** wrong
**  842 1665
** answer: 2, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 6
** wrong
**  842 1666
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  843 1666
** answer: 56, groundtruth_str: 560
** groundtruth_num is not None
** is_fraction:  56
** groundtruth_num is (int, float)
** compare_two_numbers int 56 560
** wrong
**  843 1667
** answer: 13, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  13
** groundtruth_num is (int, float)
** compare_two_numbers int 13 17
** wrong
**  843 1668
** answer: 12, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 13
** wrong
**  843 1669
** answer: 30240, groundtruth_str: 30,240
** groundtruth_num is not None
** is_fraction:  30240
** groundtruth_num is (int, float)
** compare_two_numbers int 30240 30240
** correct
**  844 1669
** answer: -0.5, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  -0.5
** groundtruth_num is (int, float)
** compare_two_numbers int -0.5 -1
** wrong
**  844 1670
** answer: 2, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 3
** wrong
**  844 1671
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  845 1671
** answer: 420, groundtruth_str: 420
** compare on lower
** correct
**  846 1671
** answer: 840, groundtruth_str: 840
** compare on lower
** correct
**  847 1671
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  848 1671
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  849 1671
** answer: 8, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 0
** wrong
**  849 1672
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  850 1672
** answer: 0.4, groundtruth_str: 0.4
** compare on lower
** correct
**  851 1672
** answer: 335.0, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  335.0
** groundtruth_num is (int, float)
** compare_two_numbers int 335 36
** wrong
**  851 1673
** answer: \frac{1}{36}, groundtruth_str: \frac{1}{72}
** groundtruth_num is not None
** is_fraction:  \frac{1}{36}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.027777777777777776 0.013888888888888888
** wrong
**  851 1674
** answer: 106, groundtruth_str: 106
** compare on lower
** correct
**  852 1674
** answer: 351, groundtruth_str: 153
** groundtruth_num is not None
** is_fraction:  351
** groundtruth_num is (int, float)
** compare_two_numbers int 351 153
** wrong
**  852 1675
** answer: 264, groundtruth_str: 1056
** groundtruth_num is not None
** is_fraction:  264
** groundtruth_num is (int, float)
** compare_two_numbers int 264 1056
** wrong
**  852 1676
** answer: 7, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 13
** wrong
**  852 1677
** answer: 11, groundtruth_str: 95
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 95
** wrong
**  852 1678
** answer: 42, groundtruth_str: 46
** groundtruth_num is not None
** is_fraction:  42
** groundtruth_num is (int, float)
** compare_two_numbers int 42 46
** wrong
**  852 1679
** answer: 7, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 25
** wrong
**  852 1680
** answer: 1, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.25
** wrong
**  852 1681
** answer: 0, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 80
** wrong
**  852 1682
** answer: 123, groundtruth_str: 123
** compare on lower
** correct
**  853 1682
** answer: 1, groundtruth_str: (2,\infty)
** wrong
**  853 1683
** answer: 1023, groundtruth_str: 2014
** groundtruth_num is not None
** is_fraction:  1023
** groundtruth_num is (int, float)
** compare_two_numbers int 1023 2014
** wrong
**  853 1684
** answer: 94, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  94
** groundtruth_num is (int, float)
** compare_two_numbers int 94 50
** wrong
**  853 1685
** answer: 196, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  196
** groundtruth_num is (int, float)
** compare_two_numbers int 196 13
** wrong
**  853 1686
** answer: 864, groundtruth_str: 864\mbox{inches}^2
** wrong
**  853 1687
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  854 1687
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  855 1687
** answer: 132, groundtruth_str: 132
** compare on lower
** correct
**  856 1687
** answer: 968, groundtruth_str: 968
** compare on lower
** correct
**  857 1687
** answer: \frac{1}{4096}, groundtruth_str: \frac{1}{24}
** groundtruth_num is not None
** is_fraction:  \frac{1}{4096}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.000244140625 0.041666666666666664
** wrong
**  857 1688
** answer: 1050, groundtruth_str: 1050
** compare on lower
** correct
**  858 1688
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  859 1688
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  860 1688
** answer: 4π, groundtruth_str: 4\sqrt{2}+4
** groundtruth_num is not None
** is_fraction:  4π
** groundtruth_num is (int, float)
** compare_two_numbers float 12.56 9.65685424949238
** wrong
**  860 1689
** answer: \begin{pmatrix}1\-\frac{12}{5}\end{pmatrix}, groundtruth_str: \begin{pmatrix}-5/13\12/13\end{pmatrix}
** wrong
**  860 1690
** answer: 180, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  180
** groundtruth_num is (int, float)
** compare_two_numbers int 180 12
** wrong
**  860 1691
** answer: 0.104, groundtruth_str: \frac{625}{648}
** groundtruth_num is not None
** is_fraction:  0.104
** groundtruth_num is (int, float)
** compare_two_numbers float 0.104 0.9645061728395061
** wrong
**  860 1692
** answer: (5,4,-63), groundtruth_str: (2,-1,2)
** groundtruth_num is not None
** is_fraction:  (5,4,-63)
** groundtruth_num is (int, float)
** compare_two_numbers int 5 -10
** wrong
**  860 1693
** answer: -28, groundtruth_str: -22
** groundtruth_num is not None
** is_fraction:  -28
** groundtruth_num is (int, float)
** compare_two_numbers int -28 -22
** wrong
**  860 1694
** answer: 29, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  29
** groundtruth_num is (int, float)
** compare_two_numbers int 29 30
** wrong
**  860 1695
** answer: 1, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 0
** wrong
**  860 1696
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  861 1696
** answer: 1, groundtruth_str: 90-\frac{25}{2}\pi
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 50.730091830127584
** wrong
**  861 1697
** answer: 88, groundtruth_str: 64
** groundtruth_num is not None
** is_fraction:  88
** groundtruth_num is (int, float)
** compare_two_numbers int 88 64
** wrong
**  861 1698
** answer: 0, groundtruth_str: 89
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 89
** wrong
**  861 1699
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  862 1699
** answer: 5, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 9
** wrong
**  862 1700
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  863 1700
** answer: 15, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 45
** wrong
**  863 1701
** answer: 14, groundtruth_str: 49
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers int 14 49
** wrong
**  863 1702
** answer: 972, groundtruth_str: 697
** groundtruth_num is not None
** is_fraction:  972
** groundtruth_num is (int, float)
** compare_two_numbers int 972 697
** wrong
**  863 1703
** answer: (-0.5,0.5,0), groundtruth_str: (3,-3,1)
** groundtruth_num is not None
** is_fraction:  (-0.5,0.5,0)
** groundtruth_num is (int, float)
** compare_two_numbers int -0.5 -28
** wrong
**  863 1704
** answer: 6, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 12
** wrong
**  863 1705
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  864 1705
** answer: -7, groundtruth_str: -7
** compare on lower
** correct
**  865 1705
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  866 1705
** answer: 8x-1, groundtruth_str: 8x-1
** compare on lower
** correct
**  867 1705
** answer: 1, groundtruth_str: \text{Friday}
** wrong
**  867 1706
** answer: \frac{1}{3}, groundtruth_str: \frac{\sqrt{3}}{3}
** groundtruth_num is not None
** is_fraction:  \frac{1}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3333333333333333 0.5773502691896257
** wrong
**  867 1707
** answer: 90, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  90
** groundtruth_num is (int, float)
** compare_two_numbers int 90 30
** wrong
**  867 1708
** answer: 38, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  38
** groundtruth_num is (int, float)
** compare_two_numbers int 38 3
** wrong
**  867 1709
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  868 1709
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  869 1709
** answer: 49, groundtruth_str: 49
** compare on lower
** correct
**  870 1709
** answer: \frac{5}{8}, groundtruth_str: \frac{5}{8}
** compare on lower
** correct
**  871 1709
** answer: 0, groundtruth_str: -3
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -3
** wrong
**  871 1710
** answer: 15, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 12
** wrong
**  871 1711
** answer: 30, groundtruth_str: 840
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 840
** wrong
**  871 1712
** answer: 3.5, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  3.5
** groundtruth_num is (int, float)
** compare_two_numbers int 3.5 7
** wrong
**  871 1713
** answer: 38, groundtruth_str: 23
** groundtruth_num is not None
** is_fraction:  38
** groundtruth_num is (int, float)
** compare_two_numbers int 38 23
** wrong
**  871 1714
** answer: 9, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 12
** wrong
**  871 1715
** answer: 8x^3+12x^2-2x-3, groundtruth_str: (2x+3)(2x-1)(2x+1)
** wrong
**  871 1716
** answer: -211, groundtruth_str: \begin{pmatrix}2\-11\end{pmatrix}
** wrong
**  871 1717
** answer: 0.5, groundtruth_str: 0.50
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.5
** correct
**  872 1717
** answer: 90, groundtruth_str: 120
** groundtruth_num is not None
** is_fraction:  90
** groundtruth_num is (int, float)
** compare_two_numbers int 90 120
** wrong
**  872 1718
** answer: 25, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  25
** groundtruth_num is (int, float)
** compare_two_numbers int 25 50
** wrong
**  872 1719
** answer: 0.040125, groundtruth_str: \frac{1}{12}
** groundtruth_num is not None
** is_fraction:  0.040125
** groundtruth_num is (int, float)
** compare_two_numbers float 0.040125 0.08333333333333333
** wrong
**  872 1720
** answer: 7.0, groundtruth_str: 3+4\sqrt{2}
** groundtruth_num is not None
** is_fraction:  7.0
** groundtruth_num is (int, float)
** compare_two_numbers float 7 8.65685424949238
** wrong
**  872 1721
** answer: 10√330+10√7, groundtruth_str: 33\sqrt{30}
** groundtruth_num is not None
** is_fraction:  10√330+10√7
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  872 1722
** answer: 12.01, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  12.01
** groundtruth_num is (int, float)
** compare_two_numbers int 12.01 13
** wrong
**  872 1723
** answer: 3, groundtruth_str: x^3+3x-6
** wrong
**  872 1724
** answer: 324, groundtruth_str: 324
** compare on lower
** correct
**  873 1724
** answer: 1, groundtruth_str: \frac{5}{18}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.2777777777777778
** wrong
**  873 1725
** answer: 0.5, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.25
** wrong
**  873 1726
** answer: 16, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 10
** wrong
**  873 1727
** answer: 320, groundtruth_str: 52
** groundtruth_num is not None
** is_fraction:  320
** groundtruth_num is (int, float)
** compare_two_numbers int 320 52
** wrong
**  873 1728
** answer: 2016, groundtruth_str: 504
** groundtruth_num is not None
** is_fraction:  2016
** groundtruth_num is (int, float)
** compare_two_numbers int 2016 504
** wrong
**  873 1729
** answer: 1, groundtruth_str: x^2-2x+8
** wrong
**  873 1730
** answer: 49, groundtruth_str: 49
** compare on lower
** correct
**  874 1730
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  874 1731
** answer: 2√10, groundtruth_str: 2\sqrt{10}
** groundtruth_num is not None
** is_fraction:  2√10
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  874 1732
** answer: -2,0, groundtruth_str: 2,-1
** groundtruth_num is not None
** is_fraction:  -2,0
** groundtruth_num is (int, float)
** compare_two_numbers int -2 1
** wrong
**  874 1733
** answer: 0.477, groundtruth_str: \frac{130}{231}
** groundtruth_num is not None
** is_fraction:  0.477
** groundtruth_num is (int, float)
** compare_two_numbers float 0.477 0.5627705627705628
** wrong
**  874 1734
** answer: 2.5, groundtruth_str: \frac{5}{2}
** groundtruth_num is not None
** is_fraction:  2.5
** groundtruth_num is (int, float)
** compare_two_numbers float 2.5 2.5
** correct
**  875 1734
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  876 1734
** answer: 1001, groundtruth_str: 101
** groundtruth_num is not None
** is_fraction:  1001
** groundtruth_num is (int, float)
** compare_two_numbers int 1001 101
** wrong
**  876 1735
** answer: 169, groundtruth_str: 169
** compare on lower
** correct
**  877 1735
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  878 1735
** answer: 0, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 5
** wrong
**  878 1736
** answer: 3, groundtruth_str: 157
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 157
** wrong
**  878 1737
** answer: 9, groundtruth_str: \frac{81}{41}
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers float 9 1.975609756097561
** wrong
**  878 1738
** answer: 14, groundtruth_str: 11\sqrt{2}
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers float 14 15.556349186104045
** wrong
**  878 1739
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  879 1739
** answer: 18, groundtruth_str: 12,000,085
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 12000085
** wrong
**  879 1740
** answer: 64a^6, groundtruth_str: 64a^6
** compare on lower
** correct
**  880 1740
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  881 1740
** answer: 10, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 12
** wrong
**  881 1741
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  882 1741
** answer: 7, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 3
** wrong
**  882 1742
** answer: 429, groundtruth_str: 363
** groundtruth_num is not None
** is_fraction:  429
** groundtruth_num is (int, float)
** compare_two_numbers int 429 363
** wrong
**  882 1743
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  883 1743
** answer: 623.16, groundtruth_str: 913
** groundtruth_num is not None
** is_fraction:  623.16
** groundtruth_num is (int, float)
** compare_two_numbers int 623.16 913
** wrong
**  883 1744
** answer: (1,7,3), groundtruth_str: (1,3,3)
** groundtruth_num is not None
** is_fraction:  (1,7,3)
** groundtruth_num is (int, float)
** compare_two_numbers int 1 133
** wrong
**  883 1745
** answer: 0.5, groundtruth_str: \frac{\sqrt{3}}{2}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.8660254037844386
** wrong
**  883 1746
** answer: 86, groundtruth_str: \frac{3}{5}
** groundtruth_num is not None
** is_fraction:  86
** groundtruth_num is (int, float)
** compare_two_numbers float 86 0.6
** wrong
**  883 1747
** answer: 1, groundtruth_str: b-1
** wrong
**  883 1748
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  884 1748
** answer: \frac{10}{3}, groundtruth_str: -\frac{2}{3}
** groundtruth_num is not None
** is_fraction:  \frac{10}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 3.3333333333333335 -0.6666666666666666
** wrong
**  884 1749
** answer: 1.9166666666666667, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  1.9166666666666667
** groundtruth_num is (int, float)
** compare_two_numbers int 1.9166666666666667 12
** wrong
**  884 1750
** answer: -6, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  -6
** groundtruth_num is (int, float)
** compare_two_numbers int -6 18
** wrong
**  884 1751
** answer: 0.5235987755982989, groundtruth_str: \frac{\sqrt{10}}{5}
** groundtruth_num is not None
** is_fraction:  0.5235987755982989
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5235987755982989 0.6324555320336759
** wrong
**  884 1752
** answer: 10, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 0
** wrong
**  884 1753
** answer: 0.0625, groundtruth_str: \frac{1}{16}
** groundtruth_num is not None
** is_fraction:  0.0625
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0625 0.0625
** correct
**  885 1753
** answer: 19, groundtruth_str: 49
** groundtruth_num is not None
** is_fraction:  19
** groundtruth_num is (int, float)
** compare_two_numbers int 19 49
** wrong
**  885 1754
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  886 1754
** answer: 97, groundtruth_str: 97
** compare on lower
** correct
**  887 1754
** answer: 0.1111111111111111, groundtruth_str: \frac{1}{9}
** groundtruth_num is not None
** is_fraction:  0.1111111111111111
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1111111111111111 0.1111111111111111
** correct
**  888 1754
** answer: -2, groundtruth_str: \frac{2}{r}
** wrong
**  888 1755
** answer: 1.18, groundtruth_str: 1.17
** groundtruth_num is not None
** is_fraction:  1.18
** groundtruth_num is (int, float)
** compare_two_numbers float 1.18 1.17
** wrong
**  888 1756
** answer: 2000, groundtruth_str: 2000\sqrt{2}-2000
** groundtruth_num is not None
** is_fraction:  2000
** groundtruth_num is (int, float)
** compare_two_numbers float 2000 828.4271247461901
** wrong
**  888 1757
** answer: -12+15i, groundtruth_str: -12+15i
** compare on lower
** correct
**  889 1757
** answer: \frac{11}{20}, groundtruth_str: \frac{7}{20}
** groundtruth_num is not None
** is_fraction:  \frac{11}{20}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.55 0.35
** wrong
**  889 1758
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  890 1758
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  891 1758
** answer: 130, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  130
** groundtruth_num is (int, float)
** compare_two_numbers int 130 25
** wrong
**  891 1759
** answer: 9, groundtruth_str: \frac{1}{5}
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers float 9 0.2
** wrong
**  891 1760
** answer: \sqrt{3}, groundtruth_str: \sqrt{3}
** compare on lower
** correct
**  892 1760
** answer: 2+2i, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  2+2i
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  892 1761
** answer: 00, groundtruth_str: 22
** groundtruth_num is not None
** is_fraction:  00
** groundtruth_num is (int, float)
** compare_two_numbers int 0 22
** wrong
**  892 1762
** answer: 88, groundtruth_str: 88
** compare on lower
** correct
**  893 1762
** answer: 10, groundtruth_str: 49
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 49
** wrong
**  893 1763
** answer: 0.145, groundtruth_str: \frac{37}{819}
** groundtruth_num is not None
** is_fraction:  0.145
** groundtruth_num is (int, float)
** compare_two_numbers float 0.145 0.045177045177045176
** wrong
**  893 1764
** answer: 6, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 12
** wrong
**  893 1765
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  894 1765
** answer: 0.0833, groundtruth_str: \frac{1}{12}
** groundtruth_num is not None
** is_fraction:  0.0833
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0833 0.08333333333333333
** wrong
**  894 1766
** answer: 96.8, groundtruth_str: 96.8
** compare on lower
** correct
**  895 1766
** answer: 18, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 14
** wrong
**  895 1767
** answer: 0.75, groundtruth_str: \frac{11}{16}
** groundtruth_num is not None
** is_fraction:  0.75
** groundtruth_num is (int, float)
** compare_two_numbers float 0.75 0.6875
** wrong
**  895 1768
** answer: 65, groundtruth_str: 120
** groundtruth_num is not None
** is_fraction:  65
** groundtruth_num is (int, float)
** compare_two_numbers int 65 120
** wrong
**  895 1769
** answer: 3, groundtruth_str: (1,3)
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 13
** wrong
**  895 1770
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  896 1770
** answer: 1725, groundtruth_str: 743
** groundtruth_num is not None
** is_fraction:  1725
** groundtruth_num is (int, float)
** compare_two_numbers int 1725 743
** wrong
**  896 1771
** answer: 14, groundtruth_str: \text{Monday}
** wrong
**  896 1772
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  897 1772
** answer: 0.5, groundtruth_str: \frac{1}{8}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.125
** wrong
**  897 1773
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  898 1773
** answer: 420, groundtruth_str: 420
** compare on lower
** correct
**  899 1773
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  900 1773
** answer: (-2,1), groundtruth_str: (-3,2)
** groundtruth_num is not None
** is_fraction:  (-2,1)
** groundtruth_num is (int, float)
** compare_two_numbers int -2 -32
** wrong
**  900 1774
** answer: 70, groundtruth_str: 75
** groundtruth_num is not None
** is_fraction:  70
** groundtruth_num is (int, float)
** compare_two_numbers int 70 75
** wrong
**  900 1775
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  901 1775
** answer: 8.4, groundtruth_str: \frac{42}{5}
** groundtruth_num is not None
** is_fraction:  8.4
** groundtruth_num is (int, float)
** compare_two_numbers float 8.4 8.4
** correct
**  902 1775
** answer: 0, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 18
** wrong
**  902 1776
** answer: 2.5, groundtruth_str: \sqrt{13}
** groundtruth_num is not None
** is_fraction:  2.5
** groundtruth_num is (int, float)
** compare_two_numbers float 2.5 3.605551275463989
** wrong
**  902 1777
** answer: 5, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 1
** wrong
**  902 1778
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  903 1778
** answer: -2, groundtruth_str: -2
** compare on lower
** correct
**  904 1778
** answer: 1, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 5
** wrong
**  904 1779
** answer: 0, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 4
** wrong
**  904 1780
** answer: \frac{2\sqrt{2}}{3}, groundtruth_str: \frac{1}{3}
** groundtruth_num is not None
** is_fraction:  \frac{2\sqrt{2}}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.9428090415820635 0.3333333333333333
** wrong
**  904 1781
** answer: 0.929, groundtruth_str: \frac{295}{396}
** groundtruth_num is not None
** is_fraction:  0.929
** groundtruth_num is (int, float)
** compare_two_numbers float 0.929 0.7449494949494949
** wrong
**  904 1782
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  905 1782
** answer: 24, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 13
** wrong
**  905 1783
** answer: 630, groundtruth_str: 5040
** groundtruth_num is not None
** is_fraction:  630
** groundtruth_num is (int, float)
** compare_two_numbers int 630 5040
** wrong
**  905 1784
** answer: -1, groundtruth_str: -3
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers int -1 -3
** wrong
**  905 1785
** answer: 0, groundtruth_str: 120
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 120
** wrong
**  905 1786
** answer: 1/3π, groundtruth_str: \frac{\pi}{9}
** groundtruth_num is not None
** is_fraction:  1/3π
** groundtruth_num is (int, float)
** compare_two_numbers float 1.0466666666666666 0.3490658503988659
** wrong
**  905 1787
** answer: 2, groundtruth_str: x+2
** wrong
**  905 1788
** answer: \frac{1}{2}+\frac{\sqrt{7}}{2}i,\frac{1}{2}-\frac{\sqrt{7}}{2}i,2i, groundtruth_str: 1,-1,-3i
** wrong
**  905 1789
** answer: 132, groundtruth_str: 52
** groundtruth_num is not None
** is_fraction:  132
** groundtruth_num is (int, float)
** compare_two_numbers int 132 52
** wrong
**  905 1790
** answer: 2010, groundtruth_str: 1004
** groundtruth_num is not None
** is_fraction:  2010
** groundtruth_num is (int, float)
** compare_two_numbers int 2010 1004
** wrong
**  905 1791
** answer: 37, groundtruth_str: 28
** groundtruth_num is not None
** is_fraction:  37
** groundtruth_num is (int, float)
** compare_two_numbers int 37 28
** wrong
**  905 1792
** answer: 108, groundtruth_str: 216
** groundtruth_num is not None
** is_fraction:  108
** groundtruth_num is (int, float)
** compare_two_numbers int 108 216
** wrong
**  905 1793
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  906 1793
** answer: 7000, groundtruth_str: 7000
** compare on lower
** correct
**  907 1793
** answer: 30, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 9
** wrong
**  907 1794
** answer: (0,49), groundtruth_str: (7,49)
** groundtruth_num is not None
** is_fraction:  (0,49)
** groundtruth_num is (int, float)
** compare_two_numbers int 0 749
** wrong
**  907 1795
** answer: 5, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 12
** wrong
**  907 1796
** answer: -62, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  -62
** groundtruth_num is (int, float)
** compare_two_numbers int -62 5
** wrong
**  907 1797
** answer: 0.75, groundtruth_str: 1.25
** groundtruth_num is not None
** is_fraction:  0.75
** groundtruth_num is (int, float)
** compare_two_numbers float 0.75 1.25
** wrong
**  907 1798
** answer: 282.74, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  282.74
** groundtruth_num is (int, float)
** compare_two_numbers int 282.74 40
** wrong
**  907 1799
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  908 1799
** answer: (-∞,-2)∪(-2,3)∪(3,∞), groundtruth_str: (-\infty,-2)\cup(-2,3)\cup(3,\infty)
** wrong
**  908 1800
** answer: 720, groundtruth_str: 720
** compare on lower
** correct
**  909 1800
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  910 1800
** answer: -1.5, groundtruth_str: -\frac{3}{2}
** groundtruth_num is not None
** is_fraction:  -1.5
** groundtruth_num is (int, float)
** compare_two_numbers float -1.5 -1.5
** correct
**  911 1800
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  912 1800
** answer: 5040, groundtruth_str: 5,040
** groundtruth_num is not None
** is_fraction:  5040
** groundtruth_num is (int, float)
** compare_two_numbers int 5040 5040
** correct
**  913 1800
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  914 1800
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  915 1800
** answer: 720, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  720
** groundtruth_num is (int, float)
** compare_two_numbers int 720 10
** wrong
**  915 1801
** answer: -0.707106781, groundtruth_str: -\frac{\sqrt{2}}{2}
** groundtruth_num is not None
** is_fraction:  -0.707106781
** groundtruth_num is (int, float)
** compare_two_numbers float -0.707106781 -0.7071067811865476
** correct
**  916 1801
** answer: 1-3√5/5, groundtruth_str: \frac{25\sqrt{10}}{4}
** groundtruth_num is not None
** is_fraction:  1-3√5/5
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  916 1802
** answer: 3.7%, groundtruth_str: 100
** groundtruth_num is not None
** is_fraction:  3.7%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.037000000000000005 100
** wrong
**  916 1803
** answer: 2005, groundtruth_str: 16592
** groundtruth_num is not None
** is_fraction:  2005
** groundtruth_num is (int, float)
** compare_two_numbers int 2005 16592
** wrong
**  916 1804
** answer: -1, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers int -1 1
** wrong
**  916 1805
** answer: -36, groundtruth_str: -36
** compare on lower
** correct
**  917 1805
** answer: 3, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 4
** wrong
**  917 1806
** answer: 7, groundtruth_str: 31
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 31
** wrong
**  917 1807
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  918 1807
** answer: 196, groundtruth_str: 49\pi
** groundtruth_num is not None
** is_fraction:  196
** groundtruth_num is (int, float)
** compare_two_numbers float 196 153.93804002589988
** wrong
**  918 1808
** answer: -4, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  -4
** groundtruth_num is (int, float)
** compare_two_numbers int -4 6
** wrong
**  918 1809
** answer: 0, groundtruth_str: \frac{360}7
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 51.42857142857143
** wrong
**  918 1810
** answer: 50, groundtruth_str: 38
** groundtruth_num is not None
** is_fraction:  50
** groundtruth_num is (int, float)
** compare_two_numbers int 50 38
** wrong
**  918 1811
** answer: \sqrt{2}, groundtruth_str: \sqrt{2}
** compare on lower
** correct
**  919 1811
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  920 1811
** answer: 12, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 8
** wrong
**  920 1812
** answer: 9, groundtruth_str: 27
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 27
** wrong
**  920 1813
** answer: 56, groundtruth_str: 165
** groundtruth_num is not None
** is_fraction:  56
** groundtruth_num is (int, float)
** compare_two_numbers int 56 165
** wrong
**  920 1814
** answer: 0, groundtruth_str: 150
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 150
** wrong
**  920 1815
** answer: 1, groundtruth_str: \frac{3}{2}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 1.5
** wrong
**  920 1816
** answer: 293, groundtruth_str: 406
** groundtruth_num is not None
** is_fraction:  293
** groundtruth_num is (int, float)
** compare_two_numbers int 293 406
** wrong
**  920 1817
** answer: -0.24615384615385, groundtruth_str: -\frac{16}{65}
** groundtruth_num is not None
** is_fraction:  -0.24615384615385
** groundtruth_num is (int, float)
** compare_two_numbers float -0.24615384615385 -0.24615384615384617
** correct
**  921 1817
** answer: 0.230769230769, groundtruth_str: \frac{3}{13}
** groundtruth_num is not None
** is_fraction:  0.230769230769
** groundtruth_num is (int, float)
** compare_two_numbers float 0.230769230769 0.23076923076923078
** correct
**  922 1817
** answer: 0.75, groundtruth_str: \frac{3}{4}
** groundtruth_num is not None
** is_fraction:  0.75
** groundtruth_num is (int, float)
** compare_two_numbers float 0.75 0.75
** correct
**  923 1817
** answer: 15, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 30
** wrong
**  923 1818
** answer: 0, groundtruth_str: 135
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 135
** wrong
**  923 1819
** answer: 0, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 5
** wrong
**  923 1820
** answer: \frac{4}{27}, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  \frac{4}{27}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.14814814814814814 0.5
** wrong
**  923 1821
** answer: \frac{10}{3}, groundtruth_str: \frac{58}{7}
** groundtruth_num is not None
** is_fraction:  \frac{10}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 3.3333333333333335 8.285714285714286
** wrong
**  923 1822
** answer: 1, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 3
** wrong
**  923 1823
** answer: 0.75, groundtruth_str: \frac{47}{144}
** groundtruth_num is not None
** is_fraction:  0.75
** groundtruth_num is (int, float)
** compare_two_numbers float 0.75 0.3263888888888889
** wrong
**  923 1824
** answer: 296, groundtruth_str: 23
** groundtruth_num is not None
** is_fraction:  296
** groundtruth_num is (int, float)
** compare_two_numbers int 296 23
** wrong
**  923 1825
** answer: 3, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 15
** wrong
**  923 1826
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  924 1826
** answer: 44, groundtruth_str: 44
** compare on lower
** correct
**  925 1826
** answer: 50,200, groundtruth_str: 17700
** groundtruth_num is not None
** is_fraction:  50,200
** groundtruth_num is (int, float)
** compare_two_numbers int 50200 17700
** wrong
**  925 1827
** answer: 48, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  48
** groundtruth_num is (int, float)
** compare_two_numbers int 48 36
** wrong
**  925 1828
** answer: 0, groundtruth_str: -7
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -7
** wrong
**  925 1829
** answer: 9, groundtruth_str: -27
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 -27
** wrong
**  925 1830
** answer: 156.25, groundtruth_str: 165
** groundtruth_num is not None
** is_fraction:  156.25
** groundtruth_num is (int, float)
** compare_two_numbers int 156.25 165
** wrong
**  925 1831
** answer: 1024, groundtruth_str: 1024
** compare on lower
** correct
**  926 1831
** answer: 0, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 1
** wrong
**  926 1832
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  927 1832
** answer: 1993, groundtruth_str: 19941989
** groundtruth_num is not None
** is_fraction:  1993
** groundtruth_num is (int, float)
** compare_two_numbers int 1993 19941989
** wrong
**  927 1833
** answer: \frac{\sqrt{130}-2\sqrt{51}}{2}, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  \frac{\sqrt{130}-2\sqrt{51}}{2}
** groundtruth_num is (int, float)
** compare_two_numbers int -1.4405513030471608 9
** wrong
**  927 1834
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  928 1834
** answer: \frac{5}{4}, groundtruth_str: 5
** compare on lower in
** correct
**  929 1834
** answer: 27, groundtruth_str: 126
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers int 27 126
** wrong
**  929 1835
** answer: \frac{\sqrt{21}}{5}, groundtruth_str: \frac{\sqrt{21}}{5}
** compare on lower
** correct
**  930 1835
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  931 1835
** answer: 8, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 11
** wrong
**  931 1836
** answer: 4, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 5
** wrong
**  931 1837
** answer: 9.0, groundtruth_str: 4.5
** groundtruth_num is not None
** is_fraction:  9.0
** groundtruth_num is (int, float)
** compare_two_numbers float 9 4.5
** wrong
**  931 1838
** answer: 2, groundtruth_str: 98
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 98
** wrong
**  931 1839
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  932 1839
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  933 1839
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  934 1839
** answer: -814+3698i, groundtruth_str: -814+3698i
** compare on lower
** correct
**  935 1839
** answer: 11, groundtruth_str: 71
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 71
** wrong
**  935 1840
** answer: 0, groundtruth_str: \frac{9}{256}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.03515625
** wrong
**  935 1841
** answer: 85, groundtruth_str: 85
** compare on lower
** correct
**  936 1841
** answer: -2, groundtruth_str: -2
** compare on lower
** correct
**  937 1841
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  938 1841
** answer: 0, groundtruth_str: -\frac{10}{3}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 -3.3333333333333335
** wrong
**  938 1842
** answer: 360, groundtruth_str: 180
** groundtruth_num is not None
** is_fraction:  360
** groundtruth_num is (int, float)
** compare_two_numbers int 360 180
** wrong
**  938 1843
** answer: 0, groundtruth_str: -120
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -120
** wrong
**  938 1844
** answer: 0, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 2
** wrong
**  938 1845
** answer: 4, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 5
** wrong
**  938 1846
** answer: 10, groundtruth_str: 240
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 240
** wrong
**  938 1847
** answer: 4.5π, groundtruth_str: \frac{9\pi}{2}
** groundtruth_num is not None
** is_fraction:  4.5π
** groundtruth_num is (int, float)
** compare_two_numbers float 14.13 14.137166941154069
** wrong
**  938 1848
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  939 1848
** answer: 68, groundtruth_str: 58
** groundtruth_num is not None
** is_fraction:  68
** groundtruth_num is (int, float)
** compare_two_numbers int 68 58
** wrong
**  939 1849
** answer: 10, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 0
** wrong
**  939 1850
** answer: 121, groundtruth_str: 100
** groundtruth_num is not None
** is_fraction:  121
** groundtruth_num is (int, float)
** compare_two_numbers int 121 100
** wrong
**  939 1851
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  940 1851
** answer: 9, groundtruth_str: 27
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 27
** wrong
**  940 1852
** answer: 52, groundtruth_str: \frac{17}{8}
** groundtruth_num is not None
** is_fraction:  52
** groundtruth_num is (int, float)
** compare_two_numbers float 52 2.125
** wrong
**  940 1853
** answer: 36, groundtruth_str: 180
** groundtruth_num is not None
** is_fraction:  36
** groundtruth_num is (int, float)
** compare_two_numbers int 36 180
** wrong
**  940 1854
** answer: 7, groundtruth_str: 28
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 28
** wrong
**  940 1855
** answer: 800, groundtruth_str: 800
** compare on lower
** correct
**  941 1855
** answer: 0, groundtruth_str: \frac{1}{12}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.08333333333333333
** wrong
**  941 1856
** answer: 136, groundtruth_str: 136
** compare on lower
** correct
**  942 1856
** answer: 7, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 9
** wrong
**  942 1857
** answer: -9, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  -9
** groundtruth_num is (int, float)
** compare_two_numbers int -9 8
** wrong
**  942 1858
** answer: 1, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 10
** wrong
**  942 1859
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  943 1859
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  944 1859
** answer: 7.75, groundtruth_str: \frac{25}{9}
** groundtruth_num is not None
** is_fraction:  7.75
** groundtruth_num is (int, float)
** compare_two_numbers float 7.75 2.7777777777777777
** wrong
**  944 1860
** answer: 216, groundtruth_str: 216
** compare on lower
** correct
**  945 1860
** answer: 0.209, groundtruth_str: \frac{30}{143}
** groundtruth_num is not None
** is_fraction:  0.209
** groundtruth_num is (int, float)
** compare_two_numbers float 0.209 0.2097902097902098
** wrong
**  945 1861
** answer: 2, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 6
** wrong
**  945 1862
** answer: 0.1209, groundtruth_str: 0.015
** groundtruth_num is not None
** is_fraction:  0.1209
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1209 0.015
** wrong
**  945 1863
** answer: \frac{4}{3}, groundtruth_str: \frac{8}{21}
** groundtruth_num is not None
** is_fraction:  \frac{4}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 1.3333333333333333 0.38095238095238093
** wrong
**  945 1864
** answer: 2√10, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  2√10
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  945 1865
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  946 1865
** answer: undefined, groundtruth_str: \frac{1}{5}
** groundtruth_num is not None
** is_fraction:  undefined
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  946 1866
** answer: 286, groundtruth_str: 1430
** groundtruth_num is not None
** is_fraction:  286
** groundtruth_num is (int, float)
** compare_two_numbers int 286 1430
** wrong
**  946 1867
** answer: 1, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 6
** wrong
**  946 1868
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  947 1868
** answer: 0, groundtruth_str: (5,-6)
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -1
** wrong
**  947 1869
** answer: 18, groundtruth_str: 56
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 56
** wrong
**  947 1870
** answer: 0, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 9
** wrong
**  947 1871
** answer: 9, groundtruth_str: 553
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 553
** wrong
**  947 1872
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  948 1872
** answer: 0.8660254037844386, groundtruth_str: \frac{\sqrt{3}}{2}
** groundtruth_num is not None
** is_fraction:  0.8660254037844386
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8660254037844386 0.8660254037844386
** correct
**  949 1872
** answer: -32, groundtruth_str: -80
** groundtruth_num is not None
** is_fraction:  -32
** groundtruth_num is (int, float)
** compare_two_numbers int -32 -80
** wrong
**  949 1873
** answer: 0, groundtruth_str: \sqrt{65}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 8.06225774829855
** wrong
**  949 1874
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  950 1874
** answer: 9.0, groundtruth_str: 5.4
** groundtruth_num is not None
** is_fraction:  9.0
** groundtruth_num is (int, float)
** compare_two_numbers float 9 5.4
** wrong
**  950 1875
** answer: 5, groundtruth_str: 10\pi
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers float 5 31.41592653589793
** wrong
**  950 1876
** answer: -77.5, groundtruth_str: -\frac{155}{2}
** groundtruth_num is not None
** is_fraction:  -77.5
** groundtruth_num is (int, float)
** compare_two_numbers float -77.5 -77.5
** correct
**  951 1876
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  952 1876
** answer: 243, groundtruth_str: 243
** compare on lower
** correct
**  953 1876
** answer: 8, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 2
** wrong
**  953 1877
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  954 1877
** answer: 0, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 8
** wrong
**  954 1878
** answer: -19, groundtruth_str: 3x^2-7x+4
** wrong
**  954 1879
** answer: 2, groundtruth_str: \begin{pmatrix}2&0\-3&5\end{pmatrix}
** wrong
**  954 1880
** answer: 99,940,009, groundtruth_str: 99940009
** groundtruth_num is not None
** is_fraction:  99,940,009
** groundtruth_num is (int, float)
** compare_two_numbers int 99940009 99940009
** correct
**  955 1880
** answer: 17, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  17
** groundtruth_num is (int, float)
** compare_two_numbers int 17 11
** wrong
**  955 1881
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  956 1881
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  957 1881
** answer: 32, groundtruth_str: 512
** groundtruth_num is not None
** is_fraction:  32
** groundtruth_num is (int, float)
** compare_two_numbers int 32 512
** wrong
**  957 1882
** answer: 76, groundtruth_str: 76
** compare on lower
** correct
**  958 1882
** answer: 5, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 17
** wrong
**  958 1883
** answer: 1, groundtruth_str: [-\frac{1}{2},\frac{1}{2}]
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 -0.5
** wrong
**  958 1884
** answer: 30, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 15
** wrong
**  958 1885
** answer: 31,200, groundtruth_str: 32,348
** groundtruth_num is not None
** is_fraction:  31,200
** groundtruth_num is (int, float)
** compare_two_numbers int 31200 32348
** wrong
**  958 1886
** answer: -25, groundtruth_str: -221_3
** groundtruth_num is not None
** is_fraction:  -25
** groundtruth_num is (int, float)
** compare_two_numbers int -25 -2213
** wrong
**  958 1887
** answer: 3, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 17
** wrong
**  958 1888
** answer: 1, groundtruth_str: 78
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 78
** wrong
**  958 1889
** answer: 58, groundtruth_str: 62
** groundtruth_num is not None
** is_fraction:  58
** groundtruth_num is (int, float)
** compare_two_numbers int 58 62
** wrong
**  958 1890
** answer: -1/5-6/5i, groundtruth_str: 1+2i
** wrong
**  958 1891
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  959 1891
** answer: 14, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers int 14 15
** wrong
**  959 1892
** answer: \frac{1}{3}, groundtruth_str: \frac{1}{3}
** compare on lower
** correct
**  960 1892
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  961 1892
** answer: 36°, groundtruth_str: \frac{270}7
** groundtruth_num is not None
** is_fraction:  36°
** groundtruth_num is (int, float)
** compare_two_numbers float 36 38.57142857142857
** wrong
**  961 1893
** answer: 73, groundtruth_str: 73
** compare on lower
** correct
**  962 1893
** answer: 59049, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  59049
** groundtruth_num is (int, float)
** compare_two_numbers int 59049 14
** wrong
**  962 1894
** answer: 6, groundtruth_str: 3\sqrt{2}
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers float 6 4.242640687119285
** wrong
**  962 1895
** answer: 0.5, groundtruth_str: \frac{5}{13}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.38461538461538464
** wrong
**  962 1896
** answer: 170, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  170
** groundtruth_num is (int, float)
** compare_two_numbers int 170 11
** wrong
**  962 1897
** answer: 12.3, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  12.3
** groundtruth_num is (int, float)
** compare_two_numbers int 12.3 12
** correct
**  963 1897
** answer: -52, groundtruth_str: 962
** groundtruth_num is not None
** is_fraction:  -52
** groundtruth_num is (int, float)
** compare_two_numbers int -52 962
** wrong
**  963 1898
** answer: 1, groundtruth_str: \frac{3}{5}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.6
** wrong
**  963 1899
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  964 1899
** answer: 1, groundtruth_str: -13
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 -13
** wrong
**  964 1900
** answer: 2, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 3
** wrong
**  964 1901
** answer: 0.25, groundtruth_str: \frac{6}{7}
** groundtruth_num is not None
** is_fraction:  0.25
** groundtruth_num is (int, float)
** compare_two_numbers float 0.25 0.8571428571428571
** wrong
**  964 1902
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  965 1902
** answer: \frac{7}{4}, groundtruth_str: \frac{7}{4}
** compare on lower
** correct
**  966 1902
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  967 1902
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  968 1902
** answer: E, groundtruth_str: (\text{E})
** groundtruth_num is not None
** is_fraction:  E
** groundtruth_num is (int, float)
** compare_two_numbers float 2.718 2.718281828459045
** wrong
**  968 1903
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  968 1904
** answer: 2, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 3
** wrong
**  968 1905
** answer: 8, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 12
** wrong
**  968 1906
** answer: 7132142.5, groundtruth_str: 715
** groundtruth_num is not None
** is_fraction:  7132142.5
** groundtruth_num is (int, float)
** compare_two_numbers int 7132142.5 715
** wrong
**  968 1907
** answer: -4, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  -4
** groundtruth_num is (int, float)
** compare_two_numbers int -4 4
** wrong
**  968 1908
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  969 1908
** answer: 44.13%, groundtruth_str: 44
** groundtruth_num is not None
** is_fraction:  44.13%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.4413 44
** wrong
**  969 1909
** answer: 3√13, groundtruth_str: 3\sqrt{13}
** groundtruth_num is not None
** is_fraction:  3√13
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  969 1910
** answer: 234, groundtruth_str: 234
** compare on lower
** correct
**  970 1910
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  971 1910
** answer: 3, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 2
** wrong
**  971 1911
** answer: 200, groundtruth_str: 200
** compare on lower
** correct
**  972 1911
** answer: 43,200, groundtruth_str: 10800
** groundtruth_num is not None
** is_fraction:  43,200
** groundtruth_num is (int, float)
** compare_two_numbers int 43200 10800
** wrong
**  972 1912
** answer: [0,∞), groundtruth_str: [0,\infty)
** wrong
**  972 1913
** answer: 9, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 6
** wrong
**  972 1914
** answer: 11.3162, groundtruth_str: \sqrt{70}
** groundtruth_num is not None
** is_fraction:  11.3162
** groundtruth_num is (int, float)
** compare_two_numbers float 11.3162 8.366600265340756
** wrong
**  972 1915
** answer: 1, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 12
** wrong
**  972 1916
** answer: 2, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 20
** wrong
**  972 1917
** answer: \frac{17}{4}, groundtruth_str: -9
** groundtruth_num is not None
** is_fraction:  \frac{17}{4}
** groundtruth_num is (int, float)
** compare_two_numbers int 4.25 -9
** wrong
**  972 1918
** answer: \frac{2}{15}, groundtruth_str: \frac{1}{10}
** groundtruth_num is not None
** is_fraction:  \frac{2}{15}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.13333333333333333 0.1
** wrong
**  972 1919
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  973 1919
** answer: 288, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  288
** groundtruth_num is (int, float)
** compare_two_numbers int 288 24
** wrong
**  973 1920
** answer: 12345, groundtruth_str: 31254
** groundtruth_num is not None
** is_fraction:  12345
** groundtruth_num is (int, float)
** compare_two_numbers int 12345 31254
** wrong
**  973 1921
** answer: -\begin{pmatrix}2\7\-13\end{pmatrix}, groundtruth_str: \begin{pmatrix}-2\-7\13\end{pmatrix}
** wrong
**  973 1922
** answer: (7,8√2), groundtruth_str: (1,4\sqrt{3})
** wrong
**  973 1923
** answer: 1, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 4
** wrong
**  973 1924
** answer: 5705, groundtruth_str: 3003
** groundtruth_num is not None
** is_fraction:  5705
** groundtruth_num is (int, float)
** compare_two_numbers int 5705 3003
** wrong
**  973 1925
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  974 1925
** answer: 8, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 20
** wrong
**  974 1926
** answer: 198, groundtruth_str: 198
** compare on lower
** correct
**  975 1926
** answer: undefined, groundtruth_str: 2\sqrt{2}
** groundtruth_num is not None
** is_fraction:  undefined
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  975 1927
** answer: 0, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 2
** wrong
**  975 1928
** answer: 12600, groundtruth_str: 12600
** compare on lower
** correct
**  976 1928
** answer: 1, groundtruth_str: \frac{4}{7}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.5714285714285714
** wrong
**  976 1929
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  977 1929
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  977 1930
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  978 1930
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  979 1930
** answer: 4, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 5
** wrong
**  979 1931
** answer: 256, groundtruth_str: 256
** compare on lower
** correct
**  980 1931
** answer: 1056, groundtruth_str: 1056
** compare on lower
** correct
**  981 1931
** answer: 58, groundtruth_str: 58
** compare on lower
** correct
**  982 1931
** answer: 0.1, groundtruth_str: \frac{152}{225}
** groundtruth_num is not None
** is_fraction:  0.1
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1 0.6755555555555556
** wrong
**  982 1932
** answer: 180, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  180
** groundtruth_num is (int, float)
** compare_two_numbers int 180 26
** wrong
**  982 1933
** answer: 4, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 2
** wrong
**  982 1934
** answer: 0, groundtruth_str: \sqrt{2}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 1.4142135623730951
** wrong
**  982 1935
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  983 1935
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  984 1935
** answer: 5, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 10
** wrong
**  984 1936
** answer: 513.28, groundtruth_str: \frac{700}{3}
** groundtruth_num is not None
** is_fraction:  513.28
** groundtruth_num is (int, float)
** compare_two_numbers float 513.28 233.33333333333334
** wrong
**  984 1937
** answer: 2, groundtruth_str: \frac{\pi}{4}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 0.7853981633974483
** wrong
**  984 1938
** answer: 0.34, groundtruth_str: \frac{17}{50}
** groundtruth_num is not None
** is_fraction:  0.34
** groundtruth_num is (int, float)
** compare_two_numbers float 0.34 0.34
** correct
**  985 1938
** answer: 0, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.25
** wrong
**  985 1939
** answer: (B)Circle, groundtruth_str: \text{(E)}
** wrong
**  985 1940
** answer: 29, groundtruth_str: 157
** groundtruth_num is not None
** is_fraction:  29
** groundtruth_num is (int, float)
** compare_two_numbers int 29 157
** wrong
**  985 1941
** answer: 0.21875, groundtruth_str: \frac{27}{128}
** groundtruth_num is not None
** is_fraction:  0.21875
** groundtruth_num is (int, float)
** compare_two_numbers float 0.21875 0.2109375
** wrong
**  985 1942
** answer: 15, groundtruth_str: 127
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 127
** wrong
**  985 1943
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  986 1943
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  987 1943
** answer: 6.1, groundtruth_str: 5.4
** groundtruth_num is not None
** is_fraction:  6.1
** groundtruth_num is (int, float)
** compare_two_numbers float 6.1 5.4
** wrong
**  987 1944
** answer: \frac{\pi^2}{4}, groundtruth_str: \frac{\pi^2}{6}
** groundtruth_num is not None
** is_fraction:  \frac{\pi^2}{4}
** groundtruth_num is (int, float)
** compare_two_numbers float 2.4649 1.6449340668482264
** wrong
**  987 1945
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  988 1945
** answer: 2, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 1
** wrong
**  988 1946
** answer: (-∞,-6)∪(-6,4)∪(4,∞), groundtruth_str: (-\infty,-4)\cup(-4,6)\cup(6,\infty)
** wrong
**  988 1947
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  989 1947
** answer: 8, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 4
** wrong
**  989 1948
** answer: \frac{40}{3}, groundtruth_str: \frac{80}{3}
** groundtruth_num is not None
** is_fraction:  \frac{40}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 13.333333333333334 26.666666666666668
** wrong
**  989 1949
** answer: -48, groundtruth_str: 1736
** groundtruth_num is not None
** is_fraction:  -48
** groundtruth_num is (int, float)
** compare_two_numbers int -48 1736
** wrong
**  989 1950
** answer: 2.7, groundtruth_str: 2.7
** compare on lower
** correct
**  990 1950
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  991 1950
** answer: undefined, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  undefined
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  991 1951
** answer: -1, groundtruth_str: 12-4\sqrt{2}
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers float -1 6.343145750507619
** wrong
**  991 1952
** answer: 630, groundtruth_str: 630
** compare on lower
** correct
**  992 1952
** answer: 16,105, groundtruth_str: 15,000
** groundtruth_num is not None
** is_fraction:  16,105
** groundtruth_num is (int, float)
** compare_two_numbers int 16105 15000
** wrong
**  992 1953
** answer: 41, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  41
** groundtruth_num is (int, float)
** compare_two_numbers int 41 5
** wrong
**  992 1954
** answer: 0.1, groundtruth_str: \frac{1}{10}
** groundtruth_num is not None
** is_fraction:  0.1
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1 0.1
** correct
**  993 1954
** answer: 2016, groundtruth_str: 3024
** groundtruth_num is not None
** is_fraction:  2016
** groundtruth_num is (int, float)
** compare_two_numbers int 2016 3024
** wrong
**  993 1955
** answer: 125, groundtruth_str: 2\sqrt{13}
** groundtruth_num is not None
** is_fraction:  125
** groundtruth_num is (int, float)
** compare_two_numbers float 125 7.211102550927978
** wrong
**  993 1956
** answer: 2.5, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  2.5
** groundtruth_num is (int, float)
** compare_two_numbers int 2.5 3
** wrong
**  993 1957
** answer: -3.08, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  -3.08
** groundtruth_num is (int, float)
** compare_two_numbers int -3.08 2
** wrong
**  993 1958
** answer: 1, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 6
** wrong
**  993 1959
** answer: \begin{pmatrix}3\-4\end{pmatrix}, groundtruth_str: \begin{pmatrix}-4\-3\end{pmatrix}
** wrong
**  993 1960
** answer: 6, groundtruth_str: -6
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 -6
** wrong
**  993 1961
** answer: -1, groundtruth_str: -1
** compare on lower
** correct
**  994 1961
** answer: -1,3, groundtruth_str: -4,-3,-1,1,2,5
** groundtruth_num is not None
** is_fraction:  -1,3
** groundtruth_num is (int, float)
** compare_two_numbers int -1 -1132
** wrong
**  994 1962
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  995 1962
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  996 1962
** answer: 15, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 36
** wrong
**  996 1963
** answer: A,C, groundtruth_str: \text{A,C,F}
** wrong
**  996 1964
** answer: 1, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 9
** wrong
**  996 1965
** answer: 6, groundtruth_str: 21022
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 21022
** wrong
**  996 1966
** answer: 222, groundtruth_str: 222
** compare on lower
** correct
**  997 1966
** answer: 17, groundtruth_str: 42
** groundtruth_num is not None
** is_fraction:  17
** groundtruth_num is (int, float)
** compare_two_numbers int 17 42
** wrong
**  997 1967
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  998 1967
** answer: undefined, groundtruth_str: -6
** groundtruth_num is not None
** is_fraction:  undefined
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  998 1968
** answer: 338, groundtruth_str: 338
** compare on lower
** correct
**  999 1968
** answer: 1, groundtruth_str: (x^2+1)(x^2-4x+13)
** wrong
**  999 1969
** answer: 221, groundtruth_str: 221
** compare on lower
** correct
**  1000 1969
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1001 1969
** answer: -4, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  -4
** groundtruth_num is (int, float)
** compare_two_numbers int -4 19
** wrong
**  1001 1970
** answer: 223318, groundtruth_str: 93
** groundtruth_num is not None
** is_fraction:  223318
** groundtruth_num is (int, float)
** compare_two_numbers int 223318 93
** wrong
**  1001 1971
** answer: 10, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 11
** wrong
**  1001 1972
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  1001 1973
** answer: \frac{9}{32}, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  \frac{9}{32}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.28125 0.5
** wrong
**  1001 1974
** answer: 52, groundtruth_str: 52_8
** groundtruth_num is not None
** is_fraction:  52
** groundtruth_num is (int, float)
** compare_two_numbers int 52 528
** wrong
**  1001 1975
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1002 1975
** answer: 48.52, groundtruth_str: 84
** groundtruth_num is not None
** is_fraction:  48.52
** groundtruth_num is (int, float)
** compare_two_numbers int 48.52 84
** wrong
**  1002 1976
** answer: 3, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 2
** wrong
**  1002 1977
** answer: 10, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 2
** wrong
**  1002 1978
** answer: -5, groundtruth_str: -5
** compare on lower
** correct
**  1003 1978
** answer: 5, groundtruth_str: -4
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 -4
** wrong
**  1003 1979
** answer: 3cis(π/2+tan^(-1)(4/5)), groundtruth_str: 1-12i
** wrong
**  1003 1980
** answer: 8π, groundtruth_str: 8\pi
** groundtruth_num is not None
** is_fraction:  8π
** groundtruth_num is (int, float)
** compare_two_numbers float 25.12 25.132741228718345
** wrong
**  1003 1981
** answer: 45, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  45
** groundtruth_num is (int, float)
** compare_two_numbers int 45 24
** wrong
**  1003 1982
** answer: 440, groundtruth_str: 220
** groundtruth_num is not None
** is_fraction:  440
** groundtruth_num is (int, float)
** compare_two_numbers int 440 220
** wrong
**  1003 1983
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  1004 1983
** answer: 2, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 3
** wrong
**  1004 1984
** answer: 0.5, groundtruth_str: \frac{1}{8}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.125
** wrong
**  1004 1985
** answer: 0.416666666666667, groundtruth_str: \frac{5}{12}
** groundtruth_num is not None
** is_fraction:  0.416666666666667
** groundtruth_num is (int, float)
** compare_two_numbers float 0.416666666666667 0.4166666666666667
** correct
**  1005 1985
** answer: 4992, groundtruth_str: 2304
** groundtruth_num is not None
** is_fraction:  4992
** groundtruth_num is (int, float)
** compare_two_numbers int 4992 2304
** wrong
**  1005 1986
** answer: 64, groundtruth_str: 64
** compare on lower
** correct
**  1006 1986
** answer: 17, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  17
** groundtruth_num is (int, float)
** compare_two_numbers int 17 11
** wrong
**  1006 1987
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  1007 1987
** answer: 2.8943, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2.8943
** groundtruth_num is (int, float)
** compare_two_numbers int 2.8943 4
** wrong
**  1007 1988
** answer: 15, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 10
** wrong
**  1007 1989
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1008 1989
** answer: 178-38d, groundtruth_str: 1112
** groundtruth_num is not None
** is_fraction:  178-38d
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1008 1990
** answer: 8499, groundtruth_str: 2016
** groundtruth_num is not None
** is_fraction:  8499
** groundtruth_num is (int, float)
** compare_two_numbers int 8499 2016
** wrong
**  1008 1991
** answer: 0, groundtruth_str: 10x-4y-5z-20=0
** wrong
**  1008 1992
** answer: 1, groundtruth_str: \frac{3}{2}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 1.5
** wrong
**  1008 1993
** answer: 255, groundtruth_str: 255
** compare on lower
** correct
**  1009 1993
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1010 1993
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  1011 1993
** answer: 1, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 0
** wrong
**  1011 1994
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1012 1994
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1013 1994
** answer: 1, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 4
** wrong
**  1013 1995
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  1014 1995
** answer: 6, groundtruth_str: 6+8i,6+17i
** wrong
**  1014 1996
** answer: 1, groundtruth_str: \text{M}
** wrong
**  1014 1997
** answer: 0, groundtruth_str: \frac{7}{4}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 1.75
** wrong
**  1014 1998
** answer: E, groundtruth_str: \text{D}
** wrong
**  1014 1999
** answer: 4, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 12
** wrong
**  1014 2000
** answer: 180, groundtruth_str: 135
** groundtruth_num is not None
** is_fraction:  180
** groundtruth_num is (int, float)
** compare_two_numbers int 180 135
** wrong
**  1014 2001
** answer: 21y+14, groundtruth_str: 21y+14
** compare on lower
** correct
**  1015 2001
** answer: 2, groundtruth_str: x+3
** wrong
**  1015 2002
** answer: 90-x, groundtruth_str: -89
** groundtruth_num is not None
** is_fraction:  90-x
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1015 2003
** answer: 25, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  25
** groundtruth_num is (int, float)
** compare_two_numbers int 25 50
** wrong
**  1015 2004
** answer: 26.0, groundtruth_str: \frac{52}{3}
** groundtruth_num is not None
** is_fraction:  26.0
** groundtruth_num is (int, float)
** compare_two_numbers float 26 17.333333333333332
** wrong
**  1015 2005
** answer: -22, groundtruth_str: \begin{pmatrix}-2\-14\-7\end{pmatrix}
** wrong
**  1015 2006
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  1015 2007
** answer: 23, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  23
** groundtruth_num is (int, float)
** compare_two_numbers int 23 9
** wrong
**  1015 2008
** answer: 1, groundtruth_str: 199
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 199
** wrong
**  1015 2009
** answer: 1, groundtruth_str: 8n^2+4n+1
** wrong
**  1015 2010
** answer: 2560, groundtruth_str: 2560
** compare on lower
** correct
**  1016 2010
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  1017 2010
** answer: 126, groundtruth_str: 42
** groundtruth_num is not None
** is_fraction:  126
** groundtruth_num is (int, float)
** compare_two_numbers int 126 42
** wrong
**  1017 2011
** answer: 156, groundtruth_str: 144
** groundtruth_num is not None
** is_fraction:  156
** groundtruth_num is (int, float)
** compare_two_numbers int 156 144
** wrong
**  1017 2012
** answer: 3, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 9
** wrong
**  1017 2013
** answer: 1048.5, groundtruth_str: 1093
** groundtruth_num is not None
** is_fraction:  1048.5
** groundtruth_num is (int, float)
** compare_two_numbers int 1048.5 1093
** wrong
**  1017 2014
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  1018 2014
** answer: 6√6, groundtruth_str: 432\sqrt{2}
** groundtruth_num is not None
** is_fraction:  6√6
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1018 2015
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  1019 2015
** answer: 9, groundtruth_str: 59
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 59
** wrong
**  1019 2016
** answer: \frac{5}{9}, groundtruth_str: \frac{5}{9}
** compare on lower
** correct
**  1020 2016
** answer: 10, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 5
** wrong
**  1020 2017
** answer: 0.3125, groundtruth_str: \frac{40}{243}
** groundtruth_num is not None
** is_fraction:  0.3125
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3125 0.1646090534979424
** wrong
**  1020 2018
** answer: \frac{8}{125}, groundtruth_str: \frac{69}{125}
** groundtruth_num is not None
** is_fraction:  \frac{8}{125}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.064 0.552
** wrong
**  1020 2019
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1021 2019
** answer: 0, groundtruth_str: -6
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -6
** wrong
**  1021 2020
** answer: 5, groundtruth_str: \frac{\sqrt{11}}{2}
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers float 5 1.6583123951777
** wrong
**  1021 2021
** answer: -3969, groundtruth_str: -3969
** compare on lower
** correct
**  1022 2021
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  1023 2021
** answer: 0, groundtruth_str: (27,\infty)
** wrong
**  1023 2022
** answer: 450, groundtruth_str: 240
** groundtruth_num is not None
** is_fraction:  450
** groundtruth_num is (int, float)
** compare_two_numbers int 450 240
** wrong
**  1023 2023
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  1024 2023
** answer: 0.3333333333333333, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0.3333333333333333
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3333333333333333 0.5
** wrong
**  1024 2024
** answer: 5, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 16
** wrong
**  1024 2025
** answer: \frac{9}{7}, groundtruth_str: \frac{9}{7}
** compare on lower
** correct
**  1025 2025
** answer: -4, groundtruth_str: -4
** compare on lower
** correct
**  1026 2025
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  1027 2025
** answer: 600, groundtruth_str: 600
** compare on lower
** correct
**  1028 2025
** answer: 54, groundtruth_str: 108
** groundtruth_num is not None
** is_fraction:  54
** groundtruth_num is (int, float)
** compare_two_numbers int 54 108
** wrong
**  1028 2026
** answer: 0, groundtruth_str: \sqrt{101}-\sqrt{2}+9
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 17.635662058747794
** wrong
**  1028 2027
** answer: 360, groundtruth_str: 840
** groundtruth_num is not None
** is_fraction:  360
** groundtruth_num is (int, float)
** compare_two_numbers int 360 840
** wrong
**  1028 2028
** answer: 322,560, groundtruth_str: 20160
** groundtruth_num is not None
** is_fraction:  322,560
** groundtruth_num is (int, float)
** compare_two_numbers int 322560 20160
** wrong
**  1028 2029
** answer: 133, groundtruth_str: 133
** compare on lower
** correct
**  1029 2029
** answer: 5, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 7
** wrong
**  1029 2030
** answer: 0, groundtruth_str: \frac{1}{64}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.015625
** wrong
**  1029 2031
** answer: 26000, groundtruth_str: 26000
** compare on lower
** correct
**  1030 2031
** answer: -1.6, groundtruth_str: -\frac{8}{5}
** groundtruth_num is not None
** is_fraction:  -1.6
** groundtruth_num is (int, float)
** compare_two_numbers float -1.6 -1.6
** correct
**  1031 2031
** answer: 3, groundtruth_str: -\frac{5}{4}
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers float 3 -1.25
** wrong
**  1031 2032
** answer: 352, groundtruth_str: 352
** compare on lower
** correct
**  1032 2032
** answer: 0.1111, groundtruth_str: \frac{1}{9}
** groundtruth_num is not None
** is_fraction:  0.1111
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1111 0.1111111111111111
** wrong
**  1032 2033
** answer: odd, groundtruth_str: \text{odd}
** compare on lower
** correct
**  1033 2033
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1034 2033
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1035 2033
** answer: 9, groundtruth_str: 8_9
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 89
** wrong
**  1035 2034
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  1036 2034
** answer: 4, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 8
** wrong
**  1036 2035
** answer: 1, groundtruth_str: \text{parabola}
** wrong
**  1036 2036
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  1037 2036
** answer: 1, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 3
** wrong
**  1037 2037
** answer: 103, groundtruth_str: 203
** groundtruth_num is not None
** is_fraction:  103
** groundtruth_num is (int, float)
** compare_two_numbers int 103 203
** wrong
**  1037 2038
** answer: 11, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 19
** wrong
**  1037 2039
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1038 2039
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  1039 2039
** answer: 0.75, groundtruth_str: \frac{5}{16}
** groundtruth_num is not None
** is_fraction:  0.75
** groundtruth_num is (int, float)
** compare_two_numbers float 0.75 0.3125
** wrong
**  1039 2040
** answer: \frac{2}{3}, groundtruth_str: \frac{2}{3}
** compare on lower
** correct
**  1040 2040
** answer: 2, groundtruth_str: 1,-2
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 -1
** wrong
**  1040 2041
** answer: 0.3077, groundtruth_str: \frac{4}{13}
** groundtruth_num is not None
** is_fraction:  0.3077
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3077 0.3076923076923077
** wrong
**  1040 2042
** answer: \frac{1}{15}, groundtruth_str: \frac{1}{15}
** compare on lower
** correct
**  1041 2042
** answer: 1, groundtruth_str: x^8+x^7+x^6+x^5+x^4+x^3+x^2+x+1
** wrong
**  1041 2043
** answer: 0, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 9
** wrong
**  1041 2044
** answer: 0, groundtruth_str: 12.25
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 12.25
** wrong
**  1041 2045
** answer: 2450, groundtruth_str: 2450
** compare on lower
** correct
**  1042 2045
** answer: 4√2, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  4√2
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1042 2046
** answer: \frac{3}{663}, groundtruth_str: \frac{1}{221}
** groundtruth_num is not None
** is_fraction:  \frac{3}{663}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.004524886877828055 0.004524886877828055
** correct
**  1043 2046
** answer: 8, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 6
** wrong
**  1043 2047
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1044 2047
** answer: 0, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 20
** wrong
**  1044 2048
** answer: 65, groundtruth_str: 1241
** groundtruth_num is not None
** is_fraction:  65
** groundtruth_num is (int, float)
** compare_two_numbers int 65 1241
** wrong
**  1044 2049
** answer: 31418, groundtruth_str: 301
** groundtruth_num is not None
** is_fraction:  31418
** groundtruth_num is (int, float)
** compare_two_numbers int 31418 301
** wrong
**  1044 2050
** answer: 4, groundtruth_str: 277
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 277
** wrong
**  1044 2051
** answer: 0.1, groundtruth_str: \frac{1}{11}
** groundtruth_num is not None
** is_fraction:  0.1
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1 0.09090909090909091
** wrong
**  1044 2052
** answer: \begin{pmatrix}3&2\c&d\end{pmatrix}, groundtruth_str: \begin{pmatrix}3&2\0&-7\end{pmatrix}
** wrong
**  1044 2053
** answer: \frac{9}{5}, groundtruth_str: 15\pi
** groundtruth_num is not None
** is_fraction:  \frac{9}{5}
** groundtruth_num is (int, float)
** compare_two_numbers float 1.8 47.1238898038469
** wrong
**  1044 2054
** answer: 2245.95, groundtruth_str: 2250\pi
** groundtruth_num is not None
** is_fraction:  2245.95
** groundtruth_num is (int, float)
** compare_two_numbers float 2245.95 7068.583470577035
** wrong
**  1044 2055
** answer: 3, groundtruth_str: \sqrt{3}
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers float 3 1.7320508075688772
** wrong
**  1044 2056
** answer: [0,1], groundtruth_str: (-\infty,0]
** wrong
**  1044 2057
** answer: 3, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 5
** wrong
**  1044 2058
** answer: 16, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 30
** wrong
**  1044 2059
** answer: \frac{7775}{7776}, groundtruth_str: \frac{7775}{7776}
** compare on lower
** correct
**  1045 2059
** answer: 1080, groundtruth_str: 1080
** compare on lower
** correct
**  1046 2059
** answer: 4, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 3
** wrong
**  1046 2060
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  1046 2061
** answer: 2.8284271247461903, groundtruth_str: \frac{37}{11}
** groundtruth_num is not None
** is_fraction:  2.8284271247461903
** groundtruth_num is (int, float)
** compare_two_numbers float 2.8284271247461903 3.3636363636363638
** wrong
**  1046 2062
** answer: 22.8, groundtruth_str: 22.8
** compare on lower
** correct
**  1047 2062
** answer: -\frac{5}{4},-\frac{7}{3}, groundtruth_str: 3,-\frac{1}{3}
** groundtruth_num is not None
** is_fraction:  -\frac{5}{4},-\frac{7}{3}
** groundtruth_num is (int, float)
** compare_two_numbers int -1.25 3
** wrong
**  1047 2063
** answer: 0, groundtruth_str: -2
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -2
** wrong
**  1047 2064
** answer: 20, groundtruth_str: 10\sqrt{6}
** groundtruth_num is not None
** is_fraction:  20
** groundtruth_num is (int, float)
** compare_two_numbers float 20 24.49489742783178
** wrong
**  1047 2065
** answer: 48, groundtruth_str: 10080
** groundtruth_num is not None
** is_fraction:  48
** groundtruth_num is (int, float)
** compare_two_numbers int 48 10080
** wrong
**  1047 2066
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  1048 2066
** answer: \frac{1}{3}, groundtruth_str: \frac{\sqrt{3}}{3}
** groundtruth_num is not None
** is_fraction:  \frac{1}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3333333333333333 0.5773502691896257
** wrong
**  1048 2067
** answer: 64, groundtruth_str: 64
** compare on lower
** correct
**  1049 2067
** answer: 3.16227766, groundtruth_str: \frac{5}{3}
** groundtruth_num is not None
** is_fraction:  3.16227766
** groundtruth_num is (int, float)
** compare_two_numbers float 3.16227766 1.6666666666666667
** wrong
**  1049 2068
** answer: 3, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 9
** wrong
**  1049 2069
** answer: 240, groundtruth_str: 1320
** groundtruth_num is not None
** is_fraction:  240
** groundtruth_num is (int, float)
** compare_two_numbers int 240 1320
** wrong
**  1049 2070
** answer: 8.5, groundtruth_str: \frac{17}{2}
** groundtruth_num is not None
** is_fraction:  8.5
** groundtruth_num is (int, float)
** compare_two_numbers float 8.5 8.5
** correct
**  1050 2070
** answer: 12, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 36
** wrong
**  1050 2071
** answer: 3, groundtruth_str: 27
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 27
** wrong
**  1050 2072
** answer: [\begin{array}{cc}0&0\0&1\end{array}], groundtruth_str: \begin{pmatrix}0&0&0\0&1&0\0&0&0\end{pmatrix}
** wrong
**  1050 2073
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  1050 2074
** answer: 3, groundtruth_str: 89
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 89
** wrong
**  1050 2075
** answer: 16, groundtruth_str: 81
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 81
** wrong
**  1050 2076
** answer: 3, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 11
** wrong
**  1050 2077
** answer: 18, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 5
** wrong
**  1050 2078
** answer: [00;01], groundtruth_str: \begin{pmatrix}0&0\0&1\end{pmatrix}
** wrong
**  1050 2079
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  1051 2079
** answer: (-\infty,-4)\cup(-4,\infty), groundtruth_str: (-\infty,-4)\cup(-4,\infty)
** compare on lower
** correct
**  1052 2079
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  1053 2079
** answer: 319, groundtruth_str: 319
** compare on lower
** correct
**  1054 2079
** answer: 6, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 12
** wrong
**  1054 2080
** answer: 8, groundtruth_str: 4096
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 4096
** wrong
**  1054 2081
** answer: 41, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  41
** groundtruth_num is (int, float)
** compare_two_numbers int 41 13
** wrong
**  1054 2082
** answer: 6561, groundtruth_str: 66673
** groundtruth_num is not None
** is_fraction:  6561
** groundtruth_num is (int, float)
** compare_two_numbers int 6561 66673
** wrong
**  1054 2083
** answer: 0, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 15
** wrong
**  1054 2084
** answer: 0, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 9
** wrong
**  1054 2085
** answer: 0, groundtruth_str: \frac{1}{2},1,2
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.5
** wrong
**  1054 2086
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  1055 2086
** answer: 32, groundtruth_str: 41
** groundtruth_num is not None
** is_fraction:  32
** groundtruth_num is (int, float)
** compare_two_numbers int 32 41
** wrong
**  1055 2087
** answer: 1, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.5
** wrong
**  1055 2088
** answer: 0, groundtruth_str: \frac{35}{64}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.546875
** wrong
**  1055 2089
** answer: 49, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  49
** groundtruth_num is (int, float)
** compare_two_numbers int 49 7
** wrong
**  1055 2090
** answer: 269, groundtruth_str: 269
** compare on lower
** correct
**  1056 2090
** answer: -20, groundtruth_str: -20
** compare on lower
** correct
**  1057 2090
** answer: 962, groundtruth_str: 621
** groundtruth_num is not None
** is_fraction:  962
** groundtruth_num is (int, float)
** compare_two_numbers int 962 621
** wrong
**  1057 2091
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1058 2091
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  1059 2091
** answer: 0, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 10
** wrong
**  1059 2092
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  1060 2092
** answer: 2, groundtruth_str: 8\sqrt{2}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 11.313708498984761
** wrong
**  1060 2093
** answer: -30, groundtruth_str: 31
** groundtruth_num is not None
** is_fraction:  -30
** groundtruth_num is (int, float)
** compare_two_numbers int -30 31
** wrong
**  1060 2094
** answer: \begin{pmatrix}10\35\-30\end{pmatrix}, groundtruth_str: \begin{pmatrix}-10\-35\30\end{pmatrix}
** wrong
**  1060 2095
** answer: 118.55, groundtruth_str: 72\pi\sqrt{3}
** groundtruth_num is not None
** is_fraction:  118.55
** groundtruth_num is (int, float)
** compare_two_numbers float 118.55 391.78066267459104
** wrong
**  1060 2096
** answer: 75, groundtruth_str: \sqrt{6}
** groundtruth_num is not None
** is_fraction:  75
** groundtruth_num is (int, float)
** compare_two_numbers float 75 2.449489742783178
** wrong
**  1060 2097
** answer: -\frac{\pi}{6},\frac{\pi}{6}, groundtruth_str: -\frac{5\pi}{12},-\frac{\pi}{12},\frac{\pi}{12},\frac{5\pi}{12}
** groundtruth_num is not None
** is_fraction:  -\frac{\pi}{6},\frac{\pi}{6}
** groundtruth_num is (int, float)
** compare_two_numbers float -0.5233333333333333 -1.3083333333333333
** wrong
**  1060 2098
** answer: -4, groundtruth_str: (-4,13)
** groundtruth_num is not None
** is_fraction:  -4
** groundtruth_num is (int, float)
** compare_two_numbers int -4 -413
** wrong
**  1060 2099
** answer: 0.5, groundtruth_str: \frac{1+\sqrt{5}}{4}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.8090169943749475
** wrong
**  1060 2100
** answer: 12, groundtruth_str: 108
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 108
** wrong
**  1060 2101
** answer: 14, groundtruth_str: -\frac{82}{27}
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers float 14 -3.037037037037037
** wrong
**  1060 2102
** answer: 0.5, groundtruth_str: \frac{\sqrt{5}}{5}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.4472135954999579
** wrong
**  1060 2103
** answer: 3, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 4
** wrong
**  1060 2104
** answer: -74, groundtruth_str: (10,14,61)
** groundtruth_num is not None
** is_fraction:  -74
** groundtruth_num is (int, float)
** compare_two_numbers int -74 101461
** wrong
**  1060 2105
** answer: \frac{35}{4}, groundtruth_str: \frac{14}{3}
** groundtruth_num is not None
** is_fraction:  \frac{35}{4}
** groundtruth_num is (int, float)
** compare_two_numbers float 8.75 4.666666666666667
** wrong
**  1060 2106
** answer: 37, groundtruth_str: 503
** groundtruth_num is not None
** is_fraction:  37
** groundtruth_num is (int, float)
** compare_two_numbers int 37 503
** wrong
**  1060 2107
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  1061 2107
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  1062 2107
** answer: 1, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 -1
** wrong
**  1062 2108
** answer: 4, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 30
** wrong
**  1062 2109
** answer: 4,-2+3i\sqrt{2},-2-3i\sqrt{2}, groundtruth_str: 4,-2+3i,-2-3i
** wrong
**  1062 2110
** answer: 5, groundtruth_str: 23
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 23
** wrong
**  1062 2111
** answer: 5, groundtruth_str: 850
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 850
** wrong
**  1062 2112
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  1063 2112
** answer: 16, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 20
** wrong
**  1063 2113
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  1064 2113
** answer: , groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1064 2114
** answer: (5,2), groundtruth_str: (1,2)
** groundtruth_num is not None
** is_fraction:  (5,2)
** groundtruth_num is (int, float)
** compare_two_numbers int 5 12
** wrong
**  1064 2115
** answer: 5, groundtruth_str: 41
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 41
** wrong
**  1064 2116
** answer: 1, groundtruth_str: \frac{2}{3}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.6666666666666666
** wrong
**  1064 2117
** answer: \frac{5\pi}{3}, groundtruth_str: \frac{2\pi}{3}
** groundtruth_num is not None
** is_fraction:  \frac{5\pi}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 5.233333333333333 2.0943951023931957
** wrong
**  1064 2118
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  1065 2118
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  1066 2118
** answer: 2, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 3
** wrong
**  1066 2119
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1067 2119
** answer: 3, groundtruth_str: 2\sqrt{2}
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers float 3 2.8284271247461903
** wrong
**  1067 2120
** answer: 1924, groundtruth_str: 980
** groundtruth_num is not None
** is_fraction:  1924
** groundtruth_num is (int, float)
** compare_two_numbers int 1924 980
** wrong
**  1067 2121
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  1068 2121
** answer: 78, groundtruth_str: 78
** compare on lower
** correct
**  1069 2121
** answer: 50π, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  50π
** groundtruth_num is (int, float)
** compare_two_numbers int 157 50
** wrong
**  1069 2122
** answer: -√3, groundtruth_str: -\sqrt{3}
** groundtruth_num is not None
** is_fraction:  -√3
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1069 2123
** answer: \frac{1}{4}, groundtruth_str: \frac{3}{4}
** groundtruth_num is not None
** is_fraction:  \frac{1}{4}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.25 0.75
** wrong
**  1069 2124
** answer: 287300, groundtruth_str: 8000
** groundtruth_num is not None
** is_fraction:  287300
** groundtruth_num is (int, float)
** compare_two_numbers int 287300 8000
** wrong
**  1069 2125
** answer: 11, groundtruth_str: 11+x
** wrong
**  1069 2126
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  1070 2126
** answer: 0.5, groundtruth_str: \frac{\sqrt{7}}{14}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.18898223650461363
** wrong
**  1070 2127
** answer: 815, groundtruth_str: 6732
** groundtruth_num is not None
** is_fraction:  815
** groundtruth_num is (int, float)
** compare_two_numbers int 815 6732
** wrong
**  1070 2128
** answer: \frac{19}{216}, groundtruth_str: \frac{2}{27}
** groundtruth_num is not None
** is_fraction:  \frac{19}{216}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.08796296296296297 0.07407407407407407
** wrong
**  1070 2129
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1071 2129
** answer: 32, groundtruth_str: -4
** groundtruth_num is not None
** is_fraction:  32
** groundtruth_num is (int, float)
** compare_two_numbers int 32 -4
** wrong
**  1071 2130
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1072 2130
** answer: 3, groundtruth_str: 31
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 31
** wrong
**  1072 2131
** answer: 162, groundtruth_str: 162
** compare on lower
** correct
**  1073 2131
** answer: (1,1), groundtruth_str: (4,5)
** groundtruth_num is not None
** is_fraction:  (1,1)
** groundtruth_num is (int, float)
** compare_two_numbers int 1 45
** wrong
**  1073 2132
** answer: \begin{pmatrix}6\28\108\end{pmatrix}, groundtruth_str: \begin{pmatrix}-18\-49\96\end{pmatrix}
** wrong
**  1073 2133
** answer: 2, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 0.5
** wrong
**  1073 2134
** answer: 21, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  21
** groundtruth_num is (int, float)
** compare_two_numbers int 21 17
** wrong
**  1073 2135
** answer: 6, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 8
** wrong
**  1073 2136
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  1074 2136
** answer: 0.85714285714286, groundtruth_str: \frac{2}{3}
** groundtruth_num is not None
** is_fraction:  0.85714285714286
** groundtruth_num is (int, float)
** compare_two_numbers float 0.85714285714286 0.6666666666666666
** wrong
**  1074 2137
** answer: 0.171875, groundtruth_str: \frac{35}{128}
** groundtruth_num is not None
** is_fraction:  0.171875
** groundtruth_num is (int, float)
** compare_two_numbers float 0.171875 0.2734375
** wrong
**  1074 2138
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  1075 2138
** answer: 55, groundtruth_str: 55
** compare on lower
** correct
**  1076 2138
** answer: 21, groundtruth_str: 243
** groundtruth_num is not None
** is_fraction:  21
** groundtruth_num is (int, float)
** compare_two_numbers int 21 243
** wrong
**  1076 2139
** answer: 91, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  91
** groundtruth_num is (int, float)
** compare_two_numbers int 91 19
** wrong
**  1076 2140
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  1077 2140
** answer: 2, groundtruth_str: -3
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 -3
** wrong
**  1077 2141
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  1078 2141
** answer: 0, groundtruth_str: -\frac{1}{4}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 -0.25
** wrong
**  1078 2142
** answer: -\frac{3}{4}, groundtruth_str: \frac{5}{4}
** groundtruth_num is not None
** is_fraction:  -\frac{3}{4}
** groundtruth_num is (int, float)
** compare_two_numbers float -0.75 1.25
** wrong
**  1078 2143
** answer: -9(sqrt{208}), groundtruth_str: 28
** groundtruth_num is not None
** is_fraction:  -9(sqrt{208})
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1078 2144
** answer: 21, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  21
** groundtruth_num is (int, float)
** compare_two_numbers int 21 14
** wrong
**  1078 2145
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  1079 2145
** answer: 65, groundtruth_str: 365
** groundtruth_num is not None
** is_fraction:  65
** groundtruth_num is (int, float)
** compare_two_numbers int 65 365
** wrong
**  1079 2146
** answer: 6300000, groundtruth_str: 6290000
** groundtruth_num is not None
** is_fraction:  6300000
** groundtruth_num is (int, float)
** compare_two_numbers int 6300000 6290000
** wrong
**  1079 2147
** answer: 26, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  26
** groundtruth_num is (int, float)
** compare_two_numbers int 26 18
** wrong
**  1079 2148
** answer: 3, groundtruth_str: \text{Sunday}
** wrong
**  1079 2149
** answer: 1, groundtruth_str: \frac{1}{5}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.2
** wrong
**  1079 2150
** answer: \frac{5}{17}, groundtruth_str: \frac{35}{128}
** groundtruth_num is not None
** is_fraction:  \frac{5}{17}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.29411764705882354 0.2734375
** wrong
**  1079 2151
** answer: 1, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 8
** wrong
**  1079 2152
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  1080 2152
** answer: 0, groundtruth_str: -108
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -108
** wrong
**  1080 2153
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  1081 2153
** answer: 2, groundtruth_str: 3x-2
** wrong
**  1081 2154
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  1082 2154
** answer: 7, groundtruth_str: 143
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 143
** wrong
**  1082 2155
** answer: 84, groundtruth_str: 84
** compare on lower
** correct
**  1083 2155
** answer: -35, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  -35
** groundtruth_num is (int, float)
** compare_two_numbers int -35 3
** wrong
**  1083 2156
** answer: 2, groundtruth_str: \sqrt{6}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 2.449489742783178
** wrong
**  1083 2157
** answer: 6, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 1
** wrong
**  1083 2158
** answer: 37, groundtruth_str: 37
** compare on lower
** correct
**  1084 2158
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1085 2158
** answer: 406, groundtruth_str: 406
** compare on lower
** correct
**  1086 2158
** answer: 0.0896, groundtruth_str: \frac{448}{15625}
** groundtruth_num is not None
** is_fraction:  0.0896
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0896 0.028672
** wrong
**  1086 2159
** answer: 13, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  13
** groundtruth_num is (int, float)
** compare_two_numbers int 13 30
** wrong
**  1086 2160
** answer: (-∞,0)∪(0,∞), groundtruth_str: (-\infty,3)\cup(3,\infty)
** wrong
**  1086 2161
** answer: 0, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 8
** wrong
**  1086 2162
** answer: 8918, groundtruth_str: 8918
** compare on lower
** correct
**  1087 2162
** answer: 53, groundtruth_str: 2150
** groundtruth_num is not None
** is_fraction:  53
** groundtruth_num is (int, float)
** compare_two_numbers int 53 2150
** wrong
**  1087 2163
** answer: a, groundtruth_str: a
** compare on lower
** correct
**  1088 2163
** answer: 96, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  96
** groundtruth_num is (int, float)
** compare_two_numbers int 96 50
** wrong
**  1088 2164
** answer: 240, groundtruth_str: 240
** compare on lower
** correct
**  1089 2164
** answer: 41, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  41
** groundtruth_num is (int, float)
** compare_two_numbers int 41 13
** wrong
**  1089 2165
** answer: 13, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  13
** groundtruth_num is (int, float)
** compare_two_numbers int 13 3
** wrong
**  1089 2166
** answer: (-9,3)∪(-∞,-9)∪(9,∞), groundtruth_str: (0,9)\cup(9,36)
** wrong
**  1089 2167
** answer: 0.875, groundtruth_str: \frac{7}{8}
** groundtruth_num is not None
** is_fraction:  0.875
** groundtruth_num is (int, float)
** compare_two_numbers float 0.875 0.875
** correct
**  1090 2167
** answer: (10,3), groundtruth_str: (10,3)
** compare on lower
** correct
**  1091 2167
** answer: 17,24, groundtruth_str: 19,22
** groundtruth_num is not None
** is_fraction:  17,24
** groundtruth_num is (int, float)
** compare_two_numbers int 17 1922
** wrong
**  1091 2168
** answer: 0, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 8
** wrong
**  1091 2169
** answer: -\frac{9}{4},-\frac{5}{4}, groundtruth_str: -2,\frac{3}{2}
** groundtruth_num is not None
** is_fraction:  -\frac{9}{4},-\frac{5}{4}
** groundtruth_num is (int, float)
** compare_two_numbers int -2.25 -2
** correct
**  1092 2169
** answer: 15+2√3, groundtruth_str: 22
** groundtruth_num is not None
** is_fraction:  15+2√3
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1092 2170
** answer: 0.2, groundtruth_str: \frac{4}{7}
** groundtruth_num is not None
** is_fraction:  0.2
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2 0.5714285714285714
** wrong
**  1092 2171
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1093 2171
** answer: 1, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 -1
** wrong
**  1093 2172
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1094 2172
** answer: 1, groundtruth_str: 3980025
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 3980025
** wrong
**  1094 2173
** answer: 15, groundtruth_str: -9
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 -9
** wrong
**  1094 2174
** answer: 1, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 0
** wrong
**  1094 2175
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1095 2175
** answer: 1, groundtruth_str: \frac{1}{72}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.013888888888888888
** wrong
**  1095 2176
** answer: 5, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 4
** wrong
**  1095 2177
** answer: 2√2, groundtruth_str: 2\sqrt{2}
** groundtruth_num is not None
** is_fraction:  2√2
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1095 2178
** answer: 24, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 16
** wrong
**  1095 2179
** answer: -69,5\sqrt{3},-5\sqrt{3},73, groundtruth_str: \sqrt{67},-\sqrt{85}
** groundtruth_num is not None
** is_fraction:  -69,5\sqrt{3},-5\sqrt{3},73
** groundtruth_num is (int, float)
** compare_two_numbers float -69 8.18535277187245
** wrong
**  1095 2180
** answer: 500500, groundtruth_str: 500500
** compare on lower
** correct
**  1096 2180
** answer: 3, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 2
** wrong
**  1096 2181
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  1097 2181
** answer: undefined, groundtruth_str: \frac{3}{2}
** groundtruth_num is not None
** is_fraction:  undefined
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1097 2182
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  1098 2182
** answer: -4, groundtruth_str: -4
** compare on lower
** correct
**  1099 2182
** answer: 0.2, groundtruth_str: \frac{2}{5}
** groundtruth_num is not None
** is_fraction:  0.2
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2 0.4
** wrong
**  1099 2183
** answer: (-0.0,-1.0), groundtruth_str: (\frac{3}{2},-13)
** groundtruth_num is not None
** is_fraction:  (-0.0,-1.0)
** groundtruth_num is (int, float)
** compare_two_numbers float 0 1.5
** wrong
**  1099 2184
** answer: 3, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 6
** wrong
**  1099 2185
** answer: 5321, groundtruth_str: 5321
** compare on lower
** correct
**  1100 2185
** answer: -55, groundtruth_str: -55
** compare on lower
** correct
**  1101 2185
** answer: 9, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 3
** wrong
**  1101 2186
** answer: 1653, groundtruth_str: 4343_6
** groundtruth_num is not None
** is_fraction:  1653
** groundtruth_num is (int, float)
** compare_two_numbers int 1653 43436
** wrong
**  1101 2187
** answer: 0.186, groundtruth_str: \frac{64}{343}
** groundtruth_num is not None
** is_fraction:  0.186
** groundtruth_num is (int, float)
** compare_two_numbers float 0.186 0.18658892128279883
** wrong
**  1101 2188
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  1102 2188
** answer: 36, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  36
** groundtruth_num is (int, float)
** compare_two_numbers int 36 18
** wrong
**  1102 2189
** answer: 0, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 8
** wrong
**  1102 2190
** answer: 18, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 0
** wrong
**  1102 2191
** answer: 0.5, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers int 0.5 2
** wrong
**  1102 2192
** answer: 0.9659, groundtruth_str: \frac{\sqrt{2}+\sqrt{6}}{4}
** groundtruth_num is not None
** is_fraction:  0.9659
** groundtruth_num is (int, float)
** compare_two_numbers float 0.9659 0.9659258262890683
** wrong
**  1102 2193
** answer: (-1,6), groundtruth_str: (-1,6)
** compare on lower
** correct
**  1103 2193
** answer: 35, groundtruth_str: 35
** compare on lower
** correct
**  1104 2193
** answer: 15, groundtruth_str: 15\mbox{cm}^2
** wrong
**  1104 2194
** answer: 247000, groundtruth_str: 247000
** compare on lower
** correct
**  1105 2194
** answer: 0, groundtruth_str: \frac{1}{3}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.3333333333333333
** wrong
**  1105 2195
** answer: nosolution, groundtruth_str: 97
** groundtruth_num is not None
** is_fraction:  nosolution
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1105 2196
** answer: 6π, groundtruth_str: 2\pi
** groundtruth_num is not None
** is_fraction:  6π
** groundtruth_num is (int, float)
** compare_two_numbers float 18.84 6.283185307179586
** wrong
**  1105 2197
** answer: 24, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 14
** wrong
**  1105 2198
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  1106 2198
** answer: 36√3, groundtruth_str: \frac{224\sqrt{3}}{3}
** groundtruth_num is not None
** is_fraction:  36√3
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1106 2199
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1107 2199
** answer: 0.890625, groundtruth_str: \frac{57}{64}
** groundtruth_num is not None
** is_fraction:  0.890625
** groundtruth_num is (int, float)
** compare_two_numbers float 0.890625 0.890625
** correct
**  1108 2199
** answer: 312, groundtruth_str: 611
** groundtruth_num is not None
** is_fraction:  312
** groundtruth_num is (int, float)
** compare_two_numbers int 312 611
** wrong
**  1108 2200
** answer: 23, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  23
** groundtruth_num is (int, float)
** compare_two_numbers int 23 12
** wrong
**  1108 2201
** answer: 1440, groundtruth_str: 864
** groundtruth_num is not None
** is_fraction:  1440
** groundtruth_num is (int, float)
** compare_two_numbers int 1440 864
** wrong
**  1108 2202
** answer: √98, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  √98
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1108 2203
** answer: A,C, groundtruth_str: B,C
** wrong
**  1108 2204
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  1109 2204
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  1110 2204
** answer: 6π, groundtruth_str: 2\pi
** groundtruth_num is not None
** is_fraction:  6π
** groundtruth_num is (int, float)
** compare_two_numbers float 18.84 6.283185307179586
** wrong
**  1110 2205
** answer: 33, groundtruth_str: 22
** groundtruth_num is not None
** is_fraction:  33
** groundtruth_num is (int, float)
** compare_two_numbers int 33 22
** wrong
**  1110 2206
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  1111 2206
** answer: 67.5, groundtruth_str: \frac{135}{2}
** groundtruth_num is not None
** is_fraction:  67.5
** groundtruth_num is (int, float)
** compare_two_numbers float 67.5 67.5
** correct
**  1112 2206
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  1113 2206
** answer: 0.0009765625, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  0.0009765625
** groundtruth_num is (int, float)
** compare_two_numbers int 0.0009765625 1
** wrong
**  1113 2207
** answer: 1, groundtruth_str: 1+274i
** wrong
**  1113 2208
** answer: 14, groundtruth_str: 42
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers int 14 42
** wrong
**  1113 2209
** answer: 60000, groundtruth_str: 60000
** compare on lower
** correct
**  1114 2209
** answer: 36, groundtruth_str: 43
** groundtruth_num is not None
** is_fraction:  36
** groundtruth_num is (int, float)
** compare_two_numbers int 36 43
** wrong
**  1114 2210
** answer: 336, groundtruth_str: 336
** compare on lower
** correct
**  1115 2210
** answer: 1, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 3
** wrong
**  1115 2211
** answer: (-∞,0)∪(0,∞), groundtruth_str: (-\infty,5)\cup(5,\infty)
** wrong
**  1115 2212
** answer: 11, groundtruth_str: -15
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 -15
** wrong
**  1115 2213
** answer: 648, groundtruth_str: 120
** groundtruth_num is not None
** is_fraction:  648
** groundtruth_num is (int, float)
** compare_two_numbers int 648 120
** wrong
**  1115 2214
** answer: 4, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 5
** wrong
**  1115 2215
** answer: 6, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 4
** wrong
**  1115 2216
** answer: \frac{448}{729}, groundtruth_str: 4
** compare on lower in
** correct
**  1116 2216
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  1117 2216
** answer: 0, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 3
** wrong
**  1117 2217
** answer: 1477, groundtruth_str: 4210_{7}
** groundtruth_num is not None
** is_fraction:  1477
** groundtruth_num is (int, float)
** compare_two_numbers int 1477 4210
** wrong
**  1117 2218
** answer: 24.1, groundtruth_str: 24.1
** compare on lower
** correct
**  1118 2218
** answer: 23, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  23
** groundtruth_num is (int, float)
** compare_two_numbers int 23 60
** wrong
**  1118 2219
** answer: 4, groundtruth_str: 97
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 97
** wrong
**  1118 2220
** answer: 0, groundtruth_str: 1-x
** wrong
**  1118 2221
** answer: 1, groundtruth_str: -5
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 -5
** wrong
**  1118 2222
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1119 2222
** answer: 26π, groundtruth_str: 26\pi
** groundtruth_num is not None
** is_fraction:  26π
** groundtruth_num is (int, float)
** compare_two_numbers float 81.64 81.68140899333463
** wrong
**  1119 2223
** answer: -3, groundtruth_str: -3
** compare on lower
** correct
**  1120 2223
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  1121 2223
** answer: 70, groundtruth_str: 72
** groundtruth_num is not None
** is_fraction:  70
** groundtruth_num is (int, float)
** compare_two_numbers int 70 72
** wrong
**  1121 2224
** answer: 3988, groundtruth_str: 997
** groundtruth_num is not None
** is_fraction:  3988
** groundtruth_num is (int, float)
** compare_two_numbers int 3988 997
** wrong
**  1121 2225
** answer: 800, groundtruth_str: 800
** compare on lower
** correct
**  1122 2225
** answer: 0.052631578947368421, groundtruth_str: 0.0000672
** groundtruth_num is not None
** is_fraction:  0.052631578947368421
** groundtruth_num is (int, float)
** compare_two_numbers float 0.05263157894736842 6.72e-05
** wrong
**  1122 2226
** answer: 20, groundtruth_str: 49896
** groundtruth_num is not None
** is_fraction:  20
** groundtruth_num is (int, float)
** compare_two_numbers int 20 49896
** wrong
**  1122 2227
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  1123 2227
** answer: 720, groundtruth_str: 720
** compare on lower
** correct
**  1124 2227
** answer: 2, groundtruth_str: 47
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 47
** wrong
**  1124 2228
** answer: 2, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 5
** wrong
**  1124 2229
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1125 2229
** answer: 6, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 9
** wrong
**  1125 2230
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1126 2230
** answer: 0.5, groundtruth_str: \frac{13}{18}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.7222222222222222
** wrong
**  1126 2231
** answer: 801, groundtruth_str: 801
** compare on lower
** correct
**  1127 2231
** answer: 286, groundtruth_str: 286
** compare on lower
** correct
**  1128 2231
** answer: 36, groundtruth_str: 43
** groundtruth_num is not None
** is_fraction:  36
** groundtruth_num is (int, float)
** compare_two_numbers int 36 43
** wrong
**  1128 2232
** answer: 107, groundtruth_str: 107
** compare on lower
** correct
**  1129 2232
** answer: 2310, groundtruth_str: 1540
** groundtruth_num is not None
** is_fraction:  2310
** groundtruth_num is (int, float)
** compare_two_numbers int 2310 1540
** wrong
**  1129 2233
** answer: 7, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 15
** wrong
**  1129 2234
** answer: 266, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  266
** groundtruth_num is (int, float)
** compare_two_numbers int 266 30
** wrong
**  1129 2235
** answer: 8π, groundtruth_str: 8\pi
** groundtruth_num is not None
** is_fraction:  8π
** groundtruth_num is (int, float)
** compare_two_numbers float 25.12 25.132741228718345
** wrong
**  1129 2236
** answer: 1, groundtruth_str: \frac{1}{99}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.010101010101010102
** wrong
**  1129 2237
** answer: 28, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  28
** groundtruth_num is (int, float)
** compare_two_numbers int 28 0
** wrong
**  1129 2238
** answer: 0.0625, groundtruth_str: \frac{161}{400}
** groundtruth_num is not None
** is_fraction:  0.0625
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0625 0.4025
** wrong
**  1129 2239
** answer: 12.5%, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  12.5%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.125 36
** wrong
**  1129 2240
** answer: 3.5, groundtruth_str: \frac{161}{36}
** groundtruth_num is not None
** is_fraction:  3.5
** groundtruth_num is (int, float)
** compare_two_numbers float 3.5 4.472222222222222
** wrong
**  1129 2241
** answer: 3317, groundtruth_str: 107
** groundtruth_num is not None
** is_fraction:  3317
** groundtruth_num is (int, float)
** compare_two_numbers int 3317 107
** wrong
**  1129 2242
** answer: 1, groundtruth_str: \frac{1}{9}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.1111111111111111
** wrong
**  1129 2243
** answer: 128, groundtruth_str: 128
** compare on lower
** correct
**  1130 2243
** answer: 0.303, groundtruth_str: 0.303
** compare on lower
** correct
**  1131 2243
** answer: 1, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 6
** wrong
**  1131 2244
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  1132 2244
** answer: 200, groundtruth_str: 200
** compare on lower
** correct
**  1133 2244
** answer: 5, groundtruth_str: 17x-13
** wrong
**  1133 2245
** answer: 9, groundtruth_str: -9
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 -9
** wrong
**  1133 2246
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  1134 2246
** answer: 1093, groundtruth_str: 1092
** groundtruth_num is not None
** is_fraction:  1093
** groundtruth_num is (int, float)
** compare_two_numbers int 1093 1092
** wrong
**  1134 2247
** answer: 0, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 12
** wrong
**  1134 2248
** answer: π, groundtruth_str: \frac{2}{3}\pi
** groundtruth_num is not None
** is_fraction:  π
** groundtruth_num is (int, float)
** compare_two_numbers float 3.14 2.0943951023931957
** wrong
**  1134 2249
** answer: 9, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 6
** wrong
**  1134 2250
** answer: \frac{1}{36}, groundtruth_str: \frac{1}{36}
** compare on lower
** correct
**  1135 2250
** answer: 150, groundtruth_str: 150
** compare on lower
** correct
**  1136 2250
** answer: 6, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 7
** wrong
**  1136 2251
** answer: 1, groundtruth_str: \cotx
** wrong
**  1136 2252
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  1137 2252
** answer: 41, groundtruth_str: 41
** compare on lower
** correct
**  1138 2252
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  1139 2252
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  1140 2252
** answer: 3.464101615137755, groundtruth_str: 4\sqrt{2}
** groundtruth_num is not None
** is_fraction:  3.464101615137755
** groundtruth_num is (int, float)
** compare_two_numbers float 3.464101615137755 5.656854249492381
** wrong
**  1140 2253
** answer: 0, groundtruth_str: 20x+23y+26z-69=0
** wrong
**  1140 2254
** answer: \frac{1}{9}, groundtruth_str: -\frac{35}{9}
** groundtruth_num is not None
** is_fraction:  \frac{1}{9}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1111111111111111 -3.888888888888889
** wrong
**  1140 2255
** answer: \frac{x+1}{x+2}, groundtruth_str: \frac{1}{2-x}
** wrong
**  1140 2256
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  1141 2256
** answer: 2i, groundtruth_str: 2i
** compare on lower
** correct
**  1142 2256
** answer: -1,1, groundtruth_str: 1,-3
** groundtruth_num is not None
** is_fraction:  -1,1
** groundtruth_num is (int, float)
** compare_two_numbers int -1 -2
** wrong
**  1142 2257
** answer: 1, groundtruth_str: \begin{pmatrix}0&1\1&0\end{pmatrix}
** wrong
**  1142 2258
** answer: 16, groundtruth_str: 81
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 81
** wrong
**  1142 2259
** answer: 8, groundtruth_str: -15
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 -15
** wrong
**  1142 2260
** answer: 78, groundtruth_str: 198
** groundtruth_num is not None
** is_fraction:  78
** groundtruth_num is (int, float)
** compare_two_numbers int 78 198
** wrong
**  1142 2261
** answer: -6, groundtruth_str: \begin{pmatrix}-6\9\end{pmatrix}
** wrong
**  1142 2262
** answer: -2-14i, groundtruth_str: -2-14i
** compare on lower
** correct
**  1143 2262
** answer: 8, groundtruth_str: -40
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 -40
** wrong
**  1143 2263
** answer: 62, groundtruth_str: 62
** compare on lower
** correct
**  1144 2263
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1145 2263
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1146 2263
** answer: 0, groundtruth_str: 16\sqrt{3}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 27.712812921102035
** wrong
**  1146 2264
** answer: 3, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 4
** wrong
**  1146 2265
** answer: 0, groundtruth_str: 0,3a
** wrong
**  1146 2266
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  1147 2266
** answer: 0,1, groundtruth_str: 0,1
** compare on lower
** correct
**  1148 2266
** answer: 10, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 24
** wrong
**  1148 2267
** answer: 0, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 3
** wrong
**  1148 2268
** answer: 6,000, groundtruth_str: 6,000
** compare on lower
** correct
**  1149 2268
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  1150 2268
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  1151 2268
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  1152 2268
** answer: 127.43, groundtruth_str: 405
** groundtruth_num is not None
** is_fraction:  127.43
** groundtruth_num is (int, float)
** compare_two_numbers int 127.43 405
** wrong
**  1152 2269
** answer: 369, groundtruth_str: 369
** compare on lower
** correct
**  1153 2269
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1154 2269
** answer: π, groundtruth_str: \frac{7}{6}\pi-\frac{\sqrt{3}}{2}
** groundtruth_num is not None
** is_fraction:  π
** groundtruth_num is (int, float)
** compare_two_numbers float 3.14 2.7991660254036534
** wrong
**  1154 2270
** answer: 772, groundtruth_str: 772
** compare on lower
** correct
**  1155 2270
** answer: \frac{41}{1}, groundtruth_str: \frac{1120}{81}
** groundtruth_num is not None
** is_fraction:  \frac{41}{1}
** groundtruth_num is (int, float)
** compare_two_numbers float 41 13.82716049382716
** wrong
**  1155 2271
** answer: -2, groundtruth_str: -3
** groundtruth_num is not None
** is_fraction:  -2
** groundtruth_num is (int, float)
** compare_two_numbers int -2 -3
** wrong
**  1155 2272
** answer: -3, groundtruth_str: -3+2i
** wrong
**  1155 2273
** answer: 0.16, groundtruth_str: \frac{2}{5}
** groundtruth_num is not None
** is_fraction:  0.16
** groundtruth_num is (int, float)
** compare_two_numbers float 0.16 0.4
** wrong
**  1155 2274
** answer: 12, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 18
** wrong
**  1155 2275
** answer: 19.90, groundtruth_str: 15.48
** groundtruth_num is not None
** is_fraction:  19.90
** groundtruth_num is (int, float)
** compare_two_numbers float 19.9 15.48
** wrong
**  1155 2276
** answer: 110, groundtruth_str: 35
** groundtruth_num is not None
** is_fraction:  110
** groundtruth_num is (int, float)
** compare_two_numbers int 110 35
** wrong
**  1155 2277
** answer: 8, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 13
** wrong
**  1155 2278
** answer: 0.875, groundtruth_str: \frac{7}{8}
** groundtruth_num is not None
** is_fraction:  0.875
** groundtruth_num is (int, float)
** compare_two_numbers float 0.875 0.875
** correct
**  1156 2278
** answer: (1,3,-1), groundtruth_str: (6,31,-1)
** groundtruth_num is not None
** is_fraction:  (1,3,-1)
** groundtruth_num is (int, float)
** compare_two_numbers int 1 630
** wrong
**  1156 2279
** answer: 4320, groundtruth_str: 3,110,400
** groundtruth_num is not None
** is_fraction:  4320
** groundtruth_num is (int, float)
** compare_two_numbers int 4320 3110400
** wrong
**  1156 2280
** answer: 0, groundtruth_str: -50
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -50
** wrong
**  1156 2281
** answer: 2a^2+8a+8, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  2a^2+8a+8
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1156 2282
** answer: 0.5, groundtruth_str: \frac{5}{6}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.8333333333333334
** wrong
**  1156 2283
** answer: (-∞,-7)∪(-7,3)∪(3,∞), groundtruth_str: (-\infty,-7)\cup(-7,3)\cup(3,\infty)
** wrong
**  1156 2284
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  1157 2284
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1158 2284
** answer: 7, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 15
** wrong
**  1158 2285
** answer: 0.0769, groundtruth_str: \frac{1}{13}
** groundtruth_num is not None
** is_fraction:  0.0769
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0769 0.07692307692307693
** wrong
**  1158 2286
** answer: 1, groundtruth_str: \frac{2}{3}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.6666666666666666
** wrong
**  1158 2287
** answer: 17, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  17
** groundtruth_num is (int, float)
** compare_two_numbers int 17 16
** wrong
**  1158 2288
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  1159 2288
** answer: -√3, groundtruth_str: \frac{\sqrt{3}}{3}
** groundtruth_num is not None
** is_fraction:  -√3
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1159 2289
** answer: 392, groundtruth_str: 3032_5
** groundtruth_num is not None
** is_fraction:  392
** groundtruth_num is (int, float)
** compare_two_numbers int 392 30325
** wrong
**  1159 2290
** answer: 25%, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  25%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.25 20
** wrong
**  1159 2291
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  1160 2291
** answer: 0.8660254037844386, groundtruth_str: \frac{\sqrt{3}}{2}
** groundtruth_num is not None
** is_fraction:  0.8660254037844386
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8660254037844386 0.8660254037844386
** correct
**  1161 2291
** answer: 24, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 12
** wrong
**  1161 2292
** answer: 0.043, groundtruth_str: 0.076
** groundtruth_num is not None
** is_fraction:  0.043
** groundtruth_num is (int, float)
** compare_two_numbers float 0.043 0.076
** wrong
**  1161 2293
** answer: -42, groundtruth_str: -449
** groundtruth_num is not None
** is_fraction:  -42
** groundtruth_num is (int, float)
** compare_two_numbers int -42 -449
** wrong
**  1161 2294
** answer: 0.4, groundtruth_str: \frac{3}{5}
** groundtruth_num is not None
** is_fraction:  0.4
** groundtruth_num is (int, float)
** compare_two_numbers float 0.4 0.6
** wrong
**  1161 2295
** answer: 4, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 20
** wrong
**  1161 2296
** answer: 11, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 9
** wrong
**  1161 2297
** answer: 199, groundtruth_str: 100
** groundtruth_num is not None
** is_fraction:  199
** groundtruth_num is (int, float)
** compare_two_numbers int 199 100
** wrong
**  1161 2298
** answer: 4, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 9
** wrong
**  1161 2299
** answer: 3, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 0
** wrong
**  1161 2300
** answer: 1, groundtruth_str: \frac{3}{4}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.75
** wrong
**  1161 2301
** answer: 11, groundtruth_str: \frac{11}{2}
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers float 11 5.5
** wrong
**  1161 2302
** answer: 19, groundtruth_str: \frac{8}{81}
** groundtruth_num is not None
** is_fraction:  19
** groundtruth_num is (int, float)
** compare_two_numbers float 19 0.09876543209876543
** wrong
**  1161 2303
** answer: 208, groundtruth_str: 52
** groundtruth_num is not None
** is_fraction:  208
** groundtruth_num is (int, float)
** compare_two_numbers int 208 52
** wrong
**  1161 2304
** answer: 0.75, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  0.75
** groundtruth_num is (int, float)
** compare_two_numbers int 0.75 3
** wrong
**  1161 2305
** answer: \frac{1}{2}, groundtruth_str: -\frac{3}{5}
** groundtruth_num is not None
** is_fraction:  \frac{1}{2}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 -0.6
** wrong
**  1161 2306
** answer: 45, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  45
** groundtruth_num is (int, float)
** compare_two_numbers int 45 30
** wrong
**  1161 2307
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1162 2307
** answer: 1, groundtruth_str: 2500
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2500
** wrong
**  1162 2308
** answer: \frac{1}{9}, groundtruth_str: \frac{1}{9}
** compare on lower
** correct
**  1163 2308
** answer: 1120, groundtruth_str: 1120
** compare on lower
** correct
**  1164 2308
** answer: 2.5, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  2.5
** groundtruth_num is (int, float)
** compare_two_numbers int 2.5 3
** wrong
**  1164 2309
** answer: 21.42, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  21.42
** groundtruth_num is (int, float)
** compare_two_numbers int 21.42 10
** wrong
**  1164 2310
** answer: 49, groundtruth_str: 235
** groundtruth_num is not None
** is_fraction:  49
** groundtruth_num is (int, float)
** compare_two_numbers int 49 235
** wrong
**  1164 2311
** answer: 72, groundtruth_str: 162
** groundtruth_num is not None
** is_fraction:  72
** groundtruth_num is (int, float)
** compare_two_numbers int 72 162
** wrong
**  1164 2312
** answer: 0.8333, groundtruth_str: \frac{5}{6}
** groundtruth_num is not None
** is_fraction:  0.8333
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8333 0.8333333333333334
** wrong
**  1164 2313
** answer: 11, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 16
** wrong
**  1164 2314
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1165 2314
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1166 2314
** answer: 510, groundtruth_str: 510
** compare on lower
** correct
**  1167 2314
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  1168 2314
** answer: 0, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 26
** wrong
**  1168 2315
** answer: 216, groundtruth_str: 28
** groundtruth_num is not None
** is_fraction:  216
** groundtruth_num is (int, float)
** compare_two_numbers int 216 28
** wrong
**  1168 2316
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  1169 2316
** answer: nointegerorfloatnumberisgivenastheexpressioninsidethesquarerootisalwaysreal, groundtruth_str: 90
** groundtruth_num is not None
** is_fraction:  nointegerorfloatnumberisgivenastheexpressioninsidethesquarerootisalwaysreal
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1169 2317
** answer: 4, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 5
** wrong
**  1169 2318
** answer: 10, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 0
** wrong
**  1169 2319
** answer: 2, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 25
** wrong
**  1169 2320
** answer: -1, groundtruth_str: \frac{4}{3}
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers float -1 1.3333333333333333
** wrong
**  1169 2321
** answer: 3, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 5
** wrong
**  1169 2322
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  1170 2322
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  1171 2322
** answer: 0, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.25
** wrong
**  1171 2323
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1172 2323
** answer: 14, groundtruth_str: 133
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers int 14 133
** wrong
**  1172 2324
** answer: 343, groundtruth_str: 49
** groundtruth_num is not None
** is_fraction:  343
** groundtruth_num is (int, float)
** compare_two_numbers int 343 49
** wrong
**  1172 2325
** answer: 0.9167, groundtruth_str: \frac{17}{18}
** groundtruth_num is not None
** is_fraction:  0.9167
** groundtruth_num is (int, float)
** compare_two_numbers float 0.9167 0.9444444444444444
** wrong
**  1172 2326
** answer: neither, groundtruth_str: \text{even}
** wrong
**  1172 2327
** answer: 2+3\sqrt{10}, groundtruth_str: 6\sqrt{3}+6
** groundtruth_num is not None
** is_fraction:  2+3\sqrt{10}
** groundtruth_num is (int, float)
** compare_two_numbers float 11.486832980505138 16.392304845413264
** wrong
**  1172 2328
** answer: 5, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 14
** wrong
**  1172 2329
** answer: 1.5, groundtruth_str: \frac{3}{2}
** groundtruth_num is not None
** is_fraction:  1.5
** groundtruth_num is (int, float)
** compare_two_numbers float 1.5 1.5
** correct
**  1173 2329
** answer: 6, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 4
** wrong
**  1173 2330
** answer: 403, groundtruth_str: 264
** groundtruth_num is not None
** is_fraction:  403
** groundtruth_num is (int, float)
** compare_two_numbers int 403 264
** wrong
**  1173 2331
** answer: 64π, groundtruth_str: 16\pi
** groundtruth_num is not None
** is_fraction:  64π
** groundtruth_num is (int, float)
** compare_two_numbers float 200.96 50.26548245743669
** wrong
**  1173 2332
** answer: 3, groundtruth_str: \frac{25}{13}
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers float 3 1.9230769230769231
** wrong
**  1173 2333
** answer: 1, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 -1
** wrong
**  1173 2334
** answer: 1.0, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1.0
** groundtruth_num is (int, float)
** compare_two_numbers int 1 3
** wrong
**  1173 2335
** answer: \frac{2}{3}, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  \frac{2}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.6666666666666666 0.5
** wrong
**  1173 2336
** answer: 1, groundtruth_str: \frac{\}{p}i4+2-\sqrt{2}
** wrong
**  1173 2337
** answer: (8\sin\phi\cos\theta,-8\sin\phi\sin\theta,8\cos\phi), groundtruth_str: (8,3,-1)
** groundtruth_num is not None
** is_fraction:  (8\sin\phi\cos\theta,-8\sin\phi\sin\theta,8\cos\phi)
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1173 2338
** answer: 4, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 2
** wrong
**  1173 2339
** answer: 14+7√2, groundtruth_str: 14+7\sqrt{2}
** groundtruth_num is not None
** is_fraction:  14+7√2
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1173 2340
** answer: 5, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 9
** wrong
**  1173 2341
** answer: -7, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  -7
** groundtruth_num is (int, float)
** compare_two_numbers int -7 14
** wrong
**  1173 2342
** answer: 144, groundtruth_str: 288
** groundtruth_num is not None
** is_fraction:  144
** groundtruth_num is (int, float)
** compare_two_numbers int 144 288
** wrong
**  1173 2343
** answer: 5, groundtruth_str: 2x^2+3x
** wrong
**  1173 2344
** answer: 12, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 3
** wrong
**  1173 2345
** answer: -6, groundtruth_str: -6
** compare on lower
** correct
**  1174 2345
** answer: 78, groundtruth_str: 78
** compare on lower
** correct
**  1175 2345
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  1176 2345
** answer: 24, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 40
** wrong
**  1176 2346
** answer: 16, groundtruth_str: 37
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 37
** wrong
**  1176 2347
** answer: 2, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 1
** wrong
**  1176 2348
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  1177 2348
** answer: 105, groundtruth_str: 105
** compare on lower
** correct
**  1178 2348
** answer: 1, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 0
** wrong
**  1178 2349
** answer: 3, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 5
** wrong
**  1178 2350
** answer: √41, groundtruth_str: 14\pi
** groundtruth_num is not None
** is_fraction:  √41
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1178 2351
** answer: 400, groundtruth_str: 400
** compare on lower
** correct
**  1179 2351
** answer: 1, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 0
** wrong
**  1179 2352
** answer: 1, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 -1
** wrong
**  1179 2353
** answer: (4,1), groundtruth_str: (1,1)
** groundtruth_num is not None
** is_fraction:  (4,1)
** groundtruth_num is (int, float)
** compare_two_numbers int 4 11
** wrong
**  1179 2354
** answer: (-6,7), groundtruth_str: (-\infty,-14)\cup(-3,\infty)
** wrong
**  1179 2355
** answer: 1, groundtruth_str: \frac{7}{3}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 2.3333333333333335
** wrong
**  1179 2356
** answer: 4005, groundtruth_str: 4005
** compare on lower
** correct
**  1180 2356
** answer: \frac{28}{441}, groundtruth_str: \frac{8}{63}
** groundtruth_num is not None
** is_fraction:  \frac{28}{441}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.06349206349206349 0.12698412698412698
** wrong
**  1180 2357
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  1181 2357
** answer: 12, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 10
** wrong
**  1181 2358
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  1182 2358
** answer: -i√52, groundtruth_str: 4+6i
** wrong
**  1182 2359
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1183 2359
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  1184 2359
** answer: 33, groundtruth_str: 66
** groundtruth_num is not None
** is_fraction:  33
** groundtruth_num is (int, float)
** compare_two_numbers int 33 66
** wrong
**  1184 2360
** answer: 6x-5, groundtruth_str: 6x-5
** compare on lower
** correct
**  1185 2360
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1186 2360
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1187 2360
** answer: 3π/256, groundtruth_str: \frac{27\pi}{1024}
** groundtruth_num is not None
** is_fraction:  3π/256
** groundtruth_num is (int, float)
** compare_two_numbers float 0.036796875 0.08283496254582462
** wrong
**  1187 2361
** answer: \frac{\pi}{2}, groundtruth_str: 0,\pi,2\pi
** groundtruth_num is not None
** is_fraction:  \frac{\pi}{2}
** groundtruth_num is (int, float)
** compare_two_numbers int 1.57 0
** wrong
**  1187 2362
** answer: 162, groundtruth_str: 72
** groundtruth_num is not None
** is_fraction:  162
** groundtruth_num is (int, float)
** compare_two_numbers int 162 72
** wrong
**  1187 2363
** answer: 627, groundtruth_str: 628
** groundtruth_num is not None
** is_fraction:  627
** groundtruth_num is (int, float)
** compare_two_numbers int 627 628
** wrong
**  1187 2364
** answer: (10,0), groundtruth_str: (8,-2)
** groundtruth_num is not None
** is_fraction:  (10,0)
** groundtruth_num is (int, float)
** compare_two_numbers int 10 6
** wrong
**  1187 2365
** answer: 64, groundtruth_str: 68
** groundtruth_num is not None
** is_fraction:  64
** groundtruth_num is (int, float)
** compare_two_numbers int 64 68
** wrong
**  1187 2366
** answer: 0, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 4
** wrong
**  1187 2367
** answer: 4, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 2
** wrong
**  1187 2368
** answer: Wednesday, groundtruth_str: \text{Sunday}
** wrong
**  1187 2369
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  1188 2369
** answer: 0, groundtruth_str: \text{ellipse}
** wrong
**  1188 2370
** answer: 10004, groundtruth_str: 10{,}000
** wrong
**  1188 2371
** answer: -\frac{16}{63}, groundtruth_str: -\frac{16}{63}
** compare on lower
** correct
**  1189 2371
** answer: 534, groundtruth_str: 534
** compare on lower
** correct
**  1190 2371
** answer: 2, groundtruth_str: \sin3x
** wrong
**  1190 2372
** answer: 1, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 36
** wrong
**  1190 2373
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1191 2373
** answer: 2, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 6
** wrong
**  1191 2374
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1192 2374
** answer: -0.5773502691896257, groundtruth_str: -\frac{\sqrt{3}}{3}
** groundtruth_num is not None
** is_fraction:  -0.5773502691896257
** groundtruth_num is (int, float)
** compare_two_numbers float -0.5773502691896257 -0.5773502691896257
** correct
**  1193 2374
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  1194 2374
** answer: 100, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  100
** groundtruth_num is (int, float)
** compare_two_numbers int 100 14
** wrong
**  1194 2375
** answer: 1.216, groundtruth_str: 1.21
** groundtruth_num is not None
** is_fraction:  1.216
** groundtruth_num is (int, float)
** compare_two_numbers float 1.216 1.21
** wrong
**  1194 2376
** answer: 3.6, groundtruth_str: \text{Evelyn}
** wrong
**  1194 2377
** answer: 2x+1, groundtruth_str: 2x+3
** wrong
**  1194 2378
** answer: 0, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 25
** wrong
**  1194 2379
** answer: 0, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 8
** wrong
**  1194 2380
** answer: 3, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 7
** wrong
**  1194 2381
** answer: 2√2, groundtruth_str: \frac{7}{2}
** groundtruth_num is not None
** is_fraction:  2√2
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1194 2382
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  1195 2382
** answer: 64, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  64
** groundtruth_num is (int, float)
** compare_two_numbers int 64 16
** wrong
**  1195 2383
** answer: 1, groundtruth_str: \begin{pmatrix}1\-2\-1\end{pmatrix}
** wrong
**  1195 2384
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1196 2384
** answer: 0, groundtruth_str: \frac{5\pi}{4}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 3.9269908169872414
** wrong
**  1196 2385
** answer: \frac{30}{11}, groundtruth_str: \frac{30}{11}
** compare on lower
** correct
**  1197 2385
** answer: 0, groundtruth_str: (0,1]
** wrong
**  1197 2386
** answer: 7.5, groundtruth_str: 7.5
** compare on lower
** correct
**  1198 2386
** answer: 5225, groundtruth_str: 15,600
** groundtruth_num is not None
** is_fraction:  5225
** groundtruth_num is (int, float)
** compare_two_numbers int 5225 15600
** wrong
**  1198 2387
** answer: 3z(3z-3)(z-3), groundtruth_str: 9z(z^2-3z+3)
** wrong
**  1198 2388
** answer: 1, groundtruth_str: 251
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 251
** wrong
**  1198 2389
** answer: , groundtruth_str: 161
** groundtruth_num is not None
** is_fraction:  
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1198 2390
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  1199 2390
** answer: \frac{65}{729}, groundtruth_str: \frac{416}{27}
** groundtruth_num is not None
** is_fraction:  \frac{65}{729}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.08916323731138547 15.407407407407407
** wrong
**  1199 2391
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  1200 2391
** answer: 1.47, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  1.47
** groundtruth_num is (int, float)
** compare_two_numbers int 1.47 7
** wrong
**  1200 2392
** answer: 25, groundtruth_str: 87
** groundtruth_num is not None
** is_fraction:  25
** groundtruth_num is (int, float)
** compare_two_numbers int 25 87
** wrong
**  1200 2393
** answer: undefined, groundtruth_str: 315
** groundtruth_num is not None
** is_fraction:  undefined
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1200 2394
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1201 2394
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  1202 2394
** answer: 25, groundtruth_str: 31
** groundtruth_num is not None
** is_fraction:  25
** groundtruth_num is (int, float)
** compare_two_numbers int 25 31
** wrong
**  1202 2395
** answer: 9, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 13
** wrong
**  1202 2396
** answer: 300, groundtruth_str: 300
** compare on lower
** correct
**  1203 2396
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  1204 2396
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1205 2396
** answer: 32000, groundtruth_str: 25,000
** groundtruth_num is not None
** is_fraction:  32000
** groundtruth_num is (int, float)
** compare_two_numbers int 32000 25000
** wrong
**  1205 2397
** answer: 1, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 10
** wrong
**  1205 2398
** answer: 0, groundtruth_str: \frac{2}{1005}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.001990049751243781
** wrong
**  1205 2399
** answer: (1,1), groundtruth_str: (\frac{1}{2},\frac{\sqrt{7}}{2})
** wrong
**  1205 2400
** answer: 5.454, groundtruth_str: 105
** groundtruth_num is not None
** is_fraction:  5.454
** groundtruth_num is (int, float)
** compare_two_numbers int 5.454 105
** wrong
**  1205 2401
** answer: (x-3)^2+(y-3)^2=(\frac{16}{3}-5)^2, groundtruth_str: \frac{x^2}{16}-\frac{y^2}{9}=1
** wrong
**  1205 2402
** answer: 1,023, groundtruth_str: 53
** groundtruth_num is not None
** is_fraction:  1,023
** groundtruth_num is (int, float)
** compare_two_numbers int 1023 53
** wrong
**  1205 2403
** answer: 401, groundtruth_str: 425
** groundtruth_num is not None
** is_fraction:  401
** groundtruth_num is (int, float)
** compare_two_numbers int 401 425
** wrong
**  1205 2404
** answer: -2, groundtruth_str: -10
** groundtruth_num is not None
** is_fraction:  -2
** groundtruth_num is (int, float)
** compare_two_numbers int -2 -10
** wrong
**  1205 2405
** answer: (-0.5,2.5), groundtruth_str: (-\frac{5}{2},-\frac{5}{2})
** groundtruth_num is not None
** is_fraction:  (-0.5,2.5)
** groundtruth_num is (int, float)
** compare_two_numbers float -0.5 -2.5
** wrong
**  1205 2406
** answer: 6, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 8
** wrong
**  1205 2407
** answer: 15, groundtruth_str: (60,-88,25,4)
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 -88194
** wrong
**  1205 2408
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  1206 2408
** answer: 4, groundtruth_str: 10\sqrt{3}
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers float 4 17.320508075688775
** wrong
**  1206 2409
** answer: (-2,6), groundtruth_str: (-\frac{3}{2},6)
** groundtruth_num is not None
** is_fraction:  (-2,6)
** groundtruth_num is (int, float)
** compare_two_numbers float -2 -1.5
** wrong
**  1206 2410
** answer: 2, groundtruth_str: -\frac{1}{2}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 -0.5
** wrong
**  1206 2411
** answer: 2, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 0
** wrong
**  1206 2412
** answer: 30, groundtruth_str: 900
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 900
** wrong
**  1206 2413
** answer: 56, groundtruth_str: 56
** compare on lower
** correct
**  1207 2413
** answer: -8, groundtruth_str: -8
** compare on lower
** correct
**  1208 2413
** answer: 4000, groundtruth_str: 4000
** compare on lower
** correct
**  1209 2413
** answer: 0.0369, groundtruth_str: \frac{20}{27}
** groundtruth_num is not None
** is_fraction:  0.0369
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0369 0.7407407407407407
** wrong
**  1209 2414
** answer: \frac{2}{7}, groundtruth_str: 3\sqrt{3}
** groundtruth_num is not None
** is_fraction:  \frac{2}{7}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2857142857142857 5.196152422706632
** wrong
**  1209 2415
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  1210 2415
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  1211 2415
** answer: 1684.67, groundtruth_str: 2040
** groundtruth_num is not None
** is_fraction:  1684.67
** groundtruth_num is (int, float)
** compare_two_numbers int 1684.67 2040
** wrong
**  1211 2416
** answer: 7.78, groundtruth_str: 7.78
** compare on lower
** correct
**  1212 2416
** answer: 12, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 8
** wrong
**  1212 2417
** answer: 96, groundtruth_str: 96
** compare on lower
** correct
**  1213 2417
** answer: 31, groundtruth_str: 325
** groundtruth_num is not None
** is_fraction:  31
** groundtruth_num is (int, float)
** compare_two_numbers int 31 325
** wrong
**  1213 2418
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  1214 2418
** answer: 32, groundtruth_str: 43
** groundtruth_num is not None
** is_fraction:  32
** groundtruth_num is (int, float)
** compare_two_numbers int 32 43
** wrong
**  1214 2419
** answer: 3, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 6
** wrong
**  1214 2420
** answer: 1, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 0
** wrong
**  1214 2421
** answer: 2, groundtruth_str: -\sqrt{x-2}+2
** wrong
**  1214 2422
** answer: 40.0, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  40.0
** groundtruth_num is (int, float)
** compare_two_numbers int 40 40
** correct
**  1215 2422
** answer: (-∞,13), groundtruth_str: (1,4-\sqrt{3})\cup(4+\sqrt{3},7)
** wrong
**  1215 2423
** answer: 96, groundtruth_str: 351
** groundtruth_num is not None
** is_fraction:  96
** groundtruth_num is (int, float)
** compare_two_numbers int 96 351
** wrong
**  1215 2424
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  1215 2425
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  1216 2425
** answer: 4, groundtruth_str: 3\sqrt{5}
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers float 4 6.708203932499369
** wrong
**  1216 2426
** answer: (1,2,-6,-1), groundtruth_str: (1,-2,2,-3)
** groundtruth_num is not None
** is_fraction:  (1,2,-6,-1)
** groundtruth_num is (int, float)
** compare_two_numbers int 1 -24
** wrong
**  1216 2427
** answer: (-∞,2/3)∪(1,∞), groundtruth_str: [\frac{1}{2},\frac{4}{3}]
** groundtruth_num is not None
** is_fraction:  (-∞,2/3)∪(1,∞)
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1216 2428
** answer: 20, groundtruth_str: 4\sqrt{13}
** groundtruth_num is not None
** is_fraction:  20
** groundtruth_num is (int, float)
** compare_two_numbers float 20 14.422205101855956
** wrong
**  1216 2429
** answer: 16, groundtruth_str: 62
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 62
** wrong
**  1216 2430
** answer: 0, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 6
** wrong
**  1216 2431
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  1217 2431
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1218 2431
** answer: 25, groundtruth_str: 75
** groundtruth_num is not None
** is_fraction:  25
** groundtruth_num is (int, float)
** compare_two_numbers int 25 75
** wrong
**  1218 2432
** answer: 0.5, groundtruth_str: \frac{5}{9}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.5555555555555556
** wrong
**  1218 2433
** answer: 1, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 4
** wrong
**  1218 2434
** answer: \frac{5}{3}, groundtruth_str: \frac{5}{3}
** compare on lower
** correct
**  1219 2434
** answer: 1021_3, groundtruth_str: 1202_3
** groundtruth_num is not None
** is_fraction:  1021_3
** groundtruth_num is (int, float)
** compare_two_numbers int 1021 12023
** wrong
**  1219 2435
** answer: 720, groundtruth_str: 1440
** groundtruth_num is not None
** is_fraction:  720
** groundtruth_num is (int, float)
** compare_two_numbers int 720 1440
** wrong
**  1219 2436
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  1220 2436
** answer: 12, groundtruth_str: 1\frac{12}{13}
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers float 12 8.615384615384615
** wrong
**  1220 2437
** answer: 1, groundtruth_str: 1,-3
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 -2
** wrong
**  1220 2438
** answer: 2007, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  2007
** groundtruth_num is (int, float)
** compare_two_numbers int 2007 18
** wrong
**  1220 2439
** answer: -\frac{2\sqrt{3}}{3}, groundtruth_str: -\frac{2\sqrt{3}}{3}
** compare on lower
** correct
**  1221 2439
** answer: 2, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 6
** wrong
**  1221 2440
** answer: cos13, groundtruth_str: \cos13
** groundtruth_num is not None
** is_fraction:  cos13
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1221 2441
** answer: 2, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 3
** wrong
**  1221 2442
** answer: 4, groundtruth_str: \frac{1}{5}
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers float 4 0.2
** wrong
**  1221 2443
** answer: 33π, groundtruth_str: 7\pi
** groundtruth_num is not None
** is_fraction:  33π
** groundtruth_num is (int, float)
** compare_two_numbers float 103.62 21.991148575128552
** wrong
**  1221 2444
** answer: 3737, groundtruth_str: 7602_8
** groundtruth_num is not None
** is_fraction:  3737
** groundtruth_num is (int, float)
** compare_two_numbers int 3737 76028
** wrong
**  1221 2445
** answer: 6, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 17
** wrong
**  1221 2446
** answer: 35, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  35
** groundtruth_num is (int, float)
** compare_two_numbers int 35 5
** wrong
**  1221 2447
** answer: 100000, groundtruth_str: -125
** groundtruth_num is not None
** is_fraction:  100000
** groundtruth_num is (int, float)
** compare_two_numbers int 100000 -125
** wrong
**  1221 2448
** answer: 8281, groundtruth_str: 8281
** compare on lower
** correct
**  1222 2448
** answer: 4, groundtruth_str: 79
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 79
** wrong
**  1222 2449
** answer: 2, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 5
** wrong
**  1222 2450
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1223 2450
** answer: 7, groundtruth_str: 63
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 63
** wrong
**  1223 2451
** answer: 0.5833, groundtruth_str: \frac{7}{12}
** groundtruth_num is not None
** is_fraction:  0.5833
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5833 0.5833333333333334
** wrong
**  1223 2452
** answer: 1.44, groundtruth_str: \frac{36}{25}
** groundtruth_num is not None
** is_fraction:  1.44
** groundtruth_num is (int, float)
** compare_two_numbers float 1.44 1.44
** correct
**  1224 2452
** answer: 2520, groundtruth_str: 2520
** compare on lower
** correct
**  1225 2452
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  1226 2452
** answer: 1, groundtruth_str: 41
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 41
** wrong
**  1226 2453
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  1227 2453
** answer: 560, groundtruth_str: 1920
** groundtruth_num is not None
** is_fraction:  560
** groundtruth_num is (int, float)
** compare_two_numbers int 560 1920
** wrong
**  1227 2454
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  1227 2455
** answer: \frac{\sqrt{24}}{25}, groundtruth_str: -\frac{7}{12}
** groundtruth_num is not None
** is_fraction:  \frac{\sqrt{24}}{25}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.19595917942265423 -0.5833333333333334
** wrong
**  1227 2456
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  1228 2456
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  1229 2456
** answer: 40, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  40
** groundtruth_num is (int, float)
** compare_two_numbers int 40 16
** wrong
**  1229 2457
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1230 2457
** answer: 1, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 0
** wrong
**  1230 2458
** answer: 3, groundtruth_str: -2
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 -2
** wrong
**  1230 2459
** answer: 2136, groundtruth_str: 314
** groundtruth_num is not None
** is_fraction:  2136
** groundtruth_num is (int, float)
** compare_two_numbers int 2136 314
** wrong
**  1230 2460
** answer: \begin{pmatrix}1\-3\4\end{pmatrix}, groundtruth_str: \begin{pmatrix}5/2\0\5/2\end{pmatrix}
** wrong
**  1230 2461
** answer: 1, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 0
** wrong
**  1230 2462
** answer: 0.1664, groundtruth_str: \frac{1}{6}
** groundtruth_num is not None
** is_fraction:  0.1664
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1664 0.16666666666666666
** wrong
**  1230 2463
** answer: 2500, groundtruth_str: 2500
** compare on lower
** correct
**  1231 2463
** answer: 16, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 36
** wrong
**  1231 2464
** answer: 1, groundtruth_str: 181
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 181
** wrong
**  1231 2465
** answer: 2, groundtruth_str: \sqrt{5}-1
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 1.2360679774997898
** wrong
**  1231 2466
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1232 2466
** answer: \frac{3}{5}, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  \frac{3}{5}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.6 0.5
** wrong
**  1232 2467
** answer: 1, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 7
** wrong
**  1232 2468
** answer: 9c+6, groundtruth_str: 9c+6
** compare on lower
** correct
**  1233 2468
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  1234 2468
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1235 2468
** answer: 10, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 5
** wrong
**  1235 2469
** answer: 1,4,16, groundtruth_str: f(2)<f(1)<f(4)
** wrong
**  1235 2470
** answer: 33,379.75, groundtruth_str: \frac{266664}{5}
** groundtruth_num is not None
** is_fraction:  33,379.75
** groundtruth_num is (int, float)
** compare_two_numbers float 33379.75 53332.8
** wrong
**  1235 2471
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1236 2471
** answer: 0,2π/3, groundtruth_str: 0,\frac{2\pi}{3},\frac{4\pi}{3},2\pi
** groundtruth_num is not None
** is_fraction:  0,2π/3
** groundtruth_num is (int, float)
** compare_two_numbers int 0 0
** correct
**  1237 2471
** answer: 108, groundtruth_str: 108
** compare on lower
** correct
**  1238 2471
** answer: 0.243681375, groundtruth_str: \frac{193}{512}
** groundtruth_num is not None
** is_fraction:  0.243681375
** groundtruth_num is (int, float)
** compare_two_numbers float 0.243681375 0.376953125
** wrong
**  1238 2472
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1239 2472
** answer: 76, groundtruth_str: 76
** compare on lower
** correct
**  1240 2472
** answer: 8, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 4
** wrong
**  1240 2473
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  1241 2473
** answer: 0.25, groundtruth_str: -\frac{1}{4}
** groundtruth_num is not None
** is_fraction:  0.25
** groundtruth_num is (int, float)
** compare_two_numbers float 0.25 -0.25
** wrong
**  1241 2474
** answer: -2, groundtruth_str: -2
** compare on lower
** correct
**  1242 2474
** answer: 5040, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  5040
** groundtruth_num is (int, float)
** compare_two_numbers int 5040 21
** wrong
**  1242 2475
** answer: -1, groundtruth_str: -1
** compare on lower
** correct
**  1243 2475
** answer: 0, groundtruth_str: \frac{5}{12}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.4166666666666667
** wrong
**  1243 2476
** answer: 35, groundtruth_str: 144
** groundtruth_num is not None
** is_fraction:  35
** groundtruth_num is (int, float)
** compare_two_numbers int 35 144
** wrong
**  1243 2477
** answer: 121, groundtruth_str: 121
** compare on lower
** correct
**  1244 2477
** answer: 135, groundtruth_str: 135
** compare on lower
** correct
**  1245 2477
** answer: 402, groundtruth_str: 402
** compare on lower
** correct
**  1246 2477
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  1247 2477
** answer: 36, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  36
** groundtruth_num is (int, float)
** compare_two_numbers int 36 24
** wrong
**  1247 2478
** answer: 64, groundtruth_str: \sqrt{2}
** groundtruth_num is not None
** is_fraction:  64
** groundtruth_num is (int, float)
** compare_two_numbers float 64 1.4142135623730951
** wrong
**  1247 2479
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  1248 2479
** answer: 4, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 3
** wrong
**  1248 2480
** answer: 1.25, groundtruth_str: \frac{15}{4}
** groundtruth_num is not None
** is_fraction:  1.25
** groundtruth_num is (int, float)
** compare_two_numbers float 1.25 3.75
** wrong
**  1248 2481
** answer: 20, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  20
** groundtruth_num is (int, float)
** compare_two_numbers int 20 30
** wrong
**  1248 2482
** answer: 2900, groundtruth_str: 55
** groundtruth_num is not None
** is_fraction:  2900
** groundtruth_num is (int, float)
** compare_two_numbers int 2900 55
** wrong
**  1248 2483
** answer: 1, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 12
** wrong
**  1248 2484
** answer: \frac{\sqrt{39}}{2}, groundtruth_str: \frac{9}{2}
** groundtruth_num is not None
** is_fraction:  \frac{\sqrt{39}}{2}
** groundtruth_num is (int, float)
** compare_two_numbers float 3.122498999199199 4.5
** wrong
**  1248 2485
** answer: 144, groundtruth_str: 144
** compare on lower
** correct
**  1249 2485
** answer: 6, groundtruth_str: 839
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 839
** wrong
**  1249 2486
** answer: 1, groundtruth_str: [\frac{3}{2},2)
** wrong
**  1249 2487
** answer: \frac{1}{7}+\frac{8}{3}i, groundtruth_str: -5+4i
** wrong
**  1249 2488
** answer: 22, groundtruth_str: 24\sqrt{2}
** groundtruth_num is not None
** is_fraction:  22
** groundtruth_num is (int, float)
** compare_two_numbers float 22 33.94112549695428
** wrong
**  1249 2489
** answer: 2, groundtruth_str: (2,1)
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 21
** wrong
**  1249 2490
** answer: -1, groundtruth_str: -1
** compare on lower
** correct
**  1250 2490
** answer: 4, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 16
** wrong
**  1250 2491
** answer: 12, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 24
** wrong
**  1250 2492
** answer: 12, groundtruth_str: 100
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 100
** wrong
**  1250 2493
** answer: 0.125, groundtruth_str: 1.125
** groundtruth_num is not None
** is_fraction:  0.125
** groundtruth_num is (int, float)
** compare_two_numbers float 0.125 1.125
** wrong
**  1250 2494
** answer: 350, groundtruth_str: 350
** compare on lower
** correct
**  1251 2494
** answer: 0.0079440, groundtruth_str: \frac{17}{21}
** groundtruth_num is not None
** is_fraction:  0.0079440
** groundtruth_num is (int, float)
** compare_two_numbers float 0.007944 0.8095238095238095
** wrong
**  1251 2495
** answer: (10,2), groundtruth_str: (10,2)
** compare on lower
** correct
**  1252 2495
** answer: 50, groundtruth_str: 140
** groundtruth_num is not None
** is_fraction:  50
** groundtruth_num is (int, float)
** compare_two_numbers int 50 140
** wrong
**  1252 2496
** answer: (C), groundtruth_str: \text{(C)}
** correct
**  1253 2496
** answer: CAF, groundtruth_str: \text{ACF}
** wrong
**  1253 2497
** answer: 387.5, groundtruth_str: 2300
** groundtruth_num is not None
** is_fraction:  387.5
** groundtruth_num is (int, float)
** compare_two_numbers int 387.5 2300
** wrong
**  1253 2498
** answer: 7944.13, groundtruth_str: 7945
** groundtruth_num is not None
** is_fraction:  7944.13
** groundtruth_num is (int, float)
** compare_two_numbers int 7944.13 7945
** wrong
**  1253 2499
** answer: 0, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 2
** wrong
**  1253 2500
** answer: 4.0, groundtruth_str: 8.5
** groundtruth_num is not None
** is_fraction:  4.0
** groundtruth_num is (int, float)
** compare_two_numbers float 4 8.5
** wrong
**  1253 2501
** answer: 2, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 9
** wrong
**  1253 2502
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  1254 2502
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  1255 2502
** answer: 2017, groundtruth_str: 2013
** groundtruth_num is not None
** is_fraction:  2017
** groundtruth_num is (int, float)
** compare_two_numbers int 2017 2013
** wrong
**  1255 2503
** answer: 2, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 14
** wrong
**  1255 2504
** answer: -1,2, groundtruth_str: 2+\sqrt{6},2-\sqrt{6}
** groundtruth_num is not None
** is_fraction:  -1,2
** groundtruth_num is (int, float)
** compare_two_numbers float -1 4.449489742783178
** wrong
**  1255 2505
** answer: \frac{3}{4}, groundtruth_str: \frac{9}{32}
** groundtruth_num is not None
** is_fraction:  \frac{3}{4}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.75 0.28125
** wrong
**  1255 2506
** answer: 91, groundtruth_str: 91
** compare on lower
** correct
**  1256 2506
** answer: 2b, groundtruth_str: 2b
** compare on lower
** correct
**  1257 2506
** answer: 5, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 7
** wrong
**  1257 2507
** answer: -14, groundtruth_str: -14
** compare on lower
** correct
**  1258 2507
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1259 2507
** answer: 133, groundtruth_str: 47
** groundtruth_num is not None
** is_fraction:  133
** groundtruth_num is (int, float)
** compare_two_numbers int 133 47
** wrong
**  1259 2508
** answer: 6.0, groundtruth_str: \frac{6\sqrt{10}}{7}
** groundtruth_num is not None
** is_fraction:  6.0
** groundtruth_num is (int, float)
** compare_two_numbers float 6 2.710523708715754
** wrong
**  1259 2509
** answer: 1.73205080757, groundtruth_str: -\frac{\sqrt{3}}{3}
** groundtruth_num is not None
** is_fraction:  1.73205080757
** groundtruth_num is (int, float)
** compare_two_numbers float 1.73205080757 -0.5773502691896257
** wrong
**  1259 2510
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  1260 2510
** answer: 0, groundtruth_str: \frac{105}{4}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 26.25
** wrong
**  1260 2511
** answer: 2, groundtruth_str: \frac{13}{4}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 3.25
** wrong
**  1260 2512
** answer: 1, groundtruth_str: 28
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 28
** wrong
**  1260 2513
** answer: 6, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 7
** wrong
**  1260 2514
** answer: (\frac{12}{17},2,-\frac{32}{17}), groundtruth_str: (8,4,2)
** groundtruth_num is not None
** is_fraction:  (\frac{12}{17},2,-\frac{32}{17})
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1260 2515
** answer: 0.0823, groundtruth_str: \frac{80}{243}
** groundtruth_num is not None
** is_fraction:  0.0823
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0823 0.3292181069958848
** wrong
**  1260 2516
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1261 2516
** answer: \begin{pmatrix}\frac{2}{\sqrt{5}}\-\frac{1}{\sqrt{5}}\0\end{pmatrix}, groundtruth_str: \begin{pmatrix}2/5\-1/5\0\end{pmatrix}
** wrong
**  1261 2517
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1262 2517
** answer: 0.5, groundtruth_str: \frac{27}{38}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.7105263157894737
** wrong
**  1262 2518
** answer: 25π, groundtruth_str: 25\pi
** groundtruth_num is not None
** is_fraction:  25π
** groundtruth_num is (int, float)
** compare_two_numbers float 78.5 78.53981633974483
** wrong
**  1262 2519
** answer: 0, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.25
** wrong
**  1262 2520
** answer: 0, groundtruth_str: \frac{3125}{46656}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.06697959533607682
** wrong
**  1262 2521
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  1263 2521
** answer: 1.325, groundtruth_str: \frac{\pi}{2}
** groundtruth_num is not None
** is_fraction:  1.325
** groundtruth_num is (int, float)
** compare_two_numbers float 1.325 1.5707963267948966
** wrong
**  1263 2522
** answer: 6, groundtruth_str: 120
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 120
** wrong
**  1263 2523
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1264 2523
** answer: 0, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 4
** wrong
**  1264 2524
** answer: 5, groundtruth_str: -\frac{9}{2}
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers float 5 -4.5
** wrong
**  1264 2525
** answer: \frac{2}{3}, groundtruth_str: \frac{2}{3}
** compare on lower
** correct
**  1265 2525
** answer: 5, groundtruth_str: 2\sqrt{5}
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers float 5 4.47213595499958
** wrong
**  1265 2526
** answer: 23, groundtruth_str: 71
** groundtruth_num is not None
** is_fraction:  23
** groundtruth_num is (int, float)
** compare_two_numbers int 23 71
** wrong
**  1265 2527
** answer: 650, groundtruth_str: 650
** compare on lower
** correct
**  1266 2527
** answer: 0, groundtruth_str: -\frac{4}{3}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 -1.3333333333333333
** wrong
**  1266 2528
** answer: (B)Circle, groundtruth_str: \text{(E)}
** wrong
**  1266 2529
** answer: 240, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  240
** groundtruth_num is (int, float)
** compare_two_numbers int 240 48
** wrong
**  1266 2530
** answer: \frac{1}{3}, groundtruth_str: \frac{1}{3}
** compare on lower
** correct
**  1267 2530
** answer: 12, groundtruth_str: \begin{pmatrix}1\4\3\end{pmatrix}
** wrong
**  1267 2531
** answer: 25.5, groundtruth_str: 110
** groundtruth_num is not None
** is_fraction:  25.5
** groundtruth_num is (int, float)
** compare_two_numbers int 25.5 110
** wrong
**  1267 2532
** answer: 0, groundtruth_str: -5
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -5
** wrong
**  1267 2533
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1268 2533
** answer: \frac{1}{840}, groundtruth_str: \frac{1}{840}
** compare on lower
** correct
**  1269 2533
** answer: \begin{pmatrix}1&0&0\0&1&0\0&0&-1\end{pmatrix}, groundtruth_str: \begin{pmatrix}1&0&0\0&1&0\0&0&-1\end{pmatrix}
** compare on lower
** correct
**  1270 2533
** answer: π/4, groundtruth_str: \frac{3}{4}\pi
** groundtruth_num is not None
** is_fraction:  π/4
** groundtruth_num is (int, float)
** compare_two_numbers float 0.785 2.356194490192345
** wrong
**  1270 2534
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  1271 2534
** answer: 1, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 7
** wrong
**  1271 2535
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  1272 2535
** answer: 57, groundtruth_str: 57
** compare on lower
** correct
**  1273 2535
** answer: 1881, groundtruth_str: 2101
** groundtruth_num is not None
** is_fraction:  1881
** groundtruth_num is (int, float)
** compare_two_numbers int 1881 2101
** wrong
**  1273 2536
** answer: -\frac{1}{2}\frac{b}{a}c, groundtruth_str: \frac{8}{15}
** groundtruth_num is not None
** is_fraction:  -\frac{1}{2}\frac{b}{a}c
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1273 2537
** answer: 754, groundtruth_str: 754
** compare on lower
** correct
**  1274 2537
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  1275 2537
** answer: 2√3, groundtruth_str: 2\sqrt{3}
** groundtruth_num is not None
** is_fraction:  2√3
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1275 2538
** answer: 91.05, groundtruth_str: 82
** groundtruth_num is not None
** is_fraction:  91.05
** groundtruth_num is (int, float)
** compare_two_numbers int 91.05 82
** wrong
**  1275 2539
** answer: 3, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 5
** wrong
**  1275 2540
** answer: 51, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  51
** groundtruth_num is (int, float)
** compare_two_numbers int 51 50
** wrong
**  1275 2541
** answer: 6, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 4
** wrong
**  1275 2542
** answer: 160, groundtruth_str: 160
** compare on lower
** correct
**  1276 2542
** answer: -11+27i, groundtruth_str: -11+27i
** compare on lower
** correct
**  1277 2542
** answer: 10, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 5
** wrong
**  1277 2543
** answer: 4√3/3, groundtruth_str: \frac{4}{3}
** groundtruth_num is not None
** is_fraction:  4√3/3
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1277 2544
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  1278 2544
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  1279 2544
** answer: 1021_4, groundtruth_str: 1101_4
** groundtruth_num is not None
** is_fraction:  1021_4
** groundtruth_num is (int, float)
** compare_two_numbers int 1021 11014
** wrong
**  1279 2545
** answer: 9π, groundtruth_str: 9\pi
** groundtruth_num is not None
** is_fraction:  9π
** groundtruth_num is (int, float)
** compare_two_numbers float 28.26 28.274333882308138
** wrong
**  1279 2546
** answer: 2, groundtruth_str: \frac{9}{7}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 1.2857142857142858
** wrong
**  1279 2547
** answer: 6, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 12
** wrong
**  1279 2548
** answer: -0.291666666666667, groundtruth_str: -\frac{7}{24}
** groundtruth_num is not None
** is_fraction:  -0.291666666666667
** groundtruth_num is (int, float)
** compare_two_numbers float -0.291666666666667 -0.2916666666666667
** correct
**  1280 2548
** answer: 144, groundtruth_str: 144
** compare on lower
** correct
**  1281 2548
** answer: 11.5, groundtruth_str: \frac{23}{2}
** groundtruth_num is not None
** is_fraction:  11.5
** groundtruth_num is (int, float)
** compare_two_numbers float 11.5 11.5
** correct
**  1282 2548
** answer: 2, groundtruth_str: 188
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 188
** wrong
**  1282 2549
** answer: (1,-1), groundtruth_str: (-3,2)
** groundtruth_num is not None
** is_fraction:  (1,-1)
** groundtruth_num is (int, float)
** compare_two_numbers int 1 -32
** wrong
**  1282 2550
** answer: 0, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 10
** wrong
**  1282 2551
** answer: 1050, groundtruth_str: 1050
** compare on lower
** correct
**  1283 2551
** answer: (B), groundtruth_str: \text{(E)}
** wrong
**  1283 2552
** answer: 60, groundtruth_str: 120
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 120
** wrong
**  1283 2553
** answer: \frac{36-20\sqrt{2}}{31}, groundtruth_str: \frac{5}{9}
** groundtruth_num is not None
** is_fraction:  \frac{36-20\sqrt{2}}{31}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.24889447588832575 0.5555555555555556
** wrong
**  1283 2554
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1284 2554
** answer: 1, groundtruth_str: 41
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 41
** wrong
**  1284 2555
** answer: 0, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 40
** wrong
**  1284 2556
** answer: 5, groundtruth_str: -5
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 -5
** wrong
**  1284 2557
** answer: 4134, groundtruth_str: 245
** groundtruth_num is not None
** is_fraction:  4134
** groundtruth_num is (int, float)
** compare_two_numbers int 4134 245
** wrong
**  1284 2558
** answer: 180, groundtruth_str: 180
** compare on lower
** correct
**  1285 2558
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  1286 2558
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1287 2558
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  1288 2558
** answer: 5√3, groundtruth_str: 75
** groundtruth_num is not None
** is_fraction:  5√3
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1288 2559
** answer: 999, groundtruth_str: 92
** groundtruth_num is not None
** is_fraction:  999
** groundtruth_num is (int, float)
** compare_two_numbers int 999 92
** wrong
**  1288 2560
** answer: 2, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 5
** wrong
**  1288 2561
** answer: \frac{1}{3}, groundtruth_str: \frac{1}{3}
** compare on lower
** correct
**  1289 2561
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1290 2561
** answer: \frac{1}{32}, groundtruth_str: \frac{3}{16}
** groundtruth_num is not None
** is_fraction:  \frac{1}{32}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.03125 0.1875
** wrong
**  1290 2562
** answer: 1, groundtruth_str: 2-\sqrt{3}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.2679491924311227
** wrong
**  1290 2563
** answer: 144, groundtruth_str: 540
** groundtruth_num is not None
** is_fraction:  144
** groundtruth_num is (int, float)
** compare_two_numbers int 144 540
** wrong
**  1290 2564
** answer: -q, groundtruth_str: -6
** groundtruth_num is not None
** is_fraction:  -q
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1290 2565
** answer: 9, groundtruth_str: 184
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 184
** wrong
**  1290 2566
** answer: 0, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -1
** wrong
**  1290 2567
** answer: 3, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 8
** wrong
**  1290 2568
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  1291 2568
** answer: none, groundtruth_str: -6,-3,-2,-1,1,2,3,6
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1291 2569
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  1292 2569
** answer: 4, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 0
** wrong
**  1292 2570
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1293 2570
** answer: 252, groundtruth_str: 126
** groundtruth_num is not None
** is_fraction:  252
** groundtruth_num is (int, float)
** compare_two_numbers int 252 126
** wrong
**  1293 2571
** answer: 7.81, groundtruth_str: \sqrt{61}
** groundtruth_num is not None
** is_fraction:  7.81
** groundtruth_num is (int, float)
** compare_two_numbers float 7.81 7.810249675906654
** wrong
**  1293 2572
** answer: 0.0232, groundtruth_str: \frac{49}{54}
** groundtruth_num is not None
** is_fraction:  0.0232
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0232 0.9074074074074074
** wrong
**  1293 2573
** answer: 5, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 1
** wrong
**  1293 2574
** answer: \frac{4}{3}, groundtruth_str: \frac{3}{4}
** groundtruth_num is not None
** is_fraction:  \frac{4}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 1.3333333333333333 0.75
** wrong
**  1293 2575
** answer: -√5, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  -√5
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1293 2576
** answer: (1,6), groundtruth_str: (2,12)
** groundtruth_num is not None
** is_fraction:  (1,6)
** groundtruth_num is (int, float)
** compare_two_numbers int 1 212
** wrong
**  1293 2577
** answer: 0, groundtruth_str: x-3z=0
** wrong
**  1293 2578
** answer: 1023, groundtruth_str: 1023
** compare on lower
** correct
**  1294 2578
** answer: [0,π^2+(π/2)^2], groundtruth_str: [\frac{\pi^2}{8},\frac{5\pi^2}{4}]
** groundtruth_num is not None
** is_fraction:  [0,π^2+(π/2)^2]
** groundtruth_num is (int, float)
** compare_two_numbers float 0 1.23245
** wrong
**  1294 2579
** answer: 60, groundtruth_str: 1209
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 1209
** wrong
**  1294 2580
** answer: -1, groundtruth_str: \frac{7}{4}
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers float -1 1.75
** wrong
**  1294 2581
** answer: 6, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 7
** wrong
**  1294 2582
** answer: 166, groundtruth_str: 229
** groundtruth_num is not None
** is_fraction:  166
** groundtruth_num is (int, float)
** compare_two_numbers int 166 229
** wrong
**  1294 2583
** answer: 4, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 30
** wrong
**  1294 2584
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  1295 2584
** answer: 6, groundtruth_str: 216
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 216
** wrong
**  1295 2585
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1296 2585
** answer: 8, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 4
** wrong
**  1296 2586
** answer: 7, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 3
** wrong
**  1296 2587
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  1297 2587
** answer: 2x, groundtruth_str: 2x
** compare on lower
** correct
**  1298 2587
** answer: 33, groundtruth_str: 33
** compare on lower
** correct
**  1299 2587
** answer: 121, groundtruth_str: 1023
** groundtruth_num is not None
** is_fraction:  121
** groundtruth_num is (int, float)
** compare_two_numbers int 121 1023
** wrong
**  1299 2588
** answer: \frac{5}{3}, groundtruth_str: \frac{5}{3}
** compare on lower
** correct
**  1300 2588
** answer: (5/2,√29), groundtruth_str: (0,0)
** groundtruth_num is not None
** is_fraction:  (5/2,√29)
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1300 2589
** answer: 1, groundtruth_str: \frac{1-\sqrt{5}}{2}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 -0.6180339887498948
** wrong
**  1300 2590
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  1301 2590
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  1302 2590
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1303 2590
** answer: 0.8571428571, groundtruth_str: \frac{6}{601}
** groundtruth_num is not None
** is_fraction:  0.8571428571
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8571428571 0.009983361064891847
** wrong
**  1303 2591
** answer: \frac{\pi}{3}, groundtruth_str: \frac{\pi}{3}
** compare on lower
** correct
**  1304 2591
** answer: 29, groundtruth_str: 1700
** groundtruth_num is not None
** is_fraction:  29
** groundtruth_num is (int, float)
** compare_two_numbers int 29 1700
** wrong
**  1304 2592
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  1305 2592
** answer: -7, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  -7
** groundtruth_num is (int, float)
** compare_two_numbers int -7 2
** wrong
**  1305 2593
** answer: (3,-5), groundtruth_str: (0,0)
** groundtruth_num is not None
** is_fraction:  (3,-5)
** groundtruth_num is (int, float)
** compare_two_numbers int 3 0
** wrong
**  1305 2594
** answer: a+k+2, groundtruth_str: 2k
** wrong
**  1305 2595
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  1306 2595
** answer: 0.5, groundtruth_str: \frac{3}{860}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.0034883720930232558
** wrong
**  1306 2596
** answer: 4, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 8
** wrong
**  1306 2597
** answer: 101, groundtruth_str: 201
** groundtruth_num is not None
** is_fraction:  101
** groundtruth_num is (int, float)
** compare_two_numbers int 101 201
** wrong
**  1306 2598
** answer: -3, groundtruth_str: 4a-2
** wrong
**  1306 2599
** answer: 4, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 8
** wrong
**  1306 2600
** answer: 9, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 7
** wrong
**  1306 2601
** answer: 0.3, groundtruth_str: \frac{1}{10}
** groundtruth_num is not None
** is_fraction:  0.3
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3 0.1
** wrong
**  1306 2602
** answer: 11, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 0
** wrong
**  1306 2603
** answer: \frac{8}{5}, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  \frac{8}{5}
** groundtruth_num is (int, float)
** compare_two_numbers int 1.6 2
** correct
**  1307 2603
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  1308 2603
** answer: 2, groundtruth_str: \frac{3}{2}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 1.5
** wrong
**  1308 2604
** answer: 0.6875, groundtruth_str: \frac{11}{16}
** groundtruth_num is not None
** is_fraction:  0.6875
** groundtruth_num is (int, float)
** compare_two_numbers float 0.6875 0.6875
** correct
**  1309 2604
** answer: 3600, groundtruth_str: 3600
** compare on lower
** correct
**  1310 2604
** answer: 72, groundtruth_str: 72
** compare on lower
** correct
**  1311 2604
** answer: 26, groundtruth_str: 90
** groundtruth_num is not None
** is_fraction:  26
** groundtruth_num is (int, float)
** compare_two_numbers int 26 90
** wrong
**  1311 2605
** answer: 0.375, groundtruth_str: \frac{3\sqrt{5}}{4}
** groundtruth_num is not None
** is_fraction:  0.375
** groundtruth_num is (int, float)
** compare_two_numbers float 0.375 1.6770509831248424
** wrong
**  1311 2606
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1312 2606
** answer: 30, groundtruth_str: 84
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 84
** wrong
**  1312 2607
** answer: 2, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 3
** wrong
**  1312 2608
** answer: 36, groundtruth_str: 72
** groundtruth_num is not None
** is_fraction:  36
** groundtruth_num is (int, float)
** compare_two_numbers int 36 72
** wrong
**  1312 2609
** answer: 2, groundtruth_str: 2\sqrt{3}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 3.4641016151377544
** wrong
**  1312 2610
** answer: 4, groundtruth_str: 61
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 61
** wrong
**  1312 2611
** answer: 12,30000, groundtruth_str: \text{Devon}
** wrong
**  1312 2612
** answer: 22, groundtruth_str: 286
** groundtruth_num is not None
** is_fraction:  22
** groundtruth_num is (int, float)
** compare_two_numbers int 22 286
** wrong
**  1312 2613
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  1313 2613
** answer: -0.5, groundtruth_str: 2\sqrt{3}
** groundtruth_num is not None
** is_fraction:  -0.5
** groundtruth_num is (int, float)
** compare_two_numbers float -0.5 3.4641016151377544
** wrong
**  1313 2614
** answer: 2.5, groundtruth_str: \frac{5}{2}
** groundtruth_num is not None
** is_fraction:  2.5
** groundtruth_num is (int, float)
** compare_two_numbers float 2.5 2.5
** correct
**  1314 2614
** answer: \frac{4}{7}, groundtruth_str: \frac{8}{7}
** groundtruth_num is not None
** is_fraction:  \frac{4}{7}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5714285714285714 1.1428571428571428
** wrong
**  1314 2615
** answer: 16π, groundtruth_str: 16\pi
** groundtruth_num is not None
** is_fraction:  16π
** groundtruth_num is (int, float)
** compare_two_numbers float 50.24 50.26548245743669
** wrong
**  1314 2616
** answer: -3,1,2, groundtruth_str: 1,2,-2,-3
** groundtruth_num is not None
** is_fraction:  -3,1,2
** groundtruth_num is (int, float)
** compare_two_numbers int -3 7
** wrong
**  1314 2617
** answer: 108, groundtruth_str: 108
** compare on lower
** correct
**  1315 2617
** answer: [31,0,0], groundtruth_str: \begin{pmatrix}1\2\-3\end{pmatrix}
** wrong
**  1315 2618
** answer: 2016, groundtruth_str: -338016
** groundtruth_num is not None
** is_fraction:  2016
** groundtruth_num is (int, float)
** compare_two_numbers int 2016 -338016
** wrong
**  1315 2619
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  1316 2619
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1317 2619
** answer: 30.2, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  30.2
** groundtruth_num is (int, float)
** compare_two_numbers int 30.2 9
** wrong
**  1317 2620
** answer: 3400, groundtruth_str: 3400
** compare on lower
** correct
**  1318 2620
** answer: 4.5, groundtruth_str: 4.5
** compare on lower
** correct
**  1319 2620
** answer: 15, groundtruth_str: \frac{40}{3}
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers float 15 13.333333333333334
** wrong
**  1319 2621
** answer: 1007.5, groundtruth_str: 62
** groundtruth_num is not None
** is_fraction:  1007.5
** groundtruth_num is (int, float)
** compare_two_numbers int 1007.5 62
** wrong
**  1319 2622
** answer: 368.24, groundtruth_str: 368
** groundtruth_num is not None
** is_fraction:  368.24
** groundtruth_num is (int, float)
** compare_two_numbers int 368.24 368
** correct
**  1320 2622
** answer: \frac{1}{135}, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  \frac{1}{135}
** groundtruth_num is (int, float)
** compare_two_numbers int 0.007407407407407408 0
** correct
**  1321 2622
** answer: -π/3, groundtruth_str: -\frac{\pi}{6}
** groundtruth_num is not None
** is_fraction:  -π/3
** groundtruth_num is (int, float)
** compare_two_numbers float -1.0466666666666666 -0.5235987755982988
** wrong
**  1321 2623
** answer: 704000, groundtruth_str: 800000
** groundtruth_num is not None
** is_fraction:  704000
** groundtruth_num is (int, float)
** compare_two_numbers int 704000 800000
** wrong
**  1321 2624
** answer: undefined, groundtruth_str: -63
** groundtruth_num is not None
** is_fraction:  undefined
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1321 2625
** answer: 15, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 20
** wrong
**  1321 2626
** answer: 95, groundtruth_str: 63
** groundtruth_num is not None
** is_fraction:  95
** groundtruth_num is (int, float)
** compare_two_numbers int 95 63
** wrong
**  1321 2627
** answer: 3, groundtruth_str: 3\sqrt{3}
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers float 3 5.196152422706632
** wrong
**  1321 2628
** answer: 135, groundtruth_str: 135
** compare on lower
** correct
**  1322 2628
** answer: 10.0, groundtruth_str: \frac{5\sqrt{42}}{27}
** groundtruth_num is not None
** is_fraction:  10.0
** groundtruth_num is (int, float)
** compare_two_numbers float 10 1.2001371663718259
** wrong
**  1322 2629
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  1323 2629
** answer: 47, groundtruth_str: 300
** groundtruth_num is not None
** is_fraction:  47
** groundtruth_num is (int, float)
** compare_two_numbers int 47 300
** wrong
**  1323 2630
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  1323 2631
** answer: 1, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 6
** wrong
**  1323 2632
** answer: 0.75, groundtruth_str: \frac{2}{3}
** groundtruth_num is not None
** is_fraction:  0.75
** groundtruth_num is (int, float)
** compare_two_numbers float 0.75 0.6666666666666666
** wrong
**  1323 2633
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1324 2633
** answer: 0, groundtruth_str: \frac{1}{3}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.3333333333333333
** wrong
**  1324 2634
** answer: 15, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 5
** wrong
**  1324 2635
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1325 2635
** answer: \frac{1}{8}, groundtruth_str: \frac{1}{8}
** compare on lower
** correct
**  1326 2635
** answer: 338, groundtruth_str: 39
** groundtruth_num is not None
** is_fraction:  338
** groundtruth_num is (int, float)
** compare_two_numbers int 338 39
** wrong
**  1326 2636
** answer: (-11,9), groundtruth_str: (-11,9)
** compare on lower
** correct
**  1327 2636
** answer: 6, groundtruth_str: 2+4\sqrt{7}
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers float 6 12.583005244258363
** wrong
**  1327 2637
** answer: 9, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 4
** wrong
**  1327 2638
** answer: 495, groundtruth_str: 495
** compare on lower
** correct
**  1328 2638
** answer: ellipse, groundtruth_str: \text{circle}
** wrong
**  1328 2639
** answer: 0.0542, groundtruth_str: \frac{9}{56}
** groundtruth_num is not None
** is_fraction:  0.0542
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0542 0.16071428571428573
** wrong
**  1328 2640
** answer: 0.75, groundtruth_str: \frac{3}{4}
** groundtruth_num is not None
** is_fraction:  0.75
** groundtruth_num is (int, float)
** compare_two_numbers float 0.75 0.75
** correct
**  1329 2640
** answer: 4, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 6
** wrong
**  1329 2641
** answer: 9, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 7
** wrong
**  1329 2642
** answer: 1, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 5
** wrong
**  1329 2643
** answer: 0.6, groundtruth_str: -\frac{\sqrt{10}}{10}
** groundtruth_num is not None
** is_fraction:  0.6
** groundtruth_num is (int, float)
** compare_two_numbers float 0.6 -0.31622776601683794
** wrong
**  1329 2644
** answer: 12.5, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  12.5
** groundtruth_num is (int, float)
** compare_two_numbers int 12.5 12
** correct
**  1330 2644
** answer: 0, groundtruth_str: -2x^2+x-3
** wrong
**  1330 2645
** answer: 54, groundtruth_str: 54
** compare on lower
** correct
**  1331 2645
** answer: 11, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 5
** wrong
**  1331 2646
** answer: 0.5, groundtruth_str: \frac{7}{2}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 3.5
** wrong
**  1331 2647
** answer: 3125, groundtruth_str: 3125
** compare on lower
** correct
**  1332 2647
** answer: 6, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 48
** wrong
**  1332 2648
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  1333 2648
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1334 2648
** answer: 0, groundtruth_str: 592
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 592
** wrong
**  1334 2649
** answer: 266.5, groundtruth_str: 228.3
** groundtruth_num is not None
** is_fraction:  266.5
** groundtruth_num is (int, float)
** compare_two_numbers float 266.5 228.3
** wrong
**  1334 2650
** answer: 66, groundtruth_str: 66
** compare on lower
** correct
**  1335 2650
** answer: 6, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 3
** wrong
**  1335 2651
** answer: 16, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 48
** wrong
**  1335 2652
** answer: 132, groundtruth_str: 132
** compare on lower
** correct
**  1336 2652
** answer: [25], groundtruth_str: [-36,104]
** groundtruth_num is not None
** is_fraction:  [25]
** groundtruth_num is (int, float)
** compare_two_numbers int 25 -36104
** wrong
**  1336 2653
** answer: (7,4), groundtruth_str: (7,4)
** compare on lower
** correct
**  1337 2653
** answer: \frac{1}{7}, groundtruth_str: \frac{1}{12}
** groundtruth_num is not None
** is_fraction:  \frac{1}{7}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.14285714285714285 0.08333333333333333
** wrong
**  1337 2654
** answer: 25, groundtruth_str: 93
** groundtruth_num is not None
** is_fraction:  25
** groundtruth_num is (int, float)
** compare_two_numbers int 25 93
** wrong
**  1337 2655
** answer: \frac{3}{13}, groundtruth_str: \frac{3}{13}
** compare on lower
** correct
**  1338 2655
** answer: -π/3, groundtruth_str: -\frac{\pi}{6}
** groundtruth_num is not None
** is_fraction:  -π/3
** groundtruth_num is (int, float)
** compare_two_numbers float -1.0466666666666666 -0.5235987755982988
** wrong
**  1338 2656
** answer: 2√5, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  2√5
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1338 2657
** answer: 9, groundtruth_str: 10+9\sqrt{2}
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers float 9 22.727922061357855
** wrong
**  1338 2658
** answer: 2008, groundtruth_str: 2000
** groundtruth_num is not None
** is_fraction:  2008
** groundtruth_num is (int, float)
** compare_two_numbers int 2008 2000
** wrong
**  1338 2659
** answer: 36√3, groundtruth_str: 36\sqrt{3}
** groundtruth_num is not None
** is_fraction:  36√3
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1338 2660
** answer: 1.5, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1.5
** groundtruth_num is (int, float)
** compare_two_numbers int 1.5 2
** correct
**  1339 2660
** answer: 2.1, groundtruth_str: \frac{21}{31}
** groundtruth_num is not None
** is_fraction:  2.1
** groundtruth_num is (int, float)
** compare_two_numbers float 2.1 0.6774193548387096
** wrong
**  1339 2661
** answer: 16, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 45
** wrong
**  1339 2662
** answer: 2, groundtruth_str: \begin{pmatrix}2&-3\0&3\end{pmatrix}
** wrong
**  1339 2663
** answer: \begin{pmatrix}3&-4\1&-1\end{pmatrix}, groundtruth_str: \begin{pmatrix}4033&-8064\2016&-4031\end{pmatrix}
** wrong
**  1339 2664
** answer: \frac{4}{9}, groundtruth_str: \frac{4}{9}
** compare on lower
** correct
**  1340 2664
** answer: 29, groundtruth_str: 31
** groundtruth_num is not None
** is_fraction:  29
** groundtruth_num is (int, float)
** compare_two_numbers int 29 31
** wrong
**  1340 2665
** answer: 2.8284271247461903, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  2.8284271247461903
** groundtruth_num is (int, float)
** compare_two_numbers int 2.8284271247461903 8
** wrong
**  1340 2666
** answer: 183, groundtruth_str: 900
** groundtruth_num is not None
** is_fraction:  183
** groundtruth_num is (int, float)
** compare_two_numbers int 183 900
** wrong
**  1340 2667
** answer: 8,001, groundtruth_str: 85,184
** groundtruth_num is not None
** is_fraction:  8,001
** groundtruth_num is (int, float)
** compare_two_numbers int 8001 85184
** wrong
**  1340 2668
** answer: (B)Circle, groundtruth_str: \text{(B)}
** correct
**  1341 2668
** answer: 5, groundtruth_str: (9,11)
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 911
** wrong
**  1341 2669
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  1341 2670
** answer: (-5,3/10), groundtruth_str: \begin{pmatrix}-5\2\end{pmatrix}
** wrong
**  1341 2671
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  1342 2671
** answer: 22, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  22
** groundtruth_num is (int, float)
** compare_two_numbers int 22 6
** wrong
**  1342 2672
** answer: 70, groundtruth_str: 90
** groundtruth_num is not None
** is_fraction:  70
** groundtruth_num is (int, float)
** compare_two_numbers int 70 90
** wrong
**  1342 2673
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  1343 2673
** answer: 1, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 0
** wrong
**  1343 2674
** answer: -18, groundtruth_str: -18
** compare on lower
** correct
**  1344 2674
** answer: 1, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.25
** wrong
**  1344 2675
** answer: 1, groundtruth_str: \frac{781}{1024}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.7626953125
** wrong
**  1344 2676
** answer: 4, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 11
** wrong
**  1344 2677
** answer: 7, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 8
** wrong
**  1344 2678
** answer: 14Lπ, groundtruth_str: 256\pi
** groundtruth_num is not None
** is_fraction:  14Lπ
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1344 2679
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1345 2679
** answer: 27, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers int 27 12
** wrong
**  1345 2680
** answer: 13.18, groundtruth_str: 13.18
** compare on lower
** correct
**  1346 2680
** answer: 1, groundtruth_str: \frac{1005}{1006}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.9990059642147118
** wrong
**  1346 2681
** answer: 0.8, groundtruth_str: \frac{2}{5}
** groundtruth_num is not None
** is_fraction:  0.8
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8 0.4
** wrong
**  1346 2682
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  1347 2682
** answer: -0.5, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  -0.5
** groundtruth_num is (int, float)
** compare_two_numbers float -0.5 0.5
** wrong
**  1347 2683
** answer: 7, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 8
** wrong
**  1347 2684
** answer: 0.4, groundtruth_str: \frac{2}{5}
** groundtruth_num is not None
** is_fraction:  0.4
** groundtruth_num is (int, float)
** compare_two_numbers float 0.4 0.4
** correct
**  1348 2684
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  1349 2684
** answer: 24, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 8
** wrong
**  1349 2685
** answer: \frac{625}{4}, groundtruth_str: \frac{625}4
** groundtruth_num is not None
** is_fraction:  \frac{625}{4}
** groundtruth_num is (int, float)
** compare_two_numbers float 156.25 156.25
** correct
**  1350 2685
** answer: 0.5, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.25
** wrong
**  1350 2686
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  1351 2686
** answer: 2, groundtruth_str: 2\pi
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 6.283185307179586
** wrong
**  1351 2687
** answer: 40320, groundtruth_str: 362,880
** groundtruth_num is not None
** is_fraction:  40320
** groundtruth_num is (int, float)
** compare_two_numbers int 40320 362880
** wrong
**  1351 2688
** answer: -1, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers int -1 1
** wrong
**  1351 2689
** answer: 10, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 8
** wrong
**  1351 2690
** answer: 139, groundtruth_str: 139
** compare on lower
** correct
**  1352 2690
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  1353 2690
** answer: 2, groundtruth_str: 8080
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 8080
** wrong
**  1353 2691
** answer: 15.5, groundtruth_str: 14.8
** groundtruth_num is not None
** is_fraction:  15.5
** groundtruth_num is (int, float)
** compare_two_numbers float 15.5 14.8
** wrong
**  1353 2692
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  1354 2692
** answer: 9, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 1
** wrong
**  1354 2693
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1355 2693
** answer: -5, groundtruth_str: -5
** compare on lower
** correct
**  1356 2693
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1357 2693
** answer: 1057251.0, groundtruth_str: 1940
** groundtruth_num is not None
** is_fraction:  1057251.0
** groundtruth_num is (int, float)
** compare_two_numbers int 1057251 1940
** wrong
**  1357 2694
** answer: 1.0, groundtruth_str: m+2
** wrong
**  1357 2695
** answer: 0.5, groundtruth_str: \frac{67}{89}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.7528089887640449
** wrong
**  1357 2696
** answer: 7121, groundtruth_str: 6152
** groundtruth_num is not None
** is_fraction:  7121
** groundtruth_num is (int, float)
** compare_two_numbers int 7121 6152
** wrong
**  1357 2697
** answer: 42, groundtruth_str: 42
** compare on lower
** correct
**  1358 2697
** answer: 500, groundtruth_str: 118
** groundtruth_num is not None
** is_fraction:  500
** groundtruth_num is (int, float)
** compare_two_numbers int 500 118
** wrong
**  1358 2698
** answer: 12√5, groundtruth_str: 12\sqrt{5}
** groundtruth_num is not None
** is_fraction:  12√5
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1358 2699
** answer: 117, groundtruth_str: 117
** compare on lower
** correct
**  1359 2699
** answer: 120, groundtruth_str: 72
** groundtruth_num is not None
** is_fraction:  120
** groundtruth_num is (int, float)
** compare_two_numbers int 120 72
** wrong
**  1359 2700
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  1360 2700
** answer: 2, groundtruth_str: -2
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 -2
** wrong
**  1360 2701
** answer: 38, groundtruth_str: 42
** groundtruth_num is not None
** is_fraction:  38
** groundtruth_num is (int, float)
** compare_two_numbers int 38 42
** wrong
**  1360 2702
** answer: 1.5, groundtruth_str: -\frac{7}{4}
** groundtruth_num is not None
** is_fraction:  1.5
** groundtruth_num is (int, float)
** compare_two_numbers float 1.5 -1.75
** wrong
**  1360 2703
** answer: 6, groundtruth_str: \frac{13}{3}
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers float 6 4.333333333333333
** wrong
**  1360 2704
** answer: 1296, groundtruth_str: 270
** groundtruth_num is not None
** is_fraction:  1296
** groundtruth_num is (int, float)
** compare_two_numbers int 1296 270
** wrong
**  1360 2705
** answer: 10, groundtruth_str: 2\sqrt{113}
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers float 10 21.2602916254693
** wrong
**  1360 2706
** answer: 125.5, groundtruth_str: 125.5
** compare on lower
** correct
**  1361 2706
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  1362 2706
** answer: 1, groundtruth_str: -1,0,1
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 -101
** wrong
**  1362 2707
** answer: n, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  n
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1362 2708
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  1363 2708
** answer: 37, groundtruth_str: \begin{pmatrix}0\0\0\end{pmatrix}
** wrong
**  1363 2709
** answer: \frac{4}{13}, groundtruth_str: \frac{4}{13}
** compare on lower
** correct
**  1364 2709
** answer: -3, groundtruth_str: z^5-3z^4+6z^3-14z^2+14z-4
** wrong
**  1364 2710
** answer: 105+√11015, groundtruth_str: 145
** groundtruth_num is not None
** is_fraction:  105+√11015
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1364 2711
** answer: [-3a^2+3,-3a,-9a^3-6a^2+9a,2a^2-a-2,-2a+1,6a^3+4a^2-6a], groundtruth_str: \begin{pmatrix}3&6\2&7\end{pmatrix}
** wrong
**  1364 2712
** answer: \begin{pmatrix}1\1\end{pmatrix}, groundtruth_str: \begin{pmatrix}23/8\7/4\end{pmatrix}
** wrong
**  1364 2713
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  1365 2713
** answer: 2, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 0
** wrong
**  1365 2714
** answer: EA, groundtruth_str: \overline{CD}
** wrong
**  1365 2715
** answer: 0, groundtruth_str: 159
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 159
** wrong
**  1365 2716
** answer: \frac{5}{18}, groundtruth_str: \frac{5}{18}
** compare on lower
** correct
**  1366 2716
** answer: 8, groundtruth_str: \frac{11}{2}
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers float 8 5.5
** wrong
**  1366 2717
** answer: 160, groundtruth_str: 225
** groundtruth_num is not None
** is_fraction:  160
** groundtruth_num is (int, float)
** compare_two_numbers int 160 225
** wrong
**  1366 2718
** answer: undefined, groundtruth_str: -14
** groundtruth_num is not None
** is_fraction:  undefined
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1366 2719
** answer: 210, groundtruth_str: 210
** compare on lower
** correct
**  1367 2719
** answer: E, groundtruth_str: A
** wrong
**  1367 2720
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  1368 2720
** answer: 384, groundtruth_str: 384
** compare on lower
** correct
**  1369 2720
** answer: 1, groundtruth_str: 0,4
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 4
** wrong
**  1369 2721
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  1369 2722
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1370 2722
** answer: 0, groundtruth_str: -\frac{\sqrt{3}}{2}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 -0.8660254037844386
** wrong
**  1370 2723
** answer: 2, groundtruth_str: 4096\sqrt{2}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 5792.618751480198
** wrong
**  1370 2724
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  1371 2724
** answer: 0.3846153846153846, groundtruth_str: \frac{\sqrt{2}}{2}
** groundtruth_num is not None
** is_fraction:  0.3846153846153846
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3846153846153846 0.7071067811865476
** wrong
**  1371 2725
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  1372 2725
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  1373 2725
** answer: 5525, groundtruth_str: 5636
** groundtruth_num is not None
** is_fraction:  5525
** groundtruth_num is (int, float)
** compare_two_numbers int 5525 5636
** wrong
**  1373 2726
** answer: 3, groundtruth_str: -3
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 -3
** wrong
**  1373 2727
** answer: 1, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 7
** wrong
**  1373 2728
** answer: 29.5833333333, groundtruth_str: 108\sqrt{3}
** groundtruth_num is not None
** is_fraction:  29.5833333333
** groundtruth_num is (int, float)
** compare_two_numbers float 29.5833333333 187.06148721743875
** wrong
**  1373 2729
** answer: 2, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 17
** wrong
**  1373 2730
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1374 2730
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  1375 2730
** answer: 8, groundtruth_str: \frac{17}{2}
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers float 8 8.5
** wrong
**  1375 2731
** answer: 2, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 5
** wrong
**  1375 2732
** answer: 2500, groundtruth_str: 2500
** compare on lower
** correct
**  1376 2732
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  1377 2732
** answer: 9, groundtruth_str: 340
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 340
** wrong
**  1377 2733
** answer: 5, groundtruth_str: 3,5,7
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 357
** wrong
**  1377 2734
** answer: 330, groundtruth_str: 330
** compare on lower
** correct
**  1378 2734
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1379 2734
** answer: -3, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  -3
** groundtruth_num is (int, float)
** compare_two_numbers int -3 16
** wrong
**  1379 2735
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1380 2735
** answer: 1, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 6
** wrong
**  1380 2736
** answer: 69, groundtruth_str: 69
** compare on lower
** correct
**  1381 2736
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1382 2736
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1383 2736
** answer: -1+√11, groundtruth_str: -\sqrt{11}-1
** groundtruth_num is not None
** is_fraction:  -1+√11
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1383 2737
** answer: 402, groundtruth_str: 402
** compare on lower
** correct
**  1384 2737
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  1385 2737
** answer: 0, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 4
** wrong
**  1385 2738
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1386 2738
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  1387 2738
** answer: 0, groundtruth_str: 3+2\sqrt{2}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 5.82842712474619
** wrong
**  1387 2739
** answer: 1, groundtruth_str: \frac{3}{2}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 1.5
** wrong
**  1387 2740
** answer: 2, groundtruth_str: \begin{pmatrix}2\3\1\end{pmatrix}
** wrong
**  1387 2741
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1388 2741
** answer: 2,2, groundtruth_str: 7,-2,
** groundtruth_num is not None
** is_fraction:  2,2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 5
** wrong
**  1388 2742
** answer: (√2,-π/4,-6), groundtruth_str: (\sqrt{2},\frac{7\pi}{4},-6)
** wrong
**  1388 2743
** answer: 0, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 3
** wrong
**  1388 2744
** answer: 3, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 17
** wrong
**  1388 2745
** answer: \frac{5}{18}, groundtruth_str: \frac{11}{36}
** groundtruth_num is not None
** is_fraction:  \frac{5}{18}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2777777777777778 0.3055555555555556
** wrong
**  1388 2746
** answer: 15, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 13
** wrong
**  1388 2747
** answer: 225, groundtruth_str: 225
** compare on lower
** correct
**  1389 2747
** answer: 10, groundtruth_str: 2\sqrt{10}
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers float 10 6.324555320336759
** wrong
**  1389 2748
** answer: 1, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 4
** wrong
**  1389 2749
** answer: \frac{1}{2}, groundtruth_str: \frac{\sqrt{6}}{3}
** groundtruth_num is not None
** is_fraction:  \frac{1}{2}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.816496580927726
** wrong
**  1389 2750
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  1390 2750
** answer: 15, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 21
** wrong
**  1390 2751
** answer: 1, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 4
** wrong
**  1390 2752
** answer: 0, groundtruth_str: \frac{3}{8}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.375
** wrong
**  1390 2753
** answer: 35, groundtruth_str: 35
** compare on lower
** correct
**  1391 2753
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1392 2753
** answer: (1,2), groundtruth_str: (2,4)
** groundtruth_num is not None
** is_fraction:  (1,2)
** groundtruth_num is (int, float)
** compare_two_numbers int 1 24
** wrong
**  1392 2754
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  1393 2754
** answer: 18, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 16
** wrong
**  1393 2755
** answer: 4, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 12
** wrong
**  1393 2756
** answer: 24, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 8
** wrong
**  1393 2757
** answer: 56, groundtruth_str: 448
** groundtruth_num is not None
** is_fraction:  56
** groundtruth_num is (int, float)
** compare_two_numbers int 56 448
** wrong
**  1393 2758
** answer: 0, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 4
** wrong
**  1393 2759
** answer: 755, groundtruth_str: 215
** groundtruth_num is not None
** is_fraction:  755
** groundtruth_num is (int, float)
** compare_two_numbers int 755 215
** wrong
**  1393 2760
** answer: 2, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 8
** wrong
**  1393 2761
** answer: 0.5-(1/2^2008)-(1/2^2009), groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0.5-(1/2^2008)-(1/2^2009)
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.5
** correct
**  1394 2761
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1395 2761
** answer: 3, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 9
** wrong
**  1395 2762
** answer: 6, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 10
** wrong
**  1395 2763
** answer: 0.375, groundtruth_str: \frac{3}{8}
** groundtruth_num is not None
** is_fraction:  0.375
** groundtruth_num is (int, float)
** compare_two_numbers float 0.375 0.375
** correct
**  1396 2763
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  1397 2763
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1398 2763
** answer: 210, groundtruth_str: 864
** groundtruth_num is not None
** is_fraction:  210
** groundtruth_num is (int, float)
** compare_two_numbers int 210 864
** wrong
**  1398 2764
** answer: 0, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 4
** wrong
**  1398 2765
** answer: undefined, groundtruth_str: \frac{4}{5}
** groundtruth_num is not None
** is_fraction:  undefined
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1398 2766
** answer: 0, groundtruth_str: i
** wrong
**  1398 2767
** answer: -4, groundtruth_str: -10
** groundtruth_num is not None
** is_fraction:  -4
** groundtruth_num is (int, float)
** compare_two_numbers int -4 -10
** wrong
**  1398 2768
** answer: ±2√2, groundtruth_str: \sqrt{5},-\sqrt{5}
** groundtruth_num is not None
** is_fraction:  ±2√2
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1398 2769
** answer: \frac{12\sqrt{2}+2\sqrt{37}}{7}, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  \frac{12\sqrt{2}+2\sqrt{37}}{7}
** groundtruth_num is (int, float)
** compare_two_numbers int 4.162298258439082 11
** wrong
**  1398 2770
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1399 2770
** answer: 0.55, groundtruth_str: \frac{11+9a}{20}
** wrong
**  1399 2771
** answer: 0.01, groundtruth_str: \text{Dana}
** wrong
**  1399 2772
** answer: 70, groundtruth_str: 90
** groundtruth_num is not None
** is_fraction:  70
** groundtruth_num is (int, float)
** compare_two_numbers int 70 90
** wrong
**  1399 2773
** answer: 3, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 8
** wrong
**  1399 2774
** answer: 5, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 6
** wrong
**  1399 2775
** answer: 7, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 11
** wrong
**  1399 2776
** answer: 2145, groundtruth_str: 2145
** compare on lower
** correct
**  1400 2776
** answer: 254, groundtruth_str: 512
** groundtruth_num is not None
** is_fraction:  254
** groundtruth_num is (int, float)
** compare_two_numbers int 254 512
** wrong
**  1400 2777
** answer: 6, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 12
** wrong
**  1400 2778
** answer: 6.8, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  6.8
** groundtruth_num is (int, float)
** compare_two_numbers int 6.8 17
** wrong
**  1400 2779
** answer: (1/3,1/3,1/3), groundtruth_str: (\frac{5}{3},\frac{5}{3},\frac{5}{3})
** groundtruth_num is not None
** is_fraction:  (1/3,1/3,1/3)
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3333333333333333 1.6666666666666667
** wrong
**  1400 2780
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1401 2780
** answer: 1:1, groundtruth_str: 1:1
** compare on lower
** correct
**  1402 2780
** answer: 0.8, groundtruth_str: \frac{4}{5}
** groundtruth_num is not None
** is_fraction:  0.8
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8 0.8
** correct
**  1403 2780
** answer: 3, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 5
** wrong
**  1403 2781
** answer: 1, groundtruth_str: x^2-7x+12
** wrong
**  1403 2782
** answer: 45, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  45
** groundtruth_num is (int, float)
** compare_two_numbers int 45 80
** wrong
**  1403 2783
** answer: 25, groundtruth_str: 127
** groundtruth_num is not None
** is_fraction:  25
** groundtruth_num is (int, float)
** compare_two_numbers int 25 127
** wrong
**  1403 2784
** answer: 4096, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  4096
** groundtruth_num is (int, float)
** compare_two_numbers int 4096 1
** wrong
**  1403 2785
** answer: \begin{pmatrix}-16\4\32\end{pmatrix}, groundtruth_str: \begin{pmatrix}-4/9\1/9\8/9\end{pmatrix}
** wrong
**  1403 2786
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  1404 2786
** answer: 6, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 9
** wrong
**  1404 2787
** answer: 1, groundtruth_str: \frac{4}{9}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.4444444444444444
** wrong
**  1404 2788
** answer: 40, groundtruth_str: 32
** groundtruth_num is not None
** is_fraction:  40
** groundtruth_num is (int, float)
** compare_two_numbers int 40 32
** wrong
**  1404 2789
** answer: \frac{729}{64}, groundtruth_str: \frac{243}{8}
** groundtruth_num is not None
** is_fraction:  \frac{729}{64}
** groundtruth_num is (int, float)
** compare_two_numbers float 11.390625 30.375
** wrong
**  1404 2790
** answer: 1.50, groundtruth_str: 0.75
** groundtruth_num is not None
** is_fraction:  1.50
** groundtruth_num is (int, float)
** compare_two_numbers float 1.5 0.75
** wrong
**  1404 2791
** answer: 50, groundtruth_str: 140
** groundtruth_num is not None
** is_fraction:  50
** groundtruth_num is (int, float)
** compare_two_numbers int 50 140
** wrong
**  1404 2792
** answer: 2, groundtruth_str: \sqrt{14}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 3.7416573867739413
** wrong
**  1404 2793
** answer: 40π, groundtruth_str: 40\pi
** groundtruth_num is not None
** is_fraction:  40π
** groundtruth_num is (int, float)
** compare_two_numbers float 125.60000000000001 125.66370614359172
** wrong
**  1404 2794
** answer: 55, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  55
** groundtruth_num is (int, float)
** compare_two_numbers int 55 6
** wrong
**  1404 2795
** answer: [-1,1], groundtruth_str: \{-1\}\cup[0,7)
** wrong
**  1404 2796
** answer: 216, groundtruth_str: 226
** groundtruth_num is not None
** is_fraction:  216
** groundtruth_num is (int, float)
** compare_two_numbers int 216 226
** wrong
**  1404 2797
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  1405 2797
** answer: 4, groundtruth_str: 22+12\sqrt{2}
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers float 4 38.97056274847714
** wrong
**  1405 2798
** answer: -28, groundtruth_str: 6r^2-4r-24
** wrong
**  1405 2799
** answer: \frac{1}{3}, groundtruth_str: \frac{1}{3}
** compare on lower
** correct
**  1406 2799
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  1406 2800
** answer: 10, groundtruth_str: 6\sqrt{3}
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers float 10 10.392304845413264
** wrong
**  1406 2801
** answer: 1.234, groundtruth_str: \frac{137}{111}
** groundtruth_num is not None
** is_fraction:  1.234
** groundtruth_num is (int, float)
** compare_two_numbers float 1.234 1.2342342342342343
** wrong
**  1406 2802
** answer: 2.7, groundtruth_str: 5.5
** groundtruth_num is not None
** is_fraction:  2.7
** groundtruth_num is (int, float)
** compare_two_numbers float 2.7 5.5
** wrong
**  1406 2803
** answer: 27, groundtruth_str: 18+2\pi
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers float 27 24.283185307179586
** wrong
**  1406 2804
** answer: 61, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  61
** groundtruth_num is (int, float)
** compare_two_numbers int 61 60
** wrong
**  1406 2805
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  1407 2805
** answer: \frac{1}{3}, groundtruth_str: \frac{19}{40}
** groundtruth_num is not None
** is_fraction:  \frac{1}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3333333333333333 0.475
** wrong
**  1407 2806
** answer: 10, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 9
** wrong
**  1407 2807
** answer: -\frac{16}{5}, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  -\frac{16}{5}
** groundtruth_num is (int, float)
** compare_two_numbers int -3.2 4
** wrong
**  1407 2808
** answer: 7, groundtruth_str: -18
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 -18
** wrong
**  1407 2809
** answer: 6.2, groundtruth_str: 6\frac{1}{5}
** groundtruth_num is not None
** is_fraction:  6.2
** groundtruth_num is (int, float)
** compare_two_numbers float 6.2 12.2
** wrong
**  1407 2810
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1408 2810
** answer: 8, groundtruth_str: 27
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 27
** wrong
**  1408 2811
** answer: 31.5, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  31.5
** groundtruth_num is (int, float)
** compare_two_numbers int 31.5 21
** wrong
**  1408 2812
** answer: 4, groundtruth_str: \frac{6}{23}
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers float 4 0.2608695652173913
** wrong
**  1408 2813
** answer: (22,784), groundtruth_str: (46,2004)
** groundtruth_num is not None
** is_fraction:  (22,784)
** groundtruth_num is (int, float)
** compare_two_numbers int 22784 462004
** wrong
**  1408 2814
** answer: (2,2), groundtruth_str: (-6,10)
** groundtruth_num is not None
** is_fraction:  (2,2)
** groundtruth_num is (int, float)
** compare_two_numbers int 2 -610
** wrong
**  1408 2815
** answer: 24, groundtruth_str: 49
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 49
** wrong
**  1408 2816
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1409 2816
** answer: -5, groundtruth_str: -5
** compare on lower
** correct
**  1410 2816
** answer: 36, groundtruth_str: 54
** groundtruth_num is not None
** is_fraction:  36
** groundtruth_num is (int, float)
** compare_two_numbers int 36 54
** wrong
**  1410 2817
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  1411 2817
** answer: 54, groundtruth_str: 108
** groundtruth_num is not None
** is_fraction:  54
** groundtruth_num is (int, float)
** compare_two_numbers int 54 108
** wrong
**  1411 2818
** answer: 0, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 4
** wrong
**  1411 2819
** answer: 6.2, groundtruth_str: 1.4
** groundtruth_num is not None
** is_fraction:  6.2
** groundtruth_num is (int, float)
** compare_two_numbers float 6.2 1.4
** wrong
**  1411 2820
** answer: 720, groundtruth_str: 512
** groundtruth_num is not None
** is_fraction:  720
** groundtruth_num is (int, float)
** compare_two_numbers int 720 512
** wrong
**  1411 2821
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  1412 2821
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  1413 2821
** answer: 3, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 8
** wrong
**  1413 2822
** answer: 3, groundtruth_str: -3
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 -3
** wrong
**  1413 2823
** answer: 22.25, groundtruth_str: 89
** groundtruth_num is not None
** is_fraction:  22.25
** groundtruth_num is (int, float)
** compare_two_numbers int 22.25 89
** wrong
**  1413 2824
** answer: 76, groundtruth_str: 44
** groundtruth_num is not None
** is_fraction:  76
** groundtruth_num is (int, float)
** compare_two_numbers int 76 44
** wrong
**  1413 2825
** answer: 2, groundtruth_str: \frac{12}{7}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 1.7142857142857142
** wrong
**  1413 2826
** answer: 2, groundtruth_str: \frac{3}{2}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 1.5
** wrong
**  1413 2827
** answer: 9000, groundtruth_str: \text{4:30p.m.}
** wrong
**  1413 2828
** answer: 197, groundtruth_str: \frac{197}{2}
** groundtruth_num is not None
** is_fraction:  197
** groundtruth_num is (int, float)
** compare_two_numbers float 197 98.5
** wrong
**  1413 2829
** answer: 3, groundtruth_str: 3+\frac{\sqrt{69}}{3}
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers float 3 5.768874620972691
** wrong
**  1413 2830
** answer: 9, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 16
** wrong
**  1413 2831
** answer: 10, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 15
** wrong
**  1413 2832
** answer: -35, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  -35
** groundtruth_num is (int, float)
** compare_two_numbers int -35 0
** wrong
**  1413 2833
** answer: 3, groundtruth_str: (3,\frac{11\pi}{8},\frac{4\pi}{5})
** wrong
**  1413 2834
** answer: 10,091, groundtruth_str: 10455
** groundtruth_num is not None
** is_fraction:  10,091
** groundtruth_num is (int, float)
** compare_two_numbers int 10091 10455
** wrong
**  1413 2835
** answer: 12, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 3
** wrong
**  1413 2836
** answer: 540, groundtruth_str: 72
** groundtruth_num is not None
** is_fraction:  540
** groundtruth_num is (int, float)
** compare_two_numbers int 540 72
** wrong
**  1413 2837
** answer: 112.5, groundtruth_str: 200
** groundtruth_num is not None
** is_fraction:  112.5
** groundtruth_num is (int, float)
** compare_two_numbers int 112.5 200
** wrong
**  1413 2838
** answer: -24, groundtruth_str: -39
** groundtruth_num is not None
** is_fraction:  -24
** groundtruth_num is (int, float)
** compare_two_numbers int -24 -39
** wrong
**  1413 2839
** answer: 8√3, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  8√3
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1413 2840
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  1413 2841
** answer: 8, groundtruth_str: -4
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 -4
** wrong
**  1413 2842
** answer: \frac{1}{8}, groundtruth_str: \frac{5}{16}
** groundtruth_num is not None
** is_fraction:  \frac{1}{8}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.125 0.3125
** wrong
**  1413 2843
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1414 2843
** answer: 98, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  98
** groundtruth_num is (int, float)
** compare_two_numbers int 98 7
** wrong
**  1414 2844
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  1415 2844
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  1416 2844
** answer: √π, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  √π
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1416 2845
** answer: 3, groundtruth_str: \sqrt{33}
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers float 3 5.744562646538029
** wrong
**  1416 2846
** answer: 9, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 10
** wrong
**  1416 2847
** answer: 1, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 3
** wrong
**  1416 2848
** answer: -0.5, groundtruth_str: \cos58
** groundtruth_num is not None
** is_fraction:  -0.5
** groundtruth_num is (int, float)
** compare_two_numbers float -0.5 7.969557584733964
** wrong
**  1416 2849
** answer: 14, groundtruth_str: 100
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers int 14 100
** wrong
**  1416 2850
** answer: 42, groundtruth_str: 54
** groundtruth_num is not None
** is_fraction:  42
** groundtruth_num is (int, float)
** compare_two_numbers int 42 54
** wrong
**  1416 2851
** answer: \frac{36}{350y}+1+\frac{w}{z}, groundtruth_str: \frac{128}{75}
** groundtruth_num is not None
** is_fraction:  \frac{36}{350y}+1+\frac{w}{z}
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1416 2852
** answer: 4, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 8
** wrong
**  1416 2853
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1417 2853
** answer: 0.5, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.5
** correct
**  1418 2853
** answer: 128, groundtruth_str: \frac{128}{3}
** groundtruth_num is not None
** is_fraction:  128
** groundtruth_num is (int, float)
** compare_two_numbers float 128 42.666666666666664
** wrong
**  1418 2854
** answer: 9π, groundtruth_str: 12\pi
** groundtruth_num is not None
** is_fraction:  9π
** groundtruth_num is (int, float)
** compare_two_numbers float 28.26 37.69911184307752
** wrong
**  1418 2855
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  1418 2856
** answer: 6+4x, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  6+4x
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1418 2857
** answer: -2, groundtruth_str: -2
** compare on lower
** correct
**  1419 2857
** answer: 24,37, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  24,37
** groundtruth_num is (int, float)
** compare_two_numbers int 24 19
** wrong
**  1419 2858
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  1420 2858
** answer: -3, groundtruth_str: -2
** groundtruth_num is not None
** is_fraction:  -3
** groundtruth_num is (int, float)
** compare_two_numbers int -3 -2
** wrong
**  1420 2859
** answer: 0, groundtruth_str: 2k
** wrong
**  1420 2860
** answer: 12, groundtruth_str: 516
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 516
** wrong
**  1420 2861
** answer: 9, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 6
** wrong
**  1420 2862
** answer: 42, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  42
** groundtruth_num is (int, float)
** compare_two_numbers int 42 60
** wrong
**  1420 2863
** answer: 1, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 3
** wrong
**  1420 2864
** answer: 320, groundtruth_str: 385_9
** groundtruth_num is not None
** is_fraction:  320
** groundtruth_num is (int, float)
** compare_two_numbers int 320 3859
** wrong
**  1420 2865
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  1421 2865
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  1422 2865
** answer: 108, groundtruth_str: 108
** compare on lower
** correct
**  1423 2865
** answer: 21, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  21
** groundtruth_num is (int, float)
** compare_two_numbers int 21 14
** wrong
**  1423 2866
** answer: odd, groundtruth_str: \text{neither}
** wrong
**  1423 2867
** answer: 60, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 45
** wrong
**  1423 2868
** answer: -18, groundtruth_str: -588
** groundtruth_num is not None
** is_fraction:  -18
** groundtruth_num is (int, float)
** compare_two_numbers int -18 -588
** wrong
**  1423 2869
** answer: 7i-2, groundtruth_str: -2+7i
** wrong
**  1423 2870
** answer: 99, groundtruth_str: 63
** groundtruth_num is not None
** is_fraction:  99
** groundtruth_num is (int, float)
** compare_two_numbers int 99 63
** wrong
**  1423 2871
** answer: 1590, groundtruth_str: 1545
** groundtruth_num is not None
** is_fraction:  1590
** groundtruth_num is (int, float)
** compare_two_numbers int 1590 1545
** wrong
**  1423 2872
** answer: 0.5, groundtruth_str: -\frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 -0.5
** wrong
**  1423 2873
** answer: 1728, groundtruth_str: 1584
** groundtruth_num is not None
** is_fraction:  1728
** groundtruth_num is (int, float)
** compare_two_numbers int 1728 1584
** wrong
**  1423 2874
** answer: 0.75, groundtruth_str: \frac{3}{4}
** groundtruth_num is not None
** is_fraction:  0.75
** groundtruth_num is (int, float)
** compare_two_numbers float 0.75 0.75
** correct
**  1424 2874
** answer: 4π, groundtruth_str: 4\pi
** groundtruth_num is not None
** is_fraction:  4π
** groundtruth_num is (int, float)
** compare_two_numbers float 12.56 12.566370614359172
** wrong
**  1424 2875
** answer: 2, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 8
** wrong
**  1424 2876
** answer: 3.5, groundtruth_str: 6+\sqrt{6}
** groundtruth_num is not None
** is_fraction:  3.5
** groundtruth_num is (int, float)
** compare_two_numbers float 3.5 8.449489742783179
** wrong
**  1424 2877
** answer: 0, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 8
** wrong
**  1424 2878
** answer: \frac{21875}{10350}, groundtruth_str: \frac{243}{625}
** groundtruth_num is not None
** is_fraction:  \frac{21875}{10350}
** groundtruth_num is (int, float)
** compare_two_numbers float 2.1135265700483092 0.3888
** wrong
**  1424 2879
** answer: 1, groundtruth_str: \sqrt{3}-4
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 -2.267949192431123
** wrong
**  1424 2880
** answer: \frac{36}{25}, groundtruth_str: x^2+y^2=13
** wrong
**  1424 2881
** answer: 3.61, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  3.61
** groundtruth_num is (int, float)
** compare_two_numbers int 3.61 5
** wrong
**  1424 2882
** answer: 2, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 3
** wrong
**  1424 2883
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  1425 2883
** answer: 24, groundtruth_str: 64
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 64
** wrong
**  1425 2884
** answer: \frac{2}{3}, groundtruth_str: \frac{5}{6}
** groundtruth_num is not None
** is_fraction:  \frac{2}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.6666666666666666 0.8333333333333334
** wrong
**  1425 2885
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  1426 2885
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  1427 2885
** answer: 1, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 12
** wrong
**  1427 2886
** answer: 14, groundtruth_str: 81
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers int 14 81
** wrong
**  1427 2887
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1428 2887
** answer: 0, groundtruth_str: 508
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 508
** wrong
**  1428 2888
** answer: 0.48, groundtruth_str: \frac{12}{25}
** groundtruth_num is not None
** is_fraction:  0.48
** groundtruth_num is (int, float)
** compare_two_numbers float 0.48 0.48
** correct
**  1429 2888
** answer: 52, groundtruth_str: 52
** compare on lower
** correct
**  1430 2888
** answer: 0, groundtruth_str: \frac{\sqrt{3}}{2}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.8660254037844386
** wrong
**  1430 2889
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  1431 2889
** answer: 2π, groundtruth_str: 2\pi
** groundtruth_num is not None
** is_fraction:  2π
** groundtruth_num is (int, float)
** compare_two_numbers float 6.28 6.283185307179586
** wrong
**  1431 2890
** answer: 0.00682, groundtruth_str: \frac{82}{147}
** groundtruth_num is not None
** is_fraction:  0.00682
** groundtruth_num is (int, float)
** compare_two_numbers float 0.00682 0.5578231292517006
** wrong
**  1431 2891
** answer: 564, groundtruth_str: 564
** compare on lower
** correct
**  1432 2891
** answer: -2, groundtruth_str: a^3+a^2
** wrong
**  1432 2892
** answer: 3, groundtruth_str: (3,\frac{\pi}{2})
** wrong
**  1432 2893
** answer: 5√3/3, groundtruth_str: \frac{5\sqrt{3}}{3}
** groundtruth_num is not None
** is_fraction:  5√3/3
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1432 2894
** answer: 105, groundtruth_str: 105
** compare on lower
** correct
**  1433 2894
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  1433 2895
** answer: 4x^2-6x+4, groundtruth_str: 4x^2-6x+4
** compare on lower
** correct
**  1434 2895
** answer: 1.5, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  1.5
** groundtruth_num is (int, float)
** compare_two_numbers int 1.5 4
** wrong
**  1434 2896
** answer: 10, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 17
** wrong
**  1434 2897
** answer: 12, groundtruth_str: thecorrectansweraswenormallydo,asthatwouldbeespeciallyconfusingforthisproblem.
** wrong
**  1434 2898
** answer: 5-10i, groundtruth_str: -3+6i
** wrong
**  1434 2899
** answer: 0.25, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0.25
** groundtruth_num is (int, float)
** compare_two_numbers float 0.25 0.5
** wrong
**  1434 2900
** answer: 0, groundtruth_str: 4018
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 4018
** wrong
**  1434 2901
** answer: 2√3, groundtruth_str: -3,-2,\frac{1}{3},\frac{1}{2}
** groundtruth_num is not None
** is_fraction:  2√3
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1434 2902
** answer: 1+y, groundtruth_str: \frac{1}{y}+y
** wrong
**  1434 2903
** answer: ACEFHGIKLNOPQRSTUVWXYZ, groundtruth_str: \text{VW}
** wrong
**  1434 2904
** answer: 34, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  34
** groundtruth_num is (int, float)
** compare_two_numbers int 34 9
** wrong
**  1434 2905
** answer: 0, groundtruth_str: 898
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 898
** wrong
**  1434 2906
** answer: 440, groundtruth_str: 440
** compare on lower
** correct
**  1435 2906
** answer: \frac{1}{2}, groundtruth_str: \frac{1}{2}
** compare on lower
** correct
**  1436 2906
** answer: 1, groundtruth_str: [\frac{1}{2},\frac{3}{2}]
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.5
** wrong
**  1436 2907
** answer: F, groundtruth_str: \text{B,E,G}
** wrong
**  1436 2908
** answer: 1, groundtruth_str: \frac{1}{9}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.1111111111111111
** wrong
**  1436 2909
** answer: 1, groundtruth_str: 164
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 164
** wrong
**  1436 2910
** answer: 3,-4, groundtruth_str: (3,-4)
** groundtruth_num is not None
** is_fraction:  3,-4
** groundtruth_num is (int, float)
** compare_two_numbers int 3 -1
** wrong
**  1436 2911
** answer: 37.5, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  37.5
** groundtruth_num is (int, float)
** compare_two_numbers int 37.5 17
** wrong
**  1436 2912
** answer: 53, groundtruth_str: 53
** compare on lower
** correct
**  1437 2912
** answer: 21, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  21
** groundtruth_num is (int, float)
** compare_two_numbers int 21 5
** wrong
**  1437 2913
** answer: 10, groundtruth_str: 201
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 201
** wrong
**  1437 2914
** answer: 3250, groundtruth_str: 3,250
** groundtruth_num is not None
** is_fraction:  3250
** groundtruth_num is (int, float)
** compare_two_numbers int 3250 3250
** correct
**  1438 2914
** answer: 700π, groundtruth_str: 900\pi
** groundtruth_num is not None
** is_fraction:  700π
** groundtruth_num is (int, float)
** compare_two_numbers float 2198 2827.4333882308138
** wrong
**  1438 2915
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1439 2915
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  1440 2915
** answer: -41, groundtruth_str: -41
** compare on lower
** correct
**  1441 2915
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  1442 2915
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  1443 2915
** answer: 499503, groundtruth_str: 1041
** groundtruth_num is not None
** is_fraction:  499503
** groundtruth_num is (int, float)
** compare_two_numbers int 499503 1041
** wrong
**  1443 2916
** answer: 7x(x-1)(x-2), groundtruth_str: 7x(x-1)(x-2)
** compare on lower
** correct
**  1444 2916
** answer: -2,3, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  -2,3
** groundtruth_num is (int, float)
** compare_two_numbers int -2 2
** wrong
**  1444 2917
** answer: 504, groundtruth_str: 504
** compare on lower
** correct
**  1445 2917
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1446 2917
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1447 2917
** answer: -5, groundtruth_str: -4
** groundtruth_num is not None
** is_fraction:  -5
** groundtruth_num is (int, float)
** compare_two_numbers int -5 -4
** wrong
**  1447 2918
** answer: 7.5, groundtruth_str: \sqrt{241}
** groundtruth_num is not None
** is_fraction:  7.5
** groundtruth_num is (int, float)
** compare_two_numbers float 7.5 15.524174696260024
** wrong
**  1447 2919
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1448 2919
** answer: \frac{25}{99}, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  \frac{25}{99}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.25252525252525254 0.5
** wrong
**  1448 2920
** answer: 0.504, groundtruth_str: \frac{48}{95}
** groundtruth_num is not None
** is_fraction:  0.504
** groundtruth_num is (int, float)
** compare_two_numbers float 0.504 0.5052631578947369
** wrong
**  1448 2921
** answer: 0.714285, groundtruth_str: 1.4
** groundtruth_num is not None
** is_fraction:  0.714285
** groundtruth_num is (int, float)
** compare_two_numbers float 0.714285 1.4
** wrong
**  1448 2922
** answer: 3, groundtruth_str: 177
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 177
** wrong
**  1448 2923
** answer: -5,2, groundtruth_str: 1\pm\sqrt{19}
** wrong
**  1448 2924
** answer: 1, groundtruth_str: 8x^3-6x-1
** wrong
**  1448 2925
** answer: -2,2, groundtruth_str: 1,3
** groundtruth_num is not None
** is_fraction:  -2,2
** groundtruth_num is (int, float)
** compare_two_numbers int -2 13
** wrong
**  1448 2926
** answer: -10, groundtruth_str: -10
** compare on lower
** correct
**  1449 2926
** answer: 0, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 1
** wrong
**  1449 2927
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  1450 2927
** answer: \frac{5}{9}, groundtruth_str: \frac{5}{9}
** compare on lower
** correct
**  1451 2927
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  1452 2927
** answer: 0.707106781, groundtruth_str: \frac{\sqrt{2}}{2}
** groundtruth_num is not None
** is_fraction:  0.707106781
** groundtruth_num is (int, float)
** compare_two_numbers float 0.707106781 0.7071067811865476
** correct
**  1453 2927
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1454 2927
** answer: 2, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 3
** wrong
**  1454 2928
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1455 2928
** answer: 0, groundtruth_str: 250
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 250
** wrong
**  1455 2929
** answer: \frac{8}{63}, groundtruth_str: \frac{3}{56}
** groundtruth_num is not None
** is_fraction:  \frac{8}{63}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.12698412698412698 0.05357142857142857
** wrong
**  1455 2930
** answer: 4, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 0
** wrong
**  1455 2931
** answer: 0, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 11
** wrong
**  1455 2932
** answer: 140, groundtruth_str: 140
** compare on lower
** correct
**  1456 2932
** answer: -1, groundtruth_str: -\frac{3}{4}
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers float -1 -0.75
** wrong
**  1456 2933
** answer: 65, groundtruth_str: 65
** compare on lower
** correct
**  1457 2933
** answer: 91, groundtruth_str: 106
** groundtruth_num is not None
** is_fraction:  91
** groundtruth_num is (int, float)
** compare_two_numbers int 91 106
** wrong
**  1457 2934
** answer: 0.648, groundtruth_str: \frac{81}{125}
** groundtruth_num is not None
** is_fraction:  0.648
** groundtruth_num is (int, float)
** compare_two_numbers float 0.648 0.648
** correct
**  1458 2934
** answer: 92, groundtruth_str: 31
** groundtruth_num is not None
** is_fraction:  92
** groundtruth_num is (int, float)
** compare_two_numbers int 92 31
** wrong
**  1458 2935
** answer: 52, groundtruth_str: 52
** compare on lower
** correct
**  1459 2935
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  1460 2935
** answer: 8√2, groundtruth_str: 6\sqrt{2}
** groundtruth_num is not None
** is_fraction:  8√2
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1460 2936
** answer: 3800, groundtruth_str: 3800
** compare on lower
** correct
**  1461 2936
** answer: 201.0, groundtruth_str: 31
** groundtruth_num is not None
** is_fraction:  201.0
** groundtruth_num is (int, float)
** compare_two_numbers int 201 31
** wrong
**  1461 2937
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  1462 2937
** answer: 13, groundtruth_str: \text{13}
** compare on lower
** correct
**  1463 2937
** answer: 47, groundtruth_str: 47
** compare on lower
** correct
**  1464 2937
** answer: 90, groundtruth_str: 450
** groundtruth_num is not None
** is_fraction:  90
** groundtruth_num is (int, float)
** compare_two_numbers int 90 450
** wrong
**  1464 2938
** answer: 0.25, groundtruth_str: 0.25\,
** groundtruth_num is not None
** is_fraction:  0.25
** groundtruth_num is (int, float)
** compare_two_numbers float 0.25 0.25
** correct
**  1465 2938
** answer: 0.2, groundtruth_str: \frac{9}{100}
** groundtruth_num is not None
** is_fraction:  0.2
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2 0.09
** wrong
**  1465 2939
** answer: 3, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 12
** wrong
**  1465 2940
** answer: 0.8969, groundtruth_str: \frac{47}{1001}
** groundtruth_num is not None
** is_fraction:  0.8969
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8969 0.04695304695304695
** wrong
**  1465 2941
** answer: 3, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 2
** wrong
**  1465 2942
** answer: -\frac{3\pi}{2}, groundtruth_str: \frac{21}{2}\pi
** groundtruth_num is not None
** is_fraction:  -\frac{3\pi}{2}
** groundtruth_num is (int, float)
** compare_two_numbers float -4.71 32.98672286269283
** wrong
**  1465 2943
** answer: x^3+2x^2+x, groundtruth_str: x^3+2x^2+x
** compare on lower
** correct
**  1466 2943
** answer: 700, groundtruth_str: 700
** compare on lower
** correct
**  1467 2943
** answer: 12π, groundtruth_str: \pi
** groundtruth_num is not None
** is_fraction:  12π
** groundtruth_num is (int, float)
** compare_two_numbers float 37.68 3.141592653589793
** wrong
**  1467 2944
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  1468 2944
** answer: 60, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 15
** wrong
**  1468 2945
** answer: 72, groundtruth_str: 5120
** groundtruth_num is not None
** is_fraction:  72
** groundtruth_num is (int, float)
** compare_two_numbers int 72 5120
** wrong
**  1468 2946
** answer: 284, groundtruth_str: 284
** compare on lower
** correct
**  1469 2946
** answer: -1, groundtruth_str: -1
** compare on lower
** correct
**  1470 2946
** answer: -2, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  -2
** groundtruth_num is (int, float)
** compare_two_numbers int -2 -1
** wrong
**  1470 2947
** answer: 7,9,12,13, groundtruth_str: 7,9,12,13
** compare on lower
** correct
**  1471 2947
** answer: -4,4, groundtruth_str: -4,4
** compare on lower
** correct
**  1472 2947
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  1473 2947
** answer: 125, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  125
** groundtruth_num is (int, float)
** compare_two_numbers int 125 5
** wrong
**  1473 2948
** answer: 4, groundtruth_str: 27
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 27
** wrong
**  1473 2949
** answer: 78, groundtruth_str: 54
** groundtruth_num is not None
** is_fraction:  78
** groundtruth_num is (int, float)
** compare_two_numbers int 78 54
** wrong
**  1473 2950
** answer: 54, groundtruth_str: 35
** groundtruth_num is not None
** is_fraction:  54
** groundtruth_num is (int, float)
** compare_two_numbers int 54 35
** wrong
**  1473 2951
** answer: 180, groundtruth_str: 145
** groundtruth_num is not None
** is_fraction:  180
** groundtruth_num is (int, float)
** compare_two_numbers int 180 145
** wrong
**  1473 2952
** answer: 32, groundtruth_str: -256
** groundtruth_num is not None
** is_fraction:  32
** groundtruth_num is (int, float)
** compare_two_numbers int 32 -256
** wrong
**  1473 2953
** answer: 157, groundtruth_str: 313
** groundtruth_num is not None
** is_fraction:  157
** groundtruth_num is (int, float)
** compare_two_numbers int 157 313
** wrong
**  1473 2954
** answer: 7z^96(4z+1), groundtruth_str: 7z^{96}(4z+1)
** wrong
**  1473 2955
** answer: 2, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 6
** wrong
**  1473 2956
** answer: -2, groundtruth_str: -2x
** wrong
**  1473 2957
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  1474 2957
** answer: 4√2, groundtruth_str: 4+\sqrt{2}
** groundtruth_num is not None
** is_fraction:  4√2
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1474 2958
** answer: 2x+10, groundtruth_str: 4x-5y=-50
** wrong
**  1474 2959
** answer: 57, groundtruth_str: 46
** groundtruth_num is not None
** is_fraction:  57
** groundtruth_num is (int, float)
** compare_two_numbers int 57 46
** wrong
**  1474 2960
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1475 2960
** answer: 32, groundtruth_str: \frac{3840}{289}
** groundtruth_num is not None
** is_fraction:  32
** groundtruth_num is (int, float)
** compare_two_numbers float 32 13.28719723183391
** wrong
**  1475 2961
** answer: \begin{pmatrix}0\-12/13\end{pmatrix}, groundtruth_str: \begin{pmatrix}12/13\5/13\end{pmatrix}
** wrong
**  1475 2962
** answer: 0, groundtruth_str: (2,3)
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 23
** wrong
**  1475 2963
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  1476 2963
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  1477 2963
** answer: \frac{15}{46656}, groundtruth_str: \frac{5}{162}
** groundtruth_num is not None
** is_fraction:  \frac{15}{46656}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0003215020576131687 0.030864197530864196
** wrong
**  1477 2964
** answer: undefined, groundtruth_str: -3
** groundtruth_num is not None
** is_fraction:  undefined
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1477 2965
** answer: -1, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers int -1 6
** wrong
**  1477 2966
** answer: -2^n, groundtruth_str: -2n^2-n
** wrong
**  1477 2967
** answer: 2, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 8
** wrong
**  1477 2968
** answer: 105, groundtruth_str: 105
** compare on lower
** correct
**  1478 2968
** answer: 0, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 48
** wrong
**  1478 2969
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  1479 2969
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  1480 2969
** answer: 258, groundtruth_str: 81
** groundtruth_num is not None
** is_fraction:  258
** groundtruth_num is (int, float)
** compare_two_numbers int 258 81
** wrong
**  1480 2970
** answer: 16, groundtruth_str: 128
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 128
** wrong
**  1480 2971
** answer: 0, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 6
** wrong
**  1480 2972
** answer: 9, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 30
** wrong
**  1480 2973
** answer: 28, groundtruth_str: (45x+28)(x+2)
** wrong
**  1480 2974
** answer: Nosolution, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  Nosolution
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1480 2975
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  1481 2975
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  1482 2975
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1483 2975
** answer: \frac{1}{6}, groundtruth_str: \frac{1}{6}
** compare on lower
** correct
**  1484 2975
** answer: -2,6, groundtruth_str: 6,-2
** groundtruth_num is not None
** is_fraction:  -2,6
** groundtruth_num is (int, float)
** compare_two_numbers int -2 4
** wrong
**  1484 2976
** answer: 24, groundtruth_str: 960
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 960
** wrong
**  1484 2977
** answer: 2030, groundtruth_str: 4060
** groundtruth_num is not None
** is_fraction:  2030
** groundtruth_num is (int, float)
** compare_two_numbers int 2030 4060
** wrong
**  1484 2978
** answer: \frac{1}{3}, groundtruth_str: \frac{\sqrt{3}}{9}
** groundtruth_num is not None
** is_fraction:  \frac{1}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3333333333333333 0.19245008972987526
** wrong
**  1484 2979
** answer: \frac{4}{11}, groundtruth_str: \frac{4}{11}
** compare on lower
** correct
**  1485 2979
** answer: 120, groundtruth_str: 840
** groundtruth_num is not None
** is_fraction:  120
** groundtruth_num is (int, float)
** compare_two_numbers int 120 840
** wrong
**  1485 2980
** answer: 1, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 9
** wrong
**  1485 2981
** answer: \frac{5}{8}, groundtruth_str: \frac{5}{8}
** compare on lower
** correct
**  1486 2981
** answer: 4, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 8
** wrong
**  1486 2982
** answer: \frac{-(b-r-d)\pm\sqrt{(b-r-d)^2-36+12s+12e}}{6}, groundtruth_str: 3i,-3i
** wrong
**  1486 2983
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  1486 2984
** answer: 1.5, groundtruth_str: (1,\frac{9}{2})
** groundtruth_num is not None
** is_fraction:  1.5
** groundtruth_num is (int, float)
** compare_two_numbers int 1.5 1
** wrong
**  1486 2985
** answer: 30, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 50
** wrong
**  1486 2986
** answer: 149, groundtruth_str: 149
** compare on lower
** correct
**  1487 2986
** answer: 240, groundtruth_str: 480
** groundtruth_num is not None
** is_fraction:  240
** groundtruth_num is (int, float)
** compare_two_numbers int 240 480
** wrong
**  1487 2987
** answer: 20√2, groundtruth_str: 10\sqrt{2}
** groundtruth_num is not None
** is_fraction:  20√2
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1487 2988
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  1488 2988
** answer: 12,500, groundtruth_str: 12500
** groundtruth_num is not None
** is_fraction:  12,500
** groundtruth_num is (int, float)
** compare_two_numbers int 12500 12500
** correct
**  1489 2988
** answer: 3, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 4
** wrong
**  1489 2989
** answer: 1, groundtruth_str: \sqrt{5}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 2.23606797749979
** wrong
**  1489 2990
** answer: 7.07, groundtruth_str: 4.14
** groundtruth_num is not None
** is_fraction:  7.07
** groundtruth_num is (int, float)
** compare_two_numbers float 7.07 4.14
** wrong
**  1489 2991
** answer: 1087, groundtruth_str: 1147
** groundtruth_num is not None
** is_fraction:  1087
** groundtruth_num is (int, float)
** compare_two_numbers int 1087 1147
** wrong
**  1489 2992
** answer: 1, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 17
** wrong
**  1489 2993
** answer: 1, groundtruth_str: 1,2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 12
** wrong
**  1489 2994
** answer: 1, groundtruth_str: 1201
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 1201
** wrong
**  1489 2995
** answer: 4, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 2
** wrong
**  1489 2996
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1490 2996
** answer: 8, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 2
** wrong
**  1490 2997
** answer: -0.9995, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  -0.9995
** groundtruth_num is (int, float)
** compare_two_numbers int -0.9995 -1
** correct
**  1491 2997
** answer: 6, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 10
** wrong
**  1491 2998
** answer: 1346, groundtruth_str: 194
** groundtruth_num is not None
** is_fraction:  1346
** groundtruth_num is (int, float)
** compare_two_numbers int 1346 194
** wrong
**  1491 2999
** answer: 445, groundtruth_str: 445
** compare on lower
** correct
**  1492 2999
** answer: 25.33, groundtruth_str: 52
** groundtruth_num is not None
** is_fraction:  25.33
** groundtruth_num is (int, float)
** compare_two_numbers int 25.33 52
** wrong
**  1492 3000
** answer: 6, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 12
** wrong
**  1492 3001
** answer: -7,3, groundtruth_str: (-7,3)
** groundtruth_num is not None
** is_fraction:  -7,3
** groundtruth_num is (int, float)
** compare_two_numbers int -7 -73
** wrong
**  1492 3002
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  1493 3002
** answer: 39, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  39
** groundtruth_num is (int, float)
** compare_two_numbers int 39 13
** wrong
**  1493 3003
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  1494 3003
** answer: \frac{5}{2}, groundtruth_str: \frac{5}{4}
** groundtruth_num is not None
** is_fraction:  \frac{5}{2}
** groundtruth_num is (int, float)
** compare_two_numbers float 2.5 1.25
** wrong
**  1494 3004
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  1495 3004
** answer: 0.5, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.25
** wrong
**  1495 3005
** answer: 3t-5, groundtruth_str: 6t-5
** wrong
**  1495 3006
** answer: 1, groundtruth_str: (a+5)(b+2)
** wrong
**  1495 3007
** answer: 71, groundtruth_str: 23
** groundtruth_num is not None
** is_fraction:  71
** groundtruth_num is (int, float)
** compare_two_numbers int 71 23
** wrong
**  1495 3008
** answer: -2,-1,1, groundtruth_str: -8,1
** groundtruth_num is not None
** is_fraction:  -2,-1,1
** groundtruth_num is (int, float)
** compare_two_numbers int -2 -81
** wrong
**  1495 3009
** answer: 0, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 18
** wrong
**  1495 3010
** answer: 2.9363, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  2.9363
** groundtruth_num is (int, float)
** compare_two_numbers int 2.9363 30
** wrong
**  1495 3011
** answer: (B)Circle, groundtruth_str: \text{(C)}
** wrong
**  1495 3012
** answer: 51, groundtruth_str: 52
** groundtruth_num is not None
** is_fraction:  51
** groundtruth_num is (int, float)
** compare_two_numbers int 51 52
** wrong
**  1495 3013
** answer: 1, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 3
** wrong
**  1495 3014
** answer: 60, groundtruth_str: -59
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 -59
** wrong
**  1495 3015
** answer: 0, groundtruth_str: \frac{2x-7}{(x+1)(x-2)}
** wrong
**  1495 3016
** answer: 0.28, groundtruth_str: \frac{7}{25}
** groundtruth_num is not None
** is_fraction:  0.28
** groundtruth_num is (int, float)
** compare_two_numbers float 0.28 0.28
** correct
**  1496 3016
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  1497 3016
** answer: 45, groundtruth_str: -9
** groundtruth_num is not None
** is_fraction:  45
** groundtruth_num is (int, float)
** compare_two_numbers int 45 -9
** wrong
**  1497 3017
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  1498 3017
** answer: \frac{n^2}{9}, groundtruth_str: 9
** compare on lower in
** correct
**  1499 3017
** answer: 0, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 3
** wrong
**  1499 3018
** answer: 1, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 36
** wrong
**  1499 3019
** answer: 0, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 24
** wrong
**  1499 3020
** answer: 3, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 30
** wrong
**  1499 3021
** answer: -5, groundtruth_str: -30
** groundtruth_num is not None
** is_fraction:  -5
** groundtruth_num is (int, float)
** compare_two_numbers int -5 -30
** wrong
**  1499 3022
** answer: 7, groundtruth_str: 47
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 47
** wrong
**  1499 3023
** answer: 4.85, groundtruth_str: \frac{160}{33}
** groundtruth_num is not None
** is_fraction:  4.85
** groundtruth_num is (int, float)
** compare_two_numbers float 4.85 4.848484848484849
** wrong
**  1499 3024
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  1500 3024
** answer: 5.65685424949238, groundtruth_str: \sqrt{34}
** groundtruth_num is not None
** is_fraction:  5.65685424949238
** groundtruth_num is (int, float)
** compare_two_numbers float 5.65685424949238 5.830951894845301
** wrong
**  1500 3025
** answer: 16, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 18
** wrong
**  1500 3026
** answer: 0, groundtruth_str: \frac{16\pi}{3}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 16.755160819145566
** wrong
**  1500 3027
** answer: 1007, groundtruth_str: 1001
** groundtruth_num is not None
** is_fraction:  1007
** groundtruth_num is (int, float)
** compare_two_numbers int 1007 1001
** wrong
**  1500 3028
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1501 3028
** answer: 11.67, groundtruth_str: 11\frac{2}{3}
** groundtruth_num is not None
** is_fraction:  11.67
** groundtruth_num is (int, float)
** compare_two_numbers float 11.67 37.333333333333336
** wrong
**  1501 3029
** answer: 8, groundtruth_str: 16384
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 16384
** wrong
**  1501 3030
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  1502 3030
** answer: 0.25, groundtruth_str: \frac{73}{100}
** groundtruth_num is not None
** is_fraction:  0.25
** groundtruth_num is (int, float)
** compare_two_numbers float 0.25 0.73
** wrong
**  1502 3031
** answer: 2, groundtruth_str: 2x
** wrong
**  1502 3032
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1503 3032
** answer: -24, groundtruth_str: x^4+x^2-10x-24
** wrong
**  1503 3033
** answer: 65, groundtruth_str: 65
** compare on lower
** correct
**  1504 3033
** answer: 0, groundtruth_str: 144
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 144
** wrong
**  1504 3034
** answer: 38, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  38
** groundtruth_num is (int, float)
** compare_two_numbers int 38 20
** wrong
**  1504 3035
** answer: 3, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 10
** wrong
**  1504 3036
** answer: 0, groundtruth_str: \frac{2807}{27}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 103.96296296296296
** wrong
**  1504 3037
** answer: 0, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 2
** wrong
**  1504 3038
** answer: 27√3, groundtruth_str: 3\sqrt{3}
** groundtruth_num is not None
** is_fraction:  27√3
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1504 3039
** answer: 3, groundtruth_str: 5\sqrt{5}
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers float 3 11.180339887498949
** wrong
**  1504 3040
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  1504 3041
** answer: 36, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  36
** groundtruth_num is (int, float)
** compare_two_numbers int 36 18
** wrong
**  1504 3042
** answer: 1.63, groundtruth_str: 0.63
** groundtruth_num is not None
** is_fraction:  1.63
** groundtruth_num is (int, float)
** compare_two_numbers float 1.63 0.63
** wrong
**  1504 3043
** answer: 19, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  19
** groundtruth_num is (int, float)
** compare_two_numbers int 19 8
** wrong
**  1504 3044
** answer: 121, groundtruth_str: 121
** compare on lower
** correct
**  1505 3044
** answer: 109, groundtruth_str: -8
** groundtruth_num is not None
** is_fraction:  109
** groundtruth_num is (int, float)
** compare_two_numbers int 109 -8
** wrong
**  1505 3045
** answer: (11x+5)/(x-2), groundtruth_str: \frac{11x+5}{x-2}
** wrong
**  1505 3046
** answer: 12, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 14
** wrong
**  1505 3047
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1506 3047
** answer: 0, groundtruth_str: \frac{1}{2}x+2
** wrong
**  1506 3048
** answer: 0, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 5
** wrong
**  1506 3049
** answer: -2ap, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  -2ap
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1506 3050
** answer: 0.25, groundtruth_str: \frac{1}{4}
** groundtruth_num is not None
** is_fraction:  0.25
** groundtruth_num is (int, float)
** compare_two_numbers float 0.25 0.25
** correct
**  1507 3050
** answer: \frac{7}{4}, groundtruth_str: \frac{7}{4}
** compare on lower
** correct
**  1508 3050
** answer: 26, groundtruth_str: 11010_2
** groundtruth_num is not None
** is_fraction:  26
** groundtruth_num is (int, float)
** compare_two_numbers int 26 110102
** wrong
**  1508 3051
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1509 3051
** answer: 0.5833333333333333, groundtruth_str: \frac{11}{15}
** groundtruth_num is not None
** is_fraction:  0.5833333333333333
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5833333333333333 0.7333333333333333
** wrong
**  1509 3052
** answer: 3, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 12
** wrong
**  1509 3053
** answer: 1, groundtruth_str: (-\infty,4)
** wrong
**  1509 3054
** answer: \frac{4}{3}, groundtruth_str: \frac{4}{3}
** compare on lower
** correct
**  1510 3054
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  1511 3054
** answer: 106, groundtruth_str: 106
** compare on lower
** correct
**  1512 3054
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1513 3054
** answer: 13, groundtruth_str: 120
** groundtruth_num is not None
** is_fraction:  13
** groundtruth_num is (int, float)
** compare_two_numbers int 13 120
** wrong
**  1513 3055
** answer: 0, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 3
** wrong
**  1513 3056
** answer: 0.5, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers int 0.5 2
** wrong
**  1513 3057
** answer: 8, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 12
** wrong
**  1513 3058
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  1514 3058
** answer: 40, groundtruth_str: 180
** groundtruth_num is not None
** is_fraction:  40
** groundtruth_num is (int, float)
** compare_two_numbers int 40 180
** wrong
**  1514 3059
** answer: -\frac{4}{3}, groundtruth_str: -\frac{4}{3}
** compare on lower
** correct
**  1515 3059
** answer: 36, groundtruth_str: 34
** groundtruth_num is not None
** is_fraction:  36
** groundtruth_num is (int, float)
** compare_two_numbers int 36 34
** wrong
**  1515 3060
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  1516 3060
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1517 3060
** answer: -6, groundtruth_str: -8
** groundtruth_num is not None
** is_fraction:  -6
** groundtruth_num is (int, float)
** compare_two_numbers int -6 -8
** wrong
**  1517 3061
** answer: -2, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  -2
** groundtruth_num is (int, float)
** compare_two_numbers int -2 10
** wrong
**  1517 3062
** answer: 3, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 9
** wrong
**  1517 3063
** answer: 3, groundtruth_str: \frac{255}{64}
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers float 3 3.984375
** wrong
**  1517 3064
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1518 3064
** answer: 16, groundtruth_str: \frac{68}{3}
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers float 16 22.666666666666668
** wrong
**  1518 3065
** answer: -1, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers int -1 0
** wrong
**  1518 3066
** answer: 0.7853981633974483, groundtruth_str: -\frac{\pi}{4}
** groundtruth_num is not None
** is_fraction:  0.7853981633974483
** groundtruth_num is (int, float)
** compare_two_numbers float 0.7853981633974483 -0.7853981633974483
** wrong
**  1518 3067
** answer: 65%, groundtruth_str: 65
** groundtruth_num is not None
** is_fraction:  65%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.65 65
** wrong
**  1518 3068
** answer: 147, groundtruth_str: 147
** compare on lower
** correct
**  1519 3068
** answer: 1, groundtruth_str: -0.25
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 -0.25
** wrong
**  1519 3069
** answer: 625, groundtruth_str: 625
** compare on lower
** correct
**  1520 3069
** answer: 0, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 1
** wrong
**  1520 3070
** answer: 45, groundtruth_str: 90
** groundtruth_num is not None
** is_fraction:  45
** groundtruth_num is (int, float)
** compare_two_numbers int 45 90
** wrong
**  1520 3071
** answer: (4,5), groundtruth_str: (4,5)
** compare on lower
** correct
**  1521 3071
** answer: \frac{31}{4}, groundtruth_str: 3\frac{3}{8}
** groundtruth_num is not None
** is_fraction:  \frac{31}{4}
** groundtruth_num is (int, float)
** compare_two_numbers float 7.75 4.125
** wrong
**  1521 3072
** answer: 2x(15x^2-4x+10), groundtruth_str: 2x(15x^2-4x+10)
** compare on lower
** correct
**  1522 3072
** answer: -18, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  -18
** groundtruth_num is (int, float)
** compare_two_numbers int -18 17
** wrong
**  1522 3073
** answer: 0.02, groundtruth_str: \frac{1}{50}
** groundtruth_num is not None
** is_fraction:  0.02
** groundtruth_num is (int, float)
** compare_two_numbers float 0.02 0.02
** correct
**  1523 3073
** answer: √65, groundtruth_str: \sqrt{65}
** groundtruth_num is not None
** is_fraction:  √65
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1523 3074
** answer: 6435, groundtruth_str: 6435
** compare on lower
** correct
**  1524 3074
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  1525 3074
** answer: 13, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  13
** groundtruth_num is (int, float)
** compare_two_numbers int 13 5
** wrong
**  1525 3075
** answer: 3, groundtruth_str: \sqrt{13}
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers float 3 3.605551275463989
** wrong
**  1525 3076
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  1526 3076
** answer: 3, groundtruth_str: 49
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 49
** wrong
**  1526 3077
** answer: 0, groundtruth_str: -8x^4+7x^2-7x+8
** wrong
**  1526 3078
** answer: 225, groundtruth_str: 225
** compare on lower
** correct
**  1527 3078
** answer: 50, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  50
** groundtruth_num is (int, float)
** compare_two_numbers int 50 10
** wrong
**  1527 3079
** answer: 27, groundtruth_str: 102
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers int 27 102
** wrong
**  1527 3080
** answer: 0, groundtruth_str: -\frac{9}{4}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 -2.25
** wrong
**  1527 3081
** answer: 0, groundtruth_str: 3\sqrt{2}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 4.242640687119285
** wrong
**  1527 3082
** answer: 16.75, groundtruth_str: 16.75
** compare on lower
** correct
**  1528 3082
** answer: 4, groundtruth_str: 1\frac{4}{5}
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers float 4 2.8
** wrong
**  1528 3083
** answer: 240, groundtruth_str: 240
** compare on lower
** correct
**  1529 3083
** answer: 0.0032, groundtruth_str: \frac{1}{350}
** groundtruth_num is not None
** is_fraction:  0.0032
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0032 0.002857142857142857
** wrong
**  1529 3084
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  1530 3084
** answer: 5.7853981633974483, groundtruth_str: 8\pi
** groundtruth_num is not None
** is_fraction:  5.7853981633974483
** groundtruth_num is (int, float)
** compare_two_numbers float 5.785398163397448 25.132741228718345
** wrong
**  1530 3085
** answer: \frac{1}{3}, groundtruth_str: \frac{7}{27}
** groundtruth_num is not None
** is_fraction:  \frac{1}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3333333333333333 0.25925925925925924
** wrong
**  1530 3086
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1531 3086
** answer: -0.5, groundtruth_str: -\frac{1}{2}
** groundtruth_num is not None
** is_fraction:  -0.5
** groundtruth_num is (int, float)
** compare_two_numbers float -0.5 -0.5
** correct
**  1532 3086
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  1533 3086
** answer: 32-8π, groundtruth_str: 32-8\pi
** groundtruth_num is not None
** is_fraction:  32-8π
** groundtruth_num is (int, float)
** compare_two_numbers float 6.879999999999999 6.867258771281654
** wrong
**  1533 3087
** answer: 11.0, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  11.0
** groundtruth_num is (int, float)
** compare_two_numbers int 11 11
** correct
**  1534 3087
** answer: 2, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 8
** wrong
**  1534 3088
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  1535 3088
** answer: 79.2, groundtruth_str: 72
** groundtruth_num is not None
** is_fraction:  79.2
** groundtruth_num is (int, float)
** compare_two_numbers int 79.2 72
** wrong
**  1535 3089
** answer: 500,001, groundtruth_str: 996506
** groundtruth_num is not None
** is_fraction:  500,001
** groundtruth_num is (int, float)
** compare_two_numbers int 500001 996506
** wrong
**  1535 3090
** answer: 104, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  104
** groundtruth_num is (int, float)
** compare_two_numbers int 104 40
** wrong
**  1535 3091
** answer: 36, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  36
** groundtruth_num is (int, float)
** compare_two_numbers int 36 9
** wrong
**  1535 3092
** answer: 2√6, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  2√6
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1535 3093
** answer: -4, groundtruth_str: -4
** compare on lower
** correct
**  1536 3093
** answer: 330, groundtruth_str: 330
** compare on lower
** correct
**  1537 3093
** answer: 30, groundtruth_str: 100
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 100
** wrong
**  1537 3094
** answer: 0.707106781, groundtruth_str: \frac{2}{5}
** groundtruth_num is not None
** is_fraction:  0.707106781
** groundtruth_num is (int, float)
** compare_two_numbers float 0.707106781 0.4
** wrong
**  1537 3095
** answer: \frac{3}{1}, groundtruth_str: \frac{23}{7}
** groundtruth_num is not None
** is_fraction:  \frac{3}{1}
** groundtruth_num is (int, float)
** compare_two_numbers float 3 3.2857142857142856
** wrong
**  1537 3096
** answer: 0, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 24
** wrong
**  1537 3097
** answer: 0.75, groundtruth_str: \frac{3}{4}
** groundtruth_num is not None
** is_fraction:  0.75
** groundtruth_num is (int, float)
** compare_two_numbers float 0.75 0.75
** correct
**  1538 3097
** answer: 2304, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  2304
** groundtruth_num is (int, float)
** compare_two_numbers int 2304 45
** wrong
**  1538 3098
** answer: -13, groundtruth_str: -13
** compare on lower
** correct
**  1539 3098
** answer: 44, groundtruth_str: 44
** compare on lower
** correct
**  1540 3098
** answer: 8, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 12
** wrong
**  1540 3099
** answer: 11.312, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  11.312
** groundtruth_num is (int, float)
** compare_two_numbers int 11.312 24
** wrong
**  1540 3100
** answer: 0, groundtruth_str: 500
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 500
** wrong
**  1540 3101
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1541 3101
** answer: 17, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  17
** groundtruth_num is (int, float)
** compare_two_numbers int 17 5
** wrong
**  1541 3102
** answer: 0, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 4
** wrong
**  1541 3103
** answer: 0.9167, groundtruth_str: \frac{5}{7}
** groundtruth_num is not None
** is_fraction:  0.9167
** groundtruth_num is (int, float)
** compare_two_numbers float 0.9167 0.7142857142857143
** wrong
**  1541 3104
** answer: 0, groundtruth_str: \frac{24}{5}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 4.8
** wrong
**  1541 3105
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  1542 3105
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  1543 3105
** answer: 1089, groundtruth_str: 202
** groundtruth_num is not None
** is_fraction:  1089
** groundtruth_num is (int, float)
** compare_two_numbers int 1089 202
** wrong
**  1543 3106
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1544 3106
** answer: 93, groundtruth_str: 111
** groundtruth_num is not None
** is_fraction:  93
** groundtruth_num is (int, float)
** compare_two_numbers int 93 111
** wrong
**  1544 3107
** answer: 0.5, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.5
** correct
**  1545 3107
** answer: \begin{pmatrix}\frac{16}{49}\\frac{48}{49}\\frac{24}{49}\end{pmatrix}, groundtruth_str: \begin{pmatrix}16/49\48/49\24/49\end{pmatrix}
** wrong
**  1545 3108
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1546 3108
** answer: 82, groundtruth_str: 156
** groundtruth_num is not None
** is_fraction:  82
** groundtruth_num is (int, float)
** compare_two_numbers int 82 156
** wrong
**  1546 3109
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  1547 3109
** answer: 3, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 1
** wrong
**  1547 3110
** answer: 45, groundtruth_str: 34
** groundtruth_num is not None
** is_fraction:  45
** groundtruth_num is (int, float)
** compare_two_numbers int 45 34
** wrong
**  1547 3111
** answer: 121, groundtruth_str: \frac{121}{25}
** groundtruth_num is not None
** is_fraction:  121
** groundtruth_num is (int, float)
** compare_two_numbers float 121 4.84
** wrong
**  1547 3112
** answer: 3, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 30
** wrong
**  1547 3113
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  1548 3113
** answer: 28, groundtruth_str: 506_7
** groundtruth_num is not None
** is_fraction:  28
** groundtruth_num is (int, float)
** compare_two_numbers int 28 5067
** wrong
**  1548 3114
** answer: -3.2, groundtruth_str: (3,2)
** groundtruth_num is not None
** is_fraction:  -3.2
** groundtruth_num is (int, float)
** compare_two_numbers int -3.2 32
** wrong
**  1548 3115
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  1549 3115
** answer: 1, groundtruth_str: \frac{\sqrt{3}}{3}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.5773502691896257
** wrong
**  1549 3116
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  1550 3116
** answer: 3, groundtruth_str: \frac{7}{8}
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers float 3 0.875
** wrong
**  1550 3117
** answer: B, groundtruth_str: \text{A}
** wrong
**  1550 3118
** answer: 0.72, groundtruth_str: \frac{11}{25}
** groundtruth_num is not None
** is_fraction:  0.72
** groundtruth_num is (int, float)
** compare_two_numbers float 0.72 0.44
** wrong
**  1550 3119
** answer: 1968, groundtruth_str: 152A_{11}
** wrong
**  1550 3120
** answer: 2880, groundtruth_str: 2880
** compare on lower
** correct
**  1551 3120
** answer: 275, groundtruth_str: 231
** groundtruth_num is not None
** is_fraction:  275
** groundtruth_num is (int, float)
** compare_two_numbers int 275 231
** wrong
**  1551 3121
** answer: [0,∞), groundtruth_str: [0,\infty)
** wrong
**  1551 3122
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  1552 3122
** answer: 0.5, groundtruth_str: \frac{5}{9}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.5555555555555556
** wrong
**  1552 3123
** answer: 111, groundtruth_str: 1030
** groundtruth_num is not None
** is_fraction:  111
** groundtruth_num is (int, float)
** compare_two_numbers int 111 1030
** wrong
**  1552 3124
** answer: 3136, groundtruth_str: 32736
** groundtruth_num is not None
** is_fraction:  3136
** groundtruth_num is (int, float)
** compare_two_numbers int 3136 32736
** wrong
**  1552 3125
** answer: 33, groundtruth_str: 33
** compare on lower
** correct
**  1553 3125
** answer: 0, groundtruth_str: 828
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 828
** wrong
**  1553 3126
** answer: 0.33, groundtruth_str: \frac{33}{100}
** groundtruth_num is not None
** is_fraction:  0.33
** groundtruth_num is (int, float)
** compare_two_numbers float 0.33 0.33
** correct
**  1554 3126
** answer: 3426, groundtruth_str: 129
** groundtruth_num is not None
** is_fraction:  3426
** groundtruth_num is (int, float)
** compare_two_numbers int 3426 129
** wrong
**  1554 3127
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1555 3127
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  1556 3127
** answer: 0.8, groundtruth_str: \frac{4}{5}
** groundtruth_num is not None
** is_fraction:  0.8
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8 0.8
** correct
**  1557 3127
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  1558 3127
** answer: (\frac{2}{15},\frac{1}{3}), groundtruth_str: (\frac{7}{45},\frac{4}{45})
** groundtruth_num is not None
** is_fraction:  (\frac{2}{15},\frac{1}{3})
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1558 3128
** answer: \frac{1}{120}, groundtruth_str: \frac{1}{6}
** groundtruth_num is not None
** is_fraction:  \frac{1}{120}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.008333333333333333 0.16666666666666666
** wrong
**  1558 3129
** answer: 41, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  41
** groundtruth_num is (int, float)
** compare_two_numbers int 41 50
** wrong
**  1558 3130
** answer: (1,1), groundtruth_str: (\frac{1}{\sqrt{2}},\frac{1}{\sqrt{2}})
** wrong
**  1558 3131
** answer: 16, groundtruth_str: \frac{16}{65}
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers float 16 0.24615384615384617
** wrong
**  1558 3132
** answer: 2041, groundtruth_str: 4210_{5}
** groundtruth_num is not None
** is_fraction:  2041
** groundtruth_num is (int, float)
** compare_two_numbers int 2041 4210
** wrong
**  1558 3133
** answer: 0, groundtruth_str: \begin{pmatrix}0&1&0\0&0&1\1&1&1\end{pmatrix}
** wrong
**  1558 3134
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  1559 3134
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1560 3134
** answer: 24, groundtruth_str: 600
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 600
** wrong
**  1560 3135
** answer: 9,000,000, groundtruth_str: 900,000,000
** groundtruth_num is not None
** is_fraction:  9,000,000
** groundtruth_num is (int, float)
** compare_two_numbers int 9000000 900000000
** wrong
**  1560 3136
** answer: \frac{\sqrt{6}}{3}, groundtruth_str: \frac{\sqrt{6}}3
** groundtruth_num is not None
** is_fraction:  \frac{\sqrt{6}}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8164965809277259 0.816496580927726
** correct
**  1561 3136
** answer: 24, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 12
** wrong
**  1561 3137
** answer: 2500, groundtruth_str: 2500
** compare on lower
** correct
**  1562 3137
** answer: 2, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 9
** wrong
**  1562 3138
** answer: 342, groundtruth_str: 443_5
** groundtruth_num is not None
** is_fraction:  342
** groundtruth_num is (int, float)
** compare_two_numbers int 342 4435
** wrong
**  1562 3139
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  1563 3139
** answer: 5, groundtruth_str: \frac{99}{20}
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers float 5 4.95
** wrong
**  1563 3140
** answer: 360, groundtruth_str: 360
** compare on lower
** correct
**  1564 3140
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1565 3140
** answer: 2, groundtruth_str: (\frac{15}{4},\frac{1}{2},0)
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 3.75
** wrong
**  1565 3141
** answer: -14√π, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  -14√π
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1565 3142
** answer: 3.5, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  3.5
** groundtruth_num is (int, float)
** compare_two_numbers int 3.5 3
** wrong
**  1565 3143
** answer: -76, groundtruth_str: -120
** groundtruth_num is not None
** is_fraction:  -76
** groundtruth_num is (int, float)
** compare_two_numbers int -76 -120
** wrong
**  1565 3144
** answer: n, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  n
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1565 3145
** answer: \frac{18}{33}, groundtruth_str: \frac{6}{11}
** groundtruth_num is not None
** is_fraction:  \frac{18}{33}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5454545454545454 0.5454545454545454
** correct
**  1566 3145
** answer: 2, groundtruth_str: \frac{\sqrt{20201}-1}{4}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 35.28255549492606
** wrong
**  1566 3146
** answer: 33.3, groundtruth_str: 7.2
** groundtruth_num is not None
** is_fraction:  33.3
** groundtruth_num is (int, float)
** compare_two_numbers float 33.3 7.2
** wrong
**  1566 3147
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  1567 3147
** answer: 432, groundtruth_str: 384
** groundtruth_num is not None
** is_fraction:  432
** groundtruth_num is (int, float)
** compare_two_numbers int 432 384
** wrong
**  1567 3148
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  1568 3148
** answer: 0.4444444444444444, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  0.4444444444444444
** groundtruth_num is (int, float)
** compare_two_numbers int 0.4444444444444444 1
** wrong
**  1568 3149
** answer: 165, groundtruth_str: 192
** groundtruth_num is not None
** is_fraction:  165
** groundtruth_num is (int, float)
** compare_two_numbers int 165 192
** wrong
**  1568 3150
** answer: 5, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 60
** wrong
**  1568 3151
** answer: 34, groundtruth_str: 4x+5
** wrong
**  1568 3152
** answer: 8, groundtruth_str: 22
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 22
** wrong
**  1568 3153
** answer: 2, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 8
** wrong
**  1568 3154
** answer: 105, groundtruth_str: 105
** compare on lower
** correct
**  1569 3154
** answer: 36, groundtruth_str: 288\pi
** groundtruth_num is not None
** is_fraction:  36
** groundtruth_num is (int, float)
** compare_two_numbers float 36 904.7786842338604
** wrong
**  1569 3155
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  1570 3155
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1571 3155
** answer: 0,1, groundtruth_str: \frac{3}{4},-\frac{3}{4}
** groundtruth_num is not None
** is_fraction:  0,1
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.75
** wrong
**  1571 3156
** answer: 90, groundtruth_str: 190
** groundtruth_num is not None
** is_fraction:  90
** groundtruth_num is (int, float)
** compare_two_numbers int 90 190
** wrong
**  1571 3157
** answer: 194, groundtruth_str: 236
** groundtruth_num is not None
** is_fraction:  194
** groundtruth_num is (int, float)
** compare_two_numbers int 194 236
** wrong
**  1571 3158
** answer: (0,0), groundtruth_str: (-2,1)
** groundtruth_num is not None
** is_fraction:  (0,0)
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -21
** wrong
**  1571 3159
** answer: -10, groundtruth_str: -10
** compare on lower
** correct
**  1572 3159
** answer: 12, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 48
** wrong
**  1572 3160
** answer: -7, groundtruth_str: -7
** compare on lower
** correct
**  1573 3160
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  1574 3160
** answer: -\frac{33}{65}, groundtruth_str: -\frac{33}{65}
** compare on lower
** correct
**  1575 3160
** answer: 30, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 48
** wrong
**  1575 3161
** answer: 81, groundtruth_str: 144
** groundtruth_num is not None
** is_fraction:  81
** groundtruth_num is (int, float)
** compare_two_numbers int 81 144
** wrong
**  1575 3162
** answer: 14, groundtruth_str: \frac{29}{15}
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers float 14 1.9333333333333333
** wrong
**  1575 3163
** answer: 95, groundtruth_str: 190
** groundtruth_num is not None
** is_fraction:  95
** groundtruth_num is (int, float)
** compare_two_numbers int 95 190
** wrong
**  1575 3164
** answer: odd, groundtruth_str: \text{even}
** wrong
**  1575 3165
** answer: 1, groundtruth_str: 2.2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 2.2
** wrong
**  1575 3166
** answer: 1, groundtruth_str: (1,1)
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 11
** wrong
**  1575 3167
** answer: None, groundtruth_str: 10879
** groundtruth_num is not None
** is_fraction:  None
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1575 3168
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  1576 3168
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  1577 3168
** answer: 9240, groundtruth_str: 9,240
** groundtruth_num is not None
** is_fraction:  9240
** groundtruth_num is (int, float)
** compare_two_numbers int 9240 9240
** correct
**  1578 3168
** answer: -13, groundtruth_str: -13
** compare on lower
** correct
**  1579 3168
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  1580 3168
** answer: 0,1, groundtruth_str: 0,1
** compare on lower
** correct
**  1581 3168
** answer: \frac{49}{4}, groundtruth_str: 22
** groundtruth_num is not None
** is_fraction:  \frac{49}{4}
** groundtruth_num is (int, float)
** compare_two_numbers int 12.25 22
** wrong
**  1581 3169
** answer: 60, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 20
** wrong
**  1581 3170
** answer: 2, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 3
** wrong
**  1581 3171
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1582 3171
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1583 3171
** answer: 550, groundtruth_str: 550
** compare on lower
** correct
**  1584 3171
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  1585 3171
** answer: 2520, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  2520
** groundtruth_num is (int, float)
** compare_two_numbers int 2520 3
** wrong
**  1585 3172
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  1586 3172
** answer: 0.074, groundtruth_str: \frac{2}{27}
** groundtruth_num is not None
** is_fraction:  0.074
** groundtruth_num is (int, float)
** compare_two_numbers float 0.074 0.07407407407407407
** wrong
**  1586 3173
** answer: 7, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 8
** wrong
**  1586 3174
** answer: 1, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 6
** wrong
**  1586 3175
** answer: 48, groundtruth_str: 96\sqrt{3}
** groundtruth_num is not None
** is_fraction:  48
** groundtruth_num is (int, float)
** compare_two_numbers float 48 166.27687752661222
** wrong
**  1586 3176
** answer: 17, groundtruth_str: 53
** groundtruth_num is not None
** is_fraction:  17
** groundtruth_num is (int, float)
** compare_two_numbers int 17 53
** wrong
**  1586 3177
** answer: 9x^7/4, groundtruth_str: 18x^8
** wrong
**  1586 3178
** answer: 2, groundtruth_str: 22
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 22
** wrong
**  1586 3179
** answer: 6, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 10
** wrong
**  1586 3180
** answer: odd, groundtruth_str: \text{odd}
** compare on lower
** correct
**  1587 3180
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  1588 3180
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1589 3180
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  1590 3180
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  1591 3180
** answer: 13,800, groundtruth_str: 15,625
** groundtruth_num is not None
** is_fraction:  13,800
** groundtruth_num is (int, float)
** compare_two_numbers int 13800 15625
** wrong
**  1591 3181
** answer: \frac{121}{64}, groundtruth_str: \frac{64}{121}
** groundtruth_num is not None
** is_fraction:  \frac{121}{64}
** groundtruth_num is (int, float)
** compare_two_numbers float 1.890625 0.5289256198347108
** wrong
**  1591 3182
** answer: 4, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 5
** wrong
**  1591 3183
** answer: 0.0, groundtruth_str: -13.5
** groundtruth_num is not None
** is_fraction:  0.0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 -13.5
** wrong
**  1591 3184
** answer: 1, groundtruth_str: 2007
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2007
** wrong
**  1591 3185
** answer: (-∞,102), groundtruth_str: (2,12)\cup(12,102)
** wrong
**  1591 3186
** answer: 52, groundtruth_str: 52
** compare on lower
** correct
**  1592 3186
** answer: 1000, groundtruth_str: 512
** groundtruth_num is not None
** is_fraction:  1000
** groundtruth_num is (int, float)
** compare_two_numbers int 1000 512
** wrong
**  1592 3187
** answer: 0, groundtruth_str: 108
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 108
** wrong
**  1592 3188
** answer: -\frac{8}{3},-\frac{7}{3},-\frac{1}{3}, groundtruth_str: (-\frac{5}{3},\frac{2}{3},\frac{19}{3})
** groundtruth_num is not None
** is_fraction:  -\frac{8}{3},-\frac{7}{3},-\frac{1}{3}
** groundtruth_num is (int, float)
** compare_two_numbers float -2.6666666666666665 -1.6666666666666667
** wrong
**  1592 3189
** answer: 187.5, groundtruth_str: 187.5
** compare on lower
** correct
**  1593 3189
** answer: π, groundtruth_str: 3\pi-\frac{\sqrt{3}}{2}
** groundtruth_num is not None
** is_fraction:  π
** groundtruth_num is (int, float)
** compare_two_numbers float 3.14 8.558752556984942
** wrong
**  1593 3190
** answer: 0.8, groundtruth_str: \frac{4}{5}
** groundtruth_num is not None
** is_fraction:  0.8
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8 0.8
** correct
**  1594 3190
** answer: 1, groundtruth_str: \frac{1}{12}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.08333333333333333
** wrong
**  1594 3191
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  1595 3191
** answer: 4, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 5
** wrong
**  1595 3192
** answer: 57.0, groundtruth_str: 87
** groundtruth_num is not None
** is_fraction:  57.0
** groundtruth_num is (int, float)
** compare_two_numbers int 57 87
** wrong
**  1595 3193
** answer: 10, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 6
** wrong
**  1595 3194
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1596 3194
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  1597 3194
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1598 3194
** answer: 0, groundtruth_str: 2010
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 2010
** wrong
**  1598 3195
** answer: 1024, groundtruth_str: 1024
** compare on lower
** correct
**  1599 3195
** answer: Sunday, groundtruth_str: \text{Friday}
** wrong
**  1599 3196
** answer: 4√3, groundtruth_str: 8\sqrt{3}
** groundtruth_num is not None
** is_fraction:  4√3
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1599 3197
** answer: (7+x,12+y), groundtruth_str: (-5,-4)
** groundtruth_num is not None
** is_fraction:  (7+x,12+y)
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1599 3198
** answer: 7, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 13
** wrong
**  1599 3199
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1600 3199
** answer: 19, groundtruth_str: 19
** compare on lower
** correct
**  1601 3199
** answer: 21, groundtruth_str: 28
** groundtruth_num is not None
** is_fraction:  21
** groundtruth_num is (int, float)
** compare_two_numbers int 21 28
** wrong
**  1601 3200
** answer: -11, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  -11
** groundtruth_num is (int, float)
** compare_two_numbers int -11 11
** wrong
**  1601 3201
** answer: 1.25, groundtruth_str: 1.25
** compare on lower
** correct
**  1602 3201
** answer: -1/2x^2+2x-3, groundtruth_str: -\frac{1}{2}x^2+4x-6
** wrong
**  1602 3202
** answer: 720, groundtruth_str: 480
** groundtruth_num is not None
** is_fraction:  720
** groundtruth_num is (int, float)
** compare_two_numbers int 720 480
** wrong
**  1602 3203
** answer: 0, groundtruth_str: 11x+6y+5z+86=0
** wrong
**  1602 3204
** answer: 3, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 12
** wrong
**  1602 3205
** answer: 15+2*15*sqrt(15)-sqrt(d)+d, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  15+2*15*sqrt(15)-sqrt(d)+d
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1602 3206
** answer: 3360, groundtruth_str: 672
** groundtruth_num is not None
** is_fraction:  3360
** groundtruth_num is (int, float)
** compare_two_numbers int 3360 672
** wrong
**  1602 3207
** answer: 20, groundtruth_str: 23
** groundtruth_num is not None
** is_fraction:  20
** groundtruth_num is (int, float)
** compare_two_numbers int 20 23
** wrong
**  1602 3208
** answer: \frac{2}{5}, groundtruth_str: (\frac{2}{5},\frac{1}{2})
** compare on lower in
** correct
**  1603 3208
** answer: 100.00, groundtruth_str: 86
** groundtruth_num is not None
** is_fraction:  100.00
** groundtruth_num is (int, float)
** compare_two_numbers int 100 86
** wrong
**  1603 3209
** answer: 33, groundtruth_str: 33
** compare on lower
** correct
**  1604 3209
** answer: 380, groundtruth_str: 380
** compare on lower
** correct
**  1605 3209
** answer: 0.71, groundtruth_str: 0.43
** groundtruth_num is not None
** is_fraction:  0.71
** groundtruth_num is (int, float)
** compare_two_numbers float 0.71 0.43
** wrong
**  1605 3210
** answer: \sqrt{3}, groundtruth_str: \sqrt{3}
** compare on lower
** correct
**  1606 3210
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  1607 3210
** answer: 47, groundtruth_str: 78
** groundtruth_num is not None
** is_fraction:  47
** groundtruth_num is (int, float)
** compare_two_numbers int 47 78
** wrong
**  1607 3211
** answer: 354, groundtruth_str: 1112112_3
** groundtruth_num is not None
** is_fraction:  354
** groundtruth_num is (int, float)
** compare_two_numbers int 354 11121123
** wrong
**  1607 3212
** answer: 12.96, groundtruth_str: 37.72
** groundtruth_num is not None
** is_fraction:  12.96
** groundtruth_num is (int, float)
** compare_two_numbers float 12.96 37.72
** wrong
**  1607 3213
** answer: 2, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 7
** wrong
**  1607 3214
** answer: 12, groundtruth_str: 1440
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 1440
** wrong
**  1607 3215
** answer: 0, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 3
** wrong
**  1607 3216
** answer: 180, groundtruth_str: 180
** compare on lower
** correct
**  1608 3216
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1609 3216
** answer: 12, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 7
** wrong
**  1609 3217
** answer: 7, groundtruth_str: \sqrt{7}
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers float 7 2.6457513110645907
** wrong
**  1609 3218
** answer: 13.5, groundtruth_str: 47
** groundtruth_num is not None
** is_fraction:  13.5
** groundtruth_num is (int, float)
** compare_two_numbers int 13.5 47
** wrong
**  1609 3219
** answer: 60, groundtruth_str: 2220
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 2220
** wrong
**  1609 3220
** answer: 7.22, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  7.22
** groundtruth_num is (int, float)
** compare_two_numbers int 7.22 5
** wrong
**  1609 3221
** answer: -6, groundtruth_str: -6
** compare on lower
** correct
**  1610 3221
** answer: [-3,2], groundtruth_str: [-3,2]
** compare on lower
** correct
**  1611 3221
** answer: 2, groundtruth_str: 3+\sqrt{6}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 5.449489742783178
** wrong
**  1611 3222
** answer: (3,1/3), groundtruth_str: (6,-\frac{3}{8})
** groundtruth_num is not None
** is_fraction:  (3,1/3)
** groundtruth_num is (int, float)
** compare_two_numbers int 3 6
** wrong
**  1611 3223
** answer: e, groundtruth_str: \frac{1}{3600}
** groundtruth_num is not None
** is_fraction:  e
** groundtruth_num is (int, float)
** compare_two_numbers float 2.718 0.0002777777777777778
** wrong
**  1611 3224
** answer: 0.5, groundtruth_str: \frac{1}{2}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.5
** correct
**  1612 3224
** answer: 589, groundtruth_str: 44
** groundtruth_num is not None
** is_fraction:  589
** groundtruth_num is (int, float)
** compare_two_numbers int 589 44
** wrong
**  1612 3225
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  1613 3225
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1614 3225
** answer: 7.280109895009823, groundtruth_str: \sqrt{53}
** groundtruth_num is not None
** is_fraction:  7.280109895009823
** groundtruth_num is (int, float)
** compare_two_numbers float 7.280109895009823 7.280109889280518
** correct
**  1615 3225
** answer: 14π, groundtruth_str: 14\pi
** groundtruth_num is not None
** is_fraction:  14π
** groundtruth_num is (int, float)
** compare_two_numbers float 43.96 43.982297150257104
** wrong
**  1615 3226
** answer: -1, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  -1
** groundtruth_num is (int, float)
** compare_two_numbers int -1 11
** wrong
**  1615 3227
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  1616 3227
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1617 3227
** answer: 19, groundtruth_str: 29
** groundtruth_num is not None
** is_fraction:  19
** groundtruth_num is (int, float)
** compare_two_numbers int 19 29
** wrong
**  1617 3228
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  1618 3228
** answer: 81, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  81
** groundtruth_num is (int, float)
** compare_two_numbers int 81 17
** wrong
**  1618 3229
** answer: 40, groundtruth_str: 52
** groundtruth_num is not None
** is_fraction:  40
** groundtruth_num is (int, float)
** compare_two_numbers int 40 52
** wrong
**  1618 3230
** answer: 18, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 30
** wrong
**  1618 3231
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  1619 3231
** answer: 29, groundtruth_str: 29
** compare on lower
** correct
**  1620 3231
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  1620 3232
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1621 3232
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  1622 3232
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1623 3232
** answer: 1, groundtruth_str: (-\infty,-2]\cup[2,\infty)
** wrong
**  1623 3233
** answer: -4.0002, groundtruth_str: -\frac{11}{9}
** groundtruth_num is not None
** is_fraction:  -4.0002
** groundtruth_num is (int, float)
** compare_two_numbers float -4.0002 -1.2222222222222223
** wrong
**  1623 3234
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  1624 3234
** answer: -5,-4,1, groundtruth_str: -4
** groundtruth_num is not None
** is_fraction:  -5,-4,1
** groundtruth_num is (int, float)
** compare_two_numbers int -5 -4
** wrong
**  1624 3235
** answer: 4.33, groundtruth_str: \frac{8}{3}
** groundtruth_num is not None
** is_fraction:  4.33
** groundtruth_num is (int, float)
** compare_two_numbers float 4.33 2.6666666666666665
** wrong
**  1624 3236
** answer: 252.80, groundtruth_str: 200
** groundtruth_num is not None
** is_fraction:  252.80
** groundtruth_num is (int, float)
** compare_two_numbers int 252.8 200
** wrong
**  1624 3237
** answer: 12, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 9
** wrong
**  1624 3238
** answer: 111, groundtruth_str: 222
** groundtruth_num is not None
** is_fraction:  111
** groundtruth_num is (int, float)
** compare_two_numbers int 111 222
** wrong
**  1624 3239
** answer: 1, groundtruth_str: p-q
** wrong
**  1624 3240
** answer: 0, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 3
** wrong
**  1624 3241
** answer: [0,8/3], groundtruth_str: (\frac{3}{5},\frac{8}{3}]
** wrong
**  1624 3242
** answer: \begin{pmatrix}10\-7\6\end{pmatrix}, groundtruth_str: \begin{pmatrix}5/3\5/3\4/3\end{pmatrix}
** wrong
**  1624 3243
** answer: [-4,6], groundtruth_str: [6,\infty)
** wrong
**  1624 3244
** answer: 6.5, groundtruth_str: 82
** groundtruth_num is not None
** is_fraction:  6.5
** groundtruth_num is (int, float)
** compare_two_numbers int 6.5 82
** wrong
**  1624 3245
** answer: 0, groundtruth_str: \frac{10}{3}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 3.3333333333333335
** wrong
**  1624 3246
** answer: 29,41,50, groundtruth_str: 27,93
** groundtruth_num is not None
** is_fraction:  29,41,50
** groundtruth_num is (int, float)
** compare_two_numbers int 29 2793
** wrong
**  1624 3247
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  1625 3247
** answer: 0.5, groundtruth_str: \frac{1+\sqrt{2}}{2}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 1.2071067811865475
** wrong
**  1625 3248
** answer: -6x^2+12x+12, groundtruth_str: -3(x+2)(x-1)
** wrong
**  1625 3249
** answer: 51, groundtruth_str: 88
** groundtruth_num is not None
** is_fraction:  51
** groundtruth_num is (int, float)
** compare_two_numbers int 51 88
** wrong
**  1625 3250
** answer: 12225, groundtruth_str: 13225
** groundtruth_num is not None
** is_fraction:  12225
** groundtruth_num is (int, float)
** compare_two_numbers int 12225 13225
** wrong
**  1625 3251
** answer: 5, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 6
** wrong
**  1625 3252
** answer: 0.111, groundtruth_str: \frac{10}{81}
** groundtruth_num is not None
** is_fraction:  0.111
** groundtruth_num is (int, float)
** compare_two_numbers float 0.111 0.12345679012345678
** wrong
**  1625 3253
** answer: 160, groundtruth_str: 160
** compare on lower
** correct
**  1626 3253
** answer: 21, groundtruth_str: 0
** groundtruth_num is not None
** is_fraction:  21
** groundtruth_num is (int, float)
** compare_two_numbers int 21 0
** wrong
**  1626 3254
** answer: 18, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 19
** wrong
**  1626 3255
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1627 3255
** answer: \frac{1}{6}, groundtruth_str: \frac{7}{18}
** groundtruth_num is not None
** is_fraction:  \frac{1}{6}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.16666666666666666 0.3888888888888889
** wrong
**  1627 3256
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  1628 3256
** answer: \frac{R^2}{9}+\frac{4b^2}{9}+\frac{4c^2}{9}, groundtruth_str: 3R^2
** wrong
**  1628 3257
** answer: 125.5, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  125.5
** groundtruth_num is (int, float)
** compare_two_numbers int 125.5 18
** wrong
**  1628 3258
** answer: 0, groundtruth_str: 4\sqrt{3}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 6.928203230275509
** wrong
**  1628 3259
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1629 3259
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  1630 3259
** answer: 6, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 60
** wrong
**  1630 3260
** answer: 1.2+0.6i, groundtruth_str: \frac{7}{5}+\frac{1}{5}i.
** wrong
**  1630 3261
** answer: 103041, groundtruth_str: 103041
** compare on lower
** correct
**  1631 3261
** answer: 49, groundtruth_str: 49
** compare on lower
** correct
**  1632 3261
** answer: 137645, groundtruth_str: 5,866,608
** groundtruth_num is not None
** is_fraction:  137645
** groundtruth_num is (int, float)
** compare_two_numbers int 137645 5866608
** wrong
**  1632 3262
** answer: 4, groundtruth_str: \sqrt{6}
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers float 4 2.449489742783178
** wrong
**  1632 3263
** answer: -0.16, groundtruth_str: -\frac{4}{25}
** groundtruth_num is not None
** is_fraction:  -0.16
** groundtruth_num is (int, float)
** compare_two_numbers float -0.16 -0.16
** correct
**  1633 3263
** answer: 1, groundtruth_str: 3-\sqrt{7}
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers float 1 0.3542486889354094
** wrong
**  1633 3264
** answer: even, groundtruth_str: \text{even}
** compare on lower
** correct
**  1634 3264
** answer: -2, groundtruth_str: \frac{x+2}{7}
** wrong
**  1634 3265
** answer: 2, groundtruth_str: 1058
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 1058
** wrong
**  1634 3266
** answer: 36, groundtruth_str: 27
** groundtruth_num is not None
** is_fraction:  36
** groundtruth_num is (int, float)
** compare_two_numbers int 36 27
** wrong
**  1634 3267
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  1635 3267
** answer: 16, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 15
** wrong
**  1635 3268
** answer: 715, groundtruth_str: \text{MAKE}
** wrong
**  1635 3269
** answer: 2, groundtruth_str: (-11,-10,-7)
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 -28
** wrong
**  1635 3270
** answer: 4, groundtruth_str: 981
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 981
** wrong
**  1635 3271
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1636 3271
** answer: 625, groundtruth_str: 625
** compare on lower
** correct
**  1637 3271
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1638 3271
** answer: 3380, groundtruth_str: 3380
** compare on lower
** correct
**  1639 3271
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  1640 3271
** answer: 0.5, groundtruth_str: \frac{1}{3}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.3333333333333333
** wrong
**  1640 3272
** answer: ?, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  ?
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1640 3273
** answer: 2, groundtruth_str: \frac{19}{30}
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 0.6333333333333333
** wrong
**  1640 3274
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1641 3274
** answer: 0.5, groundtruth_str: \frac{59}{125}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.472
** wrong
**  1641 3275
** answer: 84.5, groundtruth_str: 84.5
** compare on lower
** correct
**  1642 3275
** answer: 695, groundtruth_str: 695
** compare on lower
** correct
**  1643 3275
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  1644 3275
** answer: -9, groundtruth_str: -27
** groundtruth_num is not None
** is_fraction:  -9
** groundtruth_num is (int, float)
** compare_two_numbers int -9 -27
** wrong
**  1644 3276
** answer: (4,∞), groundtruth_str: (-\infty,-8)\cup(8,\infty)
** wrong
**  1644 3277
** answer: 13, groundtruth_str: 352
** groundtruth_num is not None
** is_fraction:  13
** groundtruth_num is (int, float)
** compare_two_numbers int 13 352
** wrong
**  1644 3278
** answer: 3, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 6
** wrong
**  1644 3279
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  1645 3279
** answer: 0, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -1
** wrong
**  1645 3280
** answer: 27, groundtruth_str: 46
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers int 27 46
** wrong
**  1645 3281
** answer: √20, groundtruth_str: 2\sqrt{5}
** groundtruth_num is not None
** is_fraction:  √20
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1645 3282
** answer: 0, groundtruth_str: \frac{2}{3}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 0.6666666666666666
** wrong
**  1645 3283
** answer: 0, groundtruth_str: 1+\sqrt{5}
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 3.23606797749979
** wrong
**  1645 3284
** answer: 16, groundtruth_str: \frac{1}{5},-\frac{1}{3}
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers float 16 0.2
** wrong
**  1645 3285
** answer: -30, groundtruth_str: -15
** groundtruth_num is not None
** is_fraction:  -30
** groundtruth_num is (int, float)
** compare_two_numbers int -30 -15
** wrong
**  1645 3286
** answer: 0, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 6
** wrong
**  1645 3287
** answer: 0.707106781, groundtruth_str: \frac{\sqrt{2}}{2}
** groundtruth_num is not None
** is_fraction:  0.707106781
** groundtruth_num is (int, float)
** compare_two_numbers float 0.707106781 0.7071067811865476
** correct
**  1646 3287
** answer: 2, groundtruth_str: 2039191
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 2039191
** wrong
**  1646 3288
** answer: \sqrt{21}, groundtruth_str: \sqrt{21}
** compare on lower
** correct
**  1647 3288
** answer: 0, groundtruth_str: -26
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 -26
** wrong
**  1647 3289
** answer: -3, groundtruth_str: [-3,-2]\cup[0,1]
** wrong
**  1647 3290
** answer: 0.05, groundtruth_str: \frac{1}{20}
** groundtruth_num is not None
** is_fraction:  0.05
** groundtruth_num is (int, float)
** compare_two_numbers float 0.05 0.05
** correct
**  1648 3290
** answer: 2, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 3
** wrong
**  1648 3291
** answer: 1710, groundtruth_str: 1710
** compare on lower
** correct
**  1649 3291
** answer: 1169.01, groundtruth_str: 575
** groundtruth_num is not None
** is_fraction:  1169.01
** groundtruth_num is (int, float)
** compare_two_numbers int 1169.01 575
** wrong
**  1649 3292
** answer: 8, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 18
** wrong
**  1649 3293
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  1650 3293
** answer: -6, groundtruth_str: \begin{pmatrix}-6\6\end{pmatrix}
** wrong
**  1650 3294
** answer: undefined, groundtruth_str: 4\sqrt{3}
** groundtruth_num is not None
** is_fraction:  undefined
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1650 3295
** answer: 29, groundtruth_str: 29
** compare on lower
** correct
**  1651 3295
** answer: 4007, groundtruth_str: 4007
** compare on lower
** correct
**  1652 3295
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  1653 3295
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  1654 3295
** answer: 0.5, groundtruth_str: \frac{2}{5}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.4
** wrong
**  1654 3296
** answer: 80, groundtruth_str: 70\sqrt{2}
** groundtruth_num is not None
** is_fraction:  80
** groundtruth_num is (int, float)
** compare_two_numbers float 80 98.99494936611666
** wrong
**  1654 3297
** answer: 60, groundtruth_str: 75
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 75
** wrong
**  1654 3298
** answer: 60, groundtruth_str: 2520
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 2520
** wrong
**  1654 3299
** answer: 18225, groundtruth_str: 4624
** groundtruth_num is not None
** is_fraction:  18225
** groundtruth_num is (int, float)
** compare_two_numbers int 18225 4624
** wrong
**  1654 3300
** answer: 27, groundtruth_str: 28
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers int 27 28
** wrong
**  1654 3301
** answer: 2, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 50
** wrong
**  1654 3302
** answer: 84, groundtruth_str: 84
** compare on lower
** correct
**  1655 3302
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  1656 3302
** answer: 1.25, groundtruth_str: 1\frac{1}{4}
** groundtruth_num is not None
** is_fraction:  1.25
** groundtruth_num is (int, float)
** compare_two_numbers float 1.25 2.75
** wrong
**  1656 3303
** answer: 3.5, groundtruth_str: \frac{7}{2}
** groundtruth_num is not None
** is_fraction:  3.5
** groundtruth_num is (int, float)
** compare_two_numbers float 3.5 3.5
** correct
**  1657 3303
** answer: \sqrt{[}3]{2}, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  \sqrt{[}3]{2}
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1657 3304
** answer: 0, groundtruth_str: 0
** compare on lower
** correct
**  1658 3304
** answer: 1, groundtruth_str: 2x^{10}+2x^8+2x^6+2x^4+2x^2+2
** wrong
**  1658 3305
** answer: 3rq+6q-15r-30, groundtruth_str: 3qr+6q-15r-30
** wrong
**  1658 3306
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  1659 3306
** answer: 72, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  72
** groundtruth_num is (int, float)
** compare_two_numbers int 72 6
** wrong
**  1659 3307
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  1660 3307
** answer: 24, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  24
** groundtruth_num is (int, float)
** compare_two_numbers int 24 9
** wrong
**  1660 3308
** answer: 0.5, groundtruth_str: \frac{\sqrt{3}}{4}
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5 0.4330127018922193
** wrong
**  1660 3309
** answer: 9, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 36
** wrong
**  1660 3310
** answer: 0.75, groundtruth_str: \frac{1}{13}
** groundtruth_num is not None
** is_fraction:  0.75
** groundtruth_num is (int, float)
** compare_two_numbers float 0.75 0.07692307692307693
** wrong
**  1660 3311
** answer: 10, groundtruth_str: \frac{10}{9}
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers float 10 1.1111111111111112
** wrong
**  1660 3312
** answer: 7, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 11
** wrong
**  1660 3313
** answer: 14996, groundtruth_str: 14{,}916
** wrong
**  1660 3314
** answer: 69, groundtruth_str: 69
** compare on lower
** correct
**  1661 3314
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  1662 3314
** answer: 0, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 2
** wrong
**  1662 3315
** answer: 0, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 5
** wrong
**  1662 3316
** answer: 5-4\cos\frac{\pi}{8}, groundtruth_str: 20+\sqrt{2}
** groundtruth_num is not None
** is_fraction:  5-4\cos\frac{\pi}{8}
** groundtruth_num is (int, float)
** compare_two_numbers float 1.3041772021189115 21.414213562373096
** wrong
**  1662 3317
** answer: -2, groundtruth_str: -4
** groundtruth_num is not None
** is_fraction:  -2
** groundtruth_num is (int, float)
** compare_two_numbers int -2 -4
** wrong
**  1662 3318
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  1663 3318
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  1664 3318
** answer: \frac{1}{80}, groundtruth_str: \frac{9}{32}
** groundtruth_num is not None
** is_fraction:  \frac{1}{80}
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0125 0.28125
** wrong
**  1664 3319
** answer: \frac{3}{7}, groundtruth_str: \frac{3}{7}
** compare on lower
** correct
**  1665 3319
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  1665 3320
** answer: -3, groundtruth_str: \frac{5}{2},-3
** groundtruth_num is not None
** is_fraction:  -3
** groundtruth_num is (int, float)
** compare_two_numbers float -3 2.5
** wrong
**  1665 3321
** answer: 26π, groundtruth_str: 26\pi
** groundtruth_num is not None
** is_fraction:  26π
** groundtruth_num is (int, float)
** compare_two_numbers float 81.64 81.68140899333463
** wrong
**  1665 3322
** answer: 0.4, groundtruth_str: \frac{4}{25}
** groundtruth_num is not None
** is_fraction:  0.4
** groundtruth_num is (int, float)
** compare_two_numbers float 0.4 0.16
** wrong
**  1665 3323
** answer: 99, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  99
** groundtruth_num is (int, float)
** compare_two_numbers int 99 48
** wrong
**  1665 3324
** answer: 448, groundtruth_str: 448
** compare on lower
** correct
**  1666 3324
** answer: 1, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 12
** wrong
**  1666 3325
** answer: 1, groundtruth_str: -1
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 -1
** wrong
**  1666 3326
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  1667 3326
** answer: √5, groundtruth_str: \sqrt{5}
** groundtruth_num is not None
** is_fraction:  √5
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1667 3327
** answer: \frac{6}{\sqrt{65}}, groundtruth_str: \begin{pmatrix}48/65\6/65\end{pmatrix}
** wrong
**  1667 3328
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  1668 3328
** answer: 1.36, groundtruth_str: 1.36
** compare on lower
** correct
**  1669 3328
** answer: 5, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 12
** wrong
**  1669 3329
** answer: 151200, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  151200
** groundtruth_num is (int, float)
** compare_two_numbers int 151200 12
** wrong
**  1669 3330
** answer: 0.2143, groundtruth_str: \frac{1}{5}
** groundtruth_num is not None
** is_fraction:  0.2143
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2143 0.2
** wrong
**  1669 3331
BackVerify: 0
** most_common: ('0.381', 9), gold_ans: ['\\frac{8}{21}', 0.38095238095238093]
** most_common: ('1', 2), gold_ans: ['\\frac{99}{100}', 0.99]
** most_common: ['none'], gold_ans: ['\\sqrt{10}', 3.1622776601683795]
** most_common: ('11', 1), gold_ans: ['4', 4]
** most_common: ('9', 1), gold_ans: ['3', 3]
** most_common: ('1+\\frac{b}{a}', 1), gold_ans: ['\\frac{2a+b}{2}', None]
** most_common: ('90', 2), gold_ans: ['120', 120]
** most_common: ('0.25', 2), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('\\frac{1}{\\sqrt{3}}', 2), gold_ans: ['\\frac{1}{\\sqrt{3}}', 0.5773502691896257]
** most_common: ['none'], gold_ans: ['-\\frac{3}{4}', -0.75]
** most_common: ['none'], gold_ans: ['-\\frac{119}{144}', -0.8263888888888888]
** most_common: ['none'], gold_ans: ['-15+8i', None]
** most_common: ('0.25', 1), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('1', 1), gold_ans: ['7', 7]
** most_common: ('4', 1), gold_ans: ['10', 10]
** most_common: ('(-∞,1)∪(3,∞)', 3), gold_ans: ['(-\\infty,-2)\\cup(0,1)\\cup(2,4)', None]
** most_common: ['none'], gold_ans: ['8', 8]
** most_common: ['none'], gold_ans: ['-3', -3]
** most_common: ('5√2', 1), gold_ans: ['40', 40]
** most_common: ('∞', 2), gold_ans: ['4', 4]
** most_common: ('5', 3), gold_ans: ['2', 2]
** most_common: ('7.42', 1), gold_ans: ['159', 159]
** most_common: ('16', 5), gold_ans: ['\\frac{1024}{27}', 37.925925925925924]
** most_common: ('651', 6), gold_ans: ['3255', 3255]
** most_common: ('4', 4), gold_ans: ['24', 24]
** most_common: ('41.25', 2), gold_ans: ['30', 30]
** most_common: ('1020', 1), gold_ans: ['1020', 1020]
** most_common: ('2tanx', 2), gold_ans: ['2\\tanx', None]
** most_common: ('88', 2), gold_ans: ['80', 80]
** most_common: ('(-∞,0)∪(0,∞)', 5), gold_ans: ['(-\\infty,0)\\cup(0,\\infty)', None]
** most_common: ('8,656,481', 1), gold_ans: ['978121', 978121]
** most_common: ('-13', 1), gold_ans: ['\\begin{pmatrix}3/5\\57/5\\end{pmatrix}', None]
** most_common: ('0', 2), gold_ans: ['0', 0]
** most_common: ('2√√2', 1), gold_ans: ['2', 2]
** most_common: ('30', 5), gold_ans: ['90', 90]
** most_common: ('8', 1), gold_ans: ['7', 7]
** most_common: ('(-∞,0)∪(0,∞)', 2), gold_ans: ['(-\\infty,-\\frac{6}{7})\\cup(-\\frac{6}{7},\\infty)', None]
** most_common: ('10', 3), gold_ans: ['0', 0]
** most_common: ('(-3√3,3√3,-2)', 1), gold_ans: ['(3\\sqrt{3},-9,-2)', None]
** most_common: ('0', 2), gold_ans: ['3', 3]
** most_common: ('\\frac{4}{3}', 1), gold_ans: ['\\frac{4}{3}', 1.3333333333333333]
** most_common: ['none'], gold_ans: ['26', 26]
** most_common: ('\\[\\begin{pmatrix}\\frac{1}{5}&\\frac{4}{5}\\0&1\\end{pmatrix}\\]', 2), gold_ans: ['\\begin{pmatrix}1/5&4/5\\0&1\\end{pmatrix}', None]
** most_common: ('\\frac{1}{2}(\\sqrt{17}(10+\\sqrt{5}))', 1), gold_ans: ['8', 8]
** most_common: ('0.25', 3), gold_ans: ['\\frac{3}{16}', 0.1875]
** most_common: ('30', 1), gold_ans: ['20', 20]
** most_common: ('\\frac{1}{2}', 2), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('2', 3), gold_ans: ['-1', -1]
** most_common: ('22.5', 1), gold_ans: ['36', 36]
** most_common: ('1', 2), gold_ans: ['1,-2', -1]
BackVerify: 50
** most_common: ['none'], gold_ans: ['6720', 6720]
** most_common: ['none'], gold_ans: ['28121600', 28121600]
** most_common: ('undefined', 9), gold_ans: ['0', 0]
** most_common: ('1', 3), gold_ans: ['4', 4]
** most_common: ('12', 3), gold_ans: ['5', 5]
** most_common: ('(E)Hyperbola', 1), gold_ans: ['\\text{(E)}', 2.718281828459045]
** most_common: ('22', 1), gold_ans: ['40', 40]
** most_common: ('150', 1), gold_ans: ['80', 80]
** most_common: ('8', 1), gold_ans: ['2', 2]
** most_common: ('-1≤x≤1orx≥3/2', 1), gold_ans: ['(-\\infty,\\frac{3}{7}]\\cup[\\frac{3}{5},\\infty)', None]
** most_common: ('3968', 3), gold_ans: ['3968', 3968]
** most_common: ['none'], gold_ans: ['8\\pi', 25.132741228718345]
** most_common: ('79', 2), gold_ans: ['32', 32]
** most_common: ('104', 5), gold_ans: ['104', 104]
** most_common: ('11', 2), gold_ans: ['11', 11]
** most_common: ('0.375', 1), gold_ans: ['\\frac{2}{5}', 0.4]
** most_common: ('(0,0,-90)', 1), gold_ans: ['(3,-3,1)', -28]
** most_common: ('0.4', 1), gold_ans: ['\\frac{9}{20}', 0.45]
** most_common: ('1', 1), gold_ans: ['4', 4]
** most_common: ('\\frac{1}{3}', 1), gold_ans: ['\\frac{9}{10}', 0.9]
** most_common: ('4', 3), gold_ans: ['\\frac{16}{5}', 3.2]
** most_common: ('\\frac{4}{3}', 1), gold_ans: ['\\frac{3}{4}', 0.75]
** most_common: ('0', 2), gold_ans: ['8+4\\sqrt{3}', 14.928203230275509]
** most_common: ('\\frac{52}{3}', 1), gold_ans: ['116', 116]
** most_common: ('3x^2/2', 4), gold_ans: ['\\frac{3x^2}{2}', None]
** most_common: ['none'], gold_ans: ['3', 3]
** most_common: ('\\frac{\\sqrt{472}}{10}', 1), gold_ans: ['\\frac{12}{13}', 0.9230769230769231]
** most_common: ('\\frac{1}{2}', 1), gold_ans: ['-\\frac{1}{2}', -0.5]
** most_common: ('174', 4), gold_ans: ['174', 174]
** most_common: ['none'], gold_ans: ['162', 162]
** most_common: ('0.13', 1), gold_ans: ['\\frac{1}{10}', 0.1]
** most_common: ('-39', 1), gold_ans: ['(15,-11)', 4]
** most_common: ('53', 1), gold_ans: ['203', 203]
** most_common: ('0.707106781', 1), gold_ans: ['15\\pi', 47.1238898038469]
** most_common: ('322', 3), gold_ans: ['321', 321]
** most_common: ('0.125', 1), gold_ans: ['\\frac{11}{16}', 0.6875]
** most_common: ('-6', 3), gold_ans: ['-6', -6]
** most_common: ('B', 4), gold_ans: ['\\text{A}', None]
** most_common: ('\\frac{6}{7}', 1), gold_ans: ['\\frac{6}{7}', 0.8571428571428571]
** most_common: ('\\frac{17}{85}', 1), gold_ans: ['\\frac{36}{11}', 3.272727272727273]
** most_common: ('24', 1), gold_ans: ['15', 15]
** most_common: ['none'], gold_ans: ['-\\frac{3}{2}', -1.5]
** most_common: ['none'], gold_ans: ['70', 70]
** most_common: ('undefined', 1), gold_ans: ['\\frac{21}{8}', 2.625]
** most_common: ('550', 1), gold_ans: ['957', 957]
** most_common: ('0.083', 1), gold_ans: ['2', 2]
** most_common: ('6', 3), gold_ans: ['6', 6]
** most_common: ('8', 2), gold_ans: ['8', 8]
** most_common: ('\\frac{1}{6}', 2), gold_ans: ['\\frac{1}{6}', 0.16666666666666666]
** most_common: ('21', 1), gold_ans: ['10', 10]
BackVerify: 100
** most_common: ('2+√17', 1), gold_ans: ['\\frac{13}{6}', 2.1666666666666665]
** most_common: ('25', 3), gold_ans: ['x^2+10x+25', None]
** most_common: ['none'], gold_ans: ['25', 25]
** most_common: ['none'], gold_ans: ['-8+2i', None]
** most_common: ('3', 3), gold_ans: ['-2', -2]
** most_common: ('B', 2), gold_ans: ['\\text{(C)}', None]
** most_common: ('1', 1), gold_ans: ['\\frac{9}{32}', 0.28125]
** most_common: ('-1', 3), gold_ans: ['-\\frac{1}{2}', -0.5]
** most_common: ('15', 4), gold_ans: ['-15', -15]
** most_common: ('-106', 2), gold_ans: ['763', 763]
** most_common: ('0', 1), gold_ans: ['-13x+3', None]
** most_common: ('8', 1), gold_ans: ['9', 9]
** most_common: ('2656000', 1), gold_ans: ['666000', 666000]
** most_common: ('400', 1), gold_ans: ['500a^7', None]
** most_common: ('12', 1), gold_ans: ['2\\sqrt{5}', 4.47213595499958]
** most_common: ('27', 2), gold_ans: ['7', 7]
** most_common: ['none'], gold_ans: ['40', 40]
** most_common: ('4', 2), gold_ans: ['6', 6]
** most_common: ('80.86', 1), gold_ans: ['160', 160]
** most_common: ('3', 4), gold_ans: ['7', 7]
** most_common: ('(-7,2)', 1), gold_ans: ['(-\\infty,-7)\\cup(1,2)', None]
** most_common: ('10', 3), gold_ans: ['10', 10]
** most_common: ('\\frac{3}{2}', 2), gold_ans: ['(-\\infty,0]\\cup(\\frac{1}{2},\\frac{3}{2}]', None]
** most_common: ['none'], gold_ans: ['150', 150]
** most_common: ('0', 2), gold_ans: ['-1', -1]
** most_common: ('-0.618033988749895', 1), gold_ans: ['2+\\sqrt{3},-2+\\sqrt{3}', None]
** most_common: ['none'], gold_ans: ['224', 224]
** most_common: ('3504', 2), gold_ans: ['3504', 3504]
** most_common: ['none'], gold_ans: ['1260', 1260]
** most_common: ('\\frac{12}{13}', 2), gold_ans: ['\\frac{507}{595}', 0.8521008403361344]
** most_common: ['none'], gold_ans: ['\\begin{pmatrix}4&2\\-1&1\\end{pmatrix}', None]
** most_common: ('2020', 1), gold_ans: ['2079', 2079]
** most_common: ('1', 1), gold_ans: ['0', 0]
** most_common: ('96', 1), gold_ans: ['80', 80]
** most_common: ['none'], gold_ans: ['18', 18]
** most_common: ('-2+3√2+6√3-2√6', 1), gold_ans: ['-48', -48]
** most_common: ('-1/√10', 5), gold_ans: ['\\frac{1}{\\sqrt{10}}', 0.31622776601683794]
** most_common: ('784', 1), gold_ans: ['117649', 117649]
** most_common: ('0.4807692307692308', 2), gold_ans: ['\\frac{25}{52}', 0.4807692307692308]
** most_common: ('13,800', 3), gold_ans: ['13,800', 13800]
** most_common: ('1', 1), gold_ans: ['2', 2]
** most_common: ('625', 1), gold_ans: ['27648', 27648]
** most_common: ('14√15', 2), gold_ans: ['14\\sqrt{15}', 54.22176684690383]
** most_common: ('-7', 1), gold_ans: ['(4x-7)', None]
** most_common: ('0', 3), gold_ans: ['\\frac{1997}{2}', 998.5]
** most_common: ('69.0', 1), gold_ans: ['81', 81]
** most_common: ('[0,4]', 1), gold_ans: ['(-\\infty,0]\\cup[4,\\infty)', None]
** most_common: ('129', 5), gold_ans: ['180', 180]
** most_common: ('-\\frac{\\cos\\alpha}{\\sqrt{2001}}', 1), gold_ans: ['-1', -1]
** most_common: ('1', 3), gold_ans: ['8', 8]
BackVerify: 150
** most_common: ['none'], gold_ans: ['735', 735]
** most_common: ['none'], gold_ans: ['36', 36]
** most_common: ('13', 2), gold_ans: ['111', 111]
** most_common: ('17', 1), gold_ans: ['17', 17]
** most_common: ('0', 2), gold_ans: ['1', 1]
** most_common: ('1', 1), gold_ans: ['5', 5]
** most_common: ['none'], gold_ans: ['3224', 3224]
** most_common: ('37', 3), gold_ans: ['21', 21]
** most_common: ('333333333', 2), gold_ans: ['111,111,111', 111111111]
** most_common: ('40', 2), gold_ans: ['40', 40]
** most_common: ('1', 1), gold_ans: ['20', 20]
** most_common: ('1', 6), gold_ans: ['8', 8]
** most_common: ['none'], gold_ans: ['30', 30]
** most_common: ('\\begin{pmatrix}4-k\\7-2k\\end{pmatrix}', 2), gold_ans: ['\\begin{pmatrix}2/5\\-1/5\\end{pmatrix}', None]
** most_common: ('27', 1), gold_ans: ['27', 27]
** most_common: ['none'], gold_ans: ['\\frac{100}{81}', 1.2345679012345678]
** most_common: ('16', 2), gold_ans: ['8', 8]
** most_common: ('-4a', 1), gold_ans: ['(-a,0)', None]
** most_common: ('10', 2), gold_ans: ['4', 4]
** most_common: ('∞', 3), gold_ans: ['1', 1]
** most_common: ('0.9', 1), gold_ans: ['90', 90]
** most_common: ('30', 1), gold_ans: ['87', 87]
** most_common: ('1', 1), gold_ans: ['501', 501]
** most_common: ('2-1/540', 1), gold_ans: ['\\frac{19}{540}', 0.03518518518518519]
** most_common: ('41', 1), gold_ans: ['86', 86]
** most_common: ('0', 3), gold_ans: ['331', 331]
** most_common: ('3301', 1), gold_ans: ['668', 668]
** most_common: ('900', 1), gold_ans: ['11,111,111,100', 11111111100]
** most_common: ('√(4x^4+8x^3+6x^2+6x+9)', 1), gold_ans: ['2x^2+5x-1', None]
** most_common: ('47', 1), gold_ans: ['-2', -2]
** most_common: ['none'], gold_ans: ['1+2\\sqrt{3}', 4.464101615137754]
** most_common: ('44', 4), gold_ans: ['\\begin{pmatrix}11\\44\\end{pmatrix}', None]
** most_common: ['none'], gold_ans: ['25,972,650', 25972650]
** most_common: ('2', 3), gold_ans: ['1', 1]
** most_common: ('336.0', 1), gold_ans: ['636', 636]
** most_common: ('x^2-9x+27', 1), gold_ans: ['(x-5)(x^2-4x+7)', None]
** most_common: ('36', 1), gold_ans: ['36', 36]
** most_common: ('-2', 2), gold_ans: ['-\\frac{14}{5}', -2.8]
** most_common: ('76', 1), gold_ans: ['133', 133]
** most_common: ('-1', 2), gold_ans: ['\\frac{20}{9}', 2.2222222222222223]
** most_common: ('0', 5), gold_ans: ['\\text{D}', None]
** most_common: ['none'], gold_ans: ['6-5i', None]
** most_common: ('0.6155', 1), gold_ans: ['\\frac{\\sqrt{65}}{2}', 4.031128874149275]
** most_common: ('391872', 1), gold_ans: ['391872', 391872]
** most_common: ('2√(s^2+4)/s', 1), gold_ans: ['4+2\\sqrt{2}', 6.82842712474619]
** most_common: ('-20', 1), gold_ans: ['-42', -42]
** most_common: ('1', 2), gold_ans: ['\\frac{5}{2}', 2.5]
** most_common: ['none'], gold_ans: ['\\frac{427}{495}', 0.8626262626262626]
** most_common: ('0.25', 1), gold_ans: ['\\frac{2}{5}', 0.4]
** most_common: ('[-2,√21)', 1), gold_ans: ['(-\\sqrt{3},\\sqrt{3})', None]
BackVerify: 200
** most_common: ('5', 1), gold_ans: ['\\frac{250}{39}', 6.410256410256411]
** most_common: ('-1', 4), gold_ans: ['1', 1]
** most_common: ('77', 4), gold_ans: ['103', 103]
** most_common: ('4', 2), gold_ans: ['2', 2]
** most_common: ('0.5', 2), gold_ans: ['\\frac{1}{5},\\frac{1}{4},\\frac{2}{5},\\frac{1}{2}', 0.2]
** most_common: ('90', 2), gold_ans: ['36', 36]
** most_common: ('616.56', 1), gold_ans: ['600\\pi', 1884.9555921538758]
** most_common: ('(0,0)', 1), gold_ans: ['(-5,-7)', -12]
** most_common: ('\\frac{2\\sqrt{10}}{25},\\frac{-2\\sqrt{10}}{25}', 1), gold_ans: ['\\frac{3}{5},\\frac{117}{125}', 0.6]
** most_common: ['none'], gold_ans: ['1250\\pi', 3926.9908169872415]
** most_common: ('7', 5), gold_ans: ['7', 7]
** most_common: ['none'], gold_ans: ['8', 8]
** most_common: ('9', 1), gold_ans: ['129', 129]
** most_common: ('109', 1), gold_ans: ['10', 10]
** most_common: ('0.09375', 1), gold_ans: ['\\frac{27}{512}', 0.052734375]
** most_common: ('6', 5), gold_ans: ['6', 6]
** most_common: ('9', 1), gold_ans: ['19', 19]
** most_common: ('\\frac{2187}{128}', 2), gold_ans: ['\\frac{15309}{256}', 59.80078125]
** most_common: ('19', 2), gold_ans: ['9', 9]
** most_common: ('\\frac{5}{18}', 1), gold_ans: ['\\frac{5}{36}', 0.1388888888888889]
** most_common: ('(3√2/10,2√2/5,√2)', 1), gold_ans: ['(-13,-16,-18)', -47]
** most_common: ('\\frac{5}{19}', 1), gold_ans: ['\\frac{4}{3}', 1.3333333333333333]
** most_common: ['none'], gold_ans: ['40', 40]
** most_common: ('16', 1), gold_ans: ['8', 8]
** most_common: ('8√2', 1), gold_ans: ['32', 32]
** most_common: ('x', 2), gold_ans: ['-\\sqrt{x-3}+3', None]
** most_common: ['none'], gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('-1.2928932188134524', 1), gold_ans: ['1+\\sqrt{}2,\\1-\\sqrt{}2,\\2+\\sqrt{}3,\\2-\\sqrt{}3', None]
** most_common: ('3', 2), gold_ans: ['9', 9]
** most_common: ('19.49', 1), gold_ans: ['21', 21]
** most_common: ('36√3', 3), gold_ans: ['36\\sqrt{3}', 62.353829072479584]
** most_common: ('2', 4), gold_ans: ['2', 2]
** most_common: ('100', 3), gold_ans: ['3', 3]
** most_common: ('π', 4), gold_ans: ['\\pi', 3.141592653589793]
** most_common: ('-2018040', 1), gold_ans: ['\\frac{4036082}{4036081}', 1.0000002477650969]
** most_common: ('5', 2), gold_ans: ['15', 15]
** most_common: ('83', 2), gold_ans: ['83', 83]
** most_common: ('\\frac{3283}{1001}', 1), gold_ans: ['\\frac{3280}{999}', 3.2832832832832834]
** most_common: ('N/A(thequestionisflawed)', 1), gold_ans: ['18', 18]
** most_common: ('3', 2), gold_ans: ['[3,\\infty)', None]
** most_common: ['none'], gold_ans: ['156', 156]
** most_common: ('0.7853981633974483', 1), gold_ans: ['\\frac{32\\pi}{81}', 1.241123023640412]
** most_common: ['none'], gold_ans: ['-2\\sqrt{7}-1', -6.291502622129181]
** most_common: ('(11,-13,-3)', 1), gold_ans: ['\\begin{pmatrix}11\\-13\\-1\\end{pmatrix}', None]
** most_common: ('√17', 7), gold_ans: ['\\sqrt{17}', 4.123105625617661]
** most_common: ('None', 1), gold_ans: ['-\\frac{2}{3}', -0.6666666666666666]
** most_common: ['none'], gold_ans: ['\\frac{1}{5}', 0.2]
** most_common: ('1', 2), gold_ans: ['\\text{ellipse}', None]
** most_common: ('10.392', 1), gold_ans: ['6\\sqrt{7}', 15.874507866387544]
** most_common: ('1024.0', 1), gold_ans: ['1024', 1024]
BackVerify: 250
** most_common: ('0.4717', 1), gold_ans: ['\\frac{8}{17}', 0.47058823529411764]
** most_common: ('1', 2), gold_ans: ['-\\frac{1}{2}', -0.5]
** most_common: ('2√5', 2), gold_ans: ['2\\sqrt{5}', 4.47213595499958]
** most_common: ('5', 2), gold_ans: ['4', 4]
** most_common: ('2', 2), gold_ans: ['2', 2]
** most_common: ('3', 5), gold_ans: ['-9', -9]
** most_common: ('\\frac{8}{\\sqrt{3}+2}', 1), gold_ans: ['2\\sqrt{3}-2', 1.4641016151377546]
** most_common: ('10+8+6√2', 1), gold_ans: ['24+6\\sqrt{2}', 32.48528137423857]
** most_common: ('54', 3), gold_ans: ['54', 54]
** most_common: ('18', 1), gold_ans: ['112', 112]
** most_common: ('[0,1]', 2), gold_ans: ['[0,1)', None]
** most_common: ('0', 3), gold_ans: ['-1', -1]
** most_common: ['none'], gold_ans: ['\\frac{1}{11}', 0.09090909090909091]
** most_common: ('18.0', 3), gold_ans: ['2', 2]
** most_common: ('12', 1), gold_ans: ['48', 48]
** most_common: ('\\frac{3\\pi}{4}', 1), gold_ans: ['\\frac{3\\pi}{4}', 2.356194490192345]
** most_common: ('999', 2), gold_ans: ['496', 496]
** most_common: ('15', 1), gold_ans: ['900', 900]
** most_common: ('0', 3), gold_ans: ['-1', -1]
** most_common: ('24', 1), gold_ans: ['20', 20]
** most_common: ['none'], gold_ans: ['-\\frac{5}{7}', -0.7142857142857143]
** most_common: ('750', 1), gold_ans: ['300', 300]
** most_common: ('36', 3), gold_ans: ['36', 36]
** most_common: ('1', 1), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('0', 2), gold_ans: ['\\sqrt{3}-1', 0.7320508075688773]
** most_common: ('20.0', 2), gold_ans: ['40', 40]
** most_common: ('14', 6), gold_ans: ['14', 14]
** most_common: ('3\\sqrt{3}/4', 1), gold_ans: ['\\frac{75\\sqrt{3}}{67}', 1.9388628442935194]
** most_common: ('0.090909', 1), gold_ans: ['\\frac{1}{11}', 0.09090909090909091]
** most_common: ['none'], gold_ans: ['160', 160]
** most_common: ('18', 1), gold_ans: ['12', 12]
** most_common: ('0.54', 1), gold_ans: ['0.54', 0.54]
** most_common: ('61', 1), gold_ans: ['676', 676]
** most_common: ['none'], gold_ans: ['(-\\frac{1}{6},\\frac{1}{2})', -0.16666666666666666]
** most_common: ('10', 2), gold_ans: ['990', 990]
** most_common: ('\\frac{\\log_25\\log_27\\log_28}{2\\log_26}', 1), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('660', 3), gold_ans: ['3300', 3300]
** most_common: ['none'], gold_ans: ['12', 12]
** most_common: ('5,550,000,000', 1), gold_ans: ['8{,}880', None]
** most_common: ('x/(x+y)', 1), gold_ans: ['\\frac{3}{8}', 0.375]
** most_common: ('61', 6), gold_ans: ['69', 69]
** most_common: ('7', 3), gold_ans: ['27', 27]
** most_common: ['none'], gold_ans: ['\\sqrt{51}', 7.14142842854285]
** most_common: ('0.35', 1), gold_ans: ['0.61', 0.61]
** most_common: ['none'], gold_ans: ['x^9+6859', None]
** most_common: ('(-∞,0)', 4), gold_ans: ['(-\\infty,0)', None]
** most_common: ('18', 1), gold_ans: ['28', 28]
** most_common: ('12', 1), gold_ans: ['144', 144]
** most_common: ('10', 1), gold_ans: ['8', 8]
** most_common: ('10414_5', 1), gold_ans: ['4130_5', 41305]
BackVerify: 300
** most_common: ('176', 1), gold_ans: ['640', 640]
** most_common: ('4', 3), gold_ans: ['4\\sqrt{2}', 5.656854249492381]
** most_common: ('x-yi', 3), gold_ans: ['\\frac{1}{z}', None]
** most_common: ('6', 1), gold_ans: ['96', 96]
** most_common: ('-4', 3), gold_ans: ['-4', -4]
** most_common: ('-8', 1), gold_ans: ['4', 4]
** most_common: ('(-2,-2,1)', 1), gold_ans: ['\\begin{pmatrix}-2\\-2\\1\\end{pmatrix}', None]
** most_common: ['none'], gold_ans: ['\\frac{21}{64}', 0.328125]
** most_common: ('\\binom{h+w-3}{h-2}', 3), gold_ans: ['15', 15]
** most_common: ['none'], gold_ans: ['371,043,400', 371043400]
** most_common: ('20', 1), gold_ans: ['35', 35]
** most_common: ('10,080', 1), gold_ans: ['10,080', 10080]
** most_common: ['none'], gold_ans: ['20', 20]
** most_common: ('920.25', 1), gold_ans: ['920.25', 920.25]
** most_common: ('0.0120', 6), gold_ans: ['\\frac{1}{83}', 0.012048192771084338]
** most_common: ('1', 4), gold_ans: ['\\frac{31}{5}', 6.2]
** most_common: ('0.615', 1), gold_ans: ['\\frac{21}{43}', 0.4883720930232558]
** most_common: ('-5', 1), gold_ans: ['-\\frac{5}{2}', -2.5]
** most_common: ('\\sqrt{2}-1', 1), gold_ans: ['\\sqrt{2}-1', 0.41421356237309503]
** most_common: ('3n^2-18', 1), gold_ans: ['3n^2-18', None]
** most_common: ('714', 4), gold_ans: ['740', 740]
** most_common: ('12', 1), gold_ans: ['12', 12]
** most_common: ('4', 2), gold_ans: ['16', 16]
** most_common: ('25', 1), gold_ans: ['10', 10]
** most_common: ['none'], gold_ans: ['0.5', 0.5]
** most_common: ('4', 3), gold_ans: ['4', 4]
** most_common: ['none'], gold_ans: ['7', 7]
** most_common: ['none'], gold_ans: ['\\frac{18}{343}', 0.052478134110787174]
** most_common: ('2', 3), gold_ans: ['1', 1]
** most_common: ('12121', 2), gold_ans: ['10901', 10901]
** most_common: ('1.7321', 1), gold_ans: ['\\sqrt{3}', 1.7320508075688772]
** most_common: ('<insertdayoftheweek>', 1), gold_ans: ['\\text{Friday}', None]
** most_common: ('7', 2), gold_ans: ['6', 6]
** most_common: ('17.05', 1), gold_ans: ['25', 25]
** most_common: ('664', 1), gold_ans: ['664_7', 6647]
** most_common: ('2', 3), gold_ans: ['4', 4]
** most_common: ('25', 12), gold_ans: ['12', 12]
** most_common: ('5937', 1), gold_ans: ['5937', 5937]
** most_common: ('23', 2), gold_ans: ['23', 23]
** most_common: ('1', 3), gold_ans: ['11', 11]
** most_common: ('32', 2), gold_ans: ['41', 41]
** most_common: ('1', 3), gold_ans: ['2', 2]
** most_common: ('\\frac{-1}{2}', 1), gold_ans: ['-\\frac{1}{2}', -0.5]
** most_common: ('-2√2,2√2', 1), gold_ans: ['2', 2]
** most_common: ('4', 1), gold_ans: ['-\\sqrt{3}', -1.7320508075688772]
** most_common: ('4', 3), gold_ans: ['\\frac{16}{3}', 5.333333333333333]
** most_common: ('1.1071487177940905', 1), gold_ans: ['3\\pm2\\sqrt{2}', None]
** most_common: ['none'], gold_ans: ['1152', 1152]
** most_common: ('0.2893', 1), gold_ans: ['\\frac{72}{425}', 0.16941176470588235]
** most_common: ('0,2sin(2),2cos(2)', 1), gold_ans: ['(-\\frac{8}{3},\\frac{4}{3},-\\frac{1}{3})', -2.6666666666666665]
BackVerify: 350
** most_common: ['none'], gold_ans: ['62.8', 62.8]
** most_common: ('\\begin{pmatrix}-3\\11\\7\\end{pmatrix}', 1), gold_ans: ['\\begin{pmatrix}-3\\11\\7\\end{pmatrix}', None]
** most_common: ('4', 1), gold_ans: ['20', 20]
** most_common: ('19', 1), gold_ans: ['20', 20]
** most_common: ('0.0333', 1), gold_ans: ['\\frac{1}{5120}', 0.0001953125]
** most_common: ('16,341.19', 1), gold_ans: ['16,386.16', 16386.16]
** most_common: ('\\frac{3}{2}', 1), gold_ans: ['9', 9]
** most_common: ('even', 3), gold_ans: ['\\text{even}', None]
** most_common: ('0', 1), gold_ans: ['\\frac{19}{4}', 4.75]
** most_common: ('-1', 1), gold_ans: ['x^2+2', None]
** most_common: ('\\frac{4}{1}', 1), gold_ans: ['\\frac{2}{5}', 0.4]
** most_common: ('C', 7), gold_ans: ['\\text{(C)}', None]
** most_common: ('-\\frac{1}{7}', 1), gold_ans: ['\\frac{3}{7}', 0.42857142857142855]
** most_common: ('Tuesday', 1), gold_ans: ['\\text{Saturday}', None]
** most_common: ('√85', 2), gold_ans: ['\\sqrt{85}', 9.219544457292887]
** most_common: ('\\frac{5}{12}', 2), gold_ans: ['\\frac{23}{36}', 0.6388888888888888]
** most_common: ('67', 4), gold_ans: ['55', 55]
** most_common: ('\\frac{\\sqrt{2}}{7}', 1), gold_ans: ['-\\frac{17}{19}', -0.8947368421052632]
** most_common: ('4', 4), gold_ans: ['6', 6]
** most_common: ('(a^2+b^2+2abc)', 1), gold_ans: ['1', 1]
** most_common: ('1', 1), gold_ans: ['6x', None]
** most_common: ('8x', 2), gold_ans: ['48', 48]
** most_common: ('\\sqrt{3}', 2), gold_ans: ['2\\sqrt{3}+3', 6.464101615137754]
** most_common: ('64-16\\pi', 4), gold_ans: ['8\\pi-16', 9.132741228718347]
** most_common: ('-3.75', 1), gold_ans: ['-\\frac{49}{12}', -4.083333333333333]
** most_common: ('8', 9), gold_ans: ['6', 6]
** most_common: ('32', 1), gold_ans: ['48', 48]
** most_common: ('210', 2), gold_ans: ['210', 210]
** most_common: ['none'], gold_ans: ['17', 17]
** most_common: ('2', 3), gold_ans: ['1000', 1000]
** most_common: ('15', 1), gold_ans: ['22', 22]
** most_common: ('[0,∞)', 5), gold_ans: ['(-5,\\infty)', None]
** most_common: ['none'], gold_ans: ['\\frac{39}{64}', 0.609375]
** most_common: ('30.5', 1), gold_ans: ['41', 41]
** most_common: ('-5', 5), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('11', 2), gold_ans: ['89', 89]
** most_common: ('\\frac{8}{3}', 1), gold_ans: ['6\\pi+2', 20.84955592153876]
** most_common: ('1001', 1), gold_ans: ['10090', 10090]
** most_common: ('\\frac{\\sqrt{3}}{3}', 1), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('360', 3), gold_ans: ['12441600', 12441600]
** most_common: ('30.72', 1), gold_ans: ['11.5', 11.5]
** most_common: ('2', 3), gold_ans: ['34', 34]
** most_common: ('0.1111', 4), gold_ans: ['\\frac{1}{9}', 0.1111111111111111]
** most_common: ('\\begin{pmatrix}-2\\3\\-1\\end{pmatrix}', 1), gold_ans: ['(7,21,35)', 72135]
** most_common: ('65', 1), gold_ans: ['40', 40]
** most_common: ('1', 4), gold_ans: ['-2', -2]
** most_common: ('5', 2), gold_ans: ['43', 43]
** most_common: ('9', 1), gold_ans: ['6', 6]
** most_common: ('4410', 1), gold_ans: ['4495', 4495]
** most_common: ('680', 1), gold_ans: ['348', 348]
BackVerify: 400
** most_common: ('\\frac{8}{3}', 1), gold_ans: ['\\frac{1}{8}', 0.125]
** most_common: ('60', 1), gold_ans: ['60', 60]
** most_common: ['none'], gold_ans: ['1680', 1680]
** most_common: ('3489.36', 1), gold_ans: ['4014013', 4014013]
** most_common: ('204', 2), gold_ans: ['156', 156]
** most_common: ('26', 1), gold_ans: ['13', 13]
** most_common: ('13', 1), gold_ans: ['13', 13]
** most_common: ('1', 3), gold_ans: ['2', 2]
** most_common: ('3', 6), gold_ans: ['102', 102]
** most_common: ('10', 1), gold_ans: ['20', 20]
** most_common: ('5.5', 1), gold_ans: ['6', 6]
** most_common: ('0.5or45°', 1), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('0.5', 1), gold_ans: ['1', 1]
** most_common: ['none'], gold_ans: ['8', 8]
** most_common: ('10', 1), gold_ans: ['180', 180]
** most_common: ('10x', 1), gold_ans: ['10', 10]
** most_common: ('0.662', 1), gold_ans: ['\\frac{8}{17}', 0.47058823529411764]
** most_common: ('506.5', 1), gold_ans: ['210', 210]
** most_common: ('5', 8), gold_ans: ['-30', -30]
** most_common: ('5', 1), gold_ans: ['6', 6]
** most_common: ('35', 1), gold_ans: ['45', 45]
** most_common: ('8', 1), gold_ans: ['10', 10]
** most_common: ('90', 2), gold_ans: ['60', 60]
** most_common: ('\\frac{11}{10}', 1), gold_ans: ['1\\frac{1}{10}', 1.1]
** most_common: ('1', 2), gold_ans: ['-668i', None]
** most_common: ('3', 3), gold_ans: ['\\frac{24}{5}', 4.8]
** most_common: ('80', 1), gold_ans: ['40', 40]
** most_common: ('4', 1), gold_ans: ['6', 6]
** most_common: ('24', 2), gold_ans: ['64', 64]
** most_common: ('5', 3), gold_ans: ['5', 5]
** most_common: ('\\frac{1}{16}', 2), gold_ans: ['\\frac{1}{16}', 0.0625]
** most_common: ('20', 1), gold_ans: ['9', 9]
** most_common: ['none'], gold_ans: ['\\frac{25}{2}', 12.5]
** most_common: ('0.049553', 1), gold_ans: ['0.03', 0.03]
** most_common: ('1', 2), gold_ans: ['1', 1]
** most_common: ('276', 1), gold_ans: ['97', 97]
** most_common: ('5', 1), gold_ans: ['\\sqrt{}5', 2.23606797749979]
** most_common: ('-2a/b', 1), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ['none'], gold_ans: ['162', 162]
** most_common: ('11', 1), gold_ans: ['12', 12]
** most_common: ('5', 1), gold_ans: ['-5', -5]
** most_common: ('4', 1), gold_ans: ['5', 5]
** most_common: ('6', 3), gold_ans: ['\\sqrt{66}', 8.12403840463596]
** most_common: ('0', 1), gold_ans: ['-376', -376]
** most_common: ('1', 3), gold_ans: ['-\\frac{1}{16}', -0.0625]
** most_common: ['none'], gold_ans: ['10\\;\\text{edges}', None]
** most_common: ('1+√2', 1), gold_ans: ['-2+\\sqrt{3}', -0.2679491924311227]
** most_common: ('16', 1), gold_ans: ['52', 52]
** most_common: ('840', 1), gold_ans: ['420', 420]
** most_common: ('34', 2), gold_ans: ['66', 66]
BackVerify: 450
** most_common: ('0.05', 3), gold_ans: ['\\frac{11}{221}', 0.049773755656108594]
** most_common: ('?', 1), gold_ans: ['254', 254]
** most_common: ['none'], gold_ans: ['15', 15]
** most_common: ('2', 1), gold_ans: ['3', 3]
** most_common: ('3', 2), gold_ans: ['3', 3]
** most_common: ('4', 2), gold_ans: ['19', 19]
** most_common: ('0.7071', 1), gold_ans: ['\\frac{2}{3}\\sqrt{3}', 1.1547005383792515]
** most_common: ['none'], gold_ans: ['\\frac{70}{39}', 1.794871794871795]
** most_common: ('249', 1), gold_ans: ['18,107', 18107]
** most_common: ('90', 1), gold_ans: ['180', 180]
** most_common: ['none'], gold_ans: ['200', 200]
** most_common: ('3√3', 2), gold_ans: ['6\\sqrt{3}', 10.392304845413264]
** most_common: ('\\frac{23}{5}', 1), gold_ans: ['3', 3]
** most_common: ('84', 1), gold_ans: ['140', 140]
** most_common: ('1.9583333333333333', 1), gold_ans: ['\\frac{47}{24}', 1.9583333333333333]
** most_common: ('1:03', 3), gold_ans: ['\\text{1:03PM}', None]
** most_common: ['none'], gold_ans: ['\\frac{2}{3}', 0.6666666666666666]
** most_common: ('36', 1), gold_ans: ['29700', 29700]
** most_common: ('0.026316', 1), gold_ans: ['\\frac{1}{144}', 0.006944444444444444]
** most_common: ['none'], gold_ans: ['2x^2-2x+3', None]
** most_common: ['none'], gold_ans: ['\\begin{pmatrix}6\\3\\0\\end{pmatrix}', None]
** most_common: ('120', 3), gold_ans: ['120', 120]
** most_common: ('75', 1), gold_ans: ['51', 51]
** most_common: ('8', 1), gold_ans: ['7', 7]
** most_common: ('-\\frac{5}{4}', 1), gold_ans: ['-2', -2]
** most_common: ['none'], gold_ans: ['\\frac{2}{3}', 0.6666666666666666]
** most_common: ('17', 1), gold_ans: ['39', 39]
** most_common: ['none'], gold_ans: ['\\frac{7}{3}', 2.3333333333333335]
** most_common: ('1.0', 1), gold_ans: ['(2,4)', 24]
** most_common: ('8/5t', 1), gold_ans: ['\\frac{8t}{3}', None]
** most_common: ('0', 3), gold_ans: ['4', 4]
** most_common: ['none'], gold_ans: ['\\frac{5}{6}', 0.8333333333333334]
** most_common: ('\\frac{\\pi}{3}', 2), gold_ans: ['\\frac{\\pi}{3}', 1.0471975511965979]
** most_common: ('7', 1), gold_ans: ['25', 25]
** most_common: ('0.339', 1), gold_ans: ['\\frac{12}{35}', 0.34285714285714286]
** most_common: ('9', 2), gold_ans: ['9', 9]
** most_common: ['none'], gold_ans: ['1.3', 1.3]
** most_common: ('17', 2), gold_ans: ['51', 51]
** most_common: ('40', 6), gold_ans: ['40_9', 409]
** most_common: ('\\sqrt{61}\\angle\\frac{7\\pi}{6}', 1), gold_ans: ['4\\sqrt{3}+2i', 6.928203230275509]
** most_common: ('16', 1), gold_ans: ['29', 29]
** most_common: ('140', 3), gold_ans: ['210', 210]
** most_common: ['none'], gold_ans: ['\\begin{pmatrix}-1/3\\2/3\\5/3\\end{pmatrix}', None]
** most_common: ('0.28', 5), gold_ans: ['\\frac{24}{25}', 0.96]
** most_common: ('26', 2), gold_ans: ['26', 26]
** most_common: ('3', 1), gold_ans: ['-1,2', -12]
** most_common: ('440', 1), gold_ans: ['350', 350]
** most_common: ('0.1', 1), gold_ans: ['6', 6]
** most_common: ('0.1333', 1), gold_ans: ['272', 272]
** most_common: ('20', 4), gold_ans: ['\\text{June20}', None]
BackVerify: 500
** most_common: ('576', 2), gold_ans: ['576', 576]
** most_common: ('(a,a-5-i)$or$(a,a-5+i)', 1), gold_ans: ['(2,3)', 23]
** most_common: ('12', 3), gold_ans: ['12', 12]
** most_common: ['none'], gold_ans: ['\\begin{pmatrix}7&1\\-1&-3\\end{pmatrix}', None]
** most_common: ('-1,1', 2), gold_ans: ['-4,-2,-1,1,2,4', -1130]
** most_common: ('10', 1), gold_ans: ['100', 100]
** most_common: ('361', 1), gold_ans: ['361', 361]
** most_common: ('25', 1), gold_ans: ['50', 50]
** most_common: ('-36', 2), gold_ans: ['28', 28]
** most_common: ('0.457142857', 1), gold_ans: ['\\frac{209}{210}', 0.9952380952380953]
** most_common: ('1', 2), gold_ans: ['2', 2]
** most_common: ('62', 1), gold_ans: ['118', 118]
** most_common: ('undefined', 1), gold_ans: ['-1', -1]
** most_common: ('0.884705882352941', 1), gold_ans: ['1', 1]
** most_common: ('D,E', 1), gold_ans: ['\\text{C,E}', None]
** most_common: ('8000', 4), gold_ans: ['8000', 8000]
** most_common: ('1', 4), gold_ans: ['2', 2]
** most_common: ('192', 3), gold_ans: ['192', 192]
** most_common: ['none'], gold_ans: ['1681', 1681]
** most_common: ('11', 1), gold_ans: ['17', 17]
** most_common: ['none'], gold_ans: ['20', 20]
** most_common: ('6', 4), gold_ans: ['(-6,0)', -60]
** most_common: ['none'], gold_ans: ['-8192', -8192]
** most_common: ('1,2+i,2-i', 1), gold_ans: ['2,6', 26]
** most_common: ('210.0', 1), gold_ans: ['1260', 1260]
** most_common: ['none'], gold_ans: ['720', 720]
** most_common: ('-6', 1), gold_ans: ['-3\\sqrt{5}-5', -11.70820393249937]
** most_common: ('4', 1), gold_ans: ['6', 6]
** most_common: ['none'], gold_ans: ['25', 25]
** most_common: ('23', 1), gold_ans: ['15', 15]
** most_common: ('√52', 1), gold_ans: ['\\frac{2\\sqrt{149}}{3}', 8.137703743822469]
** most_common: ('4', 1), gold_ans: ['8', 8]
** most_common: ('1', 1), gold_ans: ['8', 8]
** most_common: ('0', 2), gold_ans: ['-9', -9]
** most_common: ('6', 3), gold_ans: ['3', 3]
** most_common: ('5', 1), gold_ans: ['10', 10]
** most_common: ('D', 5), gold_ans: ['\\text{E}', None]
** most_common: ('π', 2), gold_ans: ['2', 2]
** most_common: ('2004', 1), gold_ans: ['0', 0]
** most_common: ('80', 1), gold_ans: ['100', 100]
** most_common: ('1', 2), gold_ans: ['1', 1]
** most_common: ('4', 1), gold_ans: ['\\frac{4}{3}', 1.3333333333333333]
** most_common: ('153', 1), gold_ans: ['41', 41]
** most_common: ('125', 2), gold_ans: ['17', 17]
** most_common: ('1', 1), gold_ans: ['4', 4]
** most_common: ('0', 3), gold_ans: ['\\begin{pmatrix}1/2\\1/2\\1/2\\end{pmatrix}', None]
** most_common: ('3', 3), gold_ans: ['3', 3]
** most_common: ['none'], gold_ans: ['\\frac{108}{25}', 4.32]
** most_common: ('1', 2), gold_ans: ['4', 4]
** most_common: ('1', 1), gold_ans: ['(4,10)', 410]
BackVerify: 550
** most_common: ('undefined', 2), gold_ans: ['-10', -10]
** most_common: ('54', 2), gold_ans: ['144', 144]
** most_common: ['none'], gold_ans: ['16', 16]
** most_common: ('4', 1), gold_ans: ['4(3-x)(3+x)', None]
** most_common: ('-6.50.5', 1), gold_ans: ['(1,2,3)', 123]
** most_common: ('\\frac{-49}{40}', 1), gold_ans: ['-56', -56]
** most_common: ('1001', 1), gold_ans: ['1016', 1016]
** most_common: ('2', 2), gold_ans: ['5', 5]
** most_common: ('\\frac{2}{3}', 1), gold_ans: ['\\sqrt{2}', 1.4142135623730951]
** most_common: ('-44', 1), gold_ans: ['-102', -102]
** most_common: ('720', 6), gold_ans: ['360', 360]
** most_common: ('7(x-3)(x+3)', 6), gold_ans: ['7(x+3)(x-3)', None]
** most_common: ('0', 3), gold_ans: ['0', 0]
** most_common: ('π', 1), gold_ans: ['25\\pi', 78.53981633974483]
** most_common: ('\\frac{-11}{4}', 1), gold_ans: ['-\\frac{5}{4}', -1.25]
** most_common: ('1', 2), gold_ans: ['224', 224]
** most_common: ['none'], gold_ans: ['3', 3]
** most_common: ('\\frac{1}{3}', 1), gold_ans: ['432', 432]
** most_common: ('Nosolution', 1), gold_ans: ['-\\frac{11}{2}', -5.5]
** most_common: ('1', 1), gold_ans: ['13', 13]
** most_common: ('2048', 1), gold_ans: ['1023', 1023]
** most_common: ('15', 1), gold_ans: ['8', 8]
** most_common: ('2007', 1), gold_ans: ['1004', 1004]
** most_common: ['none'], gold_ans: ['16+12\\sqrt{2}', 32.97056274847714]
** most_common: ('(2,1)', 3), gold_ans: ['(4,1)', 41]
** most_common: ('\\frac{4}{9}', 1), gold_ans: ['\\frac{1}{6}', 0.16666666666666666]
** most_common: ('5x-3', 1), gold_ans: ['5x-3', None]
** most_common: ['none'], gold_ans: ['(3,2,4)', 324]
** most_common: ('0.25', 1), gold_ans: ['\\frac{3}{28}', 0.10714285714285714]
** most_common: ('0', 3), gold_ans: ['4', 4]
** most_common: ('4', 3), gold_ans: ['4\\sqrt{2}', 5.656854249492381]
** most_common: ('2', 1), gold_ans: ['\\frac{2}{3}', 0.6666666666666666]
** most_common: ('1077', 1), gold_ans: ['1160', 1160]
** most_common: ('4', 2), gold_ans: ['4', 4]
** most_common: ('0,7', 2), gold_ans: ['0,4', 4]
** most_common: ('0.8667', 8), gold_ans: ['\\frac{13}{15}', 0.8666666666666667]
** most_common: ('697', 1), gold_ans: ['53', 53]
** most_common: ['none'], gold_ans: ['10', 10]
** most_common: ('0', 3), gold_ans: ['4022030', 4022030]
** most_common: ('1', 2), gold_ans: ['\\frac{c}{a}', None]
** most_common: ('10', 1), gold_ans: ['12,10,6', 12106]
** most_common: ('900', 1), gold_ans: ['90', 90]
** most_common: ('?(sincetheexactvalueofxcannotbefoundwithoutthevalueofy)', 1), gold_ans: ['14', 14]
** most_common: ('30.96°', 1), gold_ans: ['6', 6]
** most_common: ('1', 5), gold_ans: ['5', 5]
** most_common: ('100', 4), gold_ans: ['100', 100]
** most_common: ('-5', 2), gold_ans: ['5', 5]
** most_common: ('(h+w-2)!/((h-1)!*(w-1)!)', 1), gold_ans: ['210', 210]
** most_common: ('\\frac{72}{2187}', 1), gold_ans: ['\\frac{1904}{6561}', 0.29019966468526137]
** most_common: ('-1', 3), gold_ans: ['\\frac{1}{2004!}', 1.8752519366931903]
BackVerify: 600
** most_common: ('7', 1), gold_ans: ['\\frac{16}{3}', 5.333333333333333]
** most_common: ('13.0', 1), gold_ans: ['\\sqrt{22}', 4.69041575982343]
** most_common: ('P', 3), gold_ans: ['\\text{(P)}', None]
** most_common: ('10', 4), gold_ans: ['10', 10]
** most_common: ('90', 5), gold_ans: ['45', 45]
** most_common: ('1', 4), gold_ans: ['2004\\sqrt{2}-2003', 831.0839789956825]
** most_common: ('18', 1), gold_ans: ['18', 18]
** most_common: ('0', 2), gold_ans: ['4', 4]
** most_common: ('6.2449', 1), gold_ans: ['80', 80]
** most_common: ['none'], gold_ans: ['17,280', 17280]
** most_common: ('\\frac{32}{3}', 1), gold_ans: ['40', 40]
** most_common: ('7', 2), gold_ans: ['4', 4]
** most_common: ('(0,3)', 1), gold_ans: ['\\begin{pmatrix}1/5\\-18/5\\end{pmatrix}', None]
** most_common: ('(3+3√3)/2,(7+7√3)/2', 1), gold_ans: ['(8,14)', 814]
** most_common: ('0.7664', 1), gold_ans: ['\\frac{13}{17}', 0.7647058823529411]
** most_common: ('12', 1), gold_ans: ['0', 0]
** most_common: ('0', 1), gold_ans: ['0', 0]
** most_common: ('0.2857142857142857', 1), gold_ans: ['-\\frac{1}{2}', -0.5]
** most_common: ('1', 2), gold_ans: ['1', 1]
** most_common: ('(3,3,-3)', 2), gold_ans: ['\\begin{pmatrix}3\\3\\-3\\end{pmatrix}', None]
** most_common: ['none'], gold_ans: ['\\frac{5}{12}', 0.4166666666666667]
** most_common: ('4', 2), gold_ans: ['3', 3]
** most_common: ('None', 1), gold_ans: ['8,-112', -104]
** most_common: ('2', 3), gold_ans: ['4', 4]
** most_common: ['none'], gold_ans: ['-128-128\\sqrt{3}i', None]
** most_common: ['none'], gold_ans: ['\\secx', None]
** most_common: ('\\frac{7}{15}', 1), gold_ans: ['\\frac{7}{15}', 0.4666666666666667]
** most_common: ('9', 1), gold_ans: ['6', 6]
** most_common: ('4√3', 1), gold_ans: ['8\\sqrt{3}\\text{squareinches}', None]
** most_common: ('6', 2), gold_ans: ['-1', -1]
** most_common: ('160,000', 2), gold_ans: ['40,000', 40000]
** most_common: ('974368', 1), gold_ans: ['987,436', 987436]
** most_common: ['none'], gold_ans: ['18', 18]
** most_common: ('12', 5), gold_ans: ['8', 8]
** most_common: ('1.8', 1), gold_ans: ['1.8', 1.8]
** most_common: ('(-2,-1,7)', 1), gold_ans: ['\\begin{pmatrix}-3\\-2\\9\\end{pmatrix}', None]
** most_common: ('\\frac{2}{9}', 1), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('0.5', 1), gold_ans: ['\\frac{11}{18}', 0.6111111111111112]
** most_common: ('\\frac{3}{5}', 1), gold_ans: ['\\frac{9}{25}', 0.36]
** most_common: ('4π+24', 2), gold_ans: ['24+4\\pi', 36.56637061435917]
** most_common: ('6-15', 1), gold_ans: ['\\begin{pmatrix}6\\-15\\end{pmatrix}', None]
** most_common: ('(22/5,3)', 1), gold_ans: ['(6,5)', 65]
** most_common: ('30,150', 1), gold_ans: ['70,110', 70110]
** most_common: ('6', 1), gold_ans: ['9', 9]
** most_common: ('3', 2), gold_ans: ['-3', -3]
** most_common: ('0', 2), gold_ans: ['-1', -1]
** most_common: ('90', 3), gold_ans: ['\\text{east}', None]
** most_common: ('4', 1), gold_ans: ['5', 5]
** most_common: ('0.1667', 10), gold_ans: ['\\frac{1}{6}', 0.16666666666666666]
** most_common: ('36√2', 1), gold_ans: ['18\\sqrt{3}', 31.176914536239792]
BackVerify: 650
** most_common: ('0.2', 1), gold_ans: ['\\frac{1}{5}', 0.2]
** most_common: ('1', 1), gold_ans: ['9', 9]
** most_common: ('2', 4), gold_ans: ['2', 2]
** most_common: ('4x(8x^2-1/2x+5)', 1), gold_ans: ['4x(8x^2-x+5)', None]
** most_common: ['none'], gold_ans: ['\\frac{5}{54}', 0.09259259259259259]
** most_common: ('-1', 1), gold_ans: ['819', 819]
** most_common: ('0.5', 2), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('0', 2), gold_ans: ['-\\frac{1}{7}', -0.14285714285714285]
** most_common: ('0', 2), gold_ans: ['-99', -99]
** most_common: ('111111', 2), gold_ans: ['F', None]
** most_common: ('115', 2), gold_ans: ['40', 40]
** most_common: ('\\frac{\\pi}{2}+\\frac{3\\pi}{2}=\\pi', 2), gold_ans: ['5\\pi', 15.707963267948966]
** most_common: ['none'], gold_ans: ['5', 5]
** most_common: ('9', 1), gold_ans: ['15', 15]
** most_common: ('0.00390625', 3), gold_ans: ['\\frac{1}{256}', 0.00390625]
** most_common: ('4', 5), gold_ans: ['\\frac{16\\sqrt{3}}{9}', 3.079201435678004]
** most_common: ('14,625', 1), gold_ans: ['58,500', 58500]
** most_common: ('0', 2), gold_ans: ['(-\\infty,0]', None]
** most_common: ('4-2π', 2), gold_ans: ['8-2\\pi', 1.7168146928204135]
** most_common: ('961', 2), gold_ans: ['12', 12]
** most_common: ('4', 1), gold_ans: ['\\sqrt{6}', 2.449489742783178]
** most_common: ('2970', 1), gold_ans: ['3', 3]
** most_common: ('-2√2', 1), gold_ans: ['4', 4]
** most_common: ('1', 6), gold_ans: ['3', 3]
** most_common: ('(-∞,-1/2)∪(-1/2,∞)', 11), gold_ans: ['(-\\infty,-\\frac{1}{2})\\cup(-\\frac{1}{2},\\infty)', None]
** most_common: ('2', 2), gold_ans: ['13', 13]
** most_common: ('18', 1), gold_ans: ['27,63,99,135,171', 276399135171]
** most_common: ('\\begin{pmatrix}1&2\\6&-1\\end{pmatrix}', 1), gold_ans: ['\\begin{pmatrix}1&2\\6&-1\\end{pmatrix}', None]
** most_common: ('2+2k', 5), gold_ans: ['2k+2', None]
** most_common: ('1', 3), gold_ans: ['1', 1]
** most_common: ('120120', 1), gold_ans: ['98,770', 98770]
** most_common: ('208', 5), gold_ans: ['152', 152]
** most_common: ('0.8090169944', 2), gold_ans: ['\\frac{1+\\sqrt{5}}{4}', 0.8090169943749475]
** most_common: ('5', 2), gold_ans: ['5', 5]
** most_common: ('54', 1), gold_ans: ['54', 54]
** most_common: ('-\\frac{4}{3}', 2), gold_ans: ['-4', -4]
** most_common: ('\\frac{3}{5}', 2), gold_ans: ['\\frac{3}{5}', 0.6]
** most_common: ('0.0000165', 1), gold_ans: ['\\frac{12}{5,525}', 2.4]
** most_common: ('32', 1), gold_ans: ['60', 60]
** most_common: ('\\frac{3+2\\mathbf{v}\\cdot\\mathbf{u}}{2\\sqrt{6}}', 1), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('(1,0,0)', 2), gold_ans: ['(\\frac{11}{15},\\frac{11}{60},\\frac{1}{12})', 0.7333333333333333]
** most_common: ['none'], gold_ans: ['\\frac{1}{5}', 0.2]
** most_common: ('49', 4), gold_ans: ['0', 0]
** most_common: ('1250', 1), gold_ans: ['-375+500i', None]
** most_common: ('282.6', 8), gold_ans: ['90\\pi', 282.7433388230814]
** most_common: ('\\frac{5\\sqrt{21}}{14}', 1), gold_ans: ['\\frac{15\\sqrt{7}}{14}', 2.834733547569204]
** most_common: ('\\frac{\\sqrt{689}}{5}', 1), gold_ans: ['\\sqrt{17}', 4.123105625617661]
** most_common: ['none'], gold_ans: ['69', 69]
** most_common: ('250000-125000π', 1), gold_ans: ['54000', 54000]
** most_common: ('5√21', 4), gold_ans: ['5\\sqrt{21}', 22.9128784747792]
BackVerify: 700
** most_common: ('49', 2), gold_ans: ['49', 49]
** most_common: ['none'], gold_ans: ['72+72\\sqrt{2}', 173.82337649086284]
** most_common: ('165', 1), gold_ans: ['9240', 9240]
** most_common: ('1', 3), gold_ans: ['-2', -2]
** most_common: ('2', 2), gold_ans: ['9', 9]
** most_common: ('\\frac{1}{\\sqrt{3}}', 1), gold_ans: ['\\frac{\\sqrt{6}}{3}', 0.816496580927726]
** most_common: ('2707', 1), gold_ans: ['2743', 2743]
** most_common: ('3', 2), gold_ans: ['3', 3]
** most_common: ('4', 2), gold_ans: ['2', 2]
** most_common: ('-4,4', 2), gold_ans: ['\\frac{9}{4},-\\frac{9}{4}', 2.25]
** most_common: ('28800', 1), gold_ans: ['28800', 28800]
** most_common: ('104', 2), gold_ans: ['103', 103]
** most_common: ('60', 3), gold_ans: ['60', 60]
** most_common: ('0.0667', 1), gold_ans: ['\\frac{1}{12}', 0.08333333333333333]
** most_common: ('9', 1), gold_ans: ['15', 15]
** most_common: ('9', 1), gold_ans: ['6', 6]
** most_common: ['none'], gold_ans: ['9604', 9604]
** most_common: ['none'], gold_ans: ['864000', 864000]
** most_common: ('(-∞,-3)∪(-3,-1)∪(-1,∞)', 3), gold_ans: ['(-\\infty,-2]\\cup[-1,\\infty)', None]
** most_common: ('777', 2), gold_ans: ['777', 777]
** most_common: ('26', 3), gold_ans: ['134', 134]
** most_common: ('C,E', 3), gold_ans: ['\\text{A,D}', None]
** most_common: ['none'], gold_ans: ['-128', -128]
** most_common: ('24', 1), gold_ans: ['24', 24]
** most_common: ('-7', 7), gold_ans: ['-49', -49]
** most_common: ['none'], gold_ans: ['7', 7]
** most_common: ('12', 2), gold_ans: ['-2', -2]
** most_common: ('9a^2', 1), gold_ans: ['65536', 65536]
** most_common: ('-294', 1), gold_ans: ['-150', -150]
** most_common: ('0.1175', 3), gold_ans: ['\\frac{2}{17}', 0.11764705882352941]
** most_common: ('6', 5), gold_ans: ['6', 6]
** most_common: ('-16', 4), gold_ans: ['-16', -16]
** most_common: ('6', 1), gold_ans: ['6', 6]
** most_common: ('0', 4), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('0', 7), gold_ans: ['-1', -1]
** most_common: ('-15', 1), gold_ans: ['-15', -15]
** most_common: ('5+6√2', 8), gold_ans: ['5+6\\sqrt{2}', 13.48528137423857]
** most_common: ['none'], gold_ans: ['140', 140]
** most_common: ('-0.5', 1), gold_ans: ['-\\frac{7}{9}', -0.7777777777777778]
** most_common: ('26,000-5000\\pi', 1), gold_ans: ['27000-4500\\pi', 12862.83305884593]
** most_common: ('\\sqrt{7200x^3}', 1), gold_ans: ['36x\\sqrt{35x}', None]
** most_common: ('[-2,7]', 12), gold_ans: ['x\\in[-2,7]', None]
** most_common: ('9', 2), gold_ans: ['9', 9]
** most_common: ['none'], gold_ans: ['18.90', 18.9]
** most_common: ('-8', 2), gold_ans: ['-64', -64]
** most_common: ('7.62', 1), gold_ans: ['2\\sqrt{22}', 9.38083151964686]
** most_common: ('6.75', 4), gold_ans: ['6\\frac{3}{4}', 15.75]
** most_common: ('37', 2), gold_ans: ['23.31', 23.31]
** most_common: ('4', 2), gold_ans: ['4', 4]
** most_common: ['none'], gold_ans: ['48', 48]
BackVerify: 750
** most_common: ['none'], gold_ans: ['115,000', 115000]
** most_common: ('\\frac{799}{2008}', 1), gold_ans: ['\\frac{2007}{2008}', 0.9995019920318725]
** most_common: ('88.61', 1), gold_ans: ['40', 40]
** most_common: ('2√5', 1), gold_ans: ['6', 6]
** most_common: ['none'], gold_ans: ['556', 556]
** most_common: ('\\frac{1}{3}', 1), gold_ans: ['\\frac{5}{9}', 0.5555555555555556]
** most_common: ('0', 3), gold_ans: ['4', 4]
** most_common: ('93', 1), gold_ans: ['47', 47]
** most_common: ('1065964', 1), gold_ans: ['1,000,000', 1000000]
** most_common: ('-7', 1), gold_ans: ['-5', -5]
** most_common: ('0', 1), gold_ans: ['1', 1]
** most_common: ('97', 1), gold_ans: ['10', 10]
** most_common: ('0.6', 2), gold_ans: ['\\frac{24}{25}', 0.96]
** most_common: ('103', 1), gold_ans: ['129', 129]
** most_common: ('5√2', 10), gold_ans: ['(5\\sqrt{2},5\\sqrt{2})', None]
** most_common: ('0.0833', 10), gold_ans: ['\\frac{1}{12}', 0.08333333333333333]
** most_common: ('1', 2), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('π', 2), gold_ans: ['\\pi', 3.141592653589793]
** most_common: ('\\frac{1}{3}', 3), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('61', 1), gold_ans: ['92', 92]
** most_common: ('2', 3), gold_ans: ['2', 2]
** most_common: ('(1+7i)', 1), gold_ans: ['3+5i', None]
** most_common: ('74,966', 1), gold_ans: ['74726', 74726]
** most_common: ['none'], gold_ans: ['25', 25]
** most_common: ('140', 2), gold_ans: ['140', 140]
** most_common: ('C', 1), gold_ans: ['\\text{E}', None]
** most_common: ['none'], gold_ans: ['\\frac{2}{5}', 0.4]
** most_common: ('50', 1), gold_ans: ['50', 50]
** most_common: ('1342', 1), gold_ans: ['6710', 6710]
** most_common: ('5/√89', 1), gold_ans: ['\\frac{\\sqrt{39}}{8}', 0.7806247497997998]
** most_common: ['none'], gold_ans: ['0', 0]
** most_common: ['none'], gold_ans: ['1200_7', 12007]
** most_common: ('2', 6), gold_ans: ['1', 1]
** most_common: ('0', 4), gold_ans: ['\\frac{3}{4}', 0.75]
** most_common: ('37.68', 3), gold_ans: ['12\\pi', 37.69911184307752]
** most_common: ('0.5', 2), gold_ans: ['\\frac{1}{6}', 0.16666666666666666]
** most_common: ('\\frac{2}{3}', 10), gold_ans: ['\\frac{3}{4}', 0.75]
** most_common: ('2', 4), gold_ans: ['6', 6]
** most_common: ('1', 7), gold_ans: ['2', 2]
** most_common: ('4.67', 2), gold_ans: ['\\frac{14}{3}', 4.666666666666667]
** most_common: ('\\frac{5}{2}', 2), gold_ans: ['\\frac{27}{10}', 2.7]
** most_common: ('\\sqrt{[}3]{6}y', 1), gold_ans: ['12', 12]
** most_common: ('15.63', 1), gold_ans: ['74', 74]
** most_common: ('0.0129', 4), gold_ans: ['\\frac{11}{850}', 0.012941176470588235]
** most_common: ('36', 1), gold_ans: ['36', 36]
** most_common: ('0.555555555555556', 1), gold_ans: ['\\frac{5}{9}', 0.5555555555555556]
** most_common: ('20', 3), gold_ans: ['20', 20]
** most_common: ('(4\\sqrt{5},\\frac{\\pi}{4},\\cos^{-1}(\\frac{2\\sqrt{3}}{5}))', 1), gold_ans: ['(8\\sqrt{2},\\frac{\\pi}{4},\\frac{\\pi}{6})', None]
** most_common: ('6', 1), gold_ans: ['54', 54]
** most_common: ('112.17', 1), gold_ans: ['90', 90]
BackVerify: 800
** most_common: ('602.88', 1), gold_ans: ['96\\pi+120', 421.59289474462014]
** most_common: ['none'], gold_ans: ['3(x-2)(x+1)', None]
** most_common: ('4.5', 3), gold_ans: ['4.5', 4.5]
** most_common: ('3', 1), gold_ans: ['3', 3]
** most_common: ('9', 5), gold_ans: ['9', 9]
** most_common: ('123480', 2), gold_ans: ['10,236', 10236]
** most_common: ('1.5625', 7), gold_ans: ['\\cfrac{25}{16}', None]
** most_common: ('15', 1), gold_ans: ['15', 15]
** most_common: ('0', 1), gold_ans: ['6', 6]
** most_common: ('90', 1), gold_ans: ['45,135', 45135]
** most_common: ('10', 2), gold_ans: ['11', 11]
** most_common: ('-2,-3', 1), gold_ans: ['-2,1', -21]
** most_common: ('\\begin{pmatrix}\\frac{4}{5}&-\\frac{1}{5}\\-\\frac{1}{5}&\\frac{9}{5}\\end{pmatrix}', 1), gold_ans: ['\\begin{pmatrix}-4/5&-3/5\\-3/5&4/5\\end{pmatrix}', None]
** most_common: ['none'], gold_ans: ['(2,5)', 25]
** most_common: ['none'], gold_ans: ['\\frac{14\\sqrt{3}}{3}', 8.082903768654761]
** most_common: ('0.035', 5), gold_ans: ['\\frac{5}{143}', 0.03496503496503497]
** most_common: ('89', 2), gold_ans: ['89', 89]
** most_common: ('-1', 1), gold_ans: ['-\\frac{3}{2},-1,7', -1.5]
** most_common: ('2', 1), gold_ans: ['-3', -3]
** most_common: ('[1,4]', 4), gold_ans: ['[1,4]', 14]
** most_common: ('0', 1), gold_ans: ['-1', -1]
** most_common: ('3', 1), gold_ans: ['0', 0]
** most_common: ['none'], gold_ans: ['34,650', 34650]
** most_common: ('0.0833', 3), gold_ans: ['\\frac{1}{12}', 0.08333333333333333]
** most_common: ('864', 2), gold_ans: ['144', 144]
** most_common: ('B', 3), gold_ans: ['\\text{(D)}', None]
** most_commongold_ans: ['3996', 3996]
** most_common: ('-36', 5), gold_ans: ['\\begin{pmatrix}11\\-36\\-3\\end{pmatrix}', None]
** most_common: ('7', 1), gold_ans: ['3', 3]
** most_common: ('0', 3), gold_ans: ['0', 0]
** most_common: ('2+√(3/2)', 2), gold_ans: ['2+\\sqrt{3}', 3.732050807568877]
** most_common: ('234', 1), gold_ans: ['78', 78]
** most_common: ('6.5', 1), gold_ans: ['8', 8]
** most_common: ('15', 3), gold_ans: ['109', 109]
** most_common: ('3', 1), gold_ans: ['35', 35]
** most_common: ('\\frac{4}{3}', 3), gold_ans: ['\\frac{4}{3}', 1.3333333333333333]
** most_common: ('(0,2√[3]{sin^210°/cos20°})', 1), gold_ans: ['(2,-1)', 1]
** most_common: ('390625', 2), gold_ans: ['1,000,000,000', 1000000000]
** most_common: ('12', 5), gold_ans: ['14', 14]
** most_common: ('\\frac{5714}{9999}', 1), gold_ans: ['\\frac{19}{330}', 0.05757575757575758]
** most_common: ('15x-80', 4), gold_ans: ['15x-80', None]
** most_common: ('6', 3), gold_ans: ['96', 96]
** most_common: ('1', 1), gold_ans: ['6', 6]
** most_common: ('81', 1), gold_ans: ['79', 79]
** most_common: ['none'], gold_ans: ['200', 200]
** most_common: ('2tan(x)', 1), gold_ans: ['2-2\\sqrt{2}', -0.8284271247461901]
** most_common: ('81', 2), gold_ans: ['243', 243]
** most_common: ['none'], gold_ans: ['-7', -7]
** most_common: ['none'], gold_ans: ['\\frac{7}{72}', 0.09722222222222222]
** most_common: ('41', 2), gold_ans: ['697', 697]
BackVerify: 850
** most_common: ('0', 1), gold_ans: ['29800', 29800]
** most_common: ('9', 1), gold_ans: ['451', 451]
** most_common: ('1-(1/2)^(1022)', 1), gold_ans: ['\\frac{1023}{1024}', 0.9990234375]
** most_common: ('0.5', 1), gold_ans: ['2', 2]
** most_common: ('8', 3), gold_ans: ['9', 9]
** most_common: ('2', 2), gold_ans: ['44', 44]
** most_common: ('47', 2), gold_ans: ['133', 133]
** most_common: ('8250', 1), gold_ans: ['336', 336]
** most_common: ('8', 1), gold_ans: ['28', 28]
** most_common: ('210', 1), gold_ans: ['2100', 2100]
** most_common: ('7+12i', 1), gold_ans: ['9+11i', None]
** most_common: ('60', 4), gold_ans: ['120', 120]
** most_common: ('-124', 1), gold_ans: ['5x-7y+11z+4=0', None]
** most_common: ('12π', 9), gold_ans: ['12\\pi', 37.69911184307752]
** most_common: ('46.5', 2), gold_ans: ['47', 47]
** most_common: ('59', 1), gold_ans: ['12', 12]
** most_common: ('24,48,120', 1), gold_ans: ['3,11,33', 31133]
** most_common: ('\\frac{3+\\sqrt{3}}{4}', 1), gold_ans: ['-\\frac{1}{16}', -0.0625]
** most_common: ('102', 1), gold_ans: ['39', 39]
** most_common: ('-23.5', 3), gold_ans: ['-23.5', -23.5]
** most_common: ('4', 2), gold_ans: ['5', 5]
** most_common: ('9', 2), gold_ans: ['8', 8]
** most_common: ['none'], gold_ans: ['27.2', 27.2]
** most_common: ('15', 2), gold_ans: ['7', 7]
** most_common: ('1', 3), gold_ans: ['2', 2]
** most_common: ('6', 1), gold_ans: ['7', 7]
** most_common: ['none'], gold_ans: ['-6.5', -6.5]
** most_common: ('0', 2), gold_ans: ['64', 64]
** most_common: ('-3', 1), gold_ans: ['-3', -3]
** most_common: ('1', 1), gold_ans: ['19', 19]
** most_common: ('-13,3', 3), gold_ans: ['[-13,3]', -133]
** most_common: ('9.1875', 1), gold_ans: ['\\frac{63}{8}', 7.875]
** most_common: ('\\frac{11}{20}', 1), gold_ans: ['\\frac{7}{20}', 0.35]
** most_common: ('53', 1), gold_ans: ['53', 53]
** most_common: ('\\frac{5}{13}', 1), gold_ans: ['\\frac{5}{13}', 0.38461538461538464]
** most_common: ('(B)Circle', 6), gold_ans: ['\\text{(D)}', None]
** most_common: ('110+16\\sqrt{2}', 1), gold_ans: ['\\frac{240}{13}', 18.46153846153846]
** most_common: ('-1', 1), gold_ans: ['\\frac{7}{2}', 3.5]
** most_common: ('3.4641', 1), gold_ans: ['\\sqrt{6}+3\\sqrt{2}', 6.6921304299024635]
** most_common: ('A', 3), gold_ans: ['\\text{(A)}', None]
** most_common: ['none'], gold_ans: ['\\frac{\\sqrt{2}}{20}', 0.07071067811865475]
** most_common: ('6', 2), gold_ans: ['\\mbox{Saturday}', None]
** most_common: ('\\frac{2}{21}', 1), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('28', 1), gold_ans: ['26', 26]
** most_common: ('24', 1), gold_ans: ['3.5', 3.5]
** most_common: ('\\frac{9}{100}', 1), gold_ans: ['\\frac{2}{5}', 0.4]
** most_common: ('0.0013243', 1), gold_ans: ['1', 1]
** most_common: ('-0.5', 2), gold_ans: ['-\\frac{1}{2}', -0.5]
** most_common: ('0.5', 1), gold_ans: ['\\frac{1}{16}', 0.0625]
** most_common: ('0', 5), gold_ans: ['\\frac{1}{4}', 0.25]
BackVerify: 900
** most_common: ['none'], gold_ans: ['\\pi-2', 1.1415926535897933]
** most_common: ('20', 1), gold_ans: ['-10', -10]
** most_common: ('3156', 1), gold_ans: ['1208', 1208]
** most_common: ('6', 3), gold_ans: ['10', 10]
** most_common: ('90', 1), gold_ans: ['90', 90]
** most_common: ('0.381', 1), gold_ans: ['\\frac{8}{21}', 0.38095238095238093]
** most_common: ('5040', 1), gold_ans: ['6', 6]
** most_common: ('\\frac{1}{10}', 3), gold_ans: ['\\frac{1}{5}', 0.2]
** most_common: ('80', 1), gold_ans: ['110', 110]
** most_common: ('1', 1), gold_ans: ['2x-1', None]
** most_common: ('1', 4), gold_ans: ['7', 7]
** most_common: ('undefined', 1), gold_ans: ['10', 10]
** most_common: ('39.68', 2), gold_ans: ['\\text{Navin}', None]
** most_common: ['none'], gold_ans: ['525\\pi', 1649.3361431346414]
** most_common: ('0.1667(12/720)', 1), gold_ans: ['\\frac{1}{15}', 0.06666666666666667]
** most_common: ('2', 2), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('-5', 6), gold_ans: ['-5', -5]
** most_common: ('32768', 3), gold_ans: ['1024', 1024]
** most_common: ('12.6', 6), gold_ans: ['12\\frac{3}{5}', 24.6]
** most_common: ['none'], gold_ans: ['81', 81]
** most_common: ('0', 1), gold_ans: ['2\\sqrt{2}+\\sqrt{6}', 5.277916867529369]
** most_common: ('45', 5), gold_ans: ['5', 5]
** most_common: ('14', 2), gold_ans: ['2', 2]
** most_common: ('0.1833', 8), gold_ans: ['\\frac{11}{60}', 0.18333333333333332]
** most_common: ('\\frac{8}{3}', 1), gold_ans: ['20', 20]
** most_common: ('2/(sqrt(5))+1/(1-b)+1/(1-c)', 1), gold_ans: ['1', 1]
** most_common: ('\\frac{125}{27}', 1), gold_ans: ['\\frac{\\sqrt{6}}{6}', 0.408248290463863]
** most_common: ['none'], gold_ans: ['576', 576]
** most_common: ('None', 2), gold_ans: ['0', 0]
** most_common: ('1010000', 1), gold_ans: ['1000000', 1000000]
** most_common: ['none'], gold_ans: ['50', 50]
** most_common: ('-15', 1), gold_ans: ['\\begin{pmatrix}-7\\16\\5\\end{pmatrix}', None]
** most_common: ('(-2/7,-10/7)', 2), gold_ans: ['(-\\frac{2}{7},-\\frac{34}{7})', -0.2857142857142857]
** most_common: ('240240', 1), gold_ans: ['248', 248]
** most_common: ('\\cot(\\pi/23)', 1), gold_ans: ['\\frac{46}{3}', 15.333333333333334]
** most_common: ('0.666666666666667', 1), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('5', 1), gold_ans: ['49', 49]
** most_common: ('924', 1), gold_ans: ['214', 214]
** most_common: ('\\frac{3\\sqrt{15}}{\\sqrt{2}}', 1), gold_ans: ['13', 13]
** most_common: ('0.166666666666667', 1), gold_ans: ['\\frac{5049}{20200}', 0.24995049504950495]
** most_common: ('50.55', 1), gold_ans: ['59', 59]
** most_common: ('\\begin{pmatrix}1/13&7/26\\13/26&-1/13\\end{pmatrix}', 1), gold_ans: ['\\begin{pmatrix}2&7\\13&-2\\end{pmatrix}', None]
** most_common: ('0', 5), gold_ans: ['2', 2]
** most_common: ('1985', 1), gold_ans: ['13', 13]
** most_common: ('1', 2), gold_ans: ['-2,-1,1,2', -114]
** most_common: ['none'], gold_ans: ['4', 4]
** most_common: ('1', 3), gold_ans: ['84', 84]
** most_common: ('99', 1), gold_ans: ['44', 44]
** most_common: ('1.5', 1), gold_ans: ['3', 3]
** most_common: ('36.9', 1), gold_ans: ['45', 45]
BackVerify: 950
** most_common: ('1.0769230769', 1), gold_ans: ['\\frac{14}{13}', 1.0769230769230769]
** most_common: ('38', 1), gold_ans: ['14', 14]
** most_common: ['none'], gold_ans: ['\\frac{31}{6}', 5.166666666666667]
** most_common: ('6x', 1), gold_ans: ['\\frac{35}{4}', 8.75]
** most_common: ('0', 1), gold_ans: ['-\\frac{1}{14}', -0.07142857142857142]
** most_common: ('5', 1), gold_ans: ['6\\sqrt{6}', 14.696938456699069]
** most_common: ('-1', 1), gold_ans: ['\\frac{1}{5}+\\frac{3}{5}i', None]
** most_common: ['none'], gold_ans: ['891', 891]
** most_common: ('\\frac{8}{11}', 1), gold_ans: ['\\frac{109}{150}', 0.7266666666666667]
** most_common: ('3702', 2), gold_ans: ['3702', 3702]
** most_common: ('51.43', 4), gold_ans: ['36', 36]
** most_common: ['none'], gold_ans: ['-x^7-2x^5+x^2', None]
** most_common: ('137.5', 7), gold_ans: ['137\\frac{1}{2}', 685.5]
** most_common: ('0', 1), gold_ans: ['5x^2+21x', None]
** most_common: ['none'], gold_ans: ['1414', 1414]
** most_common: ('117', 2), gold_ans: ['17', 17]
** most_common: ('8.06', 1), gold_ans: ['\\frac{44}{3}', 14.666666666666666]
** most_common: ('2.0', 1), gold_ans: ['(\\frac{27}{8},\\frac{15}{8})', 3.375]
** most_common: ('90', 4), gold_ans: ['135', 135]
** most_common: ('\\frac{3}{2}', 1), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('C', 2), gold_ans: ['\\text{C,F,H}', None]
** most_common: ('34.98', 5), gold_ans: ['\\text{C}', None]
** most_common: ('3.42857142857143', 2), gold_ans: ['\\frac{7}{24}', 0.2916666666666667]
** most_common: ('8', 1), gold_ans: ['11', 11]
** most_common: ('12√35', 1), gold_ans: ['12\\sqrt{35}', 70.9929573971954]
** most_common: ('300,030,003', 1), gold_ans: ['90{,}900{,}909', None]
** most_common: ('(-\\frac{2}{3},2)', 1), gold_ans: ['(-7,10)', -710]
** most_common: ('14', 1), gold_ans: ['14', 14]
** most_common: ('180,000', 1), gold_ans: ['400', 400]
** most_common: ['none'], gold_ans: ['\\frac{\\pi}{4},\\frac{9\\pi}{4}', None]
** most_common: ('764', 1), gold_ans: ['298', 298]
** most_common: ('\\frac{10}{3}', 4), gold_ans: ['\\frac{10}{3}', 3.3333333333333335]
** most_common: ('804', 1), gold_ans: ['0', 0]
** most_common: ('120', 1), gold_ans: ['34', 34]
** most_common: ('3', 1), gold_ans: ['0', 0]
** most_common: ('1', 1), gold_ans: ['0', 0]
** most_common: ('1', 1), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('7', 2), gold_ans: ['3', 3]
** most_common: ('1', 3), gold_ans: ['1', 1]
** most_common: ('-3,2,4', 2), gold_ans: ['2,-3,4', -32]
** most_common: ('1+5i', 2), gold_ans: ['-1-5i', None]
** most_common: ('207.28', 1), gold_ans: ['\\frac{648}{\\pi}', 206.26480624709635]
** most_common: ('4', 2), gold_ans: ['4', 4]
** most_common: ('9', 2), gold_ans: ['0', 0]
** most_common: ('6.5', 1), gold_ans: ['\\frac{1}{9}', 0.1111111111111111]
** most_common: ('120', 1), gold_ans: ['20', 20]
** most_common: ('1', 1), gold_ans: ['1', 1]
** most_common: ('\\frac{1}{50}\\begin{pmatrix}1&7\\7&49\\end{pmatrix}', 3), gold_ans: ['\\begin{pmatrix}1/50&7/50\\7/50&49/50\\end{pmatrix}', None]
** most_common: ['none'], gold_ans: ['3', 3]
** most_common: ('8', 2), gold_ans: ['9', 9]
BackVerify: 1000
** most_common: ('4', 1), gold_ans: ['16', 16]
** most_common: ('6', 3), gold_ans: ['6', 6]
** most_common: ('x^4-2x^3-5x^2+4x-1', 1), gold_ans: ['x^4-4x^3+5x^2+2x-1', None]
** most_common: ['none'], gold_ans: ['\\frac{13}{90}', 0.14444444444444443]
** most_common: ('120', 1), gold_ans: ['120', 120]
** most_common: ('1596', 1), gold_ans: ['38', 38]
** most_common: ('7', 3), gold_ans: ['7', 7]
** most_common: ('\\begin{pmatrix}\\frac{1}{5}\\-\\frac{3}{5}\\end{pmatrix}', 4), gold_ans: ['\\begin{pmatrix}1/5\\-3/5\\end{pmatrix}', None]
** most_common: ('\\frac{2}{27}', 1), gold_ans: ['\\frac{16}{27}', 0.5925925925925926]
** most_common: ('10', 1), gold_ans: ['10', 10]
** most_common: ('6√5/5', 2), gold_ans: ['\\frac{6\\sqrt{5}}{5}', 2.6832815729997477]
** most_common: ('45', 2), gold_ans: ['180', 180]
** most_common: ('102', 1), gold_ans: ['7', 7]
** most_common: ('12', 1), gold_ans: ['12', 12]
** most_common: ('4', 2), gold_ans: ['2\\sqrt{10}', 6.324555320336759]
** most_common: ('360', 4), gold_ans: ['360', 360]
** most_common: ('28', 1), gold_ans: ['24,-3', 21]
** most_common: ('32-4π', 3), gold_ans: ['28-2\\pi', 21.716814692820414]
** most_common: ['none'], gold_ans: ['\\frac{33}{2}', 16.5]
** most_common: ('-2^{5/3}-2\\sqrt{[}3]{4}-4\\sqrt{[}3]{2}', 1), gold_ans: ['-6', -6]
** most_common: ['none'], gold_ans: ['27', 27]
** most_common: ('0.175', 1), gold_ans: ['\\frac{128}{1875}', 0.06826666666666667]
** most_common: ('√320', 1), gold_ans: ['24', 24]
** most_common: ('20', 3), gold_ans: ['20', 20]
** most_common: ('360', 2), gold_ans: ['16', 16]
** most_common: ('0', 7), gold_ans: ['-3', -3]
** most_common: ['none'], gold_ans: ['144', 144]
** most_common: ('2', 2), gold_ans: ['4', 4]
** most_common: ('10', 1), gold_ans: ['\\frac{40}{9}', 4.444444444444445]
** most_common: ('96π', 8), gold_ans: ['96\\pi', 301.59289474462014]
** most_common: ['none'], gold_ans: ['147', 147]
** most_common: ('undefined', 1), gold_ans: ['2\\sqrt{3}', 3.4641016151377544]
** most_common: ('0', 3), gold_ans: ['-\\frac{31}{8}', -3.875]
** most_common: ['none'], gold_ans: ['18', 18]
** most_common: ('4.25', 1), gold_ans: ['7\\pi', 21.991148575128552]
** most_common: ('4', 2), gold_ans: ['5', 5]
** most_common: ('-8', 3), gold_ans: ['0', 0]
** most_common: ('2.4955', 1), gold_ans: ['\\sqrt{3}', 1.7320508075688772]
** most_common: ('(B)Circle', 2), gold_ans: ['\\text{(E)}', 2.718281828459045]
** most_common: ('\\frac{2}{9}', 1), gold_ans: ['\\frac{2}{9}', 0.2222222222222222]
** most_common: ('10', 1), gold_ans: ['\\sqrt{109}', 10.44030650891055]
** most_common: ('-15', 1), gold_ans: ['\\begin{pmatrix}-1&0\\0&-1\\end{pmatrix}', None]
** most_common: ('2d', 1), gold_ans: ['12', 12]
** most_common: ('96', 1), gold_ans: ['52', 52]
** most_common: ('undefined', 2), gold_ans: ['8', 8]
** most_common: ('6', 3), gold_ans: ['52', 52]
** most_common: ('53', 1), gold_ans: ['973', 973]
** most_common: ['none'], gold_ans: ['-4', -4]
** most_common: ('4', 1), gold_ans: ['8', 8]
** most_common: ('1', 2), gold_ans: ['1', 1]
BackVerify: 1050
** most_common: ('\\infty', 1), gold_ans: ['64', 64]
** most_common: ('1991', 1), gold_ans: ['1963', 1963]
** most_common: ('720', 2), gold_ans: ['180', 180]
** most_common: ('10√2', 6), gold_ans: ['10\\sqrt{}2', 14.142135623730951]
** most_common: ('105', 1), gold_ans: ['105', 105]
** most_common: ('(-2,-7)', 1), gold_ans: ['(-7,-2)', -9]
** most_common: ('-11', 1), gold_ans: ['-8', -8]
** most_common: ('60', 1), gold_ans: ['80', 80]
** most_common: ['none'], gold_ans: ['25', 25]
** most_common: ('1', 2), gold_ans: ['1', 1]
** most_common: ('25', 1), gold_ans: ['17', 17]
** most_common: ('16', 2), gold_ans: ['12', 12]
** most_common: ('-\\sqrt{7},\\sqrt{7}', 1), gold_ans: ['-5,1,4', -514]
** most_common: ('7', 2), gold_ans: ['10', 10]
** most_common: ('undefined', 1), gold_ans: ['6', 6]
** most_common: ('36', 1), gold_ans: ['104', 104]
** most_common: ('2100', 1), gold_ans: ['2107', 2107]
** most_common: ('8.0', 1), gold_ans: ['3.5', 3.5]
** most_common: ('3744', 1), gold_ans: ['13535', 13535]
** most_common: ('2', 4), gold_ans: ['5', 5]
** most_common: ('\\frac{3}{4}', 2), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('262', 1), gold_ans: ['270', 270]
** most_common: ('0.0833', 1), gold_ans: ['\\frac{1}{4}', 0.25]
** most_common: ('53.5', 1), gold_ans: ['64', 64]
** most_common: ('π', 6), gold_ans: ['\\pi', 3.141592653589793]
** most_common: ('108.37', 1), gold_ans: ['37', 37]
** most_common: ['none'], gold_ans: ['12', 12]
** most_common: ('-22', 1), gold_ans: ['x^2+6x-4', None]
** most_common: ('undefined', 1), gold_ans: ['\\begin{pmatrix}3&-3\\4&-2\\end{pmatrix}', None]
** most_common: ('7', 1), gold_ans: ['7', 7]
** most_common: ('0.3333', 3), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('4', 1), gold_ans: ['32', 32]
** most_common: ('4.25', 1), gold_ans: ['(\\frac{17}{4},0)', 4.25]
** most_common: ('76', 9), gold_ans: ['90', 90]
** most_common: ('0', 4), gold_ans: ['4', 4]
** most_common: ('2', 5), gold_ans: ['3', 3]
** most_common: ('5', 2), gold_ans: ['3', 3]
** most_common: ('0.96', 1), gold_ans: ['-\\frac{24}{25}', -0.96]
** most_common: ['none'], gold_ans: ['162', 162]
** most_common: ('3', 4), gold_ans: ['4', 4]
** most_common: ('1', 1), gold_ans: ['2\\sqrt{2}', 2.8284271247461903]
** most_common: ['none'], gold_ans: ['36', 36]
** most_common: ('19', 2), gold_ans: ['19', 19]
** most_common: ['none'], gold_ans: ['61,328', 61328]
** most_common: ['none'], gold_ans: ['-2', -2]
** most_common: ('2', 3), gold_ans: ['14', 14]
** most_common: ('1', 1), gold_ans: ['\\sqrt{5}', 2.23606797749979]
** most_common: ('(-\\frac{7}{2},\\frac{8}{5},\\frac{103}{25})', 1), gold_ans: ['\\begin{pmatrix}-2\\3\\3\\end{pmatrix}', None]
** most_common: ('101', 4), gold_ans: ['549', 549]
** most_common: ('1.4142135623730951', 1), gold_ans: ['\\sqrt{2}', 1.4142135623730951]
BackVerify: 1100
** most_common: ('C', 3), gold_ans: ['C', None]
** most_common: ('8', 2), gold_ans: ['18', 18]
** most_common: ('14', 1), gold_ans: ['13', 13]
** most_common: ('28', 1), gold_ans: ['8', 8]
** most_common: ('\\frac{1}{4}', 4), gold_ans: ['1:2', None]
** most_common: ['none'], gold_ans: ['729', 729]
** most_common: ('32760.0', 1), gold_ans: ['32,760', 32760]
** most_common: ('24', 3), gold_ans: ['23', 23]
** most_common: ('48', 3), gold_ans: ['48\\pi', 150.79644737231007]
** most_common: ('0.0204081632653061', 1), gold_ans: ['-\\frac{7}{17}', -0.4117647058823529]
** most_common: ('2√23', 1), gold_ans: ['4', 4]
** most_common: ('13', 1), gold_ans: ['8', 8]
** most_common: ('4', 1), gold_ans: ['2', 2]
** most_common: ('2', 1), gold_ans: ['-2', -2]
** most_common: ('1', 1), gold_ans: ['12', 12]
** most_common: ('18', 2), gold_ans: ['27', 27]
** most_common: ('62', 1), gold_ans: ['\\frac{7}{2}', 3.5]
** most_common: ('0', 5), gold_ans: ['\\frac{7}{8}', 0.875]
** most_common: ('0.2', 1), gold_ans: ['\\frac{3}{16}', 0.1875]
** most_common: ['none'], gold_ans: ['-4', -4]
** most_common: ('0', 1), gold_ans: ['\\frac{1}{18}', 0.05555555555555555]
** most_common: ('(4,-32,-8,35)', 1), gold_ans: ['(1,-16,-4,43)', -458]
** most_common: ('3056', 1), gold_ans: ['4561', 4561]
** most_common: ('512', 1), gold_ans: ['5120', 5120]
** most_common: ('3', 4), gold_ans: ['21', 21]
** most_common: ('(-1,14/5)', 1), gold_ans: ['\\begin{pmatrix}1\\3\\end{pmatrix}', None]
** most_common: ('3', 2), gold_ans: ['\\frac{11}{2}', 5.5]
** most_common: ('\\frac{1}{256}', 1), gold_ans: ['\\frac{1}{128}', 0.0078125]
** most_common: ('5,541,417,313', 1), gold_ans: ['11218', 11218]
** most_common: ('\\frac{-4}{3}', 1), gold_ans: ['-2', -2]
** most_common: ('6', 1), gold_ans: ['4', 4]
** most_common: ('26.0', 1), gold_ans: ['26', 26]
** most_common: ('190', 1), gold_ans: ['\\frac{10}{19}', 0.5263157894736842]
** most_common: ('2.449489743799399!', 1), gold_ans: ['\\sqrt{2}+\\sqrt{6}', 3.8637033051562732]
** most_common: ('100', 3), gold_ans: ['100', 100]
** most_common: ('322', 1), gold_ans: ['68', 68]
** most_common: ['none'], gold_ans: ['\\frac{64}{3}', 21.333333333333332]
** most_common: ('2', 2), gold_ans: ['8', 8]
** most_common: ('0', 1), gold_ans: ['-\\frac{1}{4}', -0.25]
** most_common: ('0', 1), gold_ans: ['\\begin{pmatrix}1&2\\-3&-5\\end{pmatrix}', None]
** most_common: ('7.0710678118654755', 1), gold_ans: ['5\\sqrt{2}', 7.0710678118654755]
** most_common: ['none'], gold_ans: ['12', 12]
** most_common: ('32', 1), gold_ans: ['32', 32]
** most_common: ('0', 1), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ('1', 2), gold_ans: ['\\frac{\\sqrt{5}-1}{2}', 0.6180339887498949]
** most_common: ('4', 1), gold_ans: ['5', 5]
** most_common: ('(-2,1)', 1), gold_ans: ['[-2,0]', -20]
** most_common: ('0.178571428571429', 1), gold_ans: ['\\frac{5}{28}', 0.17857142857142858]
** most_common: ('7', 3), gold_ans: ['21', 21]
** most_common: ['none'], gold_ans: ['12', 12]
BackVerify: 1150
** most_common: ('30', 1), gold_ans: ['8', 8]
** most_common: ('20', 1), gold_ans: ['18', 18]
** most_common: ('√60', 1), gold_ans: ['\\sqrt{15}', 3.872983346207417]
** most_common: ('15', 3), gold_ans: ['10', 10]
** most_common: ('\\sqrt{3}+\\frac{5}{3}', 1), gold_ans: ['\\frac{\\sqrt{35}}{3}', 1.9720265943665387]
** most_common: ('96', 1), gold_ans: ['116', 116]
** most_common: ('998.0', 1), gold_ans: ['7004', 7004]
** most_common: ('[-∞,-4]∪[4,∞)', 1), gold_ans: ['(-\\infty,-5]\\cup[5,\\infty)', None]
** most_common: ('3', 3), gold_ans: ['2', 2]
** most_common: ('36', 3), gold_ans: ['36', 36]
** most_common: ('0.0637', 3), gold_ans: ['\\frac{13}{204}', 0.06372549019607843]
** most_common: ('2', 2), gold_ans: ['51', 51]
** most_common: ('0.2', 1), gold_ans: ['\\frac{1}{5}', 0.2]
** most_common: ('0.24', 1), gold_ans: ['\\frac{56}{5}', 11.2]
** most_common: ('-0.707106781', 2), gold_ans: ['-\\frac{\\sqrt{2}}{2}', -0.7071067811865476]
** most_common: ['none'], gold_ans: ['255', 255]
** most_common: ('4', 2), gold_ans: ['8', 8]
** most_common: ['none'], gold_ans: ['x^2-5', None]
** most_common: ('even', 7), gold_ans: ['\\text{odd}', None]
** most_common: ['none'], gold_ans: ['154', 154]
** most_common: ('4', 2), gold_ans: ['19', 19]
** most_common: ('2', 2), gold_ans: ['x+1', None]
** most_common: ('3', 5), gold_ans: ['341', 341]
** most_common: ('4', 2), gold_ans: ['4', 4]
** most_common: ('4', 1), gold_ans: ['10', 10]
** most_common: ('-0.5+sqrt(11)/2and-0.5-sqrt(11)/2', 1), gold_ans: ['1', 1]
** most_common: ('27', 1), gold_ans: ['100', 100]
** most_common: ('0', 1), gold_ans: ['936', 936]
** most_common: ('C', 4), gold_ans: ['\\text{(B)}', None]
** most_common: ('429', 1), gold_ans: ['29', 29]
** most_common: ['none'], gold_ans: ['75,075', 75075]
** most_common: ('60', 2), gold_ans: ['82', 82]
** most_common: ['none'], gold_ans: ['3600', 3600]
** most_common: ['none'], gold_ans: ['3:1', None]
** most_common: ('503', 2), gold_ans: ['\\frac{2009}{4}', 502.25]
** most_common: ('16', 1), gold_ans: ['79', 79]
** most_common: ('6,564,315,895,631', 1), gold_ans: ['561', 561]
** most_common: ('2√3', 1), gold_ans: ['\\sqrt{5}', 2.23606797749979]
** most_common: ('18', 1), gold_ans: ['66', 66]
** most_common: ('3', 1), gold_ans: ['16', 16]
** most_common: ('25π', 7), gold_ans: ['25\\pi', 78.53981633974483]
** most_common: ('\\begin{pmatrix}2&3\\-1&5\\end{pmatrix}', 1), gold_ans: ['\\begin{pmatrix}8&12\\-4&20\\end{pmatrix}', None]
** most_common: ('4', 2), gold_ans: ['9', 9]
** most_common: ('0.6667', 1), gold_ans: ['\\frac{2}{3}', 0.6666666666666666]
** most_common: ['none'], gold_ans: ['\\frac{2}{5}', 0.4]
** most_common: ['none'], gold_ans: ['11', 11]
** most_common: ('\\begin{bmatrix}0&0&0\\0&1&1\\0&1&1\\end{bmatrix}', 2), gold_ans: ['\\begin{pmatrix}0&0&0\\0&1&0\\0&0&1\\end{pmatrix}', None]
** most_common: ('7', 1), gold_ans: ['19', 19]
** most_common: ('x', 4), gold_ans: ['-\\frac{1}{2x}', None]
** most_common: ('24', 2), gold_ans: ['50', 50]
BackVerify: 1200
** most_common: ('17', 4), gold_ans: ['38', 38]
** most_common: ('3', 6), gold_ans: ['6', 6]
** most_common: ('3', 1), gold_ans: ['8', 8]
** most_common: ('11', 1), gold_ans: ['7', 7]
** most_common: ('191', 1), gold_ans: ['175', 175]
** most_common: ('5400', 1), gold_ans: ['50,625', 50625]
** most_common: ('2√22', 1), gold_ans: ['2\\sqrt{22}', 9.38083151964686]
** most_common: ('12', 1), gold_ans: ['12', 12]
** most_common: ('6', 1), gold_ans: ['8', 8]
** most_common: ('1', 1), gold_ans: ['80', 80]
** most_common: ('0.9128742287', 1), gold_ans: ['-\\frac{24}{25}', -0.96]
** most_common: ('-9', 2), gold_ans: ['9', 9]
** most_common: ['none'], gold_ans: ['12', 12]
** most_common: ('0', 1), gold_ans: ['15', 15]
** most_common: ('13', 1), gold_ans: ['18', 18]
** most_common: ('7.38', 1), gold_ans: ['10', 10]
** most_common: ('1', 4), gold_ans: ['2004', 2004]
** most_common: ('100', 2), gold_ans: ['70', 70]
** most_common: ('5400', 2), gold_ans: ['5400', 5400]
** most_common: ('16', 1), gold_ans: ['30', 30]
** most_common: ('31', 1), gold_ans: ['28', 28]
** most_common: ('1', 5), gold_ans: ['24', 24]
** most_common: ('6', 1), gold_ans: ['6', 6]
** most_common: ('9.5', 1), gold_ans: ['15', 15]
** most_common: ('2', 5), gold_ans: ['4', 4]
** most_common: ('\\frac{2}{3}', 1), gold_ans: ['\\frac{1}{9}', 0.1111111111111111]
** most_common: ['none'], gold_ans: ['24', 24]
** most_common: ('16', 1), gold_ans: ['18', 18]
** most_common: ('2^2002-1', 1), gold_ans: ['\\frac{1777}{1492}', 1.1910187667560321]
** most_common: ('5.0554...cos(31.7...)', 1), gold_ans: ['2\\cos15', 5.403023058681397]
** most_common: ('\\frac{2}{3}', 1), gold_ans: ['\\frac{1}{6}', 0.16666666666666666]
** most_common: ('-9', 1), gold_ans: ['\\begin{pmatrix}-1\\-8\\2\\end{pmatrix}', None]
** most_common: ('\\frac{91}{216}', 1), gold_ans: ['\\frac{91}{216}', 0.4212962962962963]
** most_common: ('2344', 1), gold_ans: ['1155', 1155]
** most_common: ('undefined', 1), gold_ans: ['45', 45]
** most_common: ('39', 1), gold_ans: ['10', 10]
** most_common: ('12', 2), gold_ans: ['12', 12]
** most_common: ('3.5', 2), gold_ans: ['3.5', 3.5]
** most_common: ('-π/2toπ/2', 1), gold_ans: ['[-\\frac{\\pi}{2},\\frac{\\pi}{2}]', None]
** most_common: ('\\sqrt{3}', 2), gold_ans: ['\\sqrt{3}', 1.7320508075688772]
** most_common: ('6', 3), gold_ans: ['5', 5]
** most_common: ('6', 1), gold_ans: ['12', 12]
** most_common: ('6', 1), gold_ans: ['216', 216]
** most_common: ('-π/3', 1), gold_ans: ['-\\frac{\\pi}{3}', -1.0471975511965976]
** most_common: ('(-∞,2)∪(2,3)∪(3,∞)', 3), gold_ans: ['(-\\infty,2)\\cup(3,\\infty)', None]
** most_common: ('1.9242272147951837e-7', 1), gold_ans: ['0', 0]
** most_common: ('2', 1), gold_ans: ['-4', -4]
** most_common: ['none'], gold_ans: ['1599', 1599]
** most_common: ('6x^2+30x+36', 3), gold_ans: ['6x^2+30x+36', None]
** most_common: ('4', 8), gold_ans: ['16', 16]
BackVerify: 1250
** most_common: ('-2,1', 4), gold_ans: ['1', 1]
** most_common: ('1', 2), gold_ans: ['-\\frac{2010012}{2010013}', -0.99999950249078]
** most_common: ('10', 1), gold_ans: ['10', 10]
** most_common: ('4', 2), gold_ans: ['9', 9]
** most_common: ('39366', 1), gold_ans: ['41230', 41230]
** most_common: ('0', 3), gold_ans: ['500', 500]
** most_common: ('\\frac{8}{3}', 2), gold_ans: ['\\frac{8}{3}', 2.6666666666666665]
** most_common: ('\\frac{3}{2}', 4), gold_ans: ['-\\frac{1}{8}', -0.125]
** most_common: ('78.66', 1), gold_ans: ['10', 10]
** most_common: ('4', 1), gold_ans: ['3\\frac{1}{8}', 3.875]
** most_common: ('783', 1), gold_ans: ['333', 333]
** most_common: ('(b+1)(b^4+b^2+b)+1', 1), gold_ans: ['100100', 100100]
** most_common: ('20', 3), gold_ans: ['400', 400]
** most_common: ('16', 1), gold_ans: ['11', 11]
** most_common: ('\\frac{2pq-p-q}{p+q-\\sqrt{(p+q)^2-4(pq-r^2)}}', 1), gold_ans: ['p+q-r', None]
** most_common: ('12x-34', 6), gold_ans: ['-34+12x', None]
** most_common: ('0', 2), gold_ans: ['80', 80]
** most_common: ('\\frac{7}{6}', 3), gold_ans: ['3', 3]
** most_common: ('0.8660254037844386', 3), gold_ans: ['\\frac{\\sqrt{3}}{2}', 0.8660254037844386]
** most_common: ('60', 3), gold_ans: ['40', 40]
** most_common: ('2', 1), gold_ans: ['\\sqrt{5}', 2.23606797749979]
** most_common: ('2π√(4/5)', 1), gold_ans: ['\\frac{8\\pi}5', 5.026548245743669]
** most_common: ('(6,7)', 1), gold_ans: ['(6,7)', 67]
** most_common: ('0.5', 3), gold_ans: ['0.50', 0.5]
** most_common: ('C', 4), gold_ans: ['\\text{(B)}', None]
** most_common: ('1', 1), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('\\sqrt{2}', 1), gold_ans: ['\\frac{8}{3}', 2.6666666666666665]
** most_common: ('0', 2), gold_ans: ['67', 67]
** most_common: ('13', 11), gold_ans: ['11', 11]
** most_common: ['none'], gold_ans: ['\\frac{7}{20}', 0.35]
** most_common: ['none'], gold_ans: ['2', 2]
** most_common: ('150', 7), gold_ans: ['160', 160]
** most_common: ['none'], gold_ans: ['288', 288]
** most_common: ('(-\\infty,-3)', 1), gold_ans: ['(-\\infty,-3)', None]
** most_common: ['none'], gold_ans: ['128', 128]
** most_common: ('2', 1), gold_ans: ['2', 2]
** most_common: ('55', 1), gold_ans: ['55', 55]
** most_common: ('0.2', 2), gold_ans: ['3.2', 3.2]
** most_common: ('26', 1), gold_ans: ['[46,\\infty)', None]
** most_common: ('3', 2), gold_ans: ['2', 2]
** most_common: ('1', 1), gold_ans: ['36', 36]
** most_common: ['none'], gold_ans: ['1', 1]
** most_common: ('1.0', 1), gold_ans: ['0.8', 0.8]
** most_common: ('137', 1), gold_ans: ['7', 7]
** most_common: ['none'], gold_ans: ['20', 20]
** most_common: ('0.5', 1), gold_ans: ['4,20', 420]
** most_common: ('20', 1), gold_ans: ['20', 20]
** most_common: ('π', 2), gold_ans: ['\\pi', 3.141592653589793]
** most_common: ['none'], gold_ans: ['22', 22]
** most_common: ('2', 1), gold_ans: ['163', 163]
BackVerify: 1300
** most_common: ('15', 2), gold_ans: ['13', 13]
** most_common: ['none'], gold_ans: ['\\frac{8}{45}', 0.17777777777777778]
** most_common: ['none'], gold_ans: ['36', 36]
** most_common: ('6√10', 1), gold_ans: ['8\\sqrt{55}', 59.329587896765304]
** most_common: ('3', 1), gold_ans: ['3s^2', None]
** most_common: ('72', 1), gold_ans: ['112', 112]
** most_common: ('104', 1), gold_ans: ['104', 104]
** most_common: ('1', 3), gold_ans: ['(0,1)', None]
** most_common: ('25', 7), gold_ans: ['25\\,\\text{km}', None]
** most_common: ('6', 7), gold_ans: ['18', 18]
** most_common: ('0.1111', 1), gold_ans: ['\\frac{1}{9}', 0.1111111111111111]
** most_common: ('\\sqrt{\\frac{13}{3}}', 1), gold_ans: ['2', 2]
** most_common: ('x^5-x^4+x^3-x^2+x+1', 2), gold_ans: ['x^5-x^4+x^3-x^2+x-1', None]
** most_common: ('1', 1), gold_ans: ['0', 0]
** most_common: ('undefined', 1), gold_ans: ['450', 450]
** most_common: ('-2', 1), gold_ans: ['-2', -2]
** most_common: ('13', 4), gold_ans: ['104', 104]
** most_common: ('0.1667', 3), gold_ans: ['\\frac{1}{6}', 0.16666666666666666]
** most_common: ('65', 1), gold_ans: ['116-75i', None]
** most_common: ['none'], gold_ans: ['\\pi', 3.141592653589793]
** most_common: ('15', 5), gold_ans: ['\\frac{3}{2}', 1.5]
** most_common: ('3', 2), gold_ans: ['15', 15]
** most_common: ('1', 1), gold_ans: ['\\frac{7}{8}', 0.875]
** most_common: ['none'], gold_ans: ['25_{6}', None]
** most_common: ('16', 2), gold_ans: ['16', 16]
** most_common: ('18', 2), gold_ans: ['18', 18]
** most_common: ('(19/2,3)or(5,2)', 1), gold_ans: ['(-1,8)', -18]
** most_common: ('(x^2+1)(-16x^2+2x+1)', 1), gold_ans: ['(-4x^2+x+1)(4x^2+x+1)', None]
** most_common: ('15', 1), gold_ans: ['49', 49]
** most_common: ('20', 1), gold_ans: ['16', 16]
** most_common: ('8', 2), gold_ans: ['8-i', None]
** most_common: ('25', 2), gold_ans: ['25', 25]
** most_common: ('2', 3), gold_ans: ['2^{2005}', None]
** most_common: ('\\frac{14}{3}', 1), gold_ans: ['\\frac{14}{3}', 4.666666666666667]
** most_common: ('33', 3), gold_ans: ['27', 27]
** most_common: ('340', 1), gold_ans: ['906', 906]
** most_common: ('36', 3), gold_ans: ['18', 18]
** most_common: ('0.5', 1), gold_ans: ['\\frac{5}{9}', 0.5555555555555556]
** most_common: ('\\frac{10}{11}', 1), gold_ans: ['\\frac{10}{11}', 0.9090909090909091]
** most_common: ('90', 1), gold_ans: ['55', 55]
** most_common: ('0.1667', 6), gold_ans: ['\\frac{1}{6}', 0.16666666666666666]
** most_common: ('(-25,355,-519,\\frac{2060}{3})', 1), gold_ans: ['(4,1,4,0)', 4140]
** most_common: ('1', 3), gold_ans: ['-4', -4]
** most_common: ('6', 1), gold_ans: ['5', 5]
** most_common: ('84224', 1), gold_ans: ['11189', 11189]
** most_common: ('2', 1), gold_ans: ['3', 3]
** most_common: ('1080', 2), gold_ans: ['5400', 5400]
** most_common: ('16', 3), gold_ans: ['16', 16]
** most_common: ('120', 1), gold_ans: ['8', 8]
** most_common: ('348.54', 1), gold_ans: ['\\sqrt{74}', 8.602325267042627]
BackVerify: 1350
** most_common: ('\\frac{4}{9}', 1), gold_ans: ['\\frac{8}{9}', 0.8888888888888888]
** most_common: ['none'], gold_ans: ['7.2', 7.2]
** most_common: ('2.5', 1), gold_ans: ['125', 125]
** most_common: ('18216', 1), gold_ans: ['0', 0]
** most_common: ('12', 5), gold_ans: ['24', 24]
** most_common: ('4R^2', 2), gold_ans: ['32R^2-3(a^2+b^2+c^2)', None]
** most_common: ('0.25', 2), gold_ans: ['\\frac{1}{8}', 0.125]
** most_common: ['none'], gold_ans: ['(7,6)', 76]
** most_common: ('-1', 2), gold_ans: ['-81', -81]
** most_common: ['none'], gold_ans: ['\\begin{pmatrix}6/5\\-17/5\\end{pmatrix}', None]
** most_common: ('undefined', 8), gold_ans: ['0', 0]
** most_common: ('\\frac{16}{81}', 2), gold_ans: ['\\frac{16}{81}', 0.19753086419753085]
** most_common: ('619', 3), gold_ans: ['687', 687]
** most_common: ('1536', 1), gold_ans: ['192', 192]
** most_common: ('9π', 8), gold_ans: ['9\\pi', 28.274333882308138]
** most_common: ('0', 3), gold_ans: ['0', 0]
** most_common: ('48', 1), gold_ans: ['144', 144]
** most_common: ('6', 1), gold_ans: ['4', 4]
** most_common: ('1.666667', 1), gold_ans: ['6', 6]
** most_common: ('13', 1), gold_ans: ['-11', -11]
** most_common: ('(\\frac{4}{5},\\frac{1}{5})', 2), gold_ans: ['(\\frac{4}{3},-\\frac{1}{3})', 1.3333333333333333]
** most_common: ['none'], gold_ans: ['165', 165]
** most_common: ['none'], gold_ans: ['81', 81]
** most_common: ('(1,-2)', 1), gold_ans: ['(1,-2)', -1]
** most_common: ('7', 1), gold_ans: ['7', 7]
** most_common: ('1', 2), gold_ans: ['2', 2]
** most_common: ('4', 1), gold_ans: ['0', 0]
** most_common: ('86', 2), gold_ans: ['1076', 1076]
** most_common: ('7and8', 1), gold_ans: ['12', 12]
** most_common: ('7', 3), gold_ans: ['7', 7]
** most_common: ('3', 2), gold_ans: ['4', 4]
** most_common: ('20π√101', 1), gold_ans: ['78\\pi', 245.04422698000388]
** most_common: ('4', 1), gold_ans: ['2', 2]
** most_common: ('-3,3', 1), gold_ans: ['\\sqrt{5}', 2.23606797749979]
** most_common: ('0.9236111111111112', 1), gold_ans: ['\\frac{1}{108}', 0.009259259259259259]
** most_common: ('-11', 1), gold_ans: ['-9', -9]
** most_common: ('\\frac{2}{9}', 1), gold_ans: ['\\frac{1}{2}', 0.5]
** most_common: ('0.2', 1), gold_ans: ['\\frac{1}{3}', 0.3333333333333333]
** most_common: ['none'], gold_ans: ['2112_6', 21126]
** most_common: ('-7', 2), gold_ans: ['-7', -7]
** most_common: ('4√5', 1), gold_ans: ['\\frac{192\\sqrt{14}}{25}', 28.73592873042387]
** most_common: ('200', 1), gold_ans: ['900', 900]
** most_common: ('2', 2), gold_ans: ['3', 3]
** most_common: ('7', 1), gold_ans: ['\\frac{14}{3}', 4.666666666666667]
** most_common: ['none'], gold_ans: ['36', 36]
** most_common: ('120', 1), gold_ans: ['120', 120]
** most_common: ['none'], gold_ans: ['720', 720]
** most_common: ['none'], gold_ans: ['255', 255]
** most_common: ['none'], gold_ans: ['19', 19]
** most_common: ('176π/3', 1), gold_ans: ['\\frac{176}{3}\\pi', 184.30676901060122]
BackVerify: 1400
** most_common: ('-0.8660254037844386', 2), gold_ans: ['-\\frac{\\sqrt{3}}{2}', -0.8660254037844386]
** most_common: ('0', 3), gold_ans: ['-14', -14]
** most_common: ('105', 2), gold_ans: ['105', 105]
** most_common: ('99π', 12), gold_ans: ['99\\pi', 311.01767270538954]
** most_common: ('20', 2), gold_ans: ['3', 3]
** most_common: ('8', 2), gold_ans: ['9', 9]
