INFO 09-19 01:14:12 llm_engine.py:174] Initializing an LLM engine (v0.5.4) with config: model='/cpfs/29f69eb5e2e60f26/user/sft_intern/slz/Qwen2-7B-Instruct', speculative_config=None, tokenizer='/cpfs/29f69eb5e2e60f26/user/sft_intern/slz/Qwen2-7B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None), seed=0, served_model_name=/cpfs/29f69eb5e2e60f26/user/sft_intern/slz/Qwen2-7B-Instruct, use_v2_block_manager=False, enable_prefix_caching=False)
INFO 09-19 01:14:12 model_runner.py:720] Starting to load model /cpfs/29f69eb5e2e60f26/user/sft_intern/slz/Qwen2-7B-Instruct...
INFO 09-19 01:14:28 model_runner.py:732] Loading model weights took 14.2487 GB
INFO 09-19 01:14:29 gpu_executor.py:102] # GPU blocks: 61183, # CPU blocks: 4681
INFO 09-19 01:14:32 model_runner.py:1024] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 09-19 01:14:32 model_runner.py:1028] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 09-19 01:14:40 model_runner.py:1225] Graph capturing finished in 8 secs.
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
{'question': 'What is the molecular weight of 8 moles of Citric acid', 'tree_solution': [['What is the molecular weight of 8 moles of Citric acid', "I'm ready to help! Here's the next step in solving the problem:\n\nSTEP: Determine the molecular weight of one mole of Citric acid (C6H8O7).", 'STEP: Write the molecular formula for Citric acid (C6H8O7) and use it to calculate the molecular weight of one mole of Citric acid by summing the atomic weights of its constituent elements.', 'STEP: Write the molecular formula for Citric acid (C6H8O7) as C₆H₈O₇, and identify the atomic weights of its constituent elements: Carbon (C), Hydrogen (H), and Oxygen (O).', 'STEP: The molecular formula for Citric acid is C₆H₈O₇, which consists of 6 Carbon atoms, 8 Hydrogen atoms, and 7 Oxygen atoms.', 'STEP: Write the atomic weights of Carbon (C), Hydrogen (H), and Oxygen (O): C = 12.01 g/mol, H = 1.01 g/mol, and O = 16.00 g/mol.', 'Here is the solution to the given question:\n\nSOLUTION:\n\nTo find the molecular weight of Citric acid (C6H8O7), we need to calculate the sum of the atomic weights of its constituent elements. The molecular formula for Citric acid is C₆H₈O₇, which consists of 6 Carbon atoms, 8 Hydrogen atoms, and 7 Oxygen atoms.\n\nThe atomic weights of the elements are:\n\nC = 12.01 g/mol\nH = 1.01 g/mol\nO = 16.00 g/mol\n\nTo calculate the molecular weight, we multiply the number of atoms of each element by its atomic weight and sum the results:\n\nC₆H₈O₇ = (6 x 12.01 g/mol) + (8 x 1.01 g/mol) + (7 x 16.00 g/mol)\n= 72.06 g/mol + 8.08 g/mol + 112.00 g/mol\n= 192.14 g/mol\n\nFINAL ANSWER: The answer is 192.14'], ['What is the molecular weight of 8 moles of Citric acid', "I'm ready to help! Here's the next step in solving the problem:\n\nSTEP: Determine the molecular weight of one mole of Citric acid (C6H8O7).", 'STEP: Write the molecular formula for Citric acid (C6H8O7) and use it to calculate the molecular weight of one mole of Citric acid by summing the atomic weights of its constituent elements.', 'STEP: Write the molecular formula for Citric acid (C6H8O7) as C₆H₈O₇, and identify the atomic weights of its constituent elements: Carbon (C), Hydrogen (H), and Oxygen (O).', 'STEP: The molecular formula for Citric acid is C₆H₈O₇, which consists of 6 Carbon atoms, 8 Hydrogen atoms, and 7 Oxygen atoms.', 'SOLUTION:\n\nTo calculate the molecular weight of one mole of Citric acid (C6H8O7), we need to sum the atomic weights of its constituent elements.\n\nThe molecular formula for Citric acid is C₆H₈O₇, which consists of 6 Carbon atoms, 8 Hydrogen atoms, and 7 Oxygen atoms.\n\nThe atomic weights of the elements are:\n\n* Carbon (C): 12.01 g/mol\n* Hydrogen (H): 1.01 g/mol\n* Oxygen (O): 16.00 g/mol\n\nTo calculate the molecular weight of one mole of Citric acid, we add the atomic weights of its constituent elements:\n\nC₆ = 6 x 12.01 g/mol = 72.06 g/mol\nH₈ = 8 x 1.01 g/mol = 8.08 g/mol\nO₇ = 7 x 16.00 g/mol = 112.00 g/mol\n\nThe total molecular weight of Citric acid is:\n72.06 g/mol + 8.08 g/mol + 112.00 g/mol = 192.14 g/mol\n\nFINAL ANSWER: The answer is 192.14'], ['What is the molecular weight of 8 moles of Citric acid', "I'm ready to help! Here's the next step in solving the problem:\n\nSTEP: Determine the molecular weight of one mole of Citric acid (C6H8O7).", 'STEP: Write the molecular formula for Citric acid (C6H8O7) and use it to calculate the molecular weight of one mole of Citric acid by summing the atomic weights of its constituent elements.', 'STEP: Write the molecular formula for Citric acid (C6H8O7) as C₆H₈O₇, and identify the atomic weights of its constituent elements: Carbon (C), Hydrogen (H), and Oxygen (O).', "SOLUTION:\n\nTo calculate the molecular weight of one mole of Citric acid (C6H8O7), we need to sum the atomic weights of its constituent elements. The molecular formula for Citric acid is C₆H₈O₇.\n\nThe atomic weights of the elements are:\n\n* Carbon (C): 12.01 g/mol\n* Hydrogen (H): 1.01 g/mol\n* Oxygen (O): 16.00 g/mol\n\nNow, let's calculate the molecular weight of one mole of Citric acid:\n\nMolecular weight = Sum of atomic weights of constituent elements\n= 6(C) + 8(H) + 7(O)\n= 6(12.01) + 8(1.01) + 7(16.00)\n= 72.06 + 8.08 + 112.00\n= 192.14 g/mol\n\nFINAL ANSWER: The answer is 192.14"], ['What is the molecular weight of 8 moles of Citric acid', "I'm ready to help! Here's the next step in solving the problem:\n\nSTEP: Determine the molecular weight of one mole of Citric acid (C6H8O7).", 'STEP: Write the molecular formula for Citric acid (C6H8O7) and use it to calculate the molecular weight of one mole of Citric acid by summing the atomic weights of its constituent elements.', "Here's the solution to the problem:\n\nSOLUTION:\n\nTo calculate the molecular weight of Citric acid (C6H8O7), we need to sum the atomic weights of its constituent elements. The atomic weights of C, H, and O are 12.01 g/mol, 1.01 g/mol, and 16.00 g/mol, respectively.\n\nThe molecular formula for Citric acid is C6H8O7, which means it consists of 6 carbon atoms, 8 hydrogen atoms, and 7 oxygen atoms.\n\nThe molecular weight of one mole of Citric acid is calculated as follows:\n\nMolecular weight = (6 x atomic weight of C) + (8 x atomic weight of H) + (7 x atomic weight of O)\n= (6 x 12.01 g/mol) + (8 x 1.01 g/mol) + (7 x 16.00 g/mol)\n= 72.06 g/mol + 8.08 g/mol + 112.00 g/mol\n= 192.14 g/mol\n\nFINAL ANSWER: The answer is 192.14."], ['What is the molecular weight of 8 moles of Citric acid', "I'm ready to help! Here's the next step in solving the problem:\n\nSTEP: Determine the molecular weight of one mole of Citric acid (C6H8O7).", 'SOLUTION:\n\nTo determine the molecular weight of one mole of Citric acid (C6H8O7), we need to calculate the sum of the atomic weights of its constituent elements.\n\nThe molecular formula of Citric acid is C6H8O7. We can break it down into its constituent elements as follows:\n\n* Carbon (C): 6 atoms\n* Hydrogen (H): 8 atoms\n* Oxygen (O): 7 atoms\n\nThe atomic weights of these elements are:\n\n* Carbon (C): 12.01 g/mol\n* Hydrogen (H): 1.01 g/mol\n* Oxygen (O): 16.00 g/mol\n\nTo calculate the molecular weight of Citric acid, we multiply the number of atoms of each element by its atomic weight and then add the results:\n\nMolecular weight = (6 x 12.01) + (8 x 1.01) + (7 x 16.00)\n= 72.06 + 8.08 + 112.00\n= 192.14 g/mol\n\nFINAL ANSWER: The answer is 192.14.'], ['What is the molecular weight of 8 moles of Citric acid', 'SOLUTION:\n\nThe molecular formula for Citric acid is C6H8O7. To find the molecular weight, we need to add the atomic weights of each element in the molecule.\n\nMolecular weight of Carbon (C) = 12.01 g/mol\nMolecular weight of Hydrogen (H) = 1.01 g/mol\nMolecular weight of Oxygen (O) = 16.00 g/mol\n\nMolecular weight of Citric acid (C6H8O7) = 6(12.01) + 8(1.01) + 7(16.00)\n= 72.06 + 8.08 + 112.00\n= 192.14 g/mol\n\nSince we have 8 moles of Citric acid, we multiply the molecular weight by 8:\n\n8 moles of Citric acid = 8 x 192.14 g/mol\n= 1537.12 g\n\nFINAL ANSWER: The answer is 1537.12.'], ['What is the molecular weight of 8 moles of Citric acid', 'CLARIFIED QUESTION: What is the total molecular weight of 8 moles of Citric acid, which is a compound with the molecular formula C6H8O7?', 'STEP: Find the molecular weight of one mole of Citric acid (C6H8O7).', 'STEP: Calculate the atomic weights of the elements present in the molecular formula C6H8O7: Carbon (C), Hydrogen (H), and Oxygen (O).', 'STEP: Calculate the atomic weight of Carbon (C) in the molecular formula C6H8O7.', 'STEP: The atomic weight of Carbon (C) in the molecular formula C6H8O7 is 6 x 12.01 g/mol = 72.06 g/mol.', 'STEP: Calculate the atomic weight of Hydrogen (H) in the molecular formula C6H8O7.', 'SOLUTION:\n\nThe given molecular formula for Citric acid is C6H8O7. To find the molecular weight of one mole of Citric acid, we need to calculate the atomic weights of the elements present in the molecular formula.\n\nThe atomic weights of the elements are:\n\n* Carbon (C): 12.01 g/mol\n* Hydrogen (H): 1.008 g/mol\n* Oxygen (O): 16.00 g/mol\n\nFirst, we will calculate the atomic weight of Carbon (C) in the molecular formula C6H8O7:\n\nAtomic weight of Carbon (C) = 6 x 12.01 g/mol = 72.06 g/mol\n\nNext, we will calculate the atomic weight of Hydrogen (H) in the molecular formula C6H8O7:\n\nAtomic weight of Hydrogen (H) = 8 x 1.008 g/mol = 8.064 g/mol\n\nFinally, we will calculate the atomic weight of Oxygen (O) in the molecular formula C6H8O7:\n\nAtomic weight of Oxygen (O) = 7 x 16.00 g/mol = 112.00 g/mol\n\nNow, we will calculate the molecular weight of one mole of Citric acid:\n\nMolecular weight of Citric acid = Atomic weight of Carbon (C) + Atomic weight of Hydrogen (H) + Atomic weight of Oxygen (O)\n= 72.06 g/mol + 8.064 g/mol + 112.00 g/mol\n= 192.12 g/mol\n\nSince we are given that we have 8 moles of Citric acid, we can multiply the molecular weight by 8:\n\nMolecular weight of 8 moles of Citric acid = 8 x 192.12 g/mol = 1536.96 g/mol\n\nFINAL ANSWER: The answer is 1536.96.'], ['What is the molecular weight of 8 moles of Citric acid', 'CLARIFIED QUESTION: What is the total molecular weight of 8 moles of Citric acid, which is a compound with the molecular formula C6H8O7?', 'STEP: Find the molecular weight of one mole of Citric acid (C6H8O7).', 'STEP: Calculate the atomic weights of the elements present in the molecular formula C6H8O7: Carbon (C), Hydrogen (H), and Oxygen (O).', 'STEP: Calculate the atomic weight of Carbon (C) in the molecular formula C6H8O7.', 'STEP: The atomic weight of Carbon (C) in the molecular formula C6H8O7 is 6 x 12.01 g/mol = 72.06 g/mol.', 'SOLUTION:\n\nTo find the molecular weight of 8 moles of Citric acid, we need to first find the molecular weight of one mole of Citric acid (C6H8O7). To do this, we need to calculate the atomic weights of the elements present in the molecular formula C6H8O7: Carbon (C), Hydrogen (H), and Oxygen (O).\n\nThe atomic weights of the elements are:\n\n* Carbon (C): 12.01 g/mol\n* Hydrogen (H): 1.01 g/mol\n* Oxygen (O): 16.00 g/mol\n\nNow, we need to calculate the atomic weight of Carbon (C) in the molecular formula C6H8O7. This is done by multiplying the number of atoms of Carbon (C) by its atomic weight:\n\n6 x 12.01 g/mol = 72.06 g/mol\n\nNext, we need to calculate the atomic weight of Hydrogen (H) in the molecular formula C6H8O7. This is done by multiplying the number of atoms of Hydrogen (H) by its atomic weight:\n\n8 x 1.01 g/mol = 8.08 g/mol\n\nFinally, we need to calculate the atomic weight of Oxygen (O) in the molecular formula C6H8O7. This is done by multiplying the number of atoms of Oxygen (O) by its atomic weight:\n\n7 x 16.00 g/mol = 112.00 g/mol\n\nNow, we can add up the atomic weights of the elements to find the molecular weight of one mole of Citric acid:\n\n72.06 g/mol + 8.08 g/mol + 112.00 g/mol = 192.14 g/mol\n\nSince we want to find the molecular weight of 8 moles of Citric acid, we multiply the molecular weight of one mole by 8:\n\n192.14 g/mol x 8 = 1537.12 g/mol\n\nFINAL ANSWER: The answer is 1537.12.'], ['What is the molecular weight of 8 moles of Citric acid', 'CLARIFIED QUESTION: What is the total molecular weight of 8 moles of Citric acid, which is a compound with the molecular formula C6H8O7?', 'STEP: Find the molecular weight of one mole of Citric acid (C6H8O7).', 'STEP: Calculate the atomic weights of the elements present in the molecular formula C6H8O7: Carbon (C), Hydrogen (H), and Oxygen (O).', 'STEP: Calculate the atomic weight of Carbon (C) in the molecular formula C6H8O7.', 'SOLUTION:\n\nThe molecular formula of Citric acid is C6H8O7. To find the molecular weight of one mole of Citric acid, we need to calculate the atomic weights of the elements present in the molecular formula.\n\nStep 1: Calculate the atomic weights of the elements present in the molecular formula C6H8O7:\n\n* Carbon (C): 12.01 g/mol\n* Hydrogen (H): 1.01 g/mol\n* Oxygen (O): 16.00 g/mol\n\nStep 2: Calculate the atomic weight of Carbon (C) in the molecular formula C6H8O7:\n\n* Since there are 6 atoms of Carbon in the molecular formula C6H8O7, the total atomic weight of Carbon is:\n6 x 12.01 g/mol = 72.06 g/mol\n\nStep 3: Calculate the atomic weight of Hydrogen (H) in the molecular formula C6H8O7:\n\n* Since there are 8 atoms of Hydrogen in the molecular formula C6H8O7, the total atomic weight of Hydrogen is:\n8 x 1.01 g/mol = 8.08 g/mol\n\nStep 4: Calculate the atomic weight of Oxygen (O) in the molecular formula C6H8O7:\n\n* Since there are 7 atoms of Oxygen in the molecular formula C6H8O7, the total atomic weight of Oxygen is:\n7 x 16.00 g/mol = 112.00 g/mol\n\nStep 5: Calculate the molecular weight of one mole of Citric acid (C6H8O7):\n\n* Molecular weight of Carbon: 72.06 g/mol\n* Molecular weight of Hydrogen: 8.08 g/mol\n* Molecular weight of Oxygen: 112.00 g/mol\n* Total molecular weight of Citric acid:\n72.06 g/mol + 8.08 g/mol + 112.00 g/mol = 192.14 g/mol\n\nFINAL ANSWER: The answer is 192.14'], ['What is the molecular weight of 8 moles of Citric acid', 'CLARIFIED QUESTION: What is the total molecular weight of 8 moles of Citric acid, which is a compound with the molecular formula C6H8O7?', 'STEP: Find the molecular weight of one mole of Citric acid (C6H8O7).', 'STEP: Calculate the atomic weights of the elements present in the molecular formula C6H8O7: Carbon (C), Hydrogen (H), and Oxygen (O).', 'SOLUTION:\n\nTo find the molecular weight of 8 moles of Citric acid, we need to first find the molecular weight of one mole of Citric acid (C6H8O7).\n\nStep 1: Find the atomic weights of the elements present in the molecular formula C6H8O7:\n\n* Carbon (C) has an atomic weight of 12.01 g/mol\n* Hydrogen (H) has an atomic weight of 1.008 g/mol\n* Oxygen (O) has an atomic weight of 16.00 g/mol\n\nStep 2: Calculate the molecular weight of one mole of Citric acid (C6H8O7):\n\nMolecular formula: C6H8O7\n\n* Carbon (C): 6 atoms x 12.01 g/mol = 72.06 g/mol\n* Hydrogen (H): 8 atoms x 1.008 g/mol = 8.064 g/mol\n* Oxygen (O): 7 atoms x 16.00 g/mol = 112.00 g/mol\n\nTotal molecular weight of Citric acid (C6H8O7): 72.06 g/mol + 8.064 g/mol + 112.00 g/mol = 192.124 g/mol\n\nStep 3: Calculate the molecular weight of 8 moles of Citric acid:\n\nMolecular weight of one mole of Citric acid: 192.124 g/mol\nNumber of moles: 8 moles\n\nMolecular weight of 8 moles of Citric acid: 8 moles x 192.124 g/mol = 1536.992 g\n\nFINAL ANSWER: The answer is 1536.992'], ['What is the molecular weight of 8 moles of Citric acid', 'CLARIFIED QUESTION: What is the total molecular weight of 8 moles of Citric acid, which is a compound with the molecular formula C6H8O7?', 'STEP: Find the molecular weight of one mole of Citric acid (C6H8O7).', 'SOLUTION:\n\nTo find the molecular weight of one mole of Citric acid (C6H8O7), we need to calculate the atomic weights of its constituent elements and multiply them by their respective numbers.\n\nThe atomic weights of the elements are:\n\n* Carbon (C): 12.01 g/mol\n* Hydrogen (H): 1.01 g/mol\n* Oxygen (O): 16.00 g/mol\n\nThe molecular formula of Citric acid is C6H8O7, so we have:\n\n* 6 carbon atoms: 6 x 12.01 g/mol = 72.06 g/mol\n* 8 hydrogen atoms: 8 x 1.01 g/mol = 8.08 g/mol\n* 7 oxygen atoms: 7 x 16.00 g/mol = 112.00 g/mol\n\nTo find the total molecular weight, we add the weights of the individual elements:\n\n72.06 g/mol + 8.08 g/mol + 112.00 g/mol = 192.14 g/mol\n\nThis is the molecular weight of one mole of Citric acid (C6H8O7).\n\nFINAL ANSWER: The answer is 192.14'], ['What is the molecular weight of 8 moles of Citric acid', 'CLARIFIED QUESTION: What is the total molecular weight of 8 moles of Citric acid, which is a compound with the molecular formula C6H8O7?', 'SOLUTION:\n\nTo find the molecular weight of 8 moles of Citric acid, we need to first find the molecular weight of one mole of Citric acid, and then multiply it by 8.\n\nThe molecular formula of Citric acid is C6H8O7. To find the molecular weight, we need to add the atomic weights of the atoms in the formula.\n\nThe atomic weights of the atoms in the formula are:\n\n* Carbon: 12.01 g/mol\n* Hydrogen: 1.01 g/mol\n* Oxygen: 16.00 g/mol\n\nThe molecular weight of Citric acid is the sum of the atomic weights of the atoms in the formula:\n\nC6H8O7 = 6 x 12.01 + 8 x 1.01 + 7 x 16.00\n= 72.06 + 8.08 + 112.00\n= 192.14 g/mol\n\nNow that we have the molecular weight of one mole of Citric acid, we can multiply it by 8 to find the molecular weight of 8 moles:\n\n8 moles x 192.14 g/mol = 1537.12 g\n\nFINAL ANSWER: The answer is 1537.12']], 'type': 'gsm8k', 'answer': 1536}
dict_keys(['question', 'tree_solution', 'type', 'answer'])
BackVerify: 0
** most_common: ('192.14', 7), gold_ans: 1536
** most_common: ('12421', 6), gold_ans: 12421
** most_common: ('A(tree)', 4), gold_ans: B
** most_common: ('1', 11), gold_ans: 1
** most_common: ('4.17', 10), gold_ans: 4.17
** most_common: ('37', 10), gold_ans: 37
** most_common: ('B)moreresistance', 8), gold_ans: B
** most_common: ('A', 4), gold_ans: B
** most_common: ('132', 12), gold_ans: 132
** most_common: ('83.0', 11), gold_ans: 83
** most_common: ('B(bowlingball)', 3), gold_ans: B
** most_common: ('0.2', 3), gold_ans: A
** most_common: ('9.28', 9), gold_ans: 9.28
** most_common: ('61.83304', 4), gold_ans: 62
** most_common: ('3', 7), gold_ans: 3
** most_common: ('432.0', 12), gold_ans: 432
** most_common: ('3', 10), gold_ans: 3
** most_common: ('A', 6), gold_ans: B
** most_common: ('12', 11), gold_ans: 12
** most_common: ('1', 7), gold_ans: 1
** most_common: ('2874', 8), gold_ans: 2874
** most_common: ('2', 8), gold_ans: 2
** most_common: ('140', 4), gold_ans: 140
** most_common: ('1282.0', 5), gold_ans: 1282
** most_common: ('44.0', 12), gold_ans: 44
** most_common: ('1.25', 9), gold_ans: 1.25
** most_common: ('3', 6), gold_ans: 3
** most_common: ('4.20%', 6), gold_ans: 4.17
** most_common: ('14.02', 5), gold_ans: 19.64
** most_common: ('2', 7), gold_ans: 2
** most_common: ('82', 8), gold_ans: A
** most_common: ('68.4594', 2), gold_ans: 272
** most_common: ('15', 11), gold_ans: 15
** most_common: ('16', 12), gold_ans: 16
** most_common: ('100.06', 8), gold_ans: 100
** most_common: ('4636', 5), gold_ans: 6052
** most_common: ('11', 12), gold_ans: 11
** most_common: ('140.05', 9), gold_ans: 140
** most_common: ('6500', 8), gold_ans: 6500
** most_common: ('25.87', 1), gold_ans: 25.93
** most_common: ('153.81', 11), gold_ans: 152
** most_common: ('0.2', 8), gold_ans: 1.4
** most_common: ('\\frac{3}{16}', 3), gold_ans: B
** most_common: ('123.56', 1), gold_ans: 38.71
** most_common: ('404.5', 6), gold_ans: 645
** most_common: ('1', 12), gold_ans: 1
** most_common: ('B', 3), gold_ans: B
** most_common: ('3', 7), gold_ans: 3
** most_common: ('99.38%', 1), gold_ans: 81.63
** most_common: ('1', 12), gold_ans: 1
BackVerify: 50
** most_common: ('1', 5), gold_ans: 2
** most_common: ('204', 3), gold_ans: 309
** most_common: ('17.0', 5), gold_ans: 17.5
** most_common: ('1', 5), gold_ans: 1
** most_common: ('206.91', 4), gold_ans: 791
** most_common: ('14', 9), gold_ans: 2
** most_common: ('2', 10), gold_ans: 2
** most_common: ('19', 10), gold_ans: 19
** most_common: ('80.0', 8), gold_ans: 80
** most_common: ('850', 7), gold_ans: 850
** most_common: ('48', 12), gold_ans: 48
** most_common: ('323.0', 12), gold_ans: 323
** most_common: ('10', 10), gold_ans: 10
** most_common: ('60', 10), gold_ans: 60
** most_common: ('7.8', 8), gold_ans: 7.8
** most_common: ('3', 8), gold_ans: 2
** most_common: ('11', 11), gold_ans: 11
** most_common: ('60', 6), gold_ans: 30
** most_common: ('35', 10), gold_ans: 135
** most_common: ('1.69', 9), gold_ans: 1.69
** most_common: ('13.0', 9), gold_ans: 13
** most_common: ('322', 11), gold_ans: 322
** most_common: ('2.8', 6), gold_ans: B
** most_common: ('38.63', 7), gold_ans: 38.63
** most_common: ('4.5', 4), gold_ans: 54
** most_common: ('19', 6), gold_ans: 1.9
** most_common: ('31', 8), gold_ans: 31
** most_common: ('1.4', 9), gold_ans: 1.4
** most_common: ('18.65%', 2), gold_ans: 18.71
** most_common: ('B', 3), gold_ans: B
** most_common: ('7.1725', 5), gold_ans: 7.17
** most_common: ('6', 7), gold_ans: 14.75
** most_common: ('1', 6), gold_ans: 53
** most_common: ('2', 11), gold_ans: 2
** most_common: ('15', 9), gold_ans: 15
** most_common: ('410', 12), gold_ans: 410
** most_common: ('1080.2', 3), gold_ans: 1080
** most_common: ('6', 7), gold_ans: 3
** most_common: ('3', 9), gold_ans: 3
** most_common: ('5', 8), gold_ans: 5
** most_common: ('4', 6), gold_ans: 2
** most_common: ('30', 5), gold_ans: 30
** most_common: ('A', 2), gold_ans: A
** most_common: ('108', 7), gold_ans: 180
** most_common: ('40.94%', 2), gold_ans: 40.91
** most_common: ('0.26', 7), gold_ans: 17.8
** most_common: ('37', 2), gold_ans: 25
** most_common: ('0.7', 12), gold_ans: 0.7
** most_common: ('12', 4), gold_ans: 18
** most_common: ('77', 4), gold_ans: B
BackVerify: 100
** most_common: ('118.0095', 2), gold_ans: 944
** most_common: ('150.14', 9), gold_ans: 150
** most_common: ('14394', 3), gold_ans: 14294
** most_common: ('2', 7), gold_ans: 36
** most_common: ('3', 10), gold_ans: 3
** most_common: ('32', 8), gold_ans: 32
** most_common: ('26', 7), gold_ans: 26
** most_common: ('120', 4), gold_ans: A
** most_common: ('10', 3), gold_ans: 10
** most_common: ('8317', 8), gold_ans: 9517
** most_common: ('100', 10), gold_ans: 100
** most_common: ('11.5', 7), gold_ans: 11.5
** most_common: ('11700.0', 10), gold_ans: 11700
** most_common: ('57', 7), gold_ans: B
** most_common: ('10.0', 5), gold_ans: 10
** most_common: ('3', 11), gold_ans: 3
** most_common: ('B', 7), gold_ans: A
** most_common: ('11.90', 3), gold_ans: 11.9
** most_common: ('26.18%', 2), gold_ans: 26.42
** most_common: ('392', 12), gold_ans: 392
** most_common: ('A', 4), gold_ans: A
** most_common: ('3', 11), gold_ans: 3
** most_common: ('4.7', 1), gold_ans: 48
** most_common: ('122.13', 5), gold_ans: 4.92
** most_common: ('9', 5), gold_ans: 9
** most_common: ('900', 6), gold_ans: 900
** most_common: ('38', 10), gold_ans: 38
** most_common: ('22', 8), gold_ans: 22
** most_common: ('0.07', 5), gold_ans: 7
** most_common: ('56', 10), gold_ans: 56
** most_common: ('5', 6), gold_ans: 5.44
** most_common: ('3.0', 12), gold_ans: 3
** most_common: ('A', 7), gold_ans: A
** most_common: ('50', 10), gold_ans: 110
** most_common: ('10', 8), gold_ans: 10
** most_common: ('1232', 8), gold_ans: 1232
** most_common: ('100', 10), gold_ans: 100
** most_common: ('3', 4), gold_ans: 3
** most_common: ('76.02', 4), gold_ans: 76
** most_common: ('729', 11), gold_ans: 729
** most_common: ('18', 5), gold_ans: 7
** most_common: ('6.5', 12), gold_ans: 6.5
** most_common: ('98', 11), gold_ans: 98
** most_common: ('75.011', 5), gold_ans: 228
** most_common: ('A', 5), gold_ans: A
** most_common: ('199.88', 8), gold_ans: 200
** most_common: ('2.54', 7), gold_ans: 2.54
** most_common: ('55', 12), gold_ans: 55
** most_common: ('2.78', 12), gold_ans: 2.78
** most_common: ('7360', 5), gold_ans: B
BackVerify: 150
** most_common: ('6', 9), gold_ans: 6
** most_common: ('387.85', 11), gold_ans: 115.83
** most_common: ('11.25', 10), gold_ans: 11.25
** most_common: ('A', 8), gold_ans: B
** most_common: ('1.75', 12), gold_ans: 1.75
** most_common: ('(A)lessfriction', 4), gold_ans: B
** most_common: ('1', 11), gold_ans: 1
** most_common: ('68', 12), gold_ans: 68
** most_common: ('4', 4), gold_ans: 3
** most_common: ('43', 5), gold_ans: 43
** most_common: ('150', 11), gold_ans: 150
** most_common: ('2', 12), gold_ans: 2
** most_common: ('1', 8), gold_ans: 1
** most_common: ('2', 9), gold_ans: 36
** most_common: ('1600', 12), gold_ans: 1600
** most_common: ('3', 11), gold_ans: 3
** most_common: ('0.6666666666666666', 4), gold_ans: 0.6666666667
** most_common: ('49', 11), gold_ans: 49
** most_common: ('1', 9), gold_ans: 1
** most_common: ('58.09', 8), gold_ans: 348
** most_common: ('690', 8), gold_ans: 690
** most_common: ('40', 9), gold_ans: 40
** most_common: ('215', 8), gold_ans: 215
** most_common: ('12', 3), gold_ans: 10
** most_common: ('1', 6), gold_ans: 18
** most_common: ('2', 7), gold_ans: 2
** most_common: ('21', 10), gold_ans: 21
** most_common: ('7', 5), gold_ans: 7
** most_common: ('126.01', 3), gold_ans: 432
** most_common: ('10', 10), gold_ans: 10
** most_common: ('42.10', 5), gold_ans: 420
** most_common: ('99', 7), gold_ans: 99
** most_common: ('A', 8), gold_ans: A
** most_common: ('196.07', 11), gold_ans: 196
** most_common: ('391.14', 4), gold_ans: 391
** most_common: ('-1.85', 4), gold_ans: 5.58
** most_common: ('118.0096', 2), gold_ans: 1062
** most_common: ('A', 4), gold_ans: A
** most_common: ('34', 11), gold_ans: 34
** most_common: ('3', 9), gold_ans: 3
** most_common: ('294.17', 4), gold_ans: 296
** most_common: ('269.0', 12), gold_ans: 269
** most_common: ('12.87', 3), gold_ans: A
** most_common: ('2', 4), gold_ans: 10
** most_common: ('110', 10), gold_ans: 110
** most_common: ('620', 11), gold_ans: 620
** most_common: ('1', 11), gold_ans: 1
** most_common: ('48000.0', 4), gold_ans: 48
** most_common: ('2', 7), gold_ans: 36
** most_common: ('17', 4), gold_ans: 17
BackVerify: 200
** most_common: ('21.99', 3), gold_ans: 20.99
** most_common: ('12', 4), gold_ans: 12
** most_common: ('18', 7), gold_ans: 18
** most_common: ('98', 11), gold_ans: 98
** most_common: ('1.54', 6), gold_ans: 1.54
** most_common: ('27.0', 7), gold_ans: 27
** most_common: ('2', 8), gold_ans: 2
** most_common: ('1', 6), gold_ans: 1
** most_common: ('12.17', 4), gold_ans: 12
** most_common: ('B', 3), gold_ans: B
** most_common: ('1', 8), gold_ans: 1
** most_common: ('1', 10), gold_ans: 1
** most_common: ('5098', 11), gold_ans: 5098
** most_common: ('1.5', 11), gold_ans: 1.5
** most_common: ('3136', 4), gold_ans: 3146
** most_common: ('8', 6), gold_ans: August
** most_common: ('B', 6), gold_ans: A
** most_common: ('2', 9), gold_ans: 2
** most_common: ('0', 2), gold_ans: A
** most_common: ('10', 6), gold_ans: 10
** most_common: ('300', 12), gold_ans: 300
** most_common: ('7.0', 12), gold_ans: 7
** most_common: ('44', 12), gold_ans: 44
** most_common: ('323.6', 4), gold_ans: 516
** most_common: ('3', 5), gold_ans: 3
** most_common: ('75', 11), gold_ans: 75
** most_common: ('50', 2), gold_ans: 50
** most_common: ('20', 10), gold_ans: 20
** most_common: ('128', 10), gold_ans: 128
** most_common: ('11', 3), gold_ans: 10
** most_common: ('9.0', 11), gold_ans: 9
** most_common: ('1.37', 5), gold_ans: 14.95
** most_common: ('7', 7), gold_ans: 7
** most_common: ('192', 11), gold_ans: 192
** most_common: ('104', 11), gold_ans: 104
** most_common: ('1079.84', 3), gold_ans: 1344
** most_common: ('150.17', 4), gold_ans: 1350
** most_common: ('(A)more', 3), gold_ans: B
** most_common: ('30', 9), gold_ans: 30
** most_common: ('58.27%', 3), gold_ans: 58.33
** most_common: ('15', 9), gold_ans: 15
** most_common: ('704', 12), gold_ans: 704
** most_common: ('5', 6), gold_ans: 1
** most_common: ('6', 12), gold_ans: 6
** most_common: ('31,703', 3), gold_ans: 31603
** most_common: ('8.54', 11), gold_ans: 8.54
** most_common: ('2', 7), gold_ans: 2
** most_common: ('110', 8), gold_ans: 110
** most_common: ('0', 3), gold_ans: 20.25
** most_common: ('A', 9), gold_ans: A
BackVerify: 250
** most_common: ('1', 12), gold_ans: 1
** most_common: ('61052', 6), gold_ans: 61052
** most_common: ('4500', 8), gold_ans: 4500
** most_common: ('98', 4), gold_ans: 98
** most_common: ('53.49152', 2), gold_ans: 53
** most_common: ('25', 2), gold_ans: Friday
** most_common: ('2.2', 12), gold_ans: 2.2
** most_common: ('-2', 12), gold_ans: -10
** most_common: ('4.9', 6), gold_ans: 4.9
** most_common: ('84.07', 2), gold_ans: 68.85
** most_common: ('4.74', 1), gold_ans: 13
** most_common: ('5', 12), gold_ans: 5
** most_common: ('80', 10), gold_ans: 80
** most_common: ('69', 12), gold_ans: 69
** most_common: ('0.18', 1), gold_ans: 0.08
** most_common: ('2', 9), gold_ans: 2
** most_common: ('98.0', 12), gold_ans: 98
** most_common: ('600', 12), gold_ans: 600
** most_common: ('7', 6), gold_ans: 7
** most_common: ('1', 6), gold_ans: 1
** most_common: ('1', 12), gold_ans: 1
** most_common: ('19', 11), gold_ans: 19
** most_common: ('74', 5), gold_ans: 144
** most_common: ('A(theice)', 4), gold_ans: A
** most_common: ('3.88%', 3), gold_ans: 3.85
** most_common: ('324.0', 12), gold_ans: 324
** most_common: ('3', 4), gold_ans: 9
** most_common: ('B)faster', 4), gold_ans: A
** most_common: ('2', 9), gold_ans: 2
** most_common: ('10', 5), gold_ans: B
** most_common: ('150', 12), gold_ans: 150
** most_common: ('5', 10), gold_ans: 5
** most_common: ('44.02', 8), gold_ans: 44
** most_common: ('123.5542', 2), gold_ans: 124
** most_common: ('87.42%', 2), gold_ans: 87.59
** most_common: ('A', 4), gold_ans: A
** most_common: ('17', 8), gold_ans: 17
** most_common: ('7', 2), gold_ans: 4
** most_common: ('3.00', 3), gold_ans: 3
** most_common: ('25', 10), gold_ans: 25
** most_common: ('250', 10), gold_ans: 250
** most_common: ('4', 5), gold_ans: 4
** most_common: ('3', 10), gold_ans: 3
** most_common: ('8919', 3), gold_ans: 8919
** most_common: ('7308', 8), gold_ans: 7308
** most_common: ('1.6', 12), gold_ans: 1.6
** most_common: ('Notenoughinformation', 2), gold_ans: B
** most_common: ('74.4422', 10), gold_ans: 74
** most_common: ('5', 3), gold_ans: 5
** most_common: ('B', 3), gold_ans: B
BackVerify: 300
** most_common: ('B)tilefloor', 4), gold_ans: A
** most_common: ('3426', 8), gold_ans: 3426
** most_common: ('6', 8), gold_ans: B
** most_common: ('4320', 8), gold_ans: 4320
** most_common: ('109.09', 6), gold_ans: 109.09
** most_common: ('459.99', 7), gold_ans: 459
** most_common: ('12.0', 11), gold_ans: 12
** most_common: ('59.0', 7), gold_ans: 59
** most_common: ('11', 3), gold_ans: A
** most_common: ('350', 7), gold_ans: 350
** most_common: ('B', 4), gold_ans: A
** most_common: ('2', 6), gold_ans: 72
** most_common: ('20', 12), gold_ans: 20
** most_common: ('3', 11), gold_ans: 3
** most_common: ('4', 5), gold_ans: 4
** most_common: ('14', 7), gold_ans: 14.57
** most_common: ('137', 4), gold_ans: 137
** most_common: ('B', 4), gold_ans: B
** most_common: ('1', 8), gold_ans: 18
** most_common: ('100', 1), gold_ans: 1.47
** most_common: ('11', 12), gold_ans: 11
** most_common: ('176.14', 1), gold_ans: 54.55
** most_common: ('B', 3), gold_ans: B
** most_common: ('3673.12', 4), gold_ans: 3672
** most_common: ('233.3896', 5), gold_ans: 233
** most_common: ('63', 11), gold_ans: 63
** most_common: ('2', 10), gold_ans: 2
** most_common: ('7.0', 8), gold_ans: 7
** most_common: ('1013', 11), gold_ans: 1013
** most_common: ('2.67', 12), gold_ans: 2.67
** most_common: ('7.77%', 4), gold_ans: 7.69
** most_common: ('3.8', 8), gold_ans: 3.8
** most_common: ('20', 4), gold_ans: 20
** most_common: ('1.64', 7), gold_ans: 1.65
** most_common: ('0.6', 12), gold_ans: 0.6
** most_common: ('16', 4), gold_ans: 16
** most_common: ('1', 11), gold_ans: 1
** most_common: ('20.0', 12), gold_ans: 20
** most_common: ('16359', 6), gold_ans: 16359
** most_common: ('1.35', 2), gold_ans: 1.35
** most_common: ('3780', 11), gold_ans: 3780
** most_common: ('140', 11), gold_ans: 140
** most_common: ('96', 11), gold_ans: 96
** most_common: ('B', 3), gold_ans: B
** most_common: ('4.0', 10), gold_ans: 4
** most_common: ('135.04', 7), gold_ans: 143.32
** most_common: ('30.0', 12), gold_ans: 30
** most_common: ('5', 9), gold_ans: 5
** most_common: ('5200', 7), gold_ans: 5200
** most_common: ('1', 12), gold_ans: 1
BackVerify: 350
** most_common: ('2', 5), gold_ans: 2
** most_common: ('0.41666666666666666', 5), gold_ans: 0.4166666667
** most_common: ('9', 5), gold_ans: 3
** most_common: ('23', 10), gold_ans: 23
** most_common: ('263', 3), gold_ans: A
** most_common: ('A', 4), gold_ans: B
** most_common: ('46.23%', 2), gold_ans: 46.13
** most_common: ('50.0', 12), gold_ans: 50
** most_common: ('4843', 4), gold_ans: 5743
** most_common: ('30,372', 6), gold_ans: 30372
** most_common: ('61.833', 3), gold_ans: 62
** most_common: ('269', 7), gold_ans: 269
** most_common: ('1', 11), gold_ans: 1
** most_common: ('0.75', 10), gold_ans: 0.75
** most_common: ('A', 7), gold_ans: B
** most_common: ('18', 12), gold_ans: 18
** most_common: ('83.95', 6), gold_ans: 840
** most_common: ('452883', 7), gold_ans: 452883
** most_common: ('B)morefriction', 4), gold_ans: A
** most_common: ('10.0', 6), gold_ans: 10
** most_common: ('9.73%', 2), gold_ans: 9.68
** most_common: ('280', 10), gold_ans: 280
** most_common: ('A)rockyyard', 5), gold_ans: A
** most_common: ('61', 9), gold_ans: 61
** most_common: ('29.00', 11), gold_ans: 29
** most_common: ('B', 2), gold_ans: A
** most_common: ('42', 9), gold_ans: 42
** most_common: ('2', 9), gold_ans: 2
** most_common: ('14.0', 12), gold_ans: 14
** most_common: ('252', 8), gold_ans: 216
** most_common: ('12305', 2), gold_ans: 13305
** most_common: ('(A)less', 5), gold_ans: A
** most_common: ('(A)slower', 3), gold_ans: B
** most_common: ('3', 7), gold_ans: 3
** most_common: ('49', 6), gold_ans: A
** most_common: ('3000', 12), gold_ans: 3000
** most_common: ('391.14', 5), gold_ans: 391
** most_common: ('6.6', 10), gold_ans: 6.6
** most_common: ('13,699', 3), gold_ans: 12699
** most_common: ('624.69', 5), gold_ans: 621
** most_common: ('3', 6), gold_ans: 6
** most_common: ('B)moreresistance', 5), gold_ans: A
** most_common: ('3.0', 8), gold_ans: 3
** most_common: ('17', 7), gold_ans: 17
** most_common: ('4.67', 2), gold_ans: 2
** most_common: ('95.57%', 2), gold_ans: 95.24
** most_common: ('3', 6), gold_ans: 3
** most_common: ('7.0', 12), gold_ans: 7
** most_common: ('21.45%', 1), gold_ans: 27.47
** most_common: ('5.625', 11), gold_ans: 5.63
BackVerify: 400
** most_common: ('1', 11), gold_ans: 18
** most_common: ('12.0', 12), gold_ans: 12
** most_common: ('52', 10), gold_ans: 52
** most_common: ('4', 7), gold_ans: 12
** most_common: ('0.16665', 6), gold_ans: 0.165
** most_common: ('145.95', 3), gold_ans: 145
** most_common: ('8.67', 11), gold_ans: 8.67
** most_common: ('3120', 8), gold_ans: 11562
** most_common: ('0', 3), gold_ans: 21.62
** most_common: ('15.86', 5), gold_ans: 15.86
** most_common: ('30.04%', 2), gold_ans: 30
** most_common: ('0.22', 5), gold_ans: 0.32
** most_common: ('94.0', 12), gold_ans: 94
** most_common: ('1.16', 10), gold_ans: 1.16
** most_common: ('3', 3), gold_ans: 9
** most_common: ('54', 11), gold_ans: 54
** most_common: ('87.8458', 4), gold_ans: 1440
** most_common: ('4', 5), gold_ans: B
** most_common: ('3', 9), gold_ans: 3
** most_common: ('3100', 12), gold_ans: 3100
** most_common: ('26.24', 3), gold_ans: B
** most_common: ('2.20', 5), gold_ans: 2.2
** most_common: ('5', 5), gold_ans: A
** most_common: ('A', 6), gold_ans: B
** most_common: ('26', 12), gold_ans: 26
** most_common: ('240', 10), gold_ans: 240
** most_common: ('0', 2), gold_ans: B
** most_common: ('A', 7), gold_ans: A
** most_common: ('A', 4), gold_ans: A
** most_common: ('A', 9), gold_ans: A
** most_common: ('122', 12), gold_ans: 122
** most_common: ('1.25', 12), gold_ans: 1.25
** most_common: ('49034', 8), gold_ans: 49034
** most_common: ('5.58', 6), gold_ans: 5.58
** most_common: ('15', 11), gold_ans: 15
** most_common: ('17', 6), gold_ans: 17
** most_common: ('13.43', 7), gold_ans: 13
** most_common: ('A', 4), gold_ans: A
** most_common: ('20', 12), gold_ans: 20
** most_common: ('14', 11), gold_ans: 126
** most_common: ('1', 12), gold_ans: 1
** most_common: ('10.5', 11), gold_ans: 10.5
** most_common: ('14', 6), gold_ans: 14
** most_common: ('1920', 7), gold_ans: 1920
** most_common: ('64.73%', 1), gold_ans: 64.96
** most_common: ('B', 8), gold_ans: B
** most_common: ('648', 10), gold_ans: 648
** most_common: ('34.0', 11), gold_ans: 34
** most_common: ('16', 11), gold_ans: 16
** most_common: ('3', 7), gold_ans: 3
BackVerify: 450
** most_common: ('2', 9), gold_ans: 1
** most_common: ('1', 11), gold_ans: 1
** most_common: ('159.6922', 11), gold_ans: 160
** most_common: ('20.0', 11), gold_ans: 20
** most_common: ('78', 10), gold_ans: 78
** most_common: ('B', 9), gold_ans: B
** most_common: ('A', 5), gold_ans: B
** most_common: ('2', 3), gold_ans: B
** most_common: ('4', 5), gold_ans: 2
** most_common: ('856.71', 3), gold_ans: 855
** most_common: ('6', 5), gold_ans: 6
** most_common: ('7.0', 12), gold_ans: 7
** most_common: ('48.05%', 3), gold_ans: 48
** most_common: ('4', 7), gold_ans: 4
** most_common: ('7', 6), gold_ans: 8
** most_common: ('B', 4), gold_ans: A
** most_common: ('199.88', 12), gold_ans: 200
** most_common: ('223.3278', 2), gold_ans: 222
** most_common: ('8.4935%', 1), gold_ans: 14.29
** most_common: ('2.88', 10), gold_ans: 2.88
** most_common: ('46', 12), gold_ans: 46
** most_common: ('2', 5), gold_ans: 2.333333333
** most_common: ('B', 5), gold_ans: A
** most_common: ('1', 7), gold_ans: 1
** most_common: ('37', 2), gold_ans: B
** most_common: ('1', 4), gold_ans: 1
** most_common: ('233.39', 4), gold_ans: 233
** most_common: ('74', 12), gold_ans: 74
** most_common: ('26', 7), gold_ans: 26
** most_common: ('7', 12), gold_ans: 7
** most_common: ('36.0', 12), gold_ans: 36
** most_common: ('416.67', 8), gold_ans: 416.67
** most_common: ('64', 12), gold_ans: 64
** most_common: ('30.0', 2), gold_ans: 30
** most_common: ('36', 10), gold_ans: 36
** most_common: ('100', 12), gold_ans: 100
** most_common: ('A', 6), gold_ans: A
** most_common: ('6', 7), gold_ans: 54
** most_common: ('4182', 2), gold_ans: 4180
** most_common: ('166.96', 2), gold_ans: 672
** most_common: ('33.60', 11), gold_ans: 33.6
** most_common: ('4', 11), gold_ans: 4
** most_common: ('16', 10), gold_ans: 16
** most_common: ('10', 8), gold_ans: 10
** most_common: ('45', 11), gold_ans: 115
** most_common: ('30', 12), gold_ans: 30
** most_common: ('28', 11), gold_ans: 28
** most_common: ('12', 11), gold_ans: 12
** most_common: ('3', 8), gold_ans: 3
** most_common: ('85.0', 10), gold_ans: 85
BackVerify: 500
** most_common: ('74.4422', 6), gold_ans: 74
** most_common: ('0.5', 11), gold_ans: 0.5
** most_common: ('\\frac{2}{3}', 3), gold_ans: 1
** most_common: ('450', 3), gold_ans: 450
** most_common: ('6', 1), gold_ans: 81
** most_common: ('10', 12), gold_ans: 10
** most_common: ('7.48', 5), gold_ans: 7.48
** most_common: ('52', 12), gold_ans: 52
** most_common: ('5', 9), gold_ans: 125
** most_common: ('384', 11), gold_ans: 384
** most_common: ('1', 9), gold_ans: 1
** most_common: ('121.91', 7), gold_ans: 122
** most_common: ('171.34', 5), gold_ans: 171
** most_common: ('33.0', 12), gold_ans: 33
** most_common: ('57.0', 7), gold_ans: 57
** most_common: ('A', 2), gold_ans: A
** most_common: ('144.35', 6), gold_ans: 144.35
** most_common: ('2', 6), gold_ans: 4
** most_common: ('46', 4), gold_ans: 46
** most_common: ('9', 3), gold_ans: 9
** most_common: ('A', 5), gold_ans: A
** most_common: ('1227.0', 9), gold_ans: 1227
** most_common: ('5.66', 12), gold_ans: 5.66
** most_common: ('0.14', 4), gold_ans: A
** most_common: ('x+y-6', 4), gold_ans: 10
** most_common: ('6', 11), gold_ans: 6
** most_common: ('160', 12), gold_ans: 160
** most_common: ('49.5', 12), gold_ans: 49.5
** most_common: ('(A)asphalt', 2), gold_ans: B
** most_common: ('223.125', 12), gold_ans: 223.13
** most_common: ('2', 8), gold_ans: 2
** most_common: ('405.0', 10), gold_ans: 405
** most_common: ('80', 12), gold_ans: 80
** most_common: ('1.33', 12), gold_ans: 1.33
** most_common: ('4.00', 5), gold_ans: 4
** most_common: ('7.88', 4), gold_ans: 20
** most_common: ('8145', 8), gold_ans: 8145
** most_common: ('20', 12), gold_ans: 20
** most_common: ('8.5', 10), gold_ans: 8.5
** most_common: ('21.0', 10), gold_ans: 21
** most_common: ('6', 6), gold_ans: 3
** most_common: ('1', 10), gold_ans: 1
** most_common: ('162.0', 11), gold_ans: 162
** most_common: ('17.0', 12), gold_ans: 17
** most_common: ('840', 7), gold_ans: A
** most_common: ('0.83', 6), gold_ans: 1.2
** most_common: ('18.042', 4), gold_ans: 18
** most_common: ('53.85', 2), gold_ans: 53.87
** most_common: ('B', 4), gold_ans: B
** most_common: ('6', 4), gold_ans: 8
BackVerify: 550
** most_common: ('16', 12), gold_ans: 16
** most_common: ('78.0', 10), gold_ans: 78
** most_common: ('2', 8), gold_ans: 2
** most_common: ('8', 7), gold_ans: 8
** most_common: ('2', 6), gold_ans: 2
** most_common: ('6', 5), gold_ans: 6
** most_common: ('17', 8), gold_ans: 417
** most_common: ('320', 11), gold_ans: 320
** most_common: ('5500', 12), gold_ans: 5500
** most_common: ('144.0', 6), gold_ans: 144
** most_common: ('A', 5), gold_ans: A
** most_common: ('19', 9), gold_ans: 19
** most_common: ('0.875', 6), gold_ans: 0.875
** most_common: ('4', 6), gold_ans: 2
** most_common: ('A', 3), gold_ans: A
** most_common: ('46', 6), gold_ans: 46
** most_common: ('B', 8), gold_ans: B
** most_common: ('213', 11), gold_ans: 213
** most_common: ('3', 6), gold_ans: 3
** most_common: ('17.0', 12), gold_ans: 17
** most_common: ('2750', 8), gold_ans: 2750
** most_common: ('140.57', 11), gold_ans: 140.57
** most_common: ('3', 12), gold_ans: 3
** most_common: ('1.51', 10), gold_ans: 1.51
** most_common: ('108.02', 11), gold_ans: 108
** most_common: ('3.25', 10), gold_ans: 3.25
** most_common: ('17.80', 6), gold_ans: 11.74
** most_common: ('2', 7), gold_ans: 2
** most_common: ('6', 9), gold_ans: 6
** most_common: ('125', 5), gold_ans: 125
** most_common: ('60.0', 9), gold_ans: 4
** most_common: ('7', 4), gold_ans: 19
** most_common: ('A', 3), gold_ans: B
** most_common: ('42742', 9), gold_ans: 42742
** most_common: ('2', 6), gold_ans: 1
** most_common: ('48.04', 2), gold_ans: 73.85
** most_common: ('117', 10), gold_ans: 195
** most_common: ('3', 4), gold_ans: 3
** most_common: ('5', 4), gold_ans: B
** most_common: ('2', 8), gold_ans: 2
** most_common: ('A', 11), gold_ans: A
** most_common: ('18.01528', 8), gold_ans: 18
** most_common: ('18.01528', 9), gold_ans: 90
** most_common: ('20.0', 12), gold_ans: 20
** most_common: ('65', 3), gold_ans: 65
** most_common: ('99', 10), gold_ans: 55
** most_common: ('4', 5), gold_ans: 12
** most_common: ('0.375', 1), gold_ans: 8.95
** most_common: ('1.25', 12), gold_ans: 1.25
** most_common: ('2', 9), gold_ans: 2
BackVerify: 600
** most_common: ('16', 11), gold_ans: 16
** most_common: ('1357', 4), gold_ans: 1357
** most_common: ('A', 7), gold_ans: B
** most_common: ('8.623', 2), gold_ans: 8.619
** most_common: ('28.0', 12), gold_ans: 28
** most_common: ('35', 5), gold_ans: 35
** most_common: ('42.10', 5), gold_ans: 126
** most_common: ('3606', 9), gold_ans: 3606
** most_common: ('1304.5', 4), gold_ans: 869.67
** most_common: ('12', 5), gold_ans: 12
** most_common: ('16', 5), gold_ans: 16
** most_common: ('123', 2), gold_ans: B
** most_common: ('A', 4), gold_ans: B
** most_common: ('1', 5), gold_ans: 74
** most_common: ('168', 12), gold_ans: 168
** most_common: ('5', 10), gold_ans: 5
** most_common: ('18', 8), gold_ans: 18
** most_common: ('123.0', 5), gold_ans: 24.6
** most_common: ('127.9022', 6), gold_ans: 129
** most_common: ('95', 8), gold_ans: 95
** most_common: ('A', 5), gold_ans: A
** most_common: ('2', 6), gold_ans: 1
** most_common: ('1.25', 10), gold_ans: 1.25
** most_common: ('1', 11), gold_ans: 1
** most_common: ('110', 5), gold_ans: A
** most_common: ('3', 8), gold_ans: 2
** most_common: ('10', 9), gold_ans: 10
** most_common: ('62', 11), gold_ans: 62
** most_common: ('B)morefriction', 4), gold_ans: B
** most_common: ('8', 11), gold_ans: 8
** most_common: ('(A)more', 4), gold_ans: A
** most_common: ('3', 4), gold_ans: B
** most_common: ('2', 11), gold_ans: 2
** most_common: ('B', 4), gold_ans: A
** most_common: ('5.80', 7), gold_ans: 5.8
** most_common: ('2', 11), gold_ans: 2
** most_common: ('3', 1), gold_ans: 1
** most_common: ('13437', 6), gold_ans: 13437
** most_common: ('3', 11), gold_ans: 3
** most_common: ('41', 12), gold_ans: 41
** most_common: ('112.0', 11), gold_ans: 112
** most_common: ('9', 6), gold_ans: 9
** most_common: ('9.0', 10), gold_ans: 9
** most_common: ('3', 8), gold_ans: 3
** most_common: ('19.20', 6), gold_ans: 19.2
** most_common: ('1.17', 11), gold_ans: 1.17
** most_common: ('4', 7), gold_ans: 4
** most_common: ('66', 7), gold_ans: 66
** most_common: ('(A)morefriction', 3), gold_ans: B
** most_common: ('4072', 6), gold_ans: 4072
BackVerify: 650
** most_common: ('1', 11), gold_ans: 1
** most_common: ('7.0', 6), gold_ans: 7
** most_common: ('5.24', 3), gold_ans: B
** most_common: ('42', 5), gold_ans: A
** most_common: ('(A)tracks', 4), gold_ans: B
** most_common: ('611', 12), gold_ans: 611
** most_common: ('2', 7), gold_ans: 2
** most_common: ('11', 11), gold_ans: 11
** most_common: ('15', 12), gold_ans: 15
** most_common: ('3', 8), gold_ans: 3
** most_common: ('40.0%', 2), gold_ans: 52.46
** most_common: ('10', 12), gold_ans: 10
** most_common: ('62', 7), gold_ans: 62
** most_common: ('-4.92', 7), gold_ans: 5.7
** most_common: ('25', 9), gold_ans: 25
** most_common: ('65', 12), gold_ans: 65
** most_common: ('B)farther', 2), gold_ans: B
** most_common: ('3', 10), gold_ans: 3
** most_common: ('B)Lessfriction', 3), gold_ans: B
** most_common: ('59', 2), gold_ans: 13.5
** most_common: ('B', 5), gold_ans: B
** most_common: ('60', 3), gold_ans: 16.2
** most_common: ('2', 5), gold_ans: 18
** most_common: ('A', 7), gold_ans: A
** most_common: ('19.01', 6), gold_ans: 19.01
** most_common: ('80.0', 7), gold_ans: 80
** most_common: ('5.6', 11), gold_ans: 5.6
** most_common: ('1.125', 11), gold_ans: 1.125
** most_common: ('21.0', 3), gold_ans: 21
** most_common: ('2', 3), gold_ans: A
** most_common: ('373.33', 2), gold_ans: 128
** most_common: ('57', 7), gold_ans: 57
** most_common: ('6.01', 3), gold_ans: 12
** most_common: ('B', 4), gold_ans: B
** most_common: ('2.23', 11), gold_ans: 2.23
** most_common: ('73851', 11), gold_ans: 73851
** most_common: ('192.14', 5), gold_ans: 192
** most_common: ('10.43%', 3), gold_ans: 10.34
** most_common: ('A', 6), gold_ans: B
** most_common: ('27', 7), gold_ans: 21
** most_common: ('2.72%', 5), gold_ans: 2.7
** most_common: ('2', 8), gold_ans: 2
** most_common: ('2', 6), gold_ans: 148
** most_common: ('102', 9), gold_ans: 102
** most_common: ('17.034', 4), gold_ans: 90
** most_common: ('156', 10), gold_ans: 156
** most_common: ('153.3264', 10), gold_ans: 153
** most_common: ('89.0', 11), gold_ans: 89
** most_common: ('1', 5), gold_ans: 1
** most_common: ('173.0', 12), gold_ans: 173
BackVerify: 700
** most_common: ('2', 8), gold_ans: 2
** most_common: ('2.0', 12), gold_ans: 2
** most_common: ('4.0', 11), gold_ans: 10
** most_common: ('A', 7), gold_ans: A
** most_common: ('208', 11), gold_ans: 208
** most_common: ('57.14%', 4), gold_ans: 57.14
** most_common: ('67.5', 6), gold_ans: 67.5
** most_common: ('A', 2), gold_ans: B
** most_common: ('2', 7), gold_ans: 2
** most_common: ('144', 5), gold_ans: 144
** most_common: ('5', 9), gold_ans: 5
** most_common: ('5', 7), gold_ans: 5
** most_common: ('1', 7), gold_ans: 2
** most_common: ('76924', 7), gold_ans: 76924
** most_common: ('1', 2), gold_ans: 3
** most_common: ('7.0', 12), gold_ans: 7
** most_common: ('40', 4), gold_ans: 40
** most_common: ('15', 11), gold_ans: 15
** most_common: ('3', 6), gold_ans: 54
** most_common: ('666.65', 4), gold_ans: 660
** most_common: ('17', 8), gold_ans: 17
** most_common: ('2', 10), gold_ans: 2
** most_common: ('171.35', 2), gold_ans: 171
** most_common: ('1.67', 8), gold_ans: 1.67
** most_common: ('180', 9), gold_ans: 180
** most_common: ('3', 7), gold_ans: 456
** most_common: ('slower', 3), gold_ans: B
** most_common: ('83', 12), gold_ans: 83
** most_common: ('36', 11), gold_ans: 36
** most_common: ('53.50', 10), gold_ans: 53
** most_common: ('A', 2), gold_ans: A
** most_common: ('2', 5), gold_ans: 4
** most_common: ('42', 7), gold_ans: 42
** most_common: ('22.5', 10), gold_ans: 22.5
** most_common: ('(A)tracks', 4), gold_ans: B
** most_common: ('3', 8), gold_ans: 3
** most_common: ('250', 7), gold_ans: 250
** most_common: ('A', 3), gold_ans: A
** most_common: ('23', 2), gold_ans: 15
** most_common: ('16', 12), gold_ans: 16
** most_common: ('2.23', 5), gold_ans: B
** most_common: ('54', 12), gold_ans: 54
** most_common: ('8.0', 2), gold_ans: A
** most_common: ('B', 6), gold_ans: B
** most_common: ('36.44', 5), gold_ans: 36.44
** most_common: ('4300', 5), gold_ans: 4300
** most_common: ('8', 6), gold_ans: 8
** most_common: ('B', 5), gold_ans: B
** most_common: ('16', 8), gold_ans: 16
** most_common: ('1', 10), gold_ans: 1
BackVerify: 750
** most_common: ('6048', 8), gold_ans: 6241
** most_common: ('32', 9), gold_ans: 32
** most_common: ('2', 10), gold_ans: 2
** most_common: ('71.0', 10), gold_ans: 71
** most_common: ('1', 12), gold_ans: 1
** most_common: ('144', 12), gold_ans: 144
** most_common: ('(A)more', 3), gold_ans: B
** most_common: ('3', 6), gold_ans: 186
** most_common: ('3', 12), gold_ans: 3
** most_common: ('2', 6), gold_ans: 1
** most_common: ('87.25', 12), gold_ans: 87.25
** most_common: ('13.83', 10), gold_ans: 13.83
** most_common: ('46', 11), gold_ans: 46
** most_common: ('80.0', 12), gold_ans: 80
** most_common: ('11.00', 8), gold_ans: 11
** most_common: ('1.63', 12), gold_ans: 1.63
** most_common: ('31.0', 12), gold_ans: 31
** most_common: ('A', 4), gold_ans: A
** most_common: ('2', 8), gold_ans: 2
** most_common: ('61.833', 1), gold_ans: 434
** most_common: ('14.0', 5), gold_ans: 14
** most_common: ('2.0', 12), gold_ans: 2
** most_common: ('4', 7), gold_ans: 2
** most_common: ('2', 6), gold_ans: 2
** most_common: ('36', 12), gold_ans: 36
** most_common: ('B', 4), gold_ans: B
** most_common: ('65157', 5), gold_ans: 65057
** most_common: ('0.1', 12), gold_ans: 0.1
** most_common: ('288', 11), gold_ans: 288
** most_common: ('5.62', 12), gold_ans: 5.62
** most_common: ('65.59', 1), gold_ans: 46.13
** most_common: ('38.0', 11), gold_ans: 38
** most_common: ('980.0', 4), gold_ans: A
** most_common: ('13.19', 8), gold_ans: 22.33
** most_common: ('62', 12), gold_ans: 62
** most_common: ('455', 7), gold_ans: B
** most_common: ('744.425', 9), gold_ans: 740
** most_common: ('1', 12), gold_ans: 1
** most_common: ('2', 11), gold_ans: 2
** most_common: ('8', 3), gold_ans: A
** most_common: ('1146', 5), gold_ans: 854
** most_common: ('68.46', 8), gold_ans: 68
** most_common: ('1.14', 9), gold_ans: 1.14
** most_common: ('4', 9), gold_ans: 17
** most_common: ('9', 10), gold_ans: 9
** most_common: ('(B)slower', 2), gold_ans: A
** most_common: ('4.05', 6), gold_ans: 35.95
** most_common: ('13.6%', 3), gold_ans: 13.61
** most_common: ('11229', 7), gold_ans: 11229
** most_common: ('13.90', 11), gold_ans: 13.9
BackVerify: 800
** most_common: ('2.4', 11), gold_ans: 2.4
** most_common: ('44.44%', 5), gold_ans: 43.24
** most_common: ('5.625', 9), gold_ans: 5.625
** most_common: ('80', 10), gold_ans: 80
** most_common: ('9.0', 9), gold_ans: 9
** most_common: ('12', 3), gold_ans: A
** most_common: ('A', 4), gold_ans: B
** most_common: ('9828', 4), gold_ans: 9828
** most_common: ('580', 2), gold_ans: 525
** most_common: ('A', 4), gold_ans: B
** most_common: ('B', 5), gold_ans: A
** most_common: ('1', 6), gold_ans: 5
** most_common: ('34', 11), gold_ans: 34
** most_common: ('280', 5), gold_ans: 56
** most_common: ('A', 4), gold_ans: B
** most_common: ('9.0', 11), gold_ans: 9
** most_common: ('2', 4), gold_ans: 4
** most_common: ('B', 7), gold_ans: A
** most_common: ('?', 2), gold_ans: 44.07
** most_common: ('297.235', 11), gold_ans: 297
** most_common: ('3', 3), gold_ans: 24
** most_common: ('2', 5), gold_ans: 18
** most_common: ('324', 11), gold_ans: 324
** most_common: ('32.07', 1), gold_ans: 13.73
** most_common: ('1', 12), gold_ans: 1
** most_common: ('781.2', 5), gold_ans: 780
** most_common: ('18.039', 5), gold_ans: 18
** most_common: ('B', 5), gold_ans: A
** most_common: ('A', 7), gold_ans: A
** most_common: ('B)moreresistance', 7), gold_ans: B
** most_common: ('54.04%', 2), gold_ans: 54.24
** most_common: ('22.20%', 1), gold_ans: 24.62
** most_common: ('6.22', 7), gold_ans: 6.22
** most_common: ('4', 11), gold_ans: 30
** most_common: ('91.56', 3), gold_ans: 620
** most_common: ('(C)cannotbedetermined', 2), gold_ans: B
** most_common: ('1', 12), gold_ans: 1
** most_common: ('11', 11), gold_ans: 11
** most_common: ('4', 12), gold_ans: 26
** most_common: ('24.0', 8), gold_ans: 24
** most_common: ('20', 12), gold_ans: 20
** most_common: ('5', 4), gold_ans: B
** most_common: ('24', 10), gold_ans: 24
** most_common: ('90.06%', 2), gold_ans: 89.89
** most_common: ('12.21', 12), gold_ans: 12.21
** most_common: ('3', 8), gold_ans: 3
** most_common: ('1.5', 8), gold_ans: 3
** most_common: ('0', 3), gold_ans: A
** most_common: ('9', 8), gold_ans: 9
** most_common: ('A', 8), gold_ans: A
BackVerify: 850
** most_common: ('159.6922', 8), gold_ans: 160
** most_common: ('78.35%', 2), gold_ans: 78.29
** most_common: ('26', 12), gold_ans: 26
** most_common: ('3', 7), gold_ans: 3
** most_common: ('3', 5), gold_ans: 3
** most_common: ('61.81', 4), gold_ans: 62
** most_common: ('10', 10), gold_ans: 10
** most_common: ('1', 8), gold_ans: 1
** most_common: ('10828', 6), gold_ans: 10828
** most_common: ('42.10', 7), gold_ans: 42
** most_common: ('18.4,17.6', 2), gold_ans: 17.6
** most_common: ('24.0', 7), gold_ans: 24
** most_common: ('1', 8), gold_ans: 1
** most_common: ('7349', 9), gold_ans: 7349
** most_common: ('320', 10), gold_ans: 320
** most_common: ('3', 9), gold_ans: 3
** most_common: ('30', 11), gold_ans: 30
** most_common: ('364', 2), gold_ans: 366
** most_common: ('26866', 4), gold_ans: 26866
** most_common: ('72.08', 3), gold_ans: 36
** most_common: ('2', 7), gold_ans: 106
** most_common: ('1', 12), gold_ans: 1
** most_common: ('1300', 11), gold_ans: 1300
** most_common: ('52', 10), gold_ans: 52
** most_common: ('1.6', 10), gold_ans: 1.6
** most_common: ('12', 10), gold_ans: 12
** most_common: ('26.12%', 1), gold_ans: 15.38
** most_common: ('153', 12), gold_ans: 153
** most_common: ('208.233', 3), gold_ans: 207
** most_common: ('74', 11), gold_ans: 74
** most_common: ('B', 4), gold_ans: A
** most_common: ('99.0', 11), gold_ans: 99
** most_common: ('8.0', 2), gold_ans: 8
** most_common: ('2', 9), gold_ans: 2
** most_common: ('1027.98', 6), gold_ans: 1026
** most_common: ('28', 12), gold_ans: 28
** most_common: ('2.42', 3), gold_ans: 2.42
** most_common: ('234.99', 11), gold_ans: 234
** most_common: ('B', 3), gold_ans: A
** most_common: ('73.5', 7), gold_ans: 73.5
** most_common: ('5', 7), gold_ans: 5
** most_common: ('71.0', 12), gold_ans: 71
** most_common: ('18', 5), gold_ans: 18
** most_common: ('95.0', 10), gold_ans: 95
** most_common: ('74.10', 7), gold_ans: 518
** most_common: ('83.95', 3), gold_ans: 67.86
** most_common: ('3', 11), gold_ans: 3
** most_common: ('266.68', 9), gold_ans: 267
** most_common: ('133.3405386', 5), gold_ans: 132
** most_common: ('A(web)', 4), gold_ans: A
BackVerify: 900
** most_common: ('15.0', 9), gold_ans: 15
** most_common: ('7.74', 12), gold_ans: 7.75
** most_common: ('94.0', 12), gold_ans: 94
** most_common: ('3', 11), gold_ans: 3
** most_common: ('3', 10), gold_ans: 3
** most_common: ('A', 3), gold_ans: A
** most_common: ('A', 8), gold_ans: B
** most_common: ('A(bullettrain)', 4), gold_ans: A
** most_common: ('0', 4), gold_ans: A
** most_common: ('3.0', 12), gold_ans: 3
** most_common: ('2', 10), gold_ans: 2
** most_common: ('24.0', 12), gold_ans: 24
** most_common: ('6', 12), gold_ans: 6
** most_common: ('5', 11), gold_ans: 5
** most_common: ('175.3238', 5), gold_ans: 175
** most_common: ('157.0', 11), gold_ans: 157
** most_common: ('3', 11), gold_ans: 3
** most_common: ('5.7833', 1), gold_ans: 3.25
** most_common: ('B', 6), gold_ans: B
** most_common: ('7.47', 3), gold_ans: A
** most_common: ('78.01', 4), gold_ans: 61.54
** most_common: ('6', 5), gold_ans: B
** most_common: ('10', 8), gold_ans: 10
** most_common: ('8.33', 6), gold_ans: 8.33
** most_common: ('B', 6), gold_ans: B
** most_common: ('2', 7), gold_ans: 2
** most_common: ('18.70', 6), gold_ans: 18.7
** most_common: ('3', 5), gold_ans: 3
** most_common: ('(Noneoftheabove)', 2), gold_ans: B
** most_common: ('8', 12), gold_ans: 8
** most_common: ('128.20', 4), gold_ans: 240
** most_common: ('166.96', 5), gold_ans: 168
** most_common: ('B', 4), gold_ans: A
** most_common: ('1200', 12), gold_ans: 1200
** most_common: ('20.94', 1), gold_ans: 34.62
** most_common: ('B)morefriction', 3), gold_ans: A
** most_common: ('B', 8), gold_ans: A
** most_common: ('3.33', 11), gold_ans: 3.33
** most_common: ('8681', 9), gold_ans: 8681
** most_common: ('1', 9), gold_ans: 53
** most_common: ('51.0', 5), gold_ans: 25
** most_common: ('142.94347', 1), gold_ans: 1450
** most_common: ('83.33', 8), gold_ans: 83.33
** most_common: ('2', 8), gold_ans: 2
** most_common: ('9', 3), gold_ans: B
** most_common: ('3120', 7), gold_ans: 3120
** most_common: ('9.19%', 3), gold_ans: 9.09
** most_common: ('10.62', 10), gold_ans: 10.62
** most_common: ('1', 11), gold_ans: 1
** most_common: ('40', 3), gold_ans: 40
BackVerify: 950
** most_common: ('62.01', 3), gold_ans: 558
** most_common: ('(A)tracks', 4), gold_ans: B
** most_common: ('3', 12), gold_ans: 3
** most_common: ('119', 9), gold_ans: 119
** most_common: ('A)morefriction', 3), gold_ans: B
** most_common: ('4.7', 7), gold_ans: 4.7
** most_common: ('4', 9), gold_ans: 144
** most_common: ('40.03%', 3), gold_ans: 40
** most_common: ('16', 4), gold_ans: 16
** most_common: ('4.99%', 2), gold_ans: 4.08
** most_common: ('88.9%', 3), gold_ans: 88.89
** most_common: ('5', 11), gold_ans: 5
** most_common: ('25.0', 12), gold_ans: 25
** most_common: ('A', 6), gold_ans: A
** most_common: ('2', 8), gold_ans: 2
** most_common: ('40.02%', 2), gold_ans: 80
** most_common: ('40.00%', 2), gold_ans: 80
** most_common: ('150.0', 4), gold_ans: 150
** most_common: ('118.0', 12), gold_ans: 118
** most_common: ('82', 12), gold_ans: 82
** most_common: ('230', 2), gold_ans: 236
** most_common: ('32.2%', 2), gold_ans: 32.14
** most_common: ('3', 10), gold_ans: 3
** most_common: ('64', 11), gold_ans: 64
** most_common: ('B', 3), gold_ans: B
** most_common: ('A', 7), gold_ans: A
** most_common: ('33.33%', 1), gold_ans: 53.33
** most_common: ('99', 12), gold_ans: 99
** most_common: ('12', 12), gold_ans: 12
** most_common: ('100.09', 8), gold_ans: 100
** most_common: ('3', 9), gold_ans: 3
** most_common: ('11', 7), gold_ans: 11
** most_common: ('63', 12), gold_ans: 63
** most_common: ('10', 10), gold_ans: October
** most_common: ('293.88', 11), gold_ans: 294
** most_common: ('slower', 2), gold_ans: A
** most_common: ('36.33%', 3), gold_ans: 36.36
** most_common: ('1.5', 8), gold_ans: 3
** most_common: ('1.6875', 5), gold_ans: 1.6875
** most_common: ('B)Lessfriction', 3), gold_ans: A
** most_common: ('0', 7), gold_ans: 8
** most_common: ('2.14', 4), gold_ans: 2.14
** most_common: ('44', 12), gold_ans: 44
** most_common: ('2', 12), gold_ans: 2
** most_common: ('3.0', 9), gold_ans: 3
** most_common: ('49', 4), gold_ans: 49
** most_common: ('7', 9), gold_ans: 7
** most_common: ('A', 6), gold_ans: A
** most_common: ('56.07', 7), gold_ans: 56
** most_common: ('30.5', 12), gold_ans: 30.5
BackVerify: 1000
** most_common: ('B)Lessfriction', 5), gold_ans: B
** most_common: ('468.72', 6), gold_ans: 468
** most_common: ('55', 10), gold_ans: 40
** most_common: ('6', 4), gold_ans: 3
** most_common: ('212', 11), gold_ans: 212
** most_common: ('26', 11), gold_ans: 26
** most_common: ('3', 9), gold_ans: 3
** most_common: ('B', 5), gold_ans: A
** most_common: ('2.77', 1), gold_ans: 2.76
** most_common: ('76.0', 12), gold_ans: 76
** most_common: ('6.0', 7), gold_ans: 6
** most_common: ('61.83302', 4), gold_ans: 620
** most_common: ('A', 3), gold_ans: B
** most_common: ('1484', 10), gold_ans: 1484
** most_common: ('3', 7), gold_ans: 159
** most_common: ('1.25', 12), gold_ans: 1.25
** most_common: ('7.0', 10), gold_ans: 7
** most_common: ('1', 12), gold_ans: 1
** most_common: ('100.09', 10), gold_ans: 100
** most_common: ('176', 7), gold_ans: 128
** most_common: ('8', 11), gold_ans: 8
** most_common: ('27004', 10), gold_ans: 26866
** most_common: ('B', 4), gold_ans: B
** most_common: ('18.01528', 4), gold_ans: 180
** most_common: ('270', 4), gold_ans: 270
** most_common: ('146.35', 4), gold_ans: 155
** most_common: ('4', 8), gold_ans: 2
** most_common: ('648', 9), gold_ans: 648
** most_common: ('(A)doormat', 3), gold_ans: B
** most_common: ('2.36', 2), gold_ans: 93.38
** most_common: ('1955.65', 5), gold_ans: 1955
** most_common: ('884', 6), gold_ans: 884
** most_common: ('7.55', 7), gold_ans: 7.56
** most_common: ('35', 7), gold_ans: 35
** most_common: ('6.0', 9), gold_ans: 6
** most_common: ('A', 11), gold_ans: A
** most_common: ('2', 10), gold_ans: 1
** most_common: ('342', 3), gold_ans: 342
** most_common: ('78.12', 9), gold_ans: 78
** most_common: ('22', 12), gold_ans: 22
** most_common: ('12', 11), gold_ans: 12
** most_common: ('7.87%', 2), gold_ans: 7.89
** answer: 192.14, groundtruth_str: 1536
** groundtruth_num is not None
** is_fraction:  192.14
** groundtruth_num is (int, float)
** compare_two_numbers int 192.14 1536
** wrong
**  0 1
** answer: 12421, groundtruth_str: 12421
** compare on lower
** correct
**  1 1
** answer: A(tree), groundtruth_str: B
** wrong
**  1 2
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  2 2
** answer: 4.17, groundtruth_str: 4.17
** compare on lower
** correct
**  3 2
** answer: 37, groundtruth_str: 37
** compare on lower
** correct
**  4 2
** answer: B)moreresistance, groundtruth_str: B
** compare on lower in
** correct
**  5 2
** answer: A, groundtruth_str: B
** wrong
**  5 3
** answer: 132, groundtruth_str: 132
** compare on lower
** correct
**  6 3
** answer: 83.0, groundtruth_str: 83
** groundtruth_num is not None
** is_fraction:  83.0
** groundtruth_num is (int, float)
** compare_two_numbers int 83 83
** correct
**  7 3
** answer: B(bowlingball), groundtruth_str: B
** compare on lower in
** correct
**  8 3
** answer: 0.2, groundtruth_str: A
** wrong
**  8 4
** answer: 9.28, groundtruth_str: 9.28
** compare on lower
** correct
**  9 4
** answer: 61.83304, groundtruth_str: 62
** groundtruth_num is not None
** is_fraction:  61.83304
** groundtruth_num is (int, float)
** compare_two_numbers int 61.83304 62
** correct
**  10 4
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  11 4
** answer: 432.0, groundtruth_str: 432
** groundtruth_num is not None
** is_fraction:  432.0
** groundtruth_num is (int, float)
** compare_two_numbers int 432 432
** correct
**  12 4
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  13 4
** answer: A, groundtruth_str: B
** wrong
**  13 5
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  14 5
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  15 5
** answer: 2874, groundtruth_str: 2874
** compare on lower
** correct
**  16 5
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  17 5
** answer: 140, groundtruth_str: 140
** compare on lower
** correct
**  18 5
** answer: 1282.0, groundtruth_str: 1282
** groundtruth_num is not None
** is_fraction:  1282.0
** groundtruth_num is (int, float)
** compare_two_numbers int 1282 1282
** correct
**  19 5
** answer: 44.0, groundtruth_str: 44
** groundtruth_num is not None
** is_fraction:  44.0
** groundtruth_num is (int, float)
** compare_two_numbers int 44 44
** correct
**  20 5
** answer: 1.25, groundtruth_str: 1.25
** compare on lower
** correct
**  21 5
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  22 5
** answer: 4.20%, groundtruth_str: 4.17
** groundtruth_num is not None
** is_fraction:  4.20%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.042 4.17
** wrong
**  22 6
** answer: 14.02, groundtruth_str: 19.64
** groundtruth_num is not None
** is_fraction:  14.02
** groundtruth_num is (int, float)
** compare_two_numbers float 14.02 19.64
** wrong
**  22 7
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  23 7
** answer: 82, groundtruth_str: A
** wrong
**  23 8
** answer: 68.4594, groundtruth_str: 272
** groundtruth_num is not None
** is_fraction:  68.4594
** groundtruth_num is (int, float)
** compare_two_numbers int 68.4594 272
** wrong
**  23 9
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  24 9
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  25 9
** answer: 100.06, groundtruth_str: 100
** groundtruth_num is not None
** is_fraction:  100.06
** groundtruth_num is (int, float)
** compare_two_numbers int 100.06 100
** correct
**  26 9
** answer: 4636, groundtruth_str: 6052
** groundtruth_num is not None
** is_fraction:  4636
** groundtruth_num is (int, float)
** compare_two_numbers int 4636 6052
** wrong
**  26 10
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  27 10
** answer: 140.05, groundtruth_str: 140
** groundtruth_num is not None
** is_fraction:  140.05
** groundtruth_num is (int, float)
** compare_two_numbers int 140.05 140
** correct
**  28 10
** answer: 6500, groundtruth_str: 6500
** compare on lower
** correct
**  29 10
** answer: 25.87, groundtruth_str: 25.93
** groundtruth_num is not None
** is_fraction:  25.87
** groundtruth_num is (int, float)
** compare_two_numbers float 25.87 25.93
** wrong
**  29 11
** answer: 153.81, groundtruth_str: 152
** groundtruth_num is not None
** is_fraction:  153.81
** groundtruth_num is (int, float)
** compare_two_numbers int 153.81 152
** wrong
**  29 12
** answer: 0.2, groundtruth_str: 1.4
** groundtruth_num is not None
** is_fraction:  0.2
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2 1.4
** wrong
**  29 13
** answer: \frac{3}{16}, groundtruth_str: B
** wrong
**  29 14
** answer: 123.56, groundtruth_str: 38.71
** groundtruth_num is not None
** is_fraction:  123.56
** groundtruth_num is (int, float)
** compare_two_numbers float 123.56 38.71
** wrong
**  29 15
** answer: 404.5, groundtruth_str: 645
** groundtruth_num is not None
** is_fraction:  404.5
** groundtruth_num is (int, float)
** compare_two_numbers int 404.5 645
** wrong
**  29 16
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  30 16
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  31 16
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  32 16
** answer: 99.38%, groundtruth_str: 81.63
** groundtruth_num is not None
** is_fraction:  99.38%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.9937999999999999 81.63
** wrong
**  32 17
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  33 17
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  33 18
** answer: 204, groundtruth_str: 309
** groundtruth_num is not None
** is_fraction:  204
** groundtruth_num is (int, float)
** compare_two_numbers int 204 309
** wrong
**  33 19
** answer: 17.0, groundtruth_str: 17.5
** groundtruth_num is not None
** is_fraction:  17.0
** groundtruth_num is (int, float)
** compare_two_numbers float 17 17.5
** wrong
**  33 20
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  34 20
** answer: 206.91, groundtruth_str: 791
** groundtruth_num is not None
** is_fraction:  206.91
** groundtruth_num is (int, float)
** compare_two_numbers int 206.91 791
** wrong
**  34 21
** answer: 14, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers int 14 2
** wrong
**  34 22
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  35 22
** answer: 19, groundtruth_str: 19
** compare on lower
** correct
**  36 22
** answer: 80.0, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  80.0
** groundtruth_num is (int, float)
** compare_two_numbers int 80 80
** correct
**  37 22
** answer: 850, groundtruth_str: 850
** compare on lower
** correct
**  38 22
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  39 22
** answer: 323.0, groundtruth_str: 323
** groundtruth_num is not None
** is_fraction:  323.0
** groundtruth_num is (int, float)
** compare_two_numbers int 323 323
** correct
**  40 22
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  41 22
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  42 22
** answer: 7.8, groundtruth_str: 7.8
** compare on lower
** correct
**  43 22
** answer: 3, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 2
** wrong
**  43 23
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  44 23
** answer: 60, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 30
** wrong
**  44 24
** answer: 35, groundtruth_str: 135
** groundtruth_num is not None
** is_fraction:  35
** groundtruth_num is (int, float)
** compare_two_numbers int 35 135
** wrong
**  44 25
** answer: 1.69, groundtruth_str: 1.69
** compare on lower
** correct
**  45 25
** answer: 13.0, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  13.0
** groundtruth_num is (int, float)
** compare_two_numbers int 13 13
** correct
**  46 25
** answer: 322, groundtruth_str: 322
** compare on lower
** correct
**  47 25
** answer: 2.8, groundtruth_str: B
** wrong
**  47 26
** answer: 38.63, groundtruth_str: 38.63
** compare on lower
** correct
**  48 26
** answer: 4.5, groundtruth_str: 54
** groundtruth_num is not None
** is_fraction:  4.5
** groundtruth_num is (int, float)
** compare_two_numbers int 4.5 54
** wrong
**  48 27
** answer: 19, groundtruth_str: 1.9
** groundtruth_num is not None
** is_fraction:  19
** groundtruth_num is (int, float)
** compare_two_numbers float 19 1.9
** wrong
**  48 28
** answer: 31, groundtruth_str: 31
** compare on lower
** correct
**  49 28
** answer: 1.4, groundtruth_str: 1.4
** compare on lower
** correct
**  50 28
** answer: 18.65%, groundtruth_str: 18.71
** groundtruth_num is not None
** is_fraction:  18.65%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1865 18.71
** wrong
**  50 29
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  51 29
** answer: 7.1725, groundtruth_str: 7.17
** groundtruth_num is not None
** is_fraction:  7.1725
** groundtruth_num is (int, float)
** compare_two_numbers float 7.1725 7.17
** wrong
**  51 30
** answer: 6, groundtruth_str: 14.75
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers float 6 14.75
** wrong
**  51 31
** answer: 1, groundtruth_str: 53
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 53
** wrong
**  51 32
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  52 32
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  53 32
** answer: 410, groundtruth_str: 410
** compare on lower
** correct
**  54 32
** answer: 1080.2, groundtruth_str: 1080
** groundtruth_num is not None
** is_fraction:  1080.2
** groundtruth_num is (int, float)
** compare_two_numbers int 1080.2 1080
** correct
**  55 32
** answer: 6, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 3
** wrong
**  55 33
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  56 33
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  57 33
** answer: 4, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 2
** wrong
**  57 34
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  58 34
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  59 34
** answer: 108, groundtruth_str: 180
** groundtruth_num is not None
** is_fraction:  108
** groundtruth_num is (int, float)
** compare_two_numbers int 108 180
** wrong
**  59 35
** answer: 40.94%, groundtruth_str: 40.91
** groundtruth_num is not None
** is_fraction:  40.94%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.4094 40.91
** wrong
**  59 36
** answer: 0.26, groundtruth_str: 17.8
** groundtruth_num is not None
** is_fraction:  0.26
** groundtruth_num is (int, float)
** compare_two_numbers float 0.26 17.8
** wrong
**  59 37
** answer: 37, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  37
** groundtruth_num is (int, float)
** compare_two_numbers int 37 25
** wrong
**  59 38
** answer: 0.7, groundtruth_str: 0.7
** compare on lower
** correct
**  60 38
** answer: 12, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 18
** wrong
**  60 39
** answer: 77, groundtruth_str: B
** wrong
**  60 40
** answer: 118.0095, groundtruth_str: 944
** groundtruth_num is not None
** is_fraction:  118.0095
** groundtruth_num is (int, float)
** compare_two_numbers int 118.0095 944
** wrong
**  60 41
** answer: 150.14, groundtruth_str: 150
** groundtruth_num is not None
** is_fraction:  150.14
** groundtruth_num is (int, float)
** compare_two_numbers int 150.14 150
** correct
**  61 41
** answer: 14394, groundtruth_str: 14294
** groundtruth_num is not None
** is_fraction:  14394
** groundtruth_num is (int, float)
** compare_two_numbers int 14394 14294
** wrong
**  61 42
** answer: 2, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 36
** wrong
**  61 43
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  62 43
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  63 43
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  64 43
** answer: 120, groundtruth_str: A
** wrong
**  64 44
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  65 44
** answer: 8317, groundtruth_str: 9517
** groundtruth_num is not None
** is_fraction:  8317
** groundtruth_num is (int, float)
** compare_two_numbers int 8317 9517
** wrong
**  65 45
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  66 45
** answer: 11.5, groundtruth_str: 11.5
** compare on lower
** correct
**  67 45
** answer: 11700.0, groundtruth_str: 11700
** groundtruth_num is not None
** is_fraction:  11700.0
** groundtruth_num is (int, float)
** compare_two_numbers int 11700 11700
** correct
**  68 45
** answer: 57, groundtruth_str: B
** wrong
**  68 46
** answer: 10.0, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  10.0
** groundtruth_num is (int, float)
** compare_two_numbers int 10 10
** correct
**  69 46
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  70 46
** answer: B, groundtruth_str: A
** wrong
**  70 47
** answer: 11.90, groundtruth_str: 11.9
** groundtruth_num is not None
** is_fraction:  11.90
** groundtruth_num is (int, float)
** compare_two_numbers float 11.9 11.9
** correct
**  71 47
** answer: 26.18%, groundtruth_str: 26.42
** groundtruth_num is not None
** is_fraction:  26.18%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2618 26.42
** wrong
**  71 48
** answer: 392, groundtruth_str: 392
** compare on lower
** correct
**  72 48
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  73 48
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  74 48
** answer: 4.7, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  4.7
** groundtruth_num is (int, float)
** compare_two_numbers int 4.7 48
** wrong
**  74 49
** answer: 122.13, groundtruth_str: 4.92
** groundtruth_num is not None
** is_fraction:  122.13
** groundtruth_num is (int, float)
** compare_two_numbers float 122.13 4.92
** wrong
**  74 50
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  75 50
** answer: 900, groundtruth_str: 900
** compare on lower
** correct
**  76 50
** answer: 38, groundtruth_str: 38
** compare on lower
** correct
**  77 50
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  78 50
** answer: 0.07, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  0.07
** groundtruth_num is (int, float)
** compare_two_numbers int 0.07 7
** wrong
**  78 51
** answer: 56, groundtruth_str: 56
** compare on lower
** correct
**  79 51
** answer: 5, groundtruth_str: 5.44
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers float 5 5.44
** wrong
**  79 52
** answer: 3.0, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  3.0
** groundtruth_num is (int, float)
** compare_two_numbers int 3 3
** correct
**  80 52
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  81 52
** answer: 50, groundtruth_str: 110
** groundtruth_num is not None
** is_fraction:  50
** groundtruth_num is (int, float)
** compare_two_numbers int 50 110
** wrong
**  81 53
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  82 53
** answer: 1232, groundtruth_str: 1232
** compare on lower
** correct
**  83 53
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  84 53
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  85 53
** answer: 76.02, groundtruth_str: 76
** groundtruth_num is not None
** is_fraction:  76.02
** groundtruth_num is (int, float)
** compare_two_numbers int 76.02 76
** correct
**  86 53
** answer: 729, groundtruth_str: 729
** compare on lower
** correct
**  87 53
** answer: 18, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 7
** wrong
**  87 54
** answer: 6.5, groundtruth_str: 6.5
** compare on lower
** correct
**  88 54
** answer: 98, groundtruth_str: 98
** compare on lower
** correct
**  89 54
** answer: 75.011, groundtruth_str: 228
** groundtruth_num is not None
** is_fraction:  75.011
** groundtruth_num is (int, float)
** compare_two_numbers int 75.011 228
** wrong
**  89 55
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  90 55
** answer: 199.88, groundtruth_str: 200
** groundtruth_num is not None
** is_fraction:  199.88
** groundtruth_num is (int, float)
** compare_two_numbers int 199.88 200
** correct
**  91 55
** answer: 2.54, groundtruth_str: 2.54
** compare on lower
** correct
**  92 55
** answer: 55, groundtruth_str: 55
** compare on lower
** correct
**  93 55
** answer: 2.78, groundtruth_str: 2.78
** compare on lower
** correct
**  94 55
** answer: 7360, groundtruth_str: B
** wrong
**  94 56
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  95 56
** answer: 387.85, groundtruth_str: 115.83
** groundtruth_num is not None
** is_fraction:  387.85
** groundtruth_num is (int, float)
** compare_two_numbers float 387.85 115.83
** wrong
**  95 57
** answer: 11.25, groundtruth_str: 11.25
** compare on lower
** correct
**  96 57
** answer: A, groundtruth_str: B
** wrong
**  96 58
** answer: 1.75, groundtruth_str: 1.75
** compare on lower
** correct
**  97 58
** answer: (A)lessfriction, groundtruth_str: B
** wrong
**  97 59
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  98 59
** answer: 68, groundtruth_str: 68
** compare on lower
** correct
**  99 59
** answer: 4, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 3
** wrong
**  99 60
** answer: 43, groundtruth_str: 43
** compare on lower
** correct
**  100 60
** answer: 150, groundtruth_str: 150
** compare on lower
** correct
**  101 60
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  102 60
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  103 60
** answer: 2, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 36
** wrong
**  103 61
** answer: 1600, groundtruth_str: 1600
** compare on lower
** correct
**  104 61
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  105 61
** answer: 0.6666666666666666, groundtruth_str: 0.6666666667
** groundtruth_num is not None
** is_fraction:  0.6666666666666666
** groundtruth_num is (int, float)
** compare_two_numbers float 0.6666666666666666 0.6666666667
** correct
**  106 61
** answer: 49, groundtruth_str: 49
** compare on lower
** correct
**  107 61
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  108 61
** answer: 58.09, groundtruth_str: 348
** groundtruth_num is not None
** is_fraction:  58.09
** groundtruth_num is (int, float)
** compare_two_numbers int 58.09 348
** wrong
**  108 62
** answer: 690, groundtruth_str: 690
** compare on lower
** correct
**  109 62
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  110 62
** answer: 215, groundtruth_str: 215
** compare on lower
** correct
**  111 62
** answer: 12, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 10
** wrong
**  111 63
** answer: 1, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 18
** wrong
**  111 64
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  112 64
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  113 64
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  114 64
** answer: 126.01, groundtruth_str: 432
** groundtruth_num is not None
** is_fraction:  126.01
** groundtruth_num is (int, float)
** compare_two_numbers int 126.01 432
** wrong
**  114 65
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  115 65
** answer: 42.10, groundtruth_str: 420
** groundtruth_num is not None
** is_fraction:  42.10
** groundtruth_num is (int, float)
** compare_two_numbers int 42.1 420
** wrong
**  115 66
** answer: 99, groundtruth_str: 99
** compare on lower
** correct
**  116 66
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  117 66
** answer: 196.07, groundtruth_str: 196
** groundtruth_num is not None
** is_fraction:  196.07
** groundtruth_num is (int, float)
** compare_two_numbers int 196.07 196
** correct
**  118 66
** answer: 391.14, groundtruth_str: 391
** groundtruth_num is not None
** is_fraction:  391.14
** groundtruth_num is (int, float)
** compare_two_numbers int 391.14 391
** correct
**  119 66
** answer: -1.85, groundtruth_str: 5.58
** groundtruth_num is not None
** is_fraction:  -1.85
** groundtruth_num is (int, float)
** compare_two_numbers float -1.85 5.58
** wrong
**  119 67
** answer: 118.0096, groundtruth_str: 1062
** groundtruth_num is not None
** is_fraction:  118.0096
** groundtruth_num is (int, float)
** compare_two_numbers int 118.0096 1062
** wrong
**  119 68
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  120 68
** answer: 34, groundtruth_str: 34
** compare on lower
** correct
**  121 68
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  122 68
** answer: 294.17, groundtruth_str: 296
** groundtruth_num is not None
** is_fraction:  294.17
** groundtruth_num is (int, float)
** compare_two_numbers int 294.17 296
** wrong
**  122 69
** answer: 269.0, groundtruth_str: 269
** groundtruth_num is not None
** is_fraction:  269.0
** groundtruth_num is (int, float)
** compare_two_numbers int 269 269
** correct
**  123 69
** answer: 12.87, groundtruth_str: A
** wrong
**  123 70
** answer: 2, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 10
** wrong
**  123 71
** answer: 110, groundtruth_str: 110
** compare on lower
** correct
**  124 71
** answer: 620, groundtruth_str: 620
** compare on lower
** correct
**  125 71
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  126 71
** answer: 48000.0, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  48000.0
** groundtruth_num is (int, float)
** compare_two_numbers int 48000 48
** wrong
**  126 72
** answer: 2, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 36
** wrong
**  126 73
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  127 73
** answer: 21.99, groundtruth_str: 20.99
** groundtruth_num is not None
** is_fraction:  21.99
** groundtruth_num is (int, float)
** compare_two_numbers float 21.99 20.99
** wrong
**  127 74
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  128 74
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  129 74
** answer: 98, groundtruth_str: 98
** compare on lower
** correct
**  130 74
** answer: 1.54, groundtruth_str: 1.54
** compare on lower
** correct
**  131 74
** answer: 27.0, groundtruth_str: 27
** groundtruth_num is not None
** is_fraction:  27.0
** groundtruth_num is (int, float)
** compare_two_numbers int 27 27
** correct
**  132 74
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  133 74
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  134 74
** answer: 12.17, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  12.17
** groundtruth_num is (int, float)
** compare_two_numbers int 12.17 12
** correct
**  135 74
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  136 74
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  137 74
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  138 74
** answer: 5098, groundtruth_str: 5098
** compare on lower
** correct
**  139 74
** answer: 1.5, groundtruth_str: 1.5
** compare on lower
** correct
**  140 74
** answer: 3136, groundtruth_str: 3146
** groundtruth_num is not None
** is_fraction:  3136
** groundtruth_num is (int, float)
** compare_two_numbers int 3136 3146
** wrong
**  140 75
** answer: 8, groundtruth_str: August
** wrong
**  140 76
** answer: B, groundtruth_str: A
** wrong
**  140 77
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  141 77
** answer: 0, groundtruth_str: A
** wrong
**  141 78
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  142 78
** answer: 300, groundtruth_str: 300
** compare on lower
** correct
**  143 78
** answer: 7.0, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  7.0
** groundtruth_num is (int, float)
** compare_two_numbers int 7 7
** correct
**  144 78
** answer: 44, groundtruth_str: 44
** compare on lower
** correct
**  145 78
** answer: 323.6, groundtruth_str: 516
** groundtruth_num is not None
** is_fraction:  323.6
** groundtruth_num is (int, float)
** compare_two_numbers int 323.6 516
** wrong
**  145 79
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  146 79
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  147 79
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  148 79
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  149 79
** answer: 128, groundtruth_str: 128
** compare on lower
** correct
**  150 79
** answer: 11, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 10
** wrong
**  150 80
** answer: 9.0, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  9.0
** groundtruth_num is (int, float)
** compare_two_numbers int 9 9
** correct
**  151 80
** answer: 1.37, groundtruth_str: 14.95
** groundtruth_num is not None
** is_fraction:  1.37
** groundtruth_num is (int, float)
** compare_two_numbers float 1.37 14.95
** wrong
**  151 81
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  152 81
** answer: 192, groundtruth_str: 192
** compare on lower
** correct
**  153 81
** answer: 104, groundtruth_str: 104
** compare on lower
** correct
**  154 81
** answer: 1079.84, groundtruth_str: 1344
** groundtruth_num is not None
** is_fraction:  1079.84
** groundtruth_num is (int, float)
** compare_two_numbers int 1079.84 1344
** wrong
**  154 82
** answer: 150.17, groundtruth_str: 1350
** groundtruth_num is not None
** is_fraction:  150.17
** groundtruth_num is (int, float)
** compare_two_numbers int 150.17 1350
** wrong
**  154 83
** answer: (A)more, groundtruth_str: B
** wrong
**  154 84
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  155 84
** answer: 58.27%, groundtruth_str: 58.33
** groundtruth_num is not None
** is_fraction:  58.27%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5827 58.33
** wrong
**  155 85
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  156 85
** answer: 704, groundtruth_str: 704
** compare on lower
** correct
**  157 85
** answer: 5, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 1
** wrong
**  157 86
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  158 86
** answer: 31,703, groundtruth_str: 31603
** groundtruth_num is not None
** is_fraction:  31,703
** groundtruth_num is (int, float)
** compare_two_numbers int 31703 31603
** wrong
**  158 87
** answer: 8.54, groundtruth_str: 8.54
** compare on lower
** correct
**  159 87
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  160 87
** answer: 110, groundtruth_str: 110
** compare on lower
** correct
**  161 87
** answer: 0, groundtruth_str: 20.25
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 20.25
** wrong
**  161 88
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  162 88
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  163 88
** answer: 61052, groundtruth_str: 61052
** compare on lower
** correct
**  164 88
** answer: 4500, groundtruth_str: 4500
** compare on lower
** correct
**  165 88
** answer: 98, groundtruth_str: 98
** compare on lower
** correct
**  166 88
** answer: 53.49152, groundtruth_str: 53
** groundtruth_num is not None
** is_fraction:  53.49152
** groundtruth_num is (int, float)
** compare_two_numbers int 53.49152 53
** correct
**  167 88
** answer: 25, groundtruth_str: Friday
** wrong
**  167 89
** answer: 2.2, groundtruth_str: 2.2
** compare on lower
** correct
**  168 89
** answer: -2, groundtruth_str: -10
** groundtruth_num is not None
** is_fraction:  -2
** groundtruth_num is (int, float)
** compare_two_numbers int -2 -10
** wrong
**  168 90
** answer: 4.9, groundtruth_str: 4.9
** compare on lower
** correct
**  169 90
** answer: 84.07, groundtruth_str: 68.85
** groundtruth_num is not None
** is_fraction:  84.07
** groundtruth_num is (int, float)
** compare_two_numbers float 84.07 68.85
** wrong
**  169 91
** answer: 4.74, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  4.74
** groundtruth_num is (int, float)
** compare_two_numbers int 4.74 13
** wrong
**  169 92
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  170 92
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  171 92
** answer: 69, groundtruth_str: 69
** compare on lower
** correct
**  172 92
** answer: 0.18, groundtruth_str: 0.08
** groundtruth_num is not None
** is_fraction:  0.18
** groundtruth_num is (int, float)
** compare_two_numbers float 0.18 0.08
** wrong
**  172 93
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  173 93
** answer: 98.0, groundtruth_str: 98
** groundtruth_num is not None
** is_fraction:  98.0
** groundtruth_num is (int, float)
** compare_two_numbers int 98 98
** correct
**  174 93
** answer: 600, groundtruth_str: 600
** compare on lower
** correct
**  175 93
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  176 93
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  177 93
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  178 93
** answer: 19, groundtruth_str: 19
** compare on lower
** correct
**  179 93
** answer: 74, groundtruth_str: 144
** groundtruth_num is not None
** is_fraction:  74
** groundtruth_num is (int, float)
** compare_two_numbers int 74 144
** wrong
**  179 94
** answer: A(theice), groundtruth_str: A
** compare on lower in
** correct
**  180 94
** answer: 3.88%, groundtruth_str: 3.85
** groundtruth_num is not None
** is_fraction:  3.88%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0388 3.85
** wrong
**  180 95
** answer: 324.0, groundtruth_str: 324
** groundtruth_num is not None
** is_fraction:  324.0
** groundtruth_num is (int, float)
** compare_two_numbers int 324 324
** correct
**  181 95
** answer: 3, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 9
** wrong
**  181 96
** answer: B)faster, groundtruth_str: A
** compare on lower in
** correct
**  182 96
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  183 96
** answer: 10, groundtruth_str: B
** wrong
**  183 97
** answer: 150, groundtruth_str: 150
** compare on lower
** correct
**  184 97
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  185 97
** answer: 44.02, groundtruth_str: 44
** groundtruth_num is not None
** is_fraction:  44.02
** groundtruth_num is (int, float)
** compare_two_numbers int 44.02 44
** correct
**  186 97
** answer: 123.5542, groundtruth_str: 124
** groundtruth_num is not None
** is_fraction:  123.5542
** groundtruth_num is (int, float)
** compare_two_numbers int 123.5542 124
** correct
**  187 97
** answer: 87.42%, groundtruth_str: 87.59
** groundtruth_num is not None
** is_fraction:  87.42%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8742 87.59
** wrong
**  187 98
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  188 98
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  189 98
** answer: 7, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 4
** wrong
**  189 99
** answer: 3.00, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  3.00
** groundtruth_num is (int, float)
** compare_two_numbers int 3 3
** correct
**  190 99
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  191 99
** answer: 250, groundtruth_str: 250
** compare on lower
** correct
**  192 99
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  193 99
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  194 99
** answer: 8919, groundtruth_str: 8919
** compare on lower
** correct
**  195 99
** answer: 7308, groundtruth_str: 7308
** compare on lower
** correct
**  196 99
** answer: 1.6, groundtruth_str: 1.6
** compare on lower
** correct
**  197 99
** answer: Notenoughinformation, groundtruth_str: B
** wrong
**  197 100
** answer: 74.4422, groundtruth_str: 74
** groundtruth_num is not None
** is_fraction:  74.4422
** groundtruth_num is (int, float)
** compare_two_numbers int 74.4422 74
** correct
**  198 100
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  199 100
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  200 100
** answer: B)tilefloor, groundtruth_str: A
** wrong
**  200 101
** answer: 3426, groundtruth_str: 3426
** compare on lower
** correct
**  201 101
** answer: 6, groundtruth_str: B
** wrong
**  201 102
** answer: 4320, groundtruth_str: 4320
** compare on lower
** correct
**  202 102
** answer: 109.09, groundtruth_str: 109.09
** compare on lower
** correct
**  203 102
** answer: 459.99, groundtruth_str: 459
** groundtruth_num is not None
** is_fraction:  459.99
** groundtruth_num is (int, float)
** compare_two_numbers int 459.99 459
** wrong
**  203 103
** answer: 12.0, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  12.0
** groundtruth_num is (int, float)
** compare_two_numbers int 12 12
** correct
**  204 103
** answer: 59.0, groundtruth_str: 59
** groundtruth_num is not None
** is_fraction:  59.0
** groundtruth_num is (int, float)
** compare_two_numbers int 59 59
** correct
**  205 103
** answer: 11, groundtruth_str: A
** wrong
**  205 104
** answer: 350, groundtruth_str: 350
** compare on lower
** correct
**  206 104
** answer: B, groundtruth_str: A
** wrong
**  206 105
** answer: 2, groundtruth_str: 72
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 72
** wrong
**  206 106
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  207 106
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  208 106
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  209 106
** answer: 14, groundtruth_str: 14.57
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers float 14 14.57
** wrong
**  209 107
** answer: 137, groundtruth_str: 137
** compare on lower
** correct
**  210 107
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  211 107
** answer: 1, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 18
** wrong
**  211 108
** answer: 100, groundtruth_str: 1.47
** groundtruth_num is not None
** is_fraction:  100
** groundtruth_num is (int, float)
** compare_two_numbers float 100 1.47
** wrong
**  211 109
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  212 109
** answer: 176.14, groundtruth_str: 54.55
** groundtruth_num is not None
** is_fraction:  176.14
** groundtruth_num is (int, float)
** compare_two_numbers float 176.14 54.55
** wrong
**  212 110
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  213 110
** answer: 3673.12, groundtruth_str: 3672
** groundtruth_num is not None
** is_fraction:  3673.12
** groundtruth_num is (int, float)
** compare_two_numbers int 3673.12 3672
** wrong
**  213 111
** answer: 233.3896, groundtruth_str: 233
** groundtruth_num is not None
** is_fraction:  233.3896
** groundtruth_num is (int, float)
** compare_two_numbers int 233.3896 233
** correct
**  214 111
** answer: 63, groundtruth_str: 63
** compare on lower
** correct
**  215 111
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  216 111
** answer: 7.0, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  7.0
** groundtruth_num is (int, float)
** compare_two_numbers int 7 7
** correct
**  217 111
** answer: 1013, groundtruth_str: 1013
** compare on lower
** correct
**  218 111
** answer: 2.67, groundtruth_str: 2.67
** compare on lower
** correct
**  219 111
** answer: 7.77%, groundtruth_str: 7.69
** groundtruth_num is not None
** is_fraction:  7.77%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.07769999999999999 7.69
** wrong
**  219 112
** answer: 3.8, groundtruth_str: 3.8
** compare on lower
** correct
**  220 112
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  221 112
** answer: 1.64, groundtruth_str: 1.65
** groundtruth_num is not None
** is_fraction:  1.64
** groundtruth_num is (int, float)
** compare_two_numbers float 1.64 1.65
** wrong
**  221 113
** answer: 0.6, groundtruth_str: 0.6
** compare on lower
** correct
**  222 113
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  223 113
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  224 113
** answer: 20.0, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  20.0
** groundtruth_num is (int, float)
** compare_two_numbers int 20 20
** correct
**  225 113
** answer: 16359, groundtruth_str: 16359
** compare on lower
** correct
**  226 113
** answer: 1.35, groundtruth_str: 1.35
** compare on lower
** correct
**  227 113
** answer: 3780, groundtruth_str: 3780
** compare on lower
** correct
**  228 113
** answer: 140, groundtruth_str: 140
** compare on lower
** correct
**  229 113
** answer: 96, groundtruth_str: 96
** compare on lower
** correct
**  230 113
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  231 113
** answer: 4.0, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  4.0
** groundtruth_num is (int, float)
** compare_two_numbers int 4 4
** correct
**  232 113
** answer: 135.04, groundtruth_str: 143.32
** groundtruth_num is not None
** is_fraction:  135.04
** groundtruth_num is (int, float)
** compare_two_numbers float 135.04 143.32
** wrong
**  232 114
** answer: 30.0, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  30.0
** groundtruth_num is (int, float)
** compare_two_numbers int 30 30
** correct
**  233 114
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  234 114
** answer: 5200, groundtruth_str: 5200
** compare on lower
** correct
**  235 114
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  236 114
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  237 114
** answer: 0.41666666666666666, groundtruth_str: 0.4166666667
** groundtruth_num is not None
** is_fraction:  0.41666666666666666
** groundtruth_num is (int, float)
** compare_two_numbers float 0.4166666666666667 0.4166666667
** correct
**  238 114
** answer: 9, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 3
** wrong
**  238 115
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  239 115
** answer: 263, groundtruth_str: A
** wrong
**  239 116
** answer: A, groundtruth_str: B
** wrong
**  239 117
** answer: 46.23%, groundtruth_str: 46.13
** groundtruth_num is not None
** is_fraction:  46.23%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.4623 46.13
** wrong
**  239 118
** answer: 50.0, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  50.0
** groundtruth_num is (int, float)
** compare_two_numbers int 50 50
** correct
**  240 118
** answer: 4843, groundtruth_str: 5743
** groundtruth_num is not None
** is_fraction:  4843
** groundtruth_num is (int, float)
** compare_two_numbers int 4843 5743
** wrong
**  240 119
** answer: 30,372, groundtruth_str: 30372
** groundtruth_num is not None
** is_fraction:  30,372
** groundtruth_num is (int, float)
** compare_two_numbers int 30372 30372
** correct
**  241 119
** answer: 61.833, groundtruth_str: 62
** groundtruth_num is not None
** is_fraction:  61.833
** groundtruth_num is (int, float)
** compare_two_numbers int 61.833 62
** correct
**  242 119
** answer: 269, groundtruth_str: 269
** compare on lower
** correct
**  243 119
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  244 119
** answer: 0.75, groundtruth_str: 0.75
** compare on lower
** correct
**  245 119
** answer: A, groundtruth_str: B
** wrong
**  245 120
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  246 120
** answer: 83.95, groundtruth_str: 840
** groundtruth_num is not None
** is_fraction:  83.95
** groundtruth_num is (int, float)
** compare_two_numbers int 83.95 840
** wrong
**  246 121
** answer: 452883, groundtruth_str: 452883
** compare on lower
** correct
**  247 121
** answer: B)morefriction, groundtruth_str: A
** wrong
**  247 122
** answer: 10.0, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  10.0
** groundtruth_num is (int, float)
** compare_two_numbers int 10 10
** correct
**  248 122
** answer: 9.73%, groundtruth_str: 9.68
** groundtruth_num is not None
** is_fraction:  9.73%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0973 9.68
** wrong
**  248 123
** answer: 280, groundtruth_str: 280
** compare on lower
** correct
**  249 123
** answer: A)rockyyard, groundtruth_str: A
** compare on lower in
** correct
**  250 123
** answer: 61, groundtruth_str: 61
** compare on lower
** correct
**  251 123
** answer: 29.00, groundtruth_str: 29
** groundtruth_num is not None
** is_fraction:  29.00
** groundtruth_num is (int, float)
** compare_two_numbers int 29 29
** correct
**  252 123
** answer: B, groundtruth_str: A
** wrong
**  252 124
** answer: 42, groundtruth_str: 42
** compare on lower
** correct
**  253 124
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  254 124
** answer: 14.0, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  14.0
** groundtruth_num is (int, float)
** compare_two_numbers int 14 14
** correct
**  255 124
** answer: 252, groundtruth_str: 216
** groundtruth_num is not None
** is_fraction:  252
** groundtruth_num is (int, float)
** compare_two_numbers int 252 216
** wrong
**  255 125
** answer: 12305, groundtruth_str: 13305
** groundtruth_num is not None
** is_fraction:  12305
** groundtruth_num is (int, float)
** compare_two_numbers int 12305 13305
** wrong
**  255 126
** answer: (A)less, groundtruth_str: A
** compare on lower in
** correct
**  256 126
** answer: (A)slower, groundtruth_str: B
** wrong
**  256 127
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  257 127
** answer: 49, groundtruth_str: A
** wrong
**  257 128
** answer: 3000, groundtruth_str: 3000
** compare on lower
** correct
**  258 128
** answer: 391.14, groundtruth_str: 391
** groundtruth_num is not None
** is_fraction:  391.14
** groundtruth_num is (int, float)
** compare_two_numbers int 391.14 391
** correct
**  259 128
** answer: 6.6, groundtruth_str: 6.6
** compare on lower
** correct
**  260 128
** answer: 13,699, groundtruth_str: 12699
** groundtruth_num is not None
** is_fraction:  13,699
** groundtruth_num is (int, float)
** compare_two_numbers int 13699 12699
** wrong
**  260 129
** answer: 624.69, groundtruth_str: 621
** groundtruth_num is not None
** is_fraction:  624.69
** groundtruth_num is (int, float)
** compare_two_numbers int 624.69 621
** wrong
**  260 130
** answer: 3, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 6
** wrong
**  260 131
** answer: B)moreresistance, groundtruth_str: A
** compare on lower in
** correct
**  261 131
** answer: 3.0, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  3.0
** groundtruth_num is (int, float)
** compare_two_numbers int 3 3
** correct
**  262 131
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  263 131
** answer: 4.67, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  4.67
** groundtruth_num is (int, float)
** compare_two_numbers int 4.67 2
** wrong
**  263 132
** answer: 95.57%, groundtruth_str: 95.24
** groundtruth_num is not None
** is_fraction:  95.57%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.9556999999999999 95.24
** wrong
**  263 133
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  264 133
** answer: 7.0, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  7.0
** groundtruth_num is (int, float)
** compare_two_numbers int 7 7
** correct
**  265 133
** answer: 21.45%, groundtruth_str: 27.47
** groundtruth_num is not None
** is_fraction:  21.45%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2145 27.47
** wrong
**  265 134
** answer: 5.625, groundtruth_str: 5.63
** groundtruth_num is not None
** is_fraction:  5.625
** groundtruth_num is (int, float)
** compare_two_numbers float 5.625 5.63
** wrong
**  265 135
** answer: 1, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 18
** wrong
**  265 136
** answer: 12.0, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  12.0
** groundtruth_num is (int, float)
** compare_two_numbers int 12 12
** correct
**  266 136
** answer: 52, groundtruth_str: 52
** compare on lower
** correct
**  267 136
** answer: 4, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 12
** wrong
**  267 137
** answer: 0.16665, groundtruth_str: 0.165
** groundtruth_num is not None
** is_fraction:  0.16665
** groundtruth_num is (int, float)
** compare_two_numbers float 0.16665 0.165
** wrong
**  267 138
** answer: 145.95, groundtruth_str: 145
** groundtruth_num is not None
** is_fraction:  145.95
** groundtruth_num is (int, float)
** compare_two_numbers int 145.95 145
** wrong
**  267 139
** answer: 8.67, groundtruth_str: 8.67
** compare on lower
** correct
**  268 139
** answer: 3120, groundtruth_str: 11562
** groundtruth_num is not None
** is_fraction:  3120
** groundtruth_num is (int, float)
** compare_two_numbers int 3120 11562
** wrong
**  268 140
** answer: 0, groundtruth_str: 21.62
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers float 0 21.62
** wrong
**  268 141
** answer: 15.86, groundtruth_str: 15.86
** compare on lower
** correct
**  269 141
** answer: 30.04%, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  30.04%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.3004 30
** wrong
**  269 142
** answer: 0.22, groundtruth_str: 0.32
** groundtruth_num is not None
** is_fraction:  0.22
** groundtruth_num is (int, float)
** compare_two_numbers float 0.22 0.32
** wrong
**  269 143
** answer: 94.0, groundtruth_str: 94
** groundtruth_num is not None
** is_fraction:  94.0
** groundtruth_num is (int, float)
** compare_two_numbers int 94 94
** correct
**  270 143
** answer: 1.16, groundtruth_str: 1.16
** compare on lower
** correct
**  271 143
** answer: 3, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 9
** wrong
**  271 144
** answer: 54, groundtruth_str: 54
** compare on lower
** correct
**  272 144
** answer: 87.8458, groundtruth_str: 1440
** groundtruth_num is not None
** is_fraction:  87.8458
** groundtruth_num is (int, float)
** compare_two_numbers int 87.8458 1440
** wrong
**  272 145
** answer: 4, groundtruth_str: B
** wrong
**  272 146
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  273 146
** answer: 3100, groundtruth_str: 3100
** compare on lower
** correct
**  274 146
** answer: 26.24, groundtruth_str: B
** wrong
**  274 147
** answer: 2.20, groundtruth_str: 2.2
** groundtruth_num is not None
** is_fraction:  2.20
** groundtruth_num is (int, float)
** compare_two_numbers float 2.2 2.2
** correct
**  275 147
** answer: 5, groundtruth_str: A
** wrong
**  275 148
** answer: A, groundtruth_str: B
** wrong
**  275 149
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  276 149
** answer: 240, groundtruth_str: 240
** compare on lower
** correct
**  277 149
** answer: 0, groundtruth_str: B
** wrong
**  277 150
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  278 150
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  279 150
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  280 150
** answer: 122, groundtruth_str: 122
** compare on lower
** correct
**  281 150
** answer: 1.25, groundtruth_str: 1.25
** compare on lower
** correct
**  282 150
** answer: 49034, groundtruth_str: 49034
** compare on lower
** correct
**  283 150
** answer: 5.58, groundtruth_str: 5.58
** compare on lower
** correct
**  284 150
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  285 150
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  286 150
** answer: 13.43, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  13.43
** groundtruth_num is (int, float)
** compare_two_numbers int 13.43 13
** correct
**  287 150
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  288 150
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  289 150
** answer: 14, groundtruth_str: 126
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers int 14 126
** wrong
**  289 151
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  290 151
** answer: 10.5, groundtruth_str: 10.5
** compare on lower
** correct
**  291 151
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  292 151
** answer: 1920, groundtruth_str: 1920
** compare on lower
** correct
**  293 151
** answer: 64.73%, groundtruth_str: 64.96
** groundtruth_num is not None
** is_fraction:  64.73%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.6473 64.96
** wrong
**  293 152
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  294 152
** answer: 648, groundtruth_str: 648
** compare on lower
** correct
**  295 152
** answer: 34.0, groundtruth_str: 34
** groundtruth_num is not None
** is_fraction:  34.0
** groundtruth_num is (int, float)
** compare_two_numbers int 34 34
** correct
**  296 152
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  297 152
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  298 152
** answer: 2, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 1
** wrong
**  298 153
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  299 153
** answer: 159.6922, groundtruth_str: 160
** groundtruth_num is not None
** is_fraction:  159.6922
** groundtruth_num is (int, float)
** compare_two_numbers int 159.6922 160
** correct
**  300 153
** answer: 20.0, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  20.0
** groundtruth_num is (int, float)
** compare_two_numbers int 20 20
** correct
**  301 153
** answer: 78, groundtruth_str: 78
** compare on lower
** correct
**  302 153
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  303 153
** answer: A, groundtruth_str: B
** wrong
**  303 154
** answer: 2, groundtruth_str: B
** wrong
**  303 155
** answer: 4, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 2
** wrong
**  303 156
** answer: 856.71, groundtruth_str: 855
** groundtruth_num is not None
** is_fraction:  856.71
** groundtruth_num is (int, float)
** compare_two_numbers int 856.71 855
** wrong
**  303 157
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  304 157
** answer: 7.0, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  7.0
** groundtruth_num is (int, float)
** compare_two_numbers int 7 7
** correct
**  305 157
** answer: 48.05%, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  48.05%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.4805 48
** wrong
**  305 158
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  306 158
** answer: 7, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 8
** wrong
**  306 159
** answer: B, groundtruth_str: A
** wrong
**  306 160
** answer: 199.88, groundtruth_str: 200
** groundtruth_num is not None
** is_fraction:  199.88
** groundtruth_num is (int, float)
** compare_two_numbers int 199.88 200
** correct
**  307 160
** answer: 223.3278, groundtruth_str: 222
** groundtruth_num is not None
** is_fraction:  223.3278
** groundtruth_num is (int, float)
** compare_two_numbers int 223.3278 222
** wrong
**  307 161
** answer: 8.4935%, groundtruth_str: 14.29
** groundtruth_num is not None
** is_fraction:  8.4935%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.084935 14.29
** wrong
**  307 162
** answer: 2.88, groundtruth_str: 2.88
** compare on lower
** correct
**  308 162
** answer: 46, groundtruth_str: 46
** compare on lower
** correct
**  309 162
** answer: 2, groundtruth_str: 2.333333333
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers float 2 2.333333333
** wrong
**  309 163
** answer: B, groundtruth_str: A
** wrong
**  309 164
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  310 164
** answer: 37, groundtruth_str: B
** wrong
**  310 165
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  311 165
** answer: 233.39, groundtruth_str: 233
** groundtruth_num is not None
** is_fraction:  233.39
** groundtruth_num is (int, float)
** compare_two_numbers int 233.39 233
** correct
**  312 165
** answer: 74, groundtruth_str: 74
** compare on lower
** correct
**  313 165
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  314 165
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  315 165
** answer: 36.0, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  36.0
** groundtruth_num is (int, float)
** compare_two_numbers int 36 36
** correct
**  316 165
** answer: 416.67, groundtruth_str: 416.67
** compare on lower
** correct
**  317 165
** answer: 64, groundtruth_str: 64
** compare on lower
** correct
**  318 165
** answer: 30.0, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  30.0
** groundtruth_num is (int, float)
** compare_two_numbers int 30 30
** correct
**  319 165
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  320 165
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  321 165
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  322 165
** answer: 6, groundtruth_str: 54
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 54
** wrong
**  322 166
** answer: 4182, groundtruth_str: 4180
** groundtruth_num is not None
** is_fraction:  4182
** groundtruth_num is (int, float)
** compare_two_numbers int 4182 4180
** wrong
**  322 167
** answer: 166.96, groundtruth_str: 672
** groundtruth_num is not None
** is_fraction:  166.96
** groundtruth_num is (int, float)
** compare_two_numbers int 166.96 672
** wrong
**  322 168
** answer: 33.60, groundtruth_str: 33.6
** groundtruth_num is not None
** is_fraction:  33.60
** groundtruth_num is (int, float)
** compare_two_numbers float 33.6 33.6
** correct
**  323 168
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  324 168
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  325 168
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  326 168
** answer: 45, groundtruth_str: 115
** groundtruth_num is not None
** is_fraction:  45
** groundtruth_num is (int, float)
** compare_two_numbers int 45 115
** wrong
**  326 169
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  327 169
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  328 169
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  329 169
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  330 169
** answer: 85.0, groundtruth_str: 85
** groundtruth_num is not None
** is_fraction:  85.0
** groundtruth_num is (int, float)
** compare_two_numbers int 85 85
** correct
**  331 169
** answer: 74.4422, groundtruth_str: 74
** groundtruth_num is not None
** is_fraction:  74.4422
** groundtruth_num is (int, float)
** compare_two_numbers int 74.4422 74
** correct
**  332 169
** answer: 0.5, groundtruth_str: 0.5
** compare on lower
** correct
**  333 169
** answer: \frac{2}{3}, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  \frac{2}{3}
** groundtruth_num is (int, float)
** compare_two_numbers int 0.6666666666666666 1
** correct
**  334 169
** answer: 450, groundtruth_str: 450
** compare on lower
** correct
**  335 169
** answer: 6, groundtruth_str: 81
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 81
** wrong
**  335 170
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  336 170
** answer: 7.48, groundtruth_str: 7.48
** compare on lower
** correct
**  337 170
** answer: 52, groundtruth_str: 52
** compare on lower
** correct
**  338 170
** answer: 5, groundtruth_str: 125
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 125
** wrong
**  338 171
** answer: 384, groundtruth_str: 384
** compare on lower
** correct
**  339 171
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  340 171
** answer: 121.91, groundtruth_str: 122
** groundtruth_num is not None
** is_fraction:  121.91
** groundtruth_num is (int, float)
** compare_two_numbers int 121.91 122
** correct
**  341 171
** answer: 171.34, groundtruth_str: 171
** groundtruth_num is not None
** is_fraction:  171.34
** groundtruth_num is (int, float)
** compare_two_numbers int 171.34 171
** correct
**  342 171
** answer: 33.0, groundtruth_str: 33
** groundtruth_num is not None
** is_fraction:  33.0
** groundtruth_num is (int, float)
** compare_two_numbers int 33 33
** correct
**  343 171
** answer: 57.0, groundtruth_str: 57
** groundtruth_num is not None
** is_fraction:  57.0
** groundtruth_num is (int, float)
** compare_two_numbers int 57 57
** correct
**  344 171
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  345 171
** answer: 144.35, groundtruth_str: 144.35
** compare on lower
** correct
**  346 171
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  346 172
** answer: 46, groundtruth_str: 46
** compare on lower
** correct
**  347 172
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  348 172
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  349 172
** answer: 1227.0, groundtruth_str: 1227
** groundtruth_num is not None
** is_fraction:  1227.0
** groundtruth_num is (int, float)
** compare_two_numbers int 1227 1227
** correct
**  350 172
** answer: 5.66, groundtruth_str: 5.66
** compare on lower
** correct
**  351 172
** answer: 0.14, groundtruth_str: A
** wrong
**  351 173
** answer: x+y-6, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  x+y-6
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  351 174
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  352 174
** answer: 160, groundtruth_str: 160
** compare on lower
** correct
**  353 174
** answer: 49.5, groundtruth_str: 49.5
** compare on lower
** correct
**  354 174
** answer: (A)asphalt, groundtruth_str: B
** wrong
**  354 175
** answer: 223.125, groundtruth_str: 223.13
** groundtruth_num is not None
** is_fraction:  223.125
** groundtruth_num is (int, float)
** compare_two_numbers float 223.125 223.13
** wrong
**  354 176
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  355 176
** answer: 405.0, groundtruth_str: 405
** groundtruth_num is not None
** is_fraction:  405.0
** groundtruth_num is (int, float)
** compare_two_numbers int 405 405
** correct
**  356 176
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  357 176
** answer: 1.33, groundtruth_str: 1.33
** compare on lower
** correct
**  358 176
** answer: 4.00, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  4.00
** groundtruth_num is (int, float)
** compare_two_numbers int 4 4
** correct
**  359 176
** answer: 7.88, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  7.88
** groundtruth_num is (int, float)
** compare_two_numbers int 7.88 20
** wrong
**  359 177
** answer: 8145, groundtruth_str: 8145
** compare on lower
** correct
**  360 177
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  361 177
** answer: 8.5, groundtruth_str: 8.5
** compare on lower
** correct
**  362 177
** answer: 21.0, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  21.0
** groundtruth_num is (int, float)
** compare_two_numbers int 21 21
** correct
**  363 177
** answer: 6, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 3
** wrong
**  363 178
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  364 178
** answer: 162.0, groundtruth_str: 162
** groundtruth_num is not None
** is_fraction:  162.0
** groundtruth_num is (int, float)
** compare_two_numbers int 162 162
** correct
**  365 178
** answer: 17.0, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  17.0
** groundtruth_num is (int, float)
** compare_two_numbers int 17 17
** correct
**  366 178
** answer: 840, groundtruth_str: A
** wrong
**  366 179
** answer: 0.83, groundtruth_str: 1.2
** groundtruth_num is not None
** is_fraction:  0.83
** groundtruth_num is (int, float)
** compare_two_numbers float 0.83 1.2
** wrong
**  366 180
** answer: 18.042, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  18.042
** groundtruth_num is (int, float)
** compare_two_numbers int 18.042 18
** correct
**  367 180
** answer: 53.85, groundtruth_str: 53.87
** groundtruth_num is not None
** is_fraction:  53.85
** groundtruth_num is (int, float)
** compare_two_numbers float 53.85 53.87
** wrong
**  367 181
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  368 181
** answer: 6, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 8
** wrong
**  368 182
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  369 182
** answer: 78.0, groundtruth_str: 78
** groundtruth_num is not None
** is_fraction:  78.0
** groundtruth_num is (int, float)
** compare_two_numbers int 78 78
** correct
**  370 182
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  371 182
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  372 182
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  373 182
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  374 182
** answer: 17, groundtruth_str: 417
** groundtruth_num is not None
** is_fraction:  17
** groundtruth_num is (int, float)
** compare_two_numbers int 17 417
** wrong
**  374 183
** answer: 320, groundtruth_str: 320
** compare on lower
** correct
**  375 183
** answer: 5500, groundtruth_str: 5500
** compare on lower
** correct
**  376 183
** answer: 144.0, groundtruth_str: 144
** groundtruth_num is not None
** is_fraction:  144.0
** groundtruth_num is (int, float)
** compare_two_numbers int 144 144
** correct
**  377 183
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  378 183
** answer: 19, groundtruth_str: 19
** compare on lower
** correct
**  379 183
** answer: 0.875, groundtruth_str: 0.875
** compare on lower
** correct
**  380 183
** answer: 4, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 2
** wrong
**  380 184
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  381 184
** answer: 46, groundtruth_str: 46
** compare on lower
** correct
**  382 184
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  383 184
** answer: 213, groundtruth_str: 213
** compare on lower
** correct
**  384 184
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  385 184
** answer: 17.0, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  17.0
** groundtruth_num is (int, float)
** compare_two_numbers int 17 17
** correct
**  386 184
** answer: 2750, groundtruth_str: 2750
** compare on lower
** correct
**  387 184
** answer: 140.57, groundtruth_str: 140.57
** compare on lower
** correct
**  388 184
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  389 184
** answer: 1.51, groundtruth_str: 1.51
** compare on lower
** correct
**  390 184
** answer: 108.02, groundtruth_str: 108
** groundtruth_num is not None
** is_fraction:  108.02
** groundtruth_num is (int, float)
** compare_two_numbers int 108.02 108
** correct
**  391 184
** answer: 3.25, groundtruth_str: 3.25
** compare on lower
** correct
**  392 184
** answer: 17.80, groundtruth_str: 11.74
** groundtruth_num is not None
** is_fraction:  17.80
** groundtruth_num is (int, float)
** compare_two_numbers float 17.8 11.74
** wrong
**  392 185
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  393 185
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  394 185
** answer: 125, groundtruth_str: 125
** compare on lower
** correct
**  395 185
** answer: 60.0, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  60.0
** groundtruth_num is (int, float)
** compare_two_numbers int 60 4
** wrong
**  395 186
** answer: 7, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 19
** wrong
**  395 187
** answer: A, groundtruth_str: B
** wrong
**  395 188
** answer: 42742, groundtruth_str: 42742
** compare on lower
** correct
**  396 188
** answer: 2, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 1
** wrong
**  396 189
** answer: 48.04, groundtruth_str: 73.85
** groundtruth_num is not None
** is_fraction:  48.04
** groundtruth_num is (int, float)
** compare_two_numbers float 48.04 73.85
** wrong
**  396 190
** answer: 117, groundtruth_str: 195
** groundtruth_num is not None
** is_fraction:  117
** groundtruth_num is (int, float)
** compare_two_numbers int 117 195
** wrong
**  396 191
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  397 191
** answer: 5, groundtruth_str: B
** wrong
**  397 192
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  398 192
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  399 192
** answer: 18.01528, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  18.01528
** groundtruth_num is (int, float)
** compare_two_numbers int 18.01528 18
** correct
**  400 192
** answer: 18.01528, groundtruth_str: 90
** groundtruth_num is not None
** is_fraction:  18.01528
** groundtruth_num is (int, float)
** compare_two_numbers int 18.01528 90
** wrong
**  400 193
** answer: 20.0, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  20.0
** groundtruth_num is (int, float)
** compare_two_numbers int 20 20
** correct
**  401 193
** answer: 65, groundtruth_str: 65
** compare on lower
** correct
**  402 193
** answer: 99, groundtruth_str: 55
** groundtruth_num is not None
** is_fraction:  99
** groundtruth_num is (int, float)
** compare_two_numbers int 99 55
** wrong
**  402 194
** answer: 4, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 12
** wrong
**  402 195
** answer: 0.375, groundtruth_str: 8.95
** groundtruth_num is not None
** is_fraction:  0.375
** groundtruth_num is (int, float)
** compare_two_numbers float 0.375 8.95
** wrong
**  402 196
** answer: 1.25, groundtruth_str: 1.25
** compare on lower
** correct
**  403 196
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  404 196
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  405 196
** answer: 1357, groundtruth_str: 1357
** compare on lower
** correct
**  406 196
** answer: A, groundtruth_str: B
** wrong
**  406 197
** answer: 8.623, groundtruth_str: 8.619
** groundtruth_num is not None
** is_fraction:  8.623
** groundtruth_num is (int, float)
** compare_two_numbers float 8.623 8.619
** wrong
**  406 198
** answer: 28.0, groundtruth_str: 28
** groundtruth_num is not None
** is_fraction:  28.0
** groundtruth_num is (int, float)
** compare_two_numbers int 28 28
** correct
**  407 198
** answer: 35, groundtruth_str: 35
** compare on lower
** correct
**  408 198
** answer: 42.10, groundtruth_str: 126
** groundtruth_num is not None
** is_fraction:  42.10
** groundtruth_num is (int, float)
** compare_two_numbers int 42.1 126
** wrong
**  408 199
** answer: 3606, groundtruth_str: 3606
** compare on lower
** correct
**  409 199
** answer: 1304.5, groundtruth_str: 869.67
** groundtruth_num is not None
** is_fraction:  1304.5
** groundtruth_num is (int, float)
** compare_two_numbers float 1304.5 869.67
** wrong
**  409 200
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  410 200
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  411 200
** answer: 123, groundtruth_str: B
** wrong
**  411 201
** answer: A, groundtruth_str: B
** wrong
**  411 202
** answer: 1, groundtruth_str: 74
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 74
** wrong
**  411 203
** answer: 168, groundtruth_str: 168
** compare on lower
** correct
**  412 203
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  413 203
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  414 203
** answer: 123.0, groundtruth_str: 24.6
** groundtruth_num is not None
** is_fraction:  123.0
** groundtruth_num is (int, float)
** compare_two_numbers float 123 24.6
** wrong
**  414 204
** answer: 127.9022, groundtruth_str: 129
** groundtruth_num is not None
** is_fraction:  127.9022
** groundtruth_num is (int, float)
** compare_two_numbers int 127.9022 129
** wrong
**  414 205
** answer: 95, groundtruth_str: 95
** compare on lower
** correct
**  415 205
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  416 205
** answer: 2, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 1
** wrong
**  416 206
** answer: 1.25, groundtruth_str: 1.25
** compare on lower
** correct
**  417 206
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  418 206
** answer: 110, groundtruth_str: A
** wrong
**  418 207
** answer: 3, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 2
** wrong
**  418 208
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  419 208
** answer: 62, groundtruth_str: 62
** compare on lower
** correct
**  420 208
** answer: B)morefriction, groundtruth_str: B
** compare on lower in
** correct
**  421 208
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  422 208
** answer: (A)more, groundtruth_str: A
** compare on lower in
** correct
**  423 208
** answer: 3, groundtruth_str: B
** wrong
**  423 209
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  424 209
** answer: B, groundtruth_str: A
** wrong
**  424 210
** answer: 5.80, groundtruth_str: 5.8
** groundtruth_num is not None
** is_fraction:  5.80
** groundtruth_num is (int, float)
** compare_two_numbers float 5.8 5.8
** correct
**  425 210
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  426 210
** answer: 3, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 1
** wrong
**  426 211
** answer: 13437, groundtruth_str: 13437
** compare on lower
** correct
**  427 211
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  428 211
** answer: 41, groundtruth_str: 41
** compare on lower
** correct
**  429 211
** answer: 112.0, groundtruth_str: 112
** groundtruth_num is not None
** is_fraction:  112.0
** groundtruth_num is (int, float)
** compare_two_numbers int 112 112
** correct
**  430 211
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  431 211
** answer: 9.0, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  9.0
** groundtruth_num is (int, float)
** compare_two_numbers int 9 9
** correct
**  432 211
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  433 211
** answer: 19.20, groundtruth_str: 19.2
** groundtruth_num is not None
** is_fraction:  19.20
** groundtruth_num is (int, float)
** compare_two_numbers float 19.2 19.2
** correct
**  434 211
** answer: 1.17, groundtruth_str: 1.17
** compare on lower
** correct
**  435 211
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  436 211
** answer: 66, groundtruth_str: 66
** compare on lower
** correct
**  437 211
** answer: (A)morefriction, groundtruth_str: B
** wrong
**  437 212
** answer: 4072, groundtruth_str: 4072
** compare on lower
** correct
**  438 212
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  439 212
** answer: 7.0, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  7.0
** groundtruth_num is (int, float)
** compare_two_numbers int 7 7
** correct
**  440 212
** answer: 5.24, groundtruth_str: B
** wrong
**  440 213
** answer: 42, groundtruth_str: A
** wrong
**  440 214
** answer: (A)tracks, groundtruth_str: B
** wrong
**  440 215
** answer: 611, groundtruth_str: 611
** compare on lower
** correct
**  441 215
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  442 215
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  443 215
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  444 215
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  445 215
** answer: 40.0%, groundtruth_str: 52.46
** groundtruth_num is not None
** is_fraction:  40.0%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.4 52.46
** wrong
**  445 216
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  446 216
** answer: 62, groundtruth_str: 62
** compare on lower
** correct
**  447 216
** answer: -4.92, groundtruth_str: 5.7
** groundtruth_num is not None
** is_fraction:  -4.92
** groundtruth_num is (int, float)
** compare_two_numbers float -4.92 5.7
** wrong
**  447 217
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  448 217
** answer: 65, groundtruth_str: 65
** compare on lower
** correct
**  449 217
** answer: B)farther, groundtruth_str: B
** compare on lower in
** correct
**  450 217
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  451 217
** answer: B)Lessfriction, groundtruth_str: B
** compare on lower in
** correct
**  452 217
** answer: 59, groundtruth_str: 13.5
** groundtruth_num is not None
** is_fraction:  59
** groundtruth_num is (int, float)
** compare_two_numbers float 59 13.5
** wrong
**  452 218
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  453 218
** answer: 60, groundtruth_str: 16.2
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers float 60 16.2
** wrong
**  453 219
** answer: 2, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 18
** wrong
**  453 220
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  454 220
** answer: 19.01, groundtruth_str: 19.01
** compare on lower
** correct
**  455 220
** answer: 80.0, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  80.0
** groundtruth_num is (int, float)
** compare_two_numbers int 80 80
** correct
**  456 220
** answer: 5.6, groundtruth_str: 5.6
** compare on lower
** correct
**  457 220
** answer: 1.125, groundtruth_str: 1.125
** compare on lower
** correct
**  458 220
** answer: 21.0, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  21.0
** groundtruth_num is (int, float)
** compare_two_numbers int 21 21
** correct
**  459 220
** answer: 2, groundtruth_str: A
** wrong
**  459 221
** answer: 373.33, groundtruth_str: 128
** groundtruth_num is not None
** is_fraction:  373.33
** groundtruth_num is (int, float)
** compare_two_numbers int 373.33 128
** wrong
**  459 222
** answer: 57, groundtruth_str: 57
** compare on lower
** correct
**  460 222
** answer: 6.01, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  6.01
** groundtruth_num is (int, float)
** compare_two_numbers int 6.01 12
** wrong
**  460 223
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  461 223
** answer: 2.23, groundtruth_str: 2.23
** compare on lower
** correct
**  462 223
** answer: 73851, groundtruth_str: 73851
** compare on lower
** correct
**  463 223
** answer: 192.14, groundtruth_str: 192
** groundtruth_num is not None
** is_fraction:  192.14
** groundtruth_num is (int, float)
** compare_two_numbers int 192.14 192
** correct
**  464 223
** answer: 10.43%, groundtruth_str: 10.34
** groundtruth_num is not None
** is_fraction:  10.43%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1043 10.34
** wrong
**  464 224
** answer: A, groundtruth_str: B
** wrong
**  464 225
** answer: 27, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers int 27 21
** wrong
**  464 226
** answer: 2.72%, groundtruth_str: 2.7
** groundtruth_num is not None
** is_fraction:  2.72%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.027200000000000002 2.7
** wrong
**  464 227
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  465 227
** answer: 2, groundtruth_str: 148
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 148
** wrong
**  465 228
** answer: 102, groundtruth_str: 102
** compare on lower
** correct
**  466 228
** answer: 17.034, groundtruth_str: 90
** groundtruth_num is not None
** is_fraction:  17.034
** groundtruth_num is (int, float)
** compare_two_numbers int 17.034 90
** wrong
**  466 229
** answer: 156, groundtruth_str: 156
** compare on lower
** correct
**  467 229
** answer: 153.3264, groundtruth_str: 153
** groundtruth_num is not None
** is_fraction:  153.3264
** groundtruth_num is (int, float)
** compare_two_numbers int 153.3264 153
** correct
**  468 229
** answer: 89.0, groundtruth_str: 89
** groundtruth_num is not None
** is_fraction:  89.0
** groundtruth_num is (int, float)
** compare_two_numbers int 89 89
** correct
**  469 229
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  470 229
** answer: 173.0, groundtruth_str: 173
** groundtruth_num is not None
** is_fraction:  173.0
** groundtruth_num is (int, float)
** compare_two_numbers int 173 173
** correct
**  471 229
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  472 229
** answer: 2.0, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  2.0
** groundtruth_num is (int, float)
** compare_two_numbers int 2 2
** correct
**  473 229
** answer: 4.0, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  4.0
** groundtruth_num is (int, float)
** compare_two_numbers int 4 10
** wrong
**  473 230
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  474 230
** answer: 208, groundtruth_str: 208
** compare on lower
** correct
**  475 230
** answer: 57.14%, groundtruth_str: 57.14
** groundtruth_num is not None
** is_fraction:  57.14%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5714 57.14
** wrong
**  475 231
** answer: 67.5, groundtruth_str: 67.5
** compare on lower
** correct
**  476 231
** answer: A, groundtruth_str: B
** wrong
**  476 232
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  477 232
** answer: 144, groundtruth_str: 144
** compare on lower
** correct
**  478 232
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  479 232
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  480 232
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  480 233
** answer: 76924, groundtruth_str: 76924
** compare on lower
** correct
**  481 233
** answer: 1, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 3
** wrong
**  481 234
** answer: 7.0, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  7.0
** groundtruth_num is (int, float)
** compare_two_numbers int 7 7
** correct
**  482 234
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  483 234
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  484 234
** answer: 3, groundtruth_str: 54
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 54
** wrong
**  484 235
** answer: 666.65, groundtruth_str: 660
** groundtruth_num is not None
** is_fraction:  666.65
** groundtruth_num is (int, float)
** compare_two_numbers int 666.65 660
** wrong
**  484 236
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  485 236
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  486 236
** answer: 171.35, groundtruth_str: 171
** groundtruth_num is not None
** is_fraction:  171.35
** groundtruth_num is (int, float)
** compare_two_numbers int 171.35 171
** correct
**  487 236
** answer: 1.67, groundtruth_str: 1.67
** compare on lower
** correct
**  488 236
** answer: 180, groundtruth_str: 180
** compare on lower
** correct
**  489 236
** answer: 3, groundtruth_str: 456
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 456
** wrong
**  489 237
** answer: slower, groundtruth_str: B
** wrong
**  489 238
** answer: 83, groundtruth_str: 83
** compare on lower
** correct
**  490 238
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  491 238
** answer: 53.50, groundtruth_str: 53
** groundtruth_num is not None
** is_fraction:  53.50
** groundtruth_num is (int, float)
** compare_two_numbers int 53.5 53
** wrong
**  491 239
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  492 239
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  492 240
** answer: 42, groundtruth_str: 42
** compare on lower
** correct
**  493 240
** answer: 22.5, groundtruth_str: 22.5
** compare on lower
** correct
**  494 240
** answer: (A)tracks, groundtruth_str: B
** wrong
**  494 241
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  495 241
** answer: 250, groundtruth_str: 250
** compare on lower
** correct
**  496 241
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  497 241
** answer: 23, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  23
** groundtruth_num is (int, float)
** compare_two_numbers int 23 15
** wrong
**  497 242
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  498 242
** answer: 2.23, groundtruth_str: B
** wrong
**  498 243
** answer: 54, groundtruth_str: 54
** compare on lower
** correct
**  499 243
** answer: 8.0, groundtruth_str: A
** wrong
**  499 244
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  500 244
** answer: 36.44, groundtruth_str: 36.44
** compare on lower
** correct
**  501 244
** answer: 4300, groundtruth_str: 4300
** compare on lower
** correct
**  502 244
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  503 244
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  504 244
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  505 244
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  506 244
** answer: 6048, groundtruth_str: 6241
** groundtruth_num is not None
** is_fraction:  6048
** groundtruth_num is (int, float)
** compare_two_numbers int 6048 6241
** wrong
**  506 245
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  507 245
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  508 245
** answer: 71.0, groundtruth_str: 71
** groundtruth_num is not None
** is_fraction:  71.0
** groundtruth_num is (int, float)
** compare_two_numbers int 71 71
** correct
**  509 245
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  510 245
** answer: 144, groundtruth_str: 144
** compare on lower
** correct
**  511 245
** answer: (A)more, groundtruth_str: B
** wrong
**  511 246
** answer: 3, groundtruth_str: 186
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 186
** wrong
**  511 247
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  512 247
** answer: 2, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 1
** wrong
**  512 248
** answer: 87.25, groundtruth_str: 87.25
** compare on lower
** correct
**  513 248
** answer: 13.83, groundtruth_str: 13.83
** compare on lower
** correct
**  514 248
** answer: 46, groundtruth_str: 46
** compare on lower
** correct
**  515 248
** answer: 80.0, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  80.0
** groundtruth_num is (int, float)
** compare_two_numbers int 80 80
** correct
**  516 248
** answer: 11.00, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  11.00
** groundtruth_num is (int, float)
** compare_two_numbers int 11 11
** correct
**  517 248
** answer: 1.63, groundtruth_str: 1.63
** compare on lower
** correct
**  518 248
** answer: 31.0, groundtruth_str: 31
** groundtruth_num is not None
** is_fraction:  31.0
** groundtruth_num is (int, float)
** compare_two_numbers int 31 31
** correct
**  519 248
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  520 248
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  521 248
** answer: 61.833, groundtruth_str: 434
** groundtruth_num is not None
** is_fraction:  61.833
** groundtruth_num is (int, float)
** compare_two_numbers int 61.833 434
** wrong
**  521 249
** answer: 14.0, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  14.0
** groundtruth_num is (int, float)
** compare_two_numbers int 14 14
** correct
**  522 249
** answer: 2.0, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  2.0
** groundtruth_num is (int, float)
** compare_two_numbers int 2 2
** correct
**  523 249
** answer: 4, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 2
** wrong
**  523 250
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  524 250
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  525 250
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  526 250
** answer: 65157, groundtruth_str: 65057
** groundtruth_num is not None
** is_fraction:  65157
** groundtruth_num is (int, float)
** compare_two_numbers int 65157 65057
** wrong
**  526 251
** answer: 0.1, groundtruth_str: 0.1
** compare on lower
** correct
**  527 251
** answer: 288, groundtruth_str: 288
** compare on lower
** correct
**  528 251
** answer: 5.62, groundtruth_str: 5.62
** compare on lower
** correct
**  529 251
** answer: 65.59, groundtruth_str: 46.13
** groundtruth_num is not None
** is_fraction:  65.59
** groundtruth_num is (int, float)
** compare_two_numbers float 65.59 46.13
** wrong
**  529 252
** answer: 38.0, groundtruth_str: 38
** groundtruth_num is not None
** is_fraction:  38.0
** groundtruth_num is (int, float)
** compare_two_numbers int 38 38
** correct
**  530 252
** answer: 980.0, groundtruth_str: A
** wrong
**  530 253
** answer: 13.19, groundtruth_str: 22.33
** groundtruth_num is not None
** is_fraction:  13.19
** groundtruth_num is (int, float)
** compare_two_numbers float 13.19 22.33
** wrong
**  530 254
** answer: 62, groundtruth_str: 62
** compare on lower
** correct
**  531 254
** answer: 455, groundtruth_str: B
** wrong
**  531 255
** answer: 744.425, groundtruth_str: 740
** groundtruth_num is not None
** is_fraction:  744.425
** groundtruth_num is (int, float)
** compare_two_numbers int 744.425 740
** wrong
**  531 256
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  532 256
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  533 256
** answer: 8, groundtruth_str: A
** wrong
**  533 257
** answer: 1146, groundtruth_str: 854
** groundtruth_num is not None
** is_fraction:  1146
** groundtruth_num is (int, float)
** compare_two_numbers int 1146 854
** wrong
**  533 258
** answer: 68.46, groundtruth_str: 68
** groundtruth_num is not None
** is_fraction:  68.46
** groundtruth_num is (int, float)
** compare_two_numbers int 68.46 68
** correct
**  534 258
** answer: 1.14, groundtruth_str: 1.14
** compare on lower
** correct
**  535 258
** answer: 4, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 17
** wrong
**  535 259
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  536 259
** answer: (B)slower, groundtruth_str: A
** wrong
**  536 260
** answer: 4.05, groundtruth_str: 35.95
** groundtruth_num is not None
** is_fraction:  4.05
** groundtruth_num is (int, float)
** compare_two_numbers float 4.05 35.95
** wrong
**  536 261
** answer: 13.6%, groundtruth_str: 13.61
** groundtruth_num is not None
** is_fraction:  13.6%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.136 13.61
** wrong
**  536 262
** answer: 11229, groundtruth_str: 11229
** compare on lower
** correct
**  537 262
** answer: 13.90, groundtruth_str: 13.9
** groundtruth_num is not None
** is_fraction:  13.90
** groundtruth_num is (int, float)
** compare_two_numbers float 13.9 13.9
** correct
**  538 262
** answer: 2.4, groundtruth_str: 2.4
** compare on lower
** correct
**  539 262
** answer: 44.44%, groundtruth_str: 43.24
** groundtruth_num is not None
** is_fraction:  44.44%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.44439999999999996 43.24
** wrong
**  539 263
** answer: 5.625, groundtruth_str: 5.625
** compare on lower
** correct
**  540 263
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  541 263
** answer: 9.0, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  9.0
** groundtruth_num is (int, float)
** compare_two_numbers int 9 9
** correct
**  542 263
** answer: 12, groundtruth_str: A
** wrong
**  542 264
** answer: A, groundtruth_str: B
** wrong
**  542 265
** answer: 9828, groundtruth_str: 9828
** compare on lower
** correct
**  543 265
** answer: 580, groundtruth_str: 525
** groundtruth_num is not None
** is_fraction:  580
** groundtruth_num is (int, float)
** compare_two_numbers int 580 525
** wrong
**  543 266
** answer: A, groundtruth_str: B
** wrong
**  543 267
** answer: B, groundtruth_str: A
** wrong
**  543 268
** answer: 1, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 5
** wrong
**  543 269
** answer: 34, groundtruth_str: 34
** compare on lower
** correct
**  544 269
** answer: 280, groundtruth_str: 56
** groundtruth_num is not None
** is_fraction:  280
** groundtruth_num is (int, float)
** compare_two_numbers int 280 56
** wrong
**  544 270
** answer: A, groundtruth_str: B
** wrong
**  544 271
** answer: 9.0, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  9.0
** groundtruth_num is (int, float)
** compare_two_numbers int 9 9
** correct
**  545 271
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  545 272
** answer: B, groundtruth_str: A
** wrong
**  545 273
** answer: ?, groundtruth_str: 44.07
** groundtruth_num is not None
** is_fraction:  ?
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  545 274
** answer: 297.235, groundtruth_str: 297
** groundtruth_num is not None
** is_fraction:  297.235
** groundtruth_num is (int, float)
** compare_two_numbers int 297.235 297
** correct
**  546 274
** answer: 3, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 24
** wrong
**  546 275
** answer: 2, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 18
** wrong
**  546 276
** answer: 324, groundtruth_str: 324
** compare on lower
** correct
**  547 276
** answer: 32.07, groundtruth_str: 13.73
** groundtruth_num is not None
** is_fraction:  32.07
** groundtruth_num is (int, float)
** compare_two_numbers float 32.07 13.73
** wrong
**  547 277
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  548 277
** answer: 781.2, groundtruth_str: 780
** groundtruth_num is not None
** is_fraction:  781.2
** groundtruth_num is (int, float)
** compare_two_numbers int 781.2 780
** wrong
**  548 278
** answer: 18.039, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  18.039
** groundtruth_num is (int, float)
** compare_two_numbers int 18.039 18
** correct
**  549 278
** answer: B, groundtruth_str: A
** wrong
**  549 279
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  550 279
** answer: B)moreresistance, groundtruth_str: B
** compare on lower in
** correct
**  551 279
** answer: 54.04%, groundtruth_str: 54.24
** groundtruth_num is not None
** is_fraction:  54.04%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5404 54.24
** wrong
**  551 280
** answer: 22.20%, groundtruth_str: 24.62
** groundtruth_num is not None
** is_fraction:  22.20%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.222 24.62
** wrong
**  551 281
** answer: 6.22, groundtruth_str: 6.22
** compare on lower
** correct
**  552 281
** answer: 4, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 30
** wrong
**  552 282
** answer: 91.56, groundtruth_str: 620
** groundtruth_num is not None
** is_fraction:  91.56
** groundtruth_num is (int, float)
** compare_two_numbers int 91.56 620
** wrong
**  552 283
** answer: (C)cannotbedetermined, groundtruth_str: B
** compare on lower in
** correct
**  553 283
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  554 283
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  555 283
** answer: 4, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 26
** wrong
**  555 284
** answer: 24.0, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  24.0
** groundtruth_num is (int, float)
** compare_two_numbers int 24 24
** correct
**  556 284
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  557 284
** answer: 5, groundtruth_str: B
** wrong
**  557 285
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  558 285
** answer: 90.06%, groundtruth_str: 89.89
** groundtruth_num is not None
** is_fraction:  90.06%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.9006000000000001 89.89
** wrong
**  558 286
** answer: 12.21, groundtruth_str: 12.21
** compare on lower
** correct
**  559 286
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  560 286
** answer: 1.5, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1.5
** groundtruth_num is (int, float)
** compare_two_numbers int 1.5 3
** wrong
**  560 287
** answer: 0, groundtruth_str: A
** wrong
**  560 288
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  561 288
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  562 288
** answer: 159.6922, groundtruth_str: 160
** groundtruth_num is not None
** is_fraction:  159.6922
** groundtruth_num is (int, float)
** compare_two_numbers int 159.6922 160
** correct
**  563 288
** answer: 78.35%, groundtruth_str: 78.29
** groundtruth_num is not None
** is_fraction:  78.35%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.7835 78.29
** wrong
**  563 289
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  564 289
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  565 289
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  566 289
** answer: 61.81, groundtruth_str: 62
** groundtruth_num is not None
** is_fraction:  61.81
** groundtruth_num is (int, float)
** compare_two_numbers int 61.81 62
** correct
**  567 289
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  568 289
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  569 289
** answer: 10828, groundtruth_str: 10828
** compare on lower
** correct
**  570 289
** answer: 42.10, groundtruth_str: 42
** groundtruth_num is not None
** is_fraction:  42.10
** groundtruth_num is (int, float)
** compare_two_numbers int 42.1 42
** correct
**  571 289
** answer: 18.4,17.6, groundtruth_str: 17.6
** groundtruth_num is not None
** is_fraction:  18.4,17.6
** groundtruth_num is (int, float)
** compare_two_numbers float 18.4 17.6
** wrong
**  571 290
** answer: 24.0, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  24.0
** groundtruth_num is (int, float)
** compare_two_numbers int 24 24
** correct
**  572 290
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  573 290
** answer: 7349, groundtruth_str: 7349
** compare on lower
** correct
**  574 290
** answer: 320, groundtruth_str: 320
** compare on lower
** correct
**  575 290
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  576 290
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  577 290
** answer: 364, groundtruth_str: 366
** groundtruth_num is not None
** is_fraction:  364
** groundtruth_num is (int, float)
** compare_two_numbers int 364 366
** wrong
**  577 291
** answer: 26866, groundtruth_str: 26866
** compare on lower
** correct
**  578 291
** answer: 72.08, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  72.08
** groundtruth_num is (int, float)
** compare_two_numbers int 72.08 36
** wrong
**  578 292
** answer: 2, groundtruth_str: 106
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 106
** wrong
**  578 293
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  579 293
** answer: 1300, groundtruth_str: 1300
** compare on lower
** correct
**  580 293
** answer: 52, groundtruth_str: 52
** compare on lower
** correct
**  581 293
** answer: 1.6, groundtruth_str: 1.6
** compare on lower
** correct
**  582 293
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  583 293
** answer: 26.12%, groundtruth_str: 15.38
** groundtruth_num is not None
** is_fraction:  26.12%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2612 15.38
** wrong
**  583 294
** answer: 153, groundtruth_str: 153
** compare on lower
** correct
**  584 294
** answer: 208.233, groundtruth_str: 207
** groundtruth_num is not None
** is_fraction:  208.233
** groundtruth_num is (int, float)
** compare_two_numbers int 208.233 207
** wrong
**  584 295
** answer: 74, groundtruth_str: 74
** compare on lower
** correct
**  585 295
** answer: B, groundtruth_str: A
** wrong
**  585 296
** answer: 99.0, groundtruth_str: 99
** groundtruth_num is not None
** is_fraction:  99.0
** groundtruth_num is (int, float)
** compare_two_numbers int 99 99
** correct
**  586 296
** answer: 8.0, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  8.0
** groundtruth_num is (int, float)
** compare_two_numbers int 8 8
** correct
**  587 296
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  588 296
** answer: 1027.98, groundtruth_str: 1026
** groundtruth_num is not None
** is_fraction:  1027.98
** groundtruth_num is (int, float)
** compare_two_numbers int 1027.98 1026
** wrong
**  588 297
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  589 297
** answer: 2.42, groundtruth_str: 2.42
** compare on lower
** correct
**  590 297
** answer: 234.99, groundtruth_str: 234
** groundtruth_num is not None
** is_fraction:  234.99
** groundtruth_num is (int, float)
** compare_two_numbers int 234.99 234
** wrong
**  590 298
** answer: B, groundtruth_str: A
** wrong
**  590 299
** answer: 73.5, groundtruth_str: 73.5
** compare on lower
** correct
**  591 299
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  592 299
** answer: 71.0, groundtruth_str: 71
** groundtruth_num is not None
** is_fraction:  71.0
** groundtruth_num is (int, float)
** compare_two_numbers int 71 71
** correct
**  593 299
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  594 299
** answer: 95.0, groundtruth_str: 95
** groundtruth_num is not None
** is_fraction:  95.0
** groundtruth_num is (int, float)
** compare_two_numbers int 95 95
** correct
**  595 299
** answer: 74.10, groundtruth_str: 518
** groundtruth_num is not None
** is_fraction:  74.10
** groundtruth_num is (int, float)
** compare_two_numbers int 74.1 518
** wrong
**  595 300
** answer: 83.95, groundtruth_str: 67.86
** groundtruth_num is not None
** is_fraction:  83.95
** groundtruth_num is (int, float)
** compare_two_numbers float 83.95 67.86
** wrong
**  595 301
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  596 301
** answer: 266.68, groundtruth_str: 267
** groundtruth_num is not None
** is_fraction:  266.68
** groundtruth_num is (int, float)
** compare_two_numbers int 266.68 267
** correct
**  597 301
** answer: 133.3405386, groundtruth_str: 132
** groundtruth_num is not None
** is_fraction:  133.3405386
** groundtruth_num is (int, float)
** compare_two_numbers int 133.3405386 132
** wrong
**  597 302
** answer: A(web), groundtruth_str: A
** compare on lower in
** correct
**  598 302
** answer: 15.0, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  15.0
** groundtruth_num is (int, float)
** compare_two_numbers int 15 15
** correct
**  599 302
** answer: 7.74, groundtruth_str: 7.75
** groundtruth_num is not None
** is_fraction:  7.74
** groundtruth_num is (int, float)
** compare_two_numbers float 7.74 7.75
** wrong
**  599 303
** answer: 94.0, groundtruth_str: 94
** groundtruth_num is not None
** is_fraction:  94.0
** groundtruth_num is (int, float)
** compare_two_numbers int 94 94
** correct
**  600 303
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  601 303
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  602 303
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  603 303
** answer: A, groundtruth_str: B
** wrong
**  603 304
** answer: A(bullettrain), groundtruth_str: A
** compare on lower in
** correct
**  604 304
** answer: 0, groundtruth_str: A
** wrong
**  604 305
** answer: 3.0, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  3.0
** groundtruth_num is (int, float)
** compare_two_numbers int 3 3
** correct
**  605 305
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  606 305
** answer: 24.0, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  24.0
** groundtruth_num is (int, float)
** compare_two_numbers int 24 24
** correct
**  607 305
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  608 305
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  609 305
** answer: 175.3238, groundtruth_str: 175
** groundtruth_num is not None
** is_fraction:  175.3238
** groundtruth_num is (int, float)
** compare_two_numbers int 175.3238 175
** correct
**  610 305
** answer: 157.0, groundtruth_str: 157
** groundtruth_num is not None
** is_fraction:  157.0
** groundtruth_num is (int, float)
** compare_two_numbers int 157 157
** correct
**  611 305
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  612 305
** answer: 5.7833, groundtruth_str: 3.25
** groundtruth_num is not None
** is_fraction:  5.7833
** groundtruth_num is (int, float)
** compare_two_numbers float 5.7833 3.25
** wrong
**  612 306
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  613 306
** answer: 7.47, groundtruth_str: A
** wrong
**  613 307
** answer: 78.01, groundtruth_str: 61.54
** groundtruth_num is not None
** is_fraction:  78.01
** groundtruth_num is (int, float)
** compare_two_numbers float 78.01 61.54
** wrong
**  613 308
** answer: 6, groundtruth_str: B
** wrong
**  613 309
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  614 309
** answer: 8.33, groundtruth_str: 8.33
** compare on lower
** correct
**  615 309
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  616 309
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  617 309
** answer: 18.70, groundtruth_str: 18.7
** groundtruth_num is not None
** is_fraction:  18.70
** groundtruth_num is (int, float)
** compare_two_numbers float 18.7 18.7
** correct
**  618 309
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  619 309
** answer: (Noneoftheabove), groundtruth_str: B
** compare on lower in
** correct
**  620 309
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  621 309
** answer: 128.20, groundtruth_str: 240
** groundtruth_num is not None
** is_fraction:  128.20
** groundtruth_num is (int, float)
** compare_two_numbers int 128.2 240
** wrong
**  621 310
** answer: 166.96, groundtruth_str: 168
** groundtruth_num is not None
** is_fraction:  166.96
** groundtruth_num is (int, float)
** compare_two_numbers int 166.96 168
** wrong
**  621 311
** answer: B, groundtruth_str: A
** wrong
**  621 312
** answer: 1200, groundtruth_str: 1200
** compare on lower
** correct
**  622 312
** answer: 20.94, groundtruth_str: 34.62
** groundtruth_num is not None
** is_fraction:  20.94
** groundtruth_num is (int, float)
** compare_two_numbers float 20.94 34.62
** wrong
**  622 313
** answer: B)morefriction, groundtruth_str: A
** wrong
**  622 314
** answer: B, groundtruth_str: A
** wrong
**  622 315
** answer: 3.33, groundtruth_str: 3.33
** compare on lower
** correct
**  623 315
** answer: 8681, groundtruth_str: 8681
** compare on lower
** correct
**  624 315
** answer: 1, groundtruth_str: 53
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 53
** wrong
**  624 316
** answer: 51.0, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  51.0
** groundtruth_num is (int, float)
** compare_two_numbers int 51 25
** wrong
**  624 317
** answer: 142.94347, groundtruth_str: 1450
** groundtruth_num is not None
** is_fraction:  142.94347
** groundtruth_num is (int, float)
** compare_two_numbers int 142.94347 1450
** wrong
**  624 318
** answer: 83.33, groundtruth_str: 83.33
** compare on lower
** correct
**  625 318
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  626 318
** answer: 9, groundtruth_str: B
** wrong
**  626 319
** answer: 3120, groundtruth_str: 3120
** compare on lower
** correct
**  627 319
** answer: 9.19%, groundtruth_str: 9.09
** groundtruth_num is not None
** is_fraction:  9.19%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0919 9.09
** wrong
**  627 320
** answer: 10.62, groundtruth_str: 10.62
** compare on lower
** correct
**  628 320
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  629 320
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  630 320
** answer: 62.01, groundtruth_str: 558
** groundtruth_num is not None
** is_fraction:  62.01
** groundtruth_num is (int, float)
** compare_two_numbers int 62.01 558
** wrong
**  630 321
** answer: (A)tracks, groundtruth_str: B
** wrong
**  630 322
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  631 322
** answer: 119, groundtruth_str: 119
** compare on lower
** correct
**  632 322
** answer: A)morefriction, groundtruth_str: B
** wrong
**  632 323
** answer: 4.7, groundtruth_str: 4.7
** compare on lower
** correct
**  633 323
** answer: 4, groundtruth_str: 144
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 144
** wrong
**  633 324
** answer: 40.03%, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  40.03%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.4003 40
** wrong
**  633 325
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  634 325
** answer: 4.99%, groundtruth_str: 4.08
** groundtruth_num is not None
** is_fraction:  4.99%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0499 4.08
** wrong
**  634 326
** answer: 88.9%, groundtruth_str: 88.89
** groundtruth_num is not None
** is_fraction:  88.9%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.889 88.89
** wrong
**  634 327
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  635 327
** answer: 25.0, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  25.0
** groundtruth_num is (int, float)
** compare_two_numbers int 25 25
** correct
**  636 327
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  637 327
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  638 327
** answer: 40.02%, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  40.02%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.40020000000000006 80
** wrong
**  638 328
** answer: 40.00%, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  40.00%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.4 80
** wrong
**  638 329
** answer: 150.0, groundtruth_str: 150
** groundtruth_num is not None
** is_fraction:  150.0
** groundtruth_num is (int, float)
** compare_two_numbers int 150 150
** correct
**  639 329
** answer: 118.0, groundtruth_str: 118
** groundtruth_num is not None
** is_fraction:  118.0
** groundtruth_num is (int, float)
** compare_two_numbers int 118 118
** correct
**  640 329
** answer: 82, groundtruth_str: 82
** compare on lower
** correct
**  641 329
** answer: 230, groundtruth_str: 236
** groundtruth_num is not None
** is_fraction:  230
** groundtruth_num is (int, float)
** compare_two_numbers int 230 236
** wrong
**  641 330
** answer: 32.2%, groundtruth_str: 32.14
** groundtruth_num is not None
** is_fraction:  32.2%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.322 32.14
** wrong
**  641 331
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  642 331
** answer: 64, groundtruth_str: 64
** compare on lower
** correct
**  643 331
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  644 331
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  645 331
** answer: 33.33%, groundtruth_str: 53.33
** groundtruth_num is not None
** is_fraction:  33.33%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3333 53.33
** wrong
**  645 332
** answer: 99, groundtruth_str: 99
** compare on lower
** correct
**  646 332
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  647 332
** answer: 100.09, groundtruth_str: 100
** groundtruth_num is not None
** is_fraction:  100.09
** groundtruth_num is (int, float)
** compare_two_numbers int 100.09 100
** correct
**  648 332
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  649 332
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  650 332
** answer: 63, groundtruth_str: 63
** compare on lower
** correct
**  651 332
** answer: 10, groundtruth_str: October
** wrong
**  651 333
** answer: 293.88, groundtruth_str: 294
** groundtruth_num is not None
** is_fraction:  293.88
** groundtruth_num is (int, float)
** compare_two_numbers int 293.88 294
** correct
**  652 333
** answer: slower, groundtruth_str: A
** wrong
**  652 334
** answer: 36.33%, groundtruth_str: 36.36
** groundtruth_num is not None
** is_fraction:  36.33%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.36329999999999996 36.36
** wrong
**  652 335
** answer: 1.5, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1.5
** groundtruth_num is (int, float)
** compare_two_numbers int 1.5 3
** wrong
**  652 336
** answer: 1.6875, groundtruth_str: 1.6875
** compare on lower
** correct
**  653 336
** answer: B)Lessfriction, groundtruth_str: A
** wrong
**  653 337
** answer: 0, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 8
** wrong
**  653 338
** answer: 2.14, groundtruth_str: 2.14
** compare on lower
** correct
**  654 338
** answer: 44, groundtruth_str: 44
** compare on lower
** correct
**  655 338
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  656 338
** answer: 3.0, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  3.0
** groundtruth_num is (int, float)
** compare_two_numbers int 3 3
** correct
**  657 338
** answer: 49, groundtruth_str: 49
** compare on lower
** correct
**  658 338
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  659 338
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  660 338
** answer: 56.07, groundtruth_str: 56
** groundtruth_num is not None
** is_fraction:  56.07
** groundtruth_num is (int, float)
** compare_two_numbers int 56.07 56
** correct
**  661 338
** answer: 30.5, groundtruth_str: 30.5
** compare on lower
** correct
**  662 338
** answer: B)Lessfriction, groundtruth_str: B
** compare on lower in
** correct
**  663 338
** answer: 468.72, groundtruth_str: 468
** groundtruth_num is not None
** is_fraction:  468.72
** groundtruth_num is (int, float)
** compare_two_numbers int 468.72 468
** wrong
**  663 339
** answer: 55, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  55
** groundtruth_num is (int, float)
** compare_two_numbers int 55 40
** wrong
**  663 340
** answer: 6, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 3
** wrong
**  663 341
** answer: 212, groundtruth_str: 212
** compare on lower
** correct
**  664 341
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  665 341
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  666 341
** answer: B, groundtruth_str: A
** wrong
**  666 342
** answer: 2.77, groundtruth_str: 2.76
** groundtruth_num is not None
** is_fraction:  2.77
** groundtruth_num is (int, float)
** compare_two_numbers float 2.77 2.76
** wrong
**  666 343
** answer: 76.0, groundtruth_str: 76
** groundtruth_num is not None
** is_fraction:  76.0
** groundtruth_num is (int, float)
** compare_two_numbers int 76 76
** correct
**  667 343
** answer: 6.0, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  6.0
** groundtruth_num is (int, float)
** compare_two_numbers int 6 6
** correct
**  668 343
** answer: 61.83302, groundtruth_str: 620
** groundtruth_num is not None
** is_fraction:  61.83302
** groundtruth_num is (int, float)
** compare_two_numbers int 61.83302 620
** wrong
**  668 344
** answer: A, groundtruth_str: B
** wrong
**  668 345
** answer: 1484, groundtruth_str: 1484
** compare on lower
** correct
**  669 345
** answer: 3, groundtruth_str: 159
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 159
** wrong
**  669 346
** answer: 1.25, groundtruth_str: 1.25
** compare on lower
** correct
**  670 346
** answer: 7.0, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  7.0
** groundtruth_num is (int, float)
** compare_two_numbers int 7 7
** correct
**  671 346
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  672 346
** answer: 100.09, groundtruth_str: 100
** groundtruth_num is not None
** is_fraction:  100.09
** groundtruth_num is (int, float)
** compare_two_numbers int 100.09 100
** correct
**  673 346
** answer: 176, groundtruth_str: 128
** groundtruth_num is not None
** is_fraction:  176
** groundtruth_num is (int, float)
** compare_two_numbers int 176 128
** wrong
**  673 347
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  674 347
** answer: 27004, groundtruth_str: 26866
** groundtruth_num is not None
** is_fraction:  27004
** groundtruth_num is (int, float)
** compare_two_numbers int 27004 26866
** wrong
**  674 348
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  675 348
** answer: 18.01528, groundtruth_str: 180
** groundtruth_num is not None
** is_fraction:  18.01528
** groundtruth_num is (int, float)
** compare_two_numbers int 18.01528 180
** wrong
**  675 349
** answer: 270, groundtruth_str: 270
** compare on lower
** correct
**  676 349
** answer: 146.35, groundtruth_str: 155
** groundtruth_num is not None
** is_fraction:  146.35
** groundtruth_num is (int, float)
** compare_two_numbers int 146.35 155
** wrong
**  676 350
** answer: 4, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 2
** wrong
**  676 351
** answer: 648, groundtruth_str: 648
** compare on lower
** correct
**  677 351
** answer: (A)doormat, groundtruth_str: B
** wrong
**  677 352
** answer: 2.36, groundtruth_str: 93.38
** groundtruth_num is not None
** is_fraction:  2.36
** groundtruth_num is (int, float)
** compare_two_numbers float 2.36 93.38
** wrong
**  677 353
** answer: 1955.65, groundtruth_str: 1955
** groundtruth_num is not None
** is_fraction:  1955.65
** groundtruth_num is (int, float)
** compare_two_numbers int 1955.65 1955
** wrong
**  677 354
** answer: 884, groundtruth_str: 884
** compare on lower
** correct
**  678 354
** answer: 7.55, groundtruth_str: 7.56
** groundtruth_num is not None
** is_fraction:  7.55
** groundtruth_num is (int, float)
** compare_two_numbers float 7.55 7.56
** wrong
**  678 355
** answer: 35, groundtruth_str: 35
** compare on lower
** correct
**  679 355
** answer: 6.0, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  6.0
** groundtruth_num is (int, float)
** compare_two_numbers int 6 6
** correct
**  680 355
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  681 355
** answer: 2, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 1
** wrong
**  681 356
** answer: 342, groundtruth_str: 342
** compare on lower
** correct
**  682 356
** answer: 78.12, groundtruth_str: 78
** groundtruth_num is not None
** is_fraction:  78.12
** groundtruth_num is (int, float)
** compare_two_numbers int 78.12 78
** correct
**  683 356
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  684 356
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  685 356
** answer: 7.87%, groundtruth_str: 7.89
** groundtruth_num is not None
** is_fraction:  7.87%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0787 7.89
** wrong
**  685 357
BackVerify: 0
** most_common: ('192.14', 3), gold_ans: 1536
** most_common: ('B', 1), gold_ans: B
** most_common: ('A', 4), gold_ans: B
** most_common: ('0.2', 3), gold_ans: A
** most_common: ('A', 2), gold_ans: B
** most_common: ('4.20%', 6), gold_ans: 4.17
** most_common: ('19.64', 1), gold_ans: 19.64
** most_common: ('82', 7), gold_ans: A
** most_common: ['none'], gold_ans: 272
** most_common: ('3220', 3), gold_ans: 6052
** most_common: ('25.87', 1), gold_ans: 25.93
** most_common: ('153.81', 11), gold_ans: 152
** most_common: ('0.2', 8), gold_ans: 1.4
** most_common: ('\\frac{3}{16}', 3), gold_ans: B
** most_common: ['none'], gold_ans: 38.71
** most_common: ('404.5', 1), gold_ans: 645
** most_common: ('81.47', 1), gold_ans: 81.63
** most_common: ('2', 4), gold_ans: 2
** most_common: ('234', 1), gold_ans: 309
** most_common: ('17.0', 1), gold_ans: 17.5
** most_common: ('1.88', 1), gold_ans: 791
** most_common: ('2', 2), gold_ans: 2
** most_common: ('2', 2), gold_ans: 2
** most_common: ('30', 5), gold_ans: 30
** most_common: ('35', 10), gold_ans: 135
** most_common: ('2.8', 6), gold_ans: B
** most_common: ('3', 3), gold_ans: 54
** most_common: ('19', 2), gold_ans: 1.9
** most_common: ('18.67%', 2), gold_ans: 18.71
** most_common: ('7.1725', 5), gold_ans: 7.17
** most_common: ('6', 3), gold_ans: 14.75
** most_common: ('1', 5), gold_ans: 53
** most_common: ('6', 2), gold_ans: 3
** most_common: ('8', 1), gold_ans: 2
** most_common: ('108', 2), gold_ans: 180
** most_common: ('40.94', 1), gold_ans: 40.91
** most_common: ('0.26', 5), gold_ans: 17.8
** most_common: ['none'], gold_ans: 25
** most_common: ('30', 1), gold_ans: 18
** most_common: ('77', 1), gold_ans: B
** most_common: ('118.00814', 1), gold_ans: 944
** most_common: ('14304', 2), gold_ans: 14294
** most_common: ('2', 6), gold_ans: 36
** most_common: ('120', 4), gold_ans: A
** most_common: ['none'], gold_ans: 9517
** most_common: ('57', 6), gold_ans: B
** most_common: ('B', 3), gold_ans: A
** most_common: ('26.18%', 1), gold_ans: 26.42
** most_common: ('48', 1), gold_ans: 48
** most_common: ('4.97%', 2), gold_ans: 4.92
BackVerify: 50
** most_common: ('7', 5), gold_ans: 7
** most_common: ('5', 2), gold_ans: 5.44
** most_common: ('50', 4), gold_ans: 110
** most_common: ('7', 2), gold_ans: 7
** most_common: ('228.06', 2), gold_ans: 228
** most_common: ('B)faster', 2), gold_ans: B
** most_common: ('387.85', 5), gold_ans: 115.83
** most_common: ('A', 8), gold_ans: B
** most_common: ('(A)lessfriction', 4), gold_ans: B
** most_common: ('4', 3), gold_ans: 3
** most_common: ('2', 9), gold_ans: 36
** most_common: ('58.09', 2), gold_ans: 348
** most_common: ('10', 1), gold_ans: 10
** most_common: ('1', 6), gold_ans: 18
** most_common: ('432.08', 2), gold_ans: 432
** most_common: ('421.0', 2), gold_ans: 420
** most_common: ('33.56', 1), gold_ans: 5.58
** most_common: ('1060.09', 1), gold_ans: 1062
** most_common: ('294.17', 4), gold_ans: 296
** most_common: ('A', 1), gold_ans: A
** most_common: ('2', 1), gold_ans: 10
** most_common: ('48000.0', 4), gold_ans: 48
** most_common: ('2', 6), gold_ans: 36
** most_common: ('21.99', 1), gold_ans: 20.99
** most_common: ('3172', 1), gold_ans: 3146
** most_common: ('8', 4), gold_ans: August
** most_common: ('A', 4), gold_ans: A
** most_common: ('0', 1), gold_ans: A
** most_common: ('515.6', 1), gold_ans: 516
** most_common: ('11', 2), gold_ans: 10
** most_common: ('1.37', 4), gold_ans: 14.95
** most_common: ('166.99', 1), gold_ans: 1344
** most_common: ('150.17', 2), gold_ans: 1350
** most_common: ('A', 3), gold_ans: B
** most_common: ('58.27%', 3), gold_ans: 58.33
** most_common: ('5', 6), gold_ans: 1
** most_common: ('31,603', 2), gold_ans: 31603
** most_common: ('20.25', 1), gold_ans: 20.25
** most_common: ('71', 1), gold_ans: Friday
** most_common: ('-2', 1), gold_ans: -10
** most_common: ('69.22', 1), gold_ans: 68.85
** most_common: ('Invalid', 1), gold_ans: 13
** most_common: ('0.18', 1), gold_ans: 0.08
** most_common: ('74', 5), gold_ans: 144
** most_common: ('3.88%', 3), gold_ans: 3.85
** most_common: ('9.0', 1), gold_ans: 9
** most_common: ('10', 5), gold_ans: B
** most_common: ('87.42%', 2), gold_ans: 87.59
** most_common: ('6', 2), gold_ans: 4
** most_common: ('Notenoughinformationtodetermine', 1), gold_ans: B
BackVerify: 100
** most_common: ('B)tilefloor', 2), gold_ans: A
** most_common: ('6', 8), gold_ans: B
** most_common: ('459.99', 6), gold_ans: 459
** most_common: ('A(openair)', 3), gold_ans: A
** most_common: ('B', 2), gold_ans: A
** most_common: ('2', 3), gold_ans: 72
** most_common: ('14', 7), gold_ans: 14.57
** most_common: ('1', 8), gold_ans: 18
** most_common: ('1.4733%', 1), gold_ans: 1.47
** most_common: ('54.53%', 1), gold_ans: 54.55
** most_common: ['none'], gold_ans: 3672
** most_common: ('7.77%', 3), gold_ans: 7.69
** most_common: ('1.64', 6), gold_ans: 1.65
** most_common: ('143.32', 4), gold_ans: 143.32
** most_common: ('3', 3), gold_ans: 3
** most_common: ('B)faster', 3), gold_ans: A
** most_common: ('A', 4), gold_ans: B
** most_common: ('46.23%', 2), gold_ans: 46.13
** most_common: ('5743', 3), gold_ans: 5743
** most_common: ('A', 5), gold_ans: B
** most_common: ('839.5', 1), gold_ans: 840
** most_common: ('B)morefriction', 3), gold_ans: A
** most_common: ('9.74%', 1), gold_ans: 9.68
** most_common: ('B', 2), gold_ans: A
** most_common: ('252', 8), gold_ans: 216
** most_common: ('13305', 1), gold_ans: 13305
** most_common: ('B)faster', 3), gold_ans: B
** most_common: ('more', 1), gold_ans: A
** most_common: ('12,699', 1), gold_ans: 12699
** most_common: ('624.69', 5), gold_ans: 621
** most_common: ('6', 2), gold_ans: 6
** most_common: ('4.67', 2), gold_ans: 2
** most_common: ('95.64%', 1), gold_ans: 95.24
** most_common: ('27.46', 1), gold_ans: 27.47
** most_common: ('5.625', 11), gold_ans: 5.63
** most_common: ('1', 11), gold_ans: 18
** most_common: ('4', 2), gold_ans: 12
** most_common: ('0.16665', 6), gold_ans: 0.165
** most_common: ('145.04323', 1), gold_ans: 145
** most_common: ('11562', 1), gold_ans: 11562
** most_common: ('21.48', 1), gold_ans: 21.62
** most_common: ('30.04%', 2), gold_ans: 30
** most_common: ('0.32', 2), gold_ans: 0.32
** most_common: ('12', 2), gold_ans: 9
** most_common: ['none'], gold_ans: 1440
** most_common: ('4', 4), gold_ans: B
** most_common: ('26.24', 2), gold_ans: B
** most_common: ('5', 5), gold_ans: A
** most_common: ('A', 3), gold_ans: B
** most_common: ('16.55', 2), gold_ans: B
BackVerify: 150
** most_common: ('14', 11), gold_ans: 126
** most_common: ('64.73%', 1), gold_ans: 64.96
** most_common: ('2', 2), gold_ans: 1
** most_common: ('A', 4), gold_ans: B
** most_common: ('B', 2), gold_ans: B
** most_common: ('2', 4), gold_ans: 2
** most_common: ('856.71', 3), gold_ans: 855
** most_common: ('48.05%', 1), gold_ans: 48
** most_common: ('15', 1), gold_ans: 8
** most_common: ('B', 3), gold_ans: A
** most_common: ('714.96', 1), gold_ans: 222
** most_common: ('14.31', 1), gold_ans: 14.29
** most_common: ('2.33', 3), gold_ans: 2.333333333
** most_common: ('A', 2), gold_ans: A
** most_common: ('37', 2), gold_ans: B
** most_common: ('6', 1), gold_ans: 54
** most_common: ('4180.0', 1), gold_ans: 4180
** most_common: ('166.96', 1), gold_ans: 672
** most_common: ('45', 11), gold_ans: 115
** most_common: ('83.02', 1), gold_ans: 81
** most_common: ('5', 7), gold_ans: 125
** most_common: ('2', 2), gold_ans: 4
** most_common: ('1', 1), gold_ans: A
** most_common: ('x+y-6', 3), gold_ans: 10
** most_common: ('(A)asphalt', 2), gold_ans: B
** most_common: ('223.125', 11), gold_ans: 223.13
** most_common: ('20', 1), gold_ans: 20
** most_common: ('3', 3), gold_ans: 3
** most_common: ('840', 7), gold_ans: A
** most_common: ('0.83', 5), gold_ans: 1.2
** most_common: ('53.77', 1), gold_ans: 53.87
** most_common: ('8', 1), gold_ans: 8
** most_common: ('417', 4), gold_ans: 417
** most_common: ('2', 6), gold_ans: 2
** most_common: ('11.74', 5), gold_ans: 11.74
** most_common: ('60.0', 5), gold_ans: 4
** most_common: ('19.0', 2), gold_ans: 19
** most_common: ('2', 3), gold_ans: B
** most_common: ('1', 4), gold_ans: 1
** most_common: ('82.7%', 1), gold_ans: 73.85
** most_common: ('117', 1), gold_ans: 195
** most_common: ('5', 3), gold_ans: B
** most_common: ('18.01528', 1), gold_ans: 90
** most_common: ('99', 5), gold_ans: 55
** most_common: ('4', 2), gold_ans: 12
** most_common: ('8.97', 1), gold_ans: 8.95
** most_common: ('B', 3), gold_ans: B
** most_common: ('8.64', 1), gold_ans: 8.619
** most_common: ('126.30', 5), gold_ans: 126
** most_common: ('869.67', 3), gold_ans: 869.67
BackVerify: 200
** most_common: ('A', 1), gold_ans: B
** most_common: ('A', 3), gold_ans: B
** most_common: ('1', 5), gold_ans: 74
** most_common: ('24.6', 4), gold_ans: 24.6
** most_common: ('127.9022', 2), gold_ans: 129
** most_common: ('1', 4), gold_ans: 1
** most_common: ('110', 5), gold_ans: A
** most_common: ('6', 1), gold_ans: 2
** most_common: ('B', 4), gold_ans: B
** most_common: ('1', 1), gold_ans: A
** most_common: ('6', 1), gold_ans: 1
** most_common: ('(A)morefriction', 2), gold_ans: B
** most_common: ('more', 3), gold_ans: B
** most_common: ('B', 2), gold_ans: A
** most_common: ('39', 3), gold_ans: B
** most_common: ('52.23%', 1), gold_ans: 52.46
** most_common: ('5.70', 1), gold_ans: 5.7
** most_common: ('13.5', 1), gold_ans: 13.5
** most_common: ('16.2', 2), gold_ans: 16.2
** most_common: ('1', 2), gold_ans: 18
** most_common: ('x', 1), gold_ans: A
** most_common: ['none'], gold_ans: 128
** most_common: ('12.02', 2), gold_ans: 12
** most_common: ('10.43%', 2), gold_ans: 10.34
** most_common: ('A', 3), gold_ans: B
** most_common: ('27', 7), gold_ans: 21
** most_common: ('2.72%', 3), gold_ans: 2.7
** most_common: ('2', 6), gold_ans: 148
** most_common: ('85.155', 2), gold_ans: 90
** most_common: ('4.0', 9), gold_ans: 10
** most_common: ('57.14%', 4), gold_ans: 57.14
** most_common: ('B', 2), gold_ans: B
** most_common: ('2', 5), gold_ans: 2
** most_common: ('1.71', 1), gold_ans: 3
** most_common: ('3', 6), gold_ans: 54
** most_common: ('666.65', 4), gold_ans: 660
** most_common: ('3', 7), gold_ans: 456
** most_common: ('3976.448', 1), gold_ans: B
** most_common: ('53.50', 9), gold_ans: 53
** most_common: ('4', 5), gold_ans: 4
** most_common: ('(A)tracks', 3), gold_ans: B
** most_common: ('15', 2), gold_ans: 15
** most_common: ('more', 3), gold_ans: B
** most_common: ('3', 1), gold_ans: A
** most_common: ('6048', 5), gold_ans: 6241
** most_common: ('(A)more', 3), gold_ans: B
** most_common: ('3', 5), gold_ans: 186
** most_common: ('1', 4), gold_ans: 1
** most_common: ('61.833', 1), gold_ans: 434
** most_common: ('2', 5), gold_ans: 2
BackVerify: 250
** most_common: ('65057', 3), gold_ans: 65057
** most_common: ('46.26%', 1), gold_ans: 46.13
** most_common: ('1680', 2), gold_ans: A
** most_common: ('13.19', 3), gold_ans: 22.33
** most_common: ('455', 7), gold_ans: B
** most_common: ('744.425', 7), gold_ans: 740
** most_common: ('8', 1), gold_ans: A
** most_common: ('854', 2), gold_ans: 854
** most_common: ('10.2', 1), gold_ans: 17
** most_common: ('NotEnoughInformation', 1), gold_ans: A
** most_common: ('35.95', 2), gold_ans: 35.95
** most_common: ('13.6%', 3), gold_ans: 13.61
** most_common: ('30.77%', 1), gold_ans: 43.24
** most_common: ('12', 3), gold_ans: A
** most_common: ('A(watermelon)', 2), gold_ans: B
** most_common: ('580', 1), gold_ans: 525
** most_common: ('A', 3), gold_ans: B
** most_common: ('B', 3), gold_ans: A
** most_common: ('1', 6), gold_ans: 5
** most_common: ('56', 3), gold_ans: 56
** most_common: ('A', 2), gold_ans: B
** most_common: ('2', 4), gold_ans: 4
** most_common: ('B', 3), gold_ans: A
** most_common: ('?', 2), gold_ans: 44.07
** most_common: ('3', 3), gold_ans: 24
** most_common: ('1', 3), gold_ans: 18
** most_common: ('13.74', 1), gold_ans: 13.73
** most_common: ('781.2', 5), gold_ans: 780
** most_common: ('B(thick)', 2), gold_ans: A
** most_common: ('54.04%', 2), gold_ans: 54.24
** most_common: ('24.6%', 1), gold_ans: 24.62
** most_common: ('4', 10), gold_ans: 30
** most_common: ('617.85', 2), gold_ans: 620
** most_common: ('4', 9), gold_ans: 26
** most_common: ('B', 1), gold_ans: B
** most_common: ('90.06%', 1), gold_ans: 89.89
** most_common: ('3', 1), gold_ans: 3
** most_common: ('B)Hare', 1), gold_ans: A
** most_common: ('78.43%', 2), gold_ans: 78.29
** most_common: ('18.417.6', 2), gold_ans: 17.6
** most_common: ['none'], gold_ans: 366
** most_common: ['none'], gold_ans: 36
** most_common: ('2', 7), gold_ans: 106
** most_common: ('19.3%', 1), gold_ans: 15.38
** most_common: ('208.233', 3), gold_ans: 207
** most_common: ('B)Thesportscarwould', 1), gold_ans: A
** most_common: ('1027.98', 3), gold_ans: 1026
** most_common: ('234.99', 6), gold_ans: 234
** most_common: ('A', 2), gold_ans: A
** most_common: ('74.10', 1), gold_ans: 518
BackVerify: 300
** most_common: ('67.9%', 1), gold_ans: 67.86
** most_common: ('133.3405386', 5), gold_ans: 132
** most_common: ('7.74', 11), gold_ans: 7.75
** most_common: ('A', 8), gold_ans: B
** most_common: ('Cannotbedetermined(sincethequestionisflawed)', 1), gold_ans: A
** most_common: ('3.25', 1), gold_ans: 3.25
** most_common: ('7.47', 1), gold_ans: A
** most_common: ('61.53%', 1), gold_ans: 61.54
** most_common: ('6', 5), gold_ans: B
** most_common: ('240.20', 1), gold_ans: 240
** most_common: ('166.91', 1), gold_ans: 168
** most_common: ('B', 4), gold_ans: A
** most_common: ('34.5%', 1), gold_ans: 34.62
** most_common: ('B)morefriction', 2), gold_ans: A
** most_common: ('B', 5), gold_ans: A
** most_common: ('1', 9), gold_ans: 53
** most_common: ('25.0', 4), gold_ans: 25
** most_common: ['none'], gold_ans: 1450
** most_common: ('B)morefriction', 1), gold_ans: B
** most_common: ('9.19%', 2), gold_ans: 9.09
** most_common: ('558.2122', 1), gold_ans: 558
** most_common: ('(A)tracks', 4), gold_ans: B
** most_common: ('(B)Lessfriction', 1), gold_ans: B
** most_common: ('4', 3), gold_ans: 144
** most_common: ('40.03%', 3), gold_ans: 40
** most_common: ('4.13%', 2), gold_ans: 4.08
** most_common: ('88.81', 2), gold_ans: 88.89
** most_common: ('79.93%', 2), gold_ans: 80
** most_common: ('80.04%', 1), gold_ans: 80
** most_common: ('528', 1), gold_ans: 236
** most_common: ('32.2%', 2), gold_ans: 32.14
** most_common: ['none'], gold_ans: 53.33
** most_common: ('10', 7), gold_ans: October
** most_common: ('A(faster)', 2), gold_ans: A
** most_common: ('36.33%', 3), gold_ans: 36.36
** most_common: ('1.5', 4), gold_ans: 3
** most_common: ('B)Lessfriction', 2), gold_ans: A
** most_common: ['none'], gold_ans: 8
** most_common: ('468.72', 4), gold_ans: 468
** most_common: ('55', 10), gold_ans: 40
** most_common: ('3', 3), gold_ans: 3
** most_common: ('B(flatground)', 2), gold_ans: A
** most_common: ('2.78%', 1), gold_ans: 2.76
** most_common: ('618.4', 1), gold_ans: 620
** most_common: ('B', 3), gold_ans: B
** most_common: ('3', 7), gold_ans: 159
** most_common: ('176', 3), gold_ans: 128
** most_common: ('27004', 8), gold_ans: 26866
** most_common: ('180.1528', 3), gold_ans: 180
** most_common: ('163.65', 3), gold_ans: 155
BackVerify: 350
** most_common: ('2', 3), gold_ans: 2
** most_common: ('(A)doormat', 3), gold_ans: B
** most_common: ('93.43%', 1), gold_ans: 93.38
** most_common: ('1955.65', 4), gold_ans: 1955
** most_common: ('7.55', 6), gold_ans: 7.56
** most_common: ('2', 7), gold_ans: 1
** most_common: ('7.87%', 2), gold_ans: 7.89
** answer: 192.14, groundtruth_str: 1536
** groundtruth_num is not None
** is_fraction:  192.14
** groundtruth_num is (int, float)
** compare_two_numbers int 192.14 1536
** wrong
**  0 1
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  1 1
** answer: A, groundtruth_str: B
** wrong
**  1 2
** answer: 0.2, groundtruth_str: A
** wrong
**  1 3
** answer: A, groundtruth_str: B
** wrong
**  1 4
** answer: 4.20%, groundtruth_str: 4.17
** groundtruth_num is not None
** is_fraction:  4.20%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.042 4.17
** wrong
**  1 5
** answer: 19.64, groundtruth_str: 19.64
** compare on lower
** correct
**  2 5
** answer: 82, groundtruth_str: A
** wrong
**  2 6
** answer: none, groundtruth_str: 272
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  2 7
** answer: 3220, groundtruth_str: 6052
** groundtruth_num is not None
** is_fraction:  3220
** groundtruth_num is (int, float)
** compare_two_numbers int 3220 6052
** wrong
**  2 8
** answer: 25.87, groundtruth_str: 25.93
** groundtruth_num is not None
** is_fraction:  25.87
** groundtruth_num is (int, float)
** compare_two_numbers float 25.87 25.93
** wrong
**  2 9
** answer: 153.81, groundtruth_str: 152
** groundtruth_num is not None
** is_fraction:  153.81
** groundtruth_num is (int, float)
** compare_two_numbers int 153.81 152
** wrong
**  2 10
** answer: 0.2, groundtruth_str: 1.4
** groundtruth_num is not None
** is_fraction:  0.2
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2 1.4
** wrong
**  2 11
** answer: \frac{3}{16}, groundtruth_str: B
** wrong
**  2 12
** answer: none, groundtruth_str: 38.71
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  2 13
** answer: 404.5, groundtruth_str: 645
** groundtruth_num is not None
** is_fraction:  404.5
** groundtruth_num is (int, float)
** compare_two_numbers int 404.5 645
** wrong
**  2 14
** answer: 81.47, groundtruth_str: 81.63
** groundtruth_num is not None
** is_fraction:  81.47
** groundtruth_num is (int, float)
** compare_two_numbers float 81.47 81.63
** wrong
**  2 15
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  3 15
** answer: 234, groundtruth_str: 309
** groundtruth_num is not None
** is_fraction:  234
** groundtruth_num is (int, float)
** compare_two_numbers int 234 309
** wrong
**  3 16
** answer: 17.0, groundtruth_str: 17.5
** groundtruth_num is not None
** is_fraction:  17.0
** groundtruth_num is (int, float)
** compare_two_numbers float 17 17.5
** wrong
**  3 17
** answer: 1.88, groundtruth_str: 791
** groundtruth_num is not None
** is_fraction:  1.88
** groundtruth_num is (int, float)
** compare_two_numbers int 1.88 791
** wrong
**  3 18
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  4 18
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  5 18
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  6 18
** answer: 35, groundtruth_str: 135
** groundtruth_num is not None
** is_fraction:  35
** groundtruth_num is (int, float)
** compare_two_numbers int 35 135
** wrong
**  6 19
** answer: 2.8, groundtruth_str: B
** wrong
**  6 20
** answer: 3, groundtruth_str: 54
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 54
** wrong
**  6 21
** answer: 19, groundtruth_str: 1.9
** groundtruth_num is not None
** is_fraction:  19
** groundtruth_num is (int, float)
** compare_two_numbers float 19 1.9
** wrong
**  6 22
** answer: 18.67%, groundtruth_str: 18.71
** groundtruth_num is not None
** is_fraction:  18.67%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1867 18.71
** wrong
**  6 23
** answer: 7.1725, groundtruth_str: 7.17
** groundtruth_num is not None
** is_fraction:  7.1725
** groundtruth_num is (int, float)
** compare_two_numbers float 7.1725 7.17
** wrong
**  6 24
** answer: 6, groundtruth_str: 14.75
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers float 6 14.75
** wrong
**  6 25
** answer: 1, groundtruth_str: 53
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 53
** wrong
**  6 26
** answer: 6, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 3
** wrong
**  6 27
** answer: 8, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 2
** wrong
**  6 28
** answer: 108, groundtruth_str: 180
** groundtruth_num is not None
** is_fraction:  108
** groundtruth_num is (int, float)
** compare_two_numbers int 108 180
** wrong
**  6 29
** answer: 40.94, groundtruth_str: 40.91
** groundtruth_num is not None
** is_fraction:  40.94
** groundtruth_num is (int, float)
** compare_two_numbers float 40.94 40.91
** wrong
**  6 30
** answer: 0.26, groundtruth_str: 17.8
** groundtruth_num is not None
** is_fraction:  0.26
** groundtruth_num is (int, float)
** compare_two_numbers float 0.26 17.8
** wrong
**  6 31
** answer: none, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  6 32
** answer: 30, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 18
** wrong
**  6 33
** answer: 77, groundtruth_str: B
** wrong
**  6 34
** answer: 118.00814, groundtruth_str: 944
** groundtruth_num is not None
** is_fraction:  118.00814
** groundtruth_num is (int, float)
** compare_two_numbers int 118.00814 944
** wrong
**  6 35
** answer: 14304, groundtruth_str: 14294
** groundtruth_num is not None
** is_fraction:  14304
** groundtruth_num is (int, float)
** compare_two_numbers int 14304 14294
** wrong
**  6 36
** answer: 2, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 36
** wrong
**  6 37
** answer: 120, groundtruth_str: A
** wrong
**  6 38
** answer: none, groundtruth_str: 9517
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  6 39
** answer: 57, groundtruth_str: B
** wrong
**  6 40
** answer: B, groundtruth_str: A
** wrong
**  6 41
** answer: 26.18%, groundtruth_str: 26.42
** groundtruth_num is not None
** is_fraction:  26.18%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.2618 26.42
** wrong
**  6 42
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  7 42
** answer: 4.97%, groundtruth_str: 4.92
** groundtruth_num is not None
** is_fraction:  4.97%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.049699999999999994 4.92
** wrong
**  7 43
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  8 43
** answer: 5, groundtruth_str: 5.44
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers float 5 5.44
** wrong
**  8 44
** answer: 50, groundtruth_str: 110
** groundtruth_num is not None
** is_fraction:  50
** groundtruth_num is (int, float)
** compare_two_numbers int 50 110
** wrong
**  8 45
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  9 45
** answer: 228.06, groundtruth_str: 228
** groundtruth_num is not None
** is_fraction:  228.06
** groundtruth_num is (int, float)
** compare_two_numbers int 228.06 228
** correct
**  10 45
** answer: B)faster, groundtruth_str: B
** compare on lower in
** correct
**  11 45
** answer: 387.85, groundtruth_str: 115.83
** groundtruth_num is not None
** is_fraction:  387.85
** groundtruth_num is (int, float)
** compare_two_numbers float 387.85 115.83
** wrong
**  11 46
** answer: A, groundtruth_str: B
** wrong
**  11 47
** answer: (A)lessfriction, groundtruth_str: B
** wrong
**  11 48
** answer: 4, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 3
** wrong
**  11 49
** answer: 2, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 36
** wrong
**  11 50
** answer: 58.09, groundtruth_str: 348
** groundtruth_num is not None
** is_fraction:  58.09
** groundtruth_num is (int, float)
** compare_two_numbers int 58.09 348
** wrong
**  11 51
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  12 51
** answer: 1, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 18
** wrong
**  12 52
** answer: 432.08, groundtruth_str: 432
** groundtruth_num is not None
** is_fraction:  432.08
** groundtruth_num is (int, float)
** compare_two_numbers int 432.08 432
** correct
**  13 52
** answer: 421.0, groundtruth_str: 420
** groundtruth_num is not None
** is_fraction:  421.0
** groundtruth_num is (int, float)
** compare_two_numbers int 421 420
** wrong
**  13 53
** answer: 33.56, groundtruth_str: 5.58
** groundtruth_num is not None
** is_fraction:  33.56
** groundtruth_num is (int, float)
** compare_two_numbers float 33.56 5.58
** wrong
**  13 54
** answer: 1060.09, groundtruth_str: 1062
** groundtruth_num is not None
** is_fraction:  1060.09
** groundtruth_num is (int, float)
** compare_two_numbers int 1060.09 1062
** wrong
**  13 55
** answer: 294.17, groundtruth_str: 296
** groundtruth_num is not None
** is_fraction:  294.17
** groundtruth_num is (int, float)
** compare_two_numbers int 294.17 296
** wrong
**  13 56
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  14 56
** answer: 2, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 10
** wrong
**  14 57
** answer: 48000.0, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  48000.0
** groundtruth_num is (int, float)
** compare_two_numbers int 48000 48
** wrong
**  14 58
** answer: 2, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 36
** wrong
**  14 59
** answer: 21.99, groundtruth_str: 20.99
** groundtruth_num is not None
** is_fraction:  21.99
** groundtruth_num is (int, float)
** compare_two_numbers float 21.99 20.99
** wrong
**  14 60
** answer: 3172, groundtruth_str: 3146
** groundtruth_num is not None
** is_fraction:  3172
** groundtruth_num is (int, float)
** compare_two_numbers int 3172 3146
** wrong
**  14 61
** answer: 8, groundtruth_str: August
** wrong
**  14 62
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  15 62
** answer: 0, groundtruth_str: A
** wrong
**  15 63
** answer: 515.6, groundtruth_str: 516
** groundtruth_num is not None
** is_fraction:  515.6
** groundtruth_num is (int, float)
** compare_two_numbers int 515.6 516
** correct
**  16 63
** answer: 11, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 10
** wrong
**  16 64
** answer: 1.37, groundtruth_str: 14.95
** groundtruth_num is not None
** is_fraction:  1.37
** groundtruth_num is (int, float)
** compare_two_numbers float 1.37 14.95
** wrong
**  16 65
** answer: 166.99, groundtruth_str: 1344
** groundtruth_num is not None
** is_fraction:  166.99
** groundtruth_num is (int, float)
** compare_two_numbers int 166.99 1344
** wrong
**  16 66
** answer: 150.17, groundtruth_str: 1350
** groundtruth_num is not None
** is_fraction:  150.17
** groundtruth_num is (int, float)
** compare_two_numbers int 150.17 1350
** wrong
**  16 67
** answer: A, groundtruth_str: B
** wrong
**  16 68
** answer: 58.27%, groundtruth_str: 58.33
** groundtruth_num is not None
** is_fraction:  58.27%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5827 58.33
** wrong
**  16 69
** answer: 5, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 1
** wrong
**  16 70
** answer: 31,603, groundtruth_str: 31603
** groundtruth_num is not None
** is_fraction:  31,603
** groundtruth_num is (int, float)
** compare_two_numbers int 31603 31603
** correct
**  17 70
** answer: 20.25, groundtruth_str: 20.25
** compare on lower
** correct
**  18 70
** answer: 71, groundtruth_str: Friday
** wrong
**  18 71
** answer: -2, groundtruth_str: -10
** groundtruth_num is not None
** is_fraction:  -2
** groundtruth_num is (int, float)
** compare_two_numbers int -2 -10
** wrong
**  18 72
** answer: 69.22, groundtruth_str: 68.85
** groundtruth_num is not None
** is_fraction:  69.22
** groundtruth_num is (int, float)
** compare_two_numbers float 69.22 68.85
** wrong
**  18 73
** answer: Invalid, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  Invalid
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  18 74
** answer: 0.18, groundtruth_str: 0.08
** groundtruth_num is not None
** is_fraction:  0.18
** groundtruth_num is (int, float)
** compare_two_numbers float 0.18 0.08
** wrong
**  18 75
** answer: 74, groundtruth_str: 144
** groundtruth_num is not None
** is_fraction:  74
** groundtruth_num is (int, float)
** compare_two_numbers int 74 144
** wrong
**  18 76
** answer: 3.88%, groundtruth_str: 3.85
** groundtruth_num is not None
** is_fraction:  3.88%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0388 3.85
** wrong
**  18 77
** answer: 9.0, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  9.0
** groundtruth_num is (int, float)
** compare_two_numbers int 9 9
** correct
**  19 77
** answer: 10, groundtruth_str: B
** wrong
**  19 78
** answer: 87.42%, groundtruth_str: 87.59
** groundtruth_num is not None
** is_fraction:  87.42%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8742 87.59
** wrong
**  19 79
** answer: 6, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 4
** wrong
**  19 80
** answer: Notenoughinformationtodetermine, groundtruth_str: B
** wrong
**  19 81
** answer: B)tilefloor, groundtruth_str: A
** wrong
**  19 82
** answer: 6, groundtruth_str: B
** wrong
**  19 83
** answer: 459.99, groundtruth_str: 459
** groundtruth_num is not None
** is_fraction:  459.99
** groundtruth_num is (int, float)
** compare_two_numbers int 459.99 459
** wrong
**  19 84
** answer: A(openair), groundtruth_str: A
** compare on lower in
** correct
**  20 84
** answer: B, groundtruth_str: A
** wrong
**  20 85
** answer: 2, groundtruth_str: 72
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 72
** wrong
**  20 86
** answer: 14, groundtruth_str: 14.57
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers float 14 14.57
** wrong
**  20 87
** answer: 1, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 18
** wrong
**  20 88
** answer: 1.4733%, groundtruth_str: 1.47
** groundtruth_num is not None
** is_fraction:  1.4733%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.014733000000000001 1.47
** wrong
**  20 89
** answer: 54.53%, groundtruth_str: 54.55
** groundtruth_num is not None
** is_fraction:  54.53%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5453 54.55
** wrong
**  20 90
** answer: none, groundtruth_str: 3672
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  20 91
** answer: 7.77%, groundtruth_str: 7.69
** groundtruth_num is not None
** is_fraction:  7.77%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.07769999999999999 7.69
** wrong
**  20 92
** answer: 1.64, groundtruth_str: 1.65
** groundtruth_num is not None
** is_fraction:  1.64
** groundtruth_num is (int, float)
** compare_two_numbers float 1.64 1.65
** wrong
**  20 93
** answer: 143.32, groundtruth_str: 143.32
** compare on lower
** correct
**  21 93
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  22 93
** answer: B)faster, groundtruth_str: A
** compare on lower in
** correct
**  23 93
** answer: A, groundtruth_str: B
** wrong
**  23 94
** answer: 46.23%, groundtruth_str: 46.13
** groundtruth_num is not None
** is_fraction:  46.23%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.4623 46.13
** wrong
**  23 95
** answer: 5743, groundtruth_str: 5743
** compare on lower
** correct
**  24 95
** answer: A, groundtruth_str: B
** wrong
**  24 96
** answer: 839.5, groundtruth_str: 840
** groundtruth_num is not None
** is_fraction:  839.5
** groundtruth_num is (int, float)
** compare_two_numbers int 839.5 840
** correct
**  25 96
** answer: B)morefriction, groundtruth_str: A
** wrong
**  25 97
** answer: 9.74%, groundtruth_str: 9.68
** groundtruth_num is not None
** is_fraction:  9.74%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0974 9.68
** wrong
**  25 98
** answer: B, groundtruth_str: A
** wrong
**  25 99
** answer: 252, groundtruth_str: 216
** groundtruth_num is not None
** is_fraction:  252
** groundtruth_num is (int, float)
** compare_two_numbers int 252 216
** wrong
**  25 100
** answer: 13305, groundtruth_str: 13305
** compare on lower
** correct
**  26 100
** answer: B)faster, groundtruth_str: B
** compare on lower in
** correct
**  27 100
** answer: more, groundtruth_str: A
** wrong
**  27 101
** answer: 12,699, groundtruth_str: 12699
** groundtruth_num is not None
** is_fraction:  12,699
** groundtruth_num is (int, float)
** compare_two_numbers int 12699 12699
** correct
**  28 101
** answer: 624.69, groundtruth_str: 621
** groundtruth_num is not None
** is_fraction:  624.69
** groundtruth_num is (int, float)
** compare_two_numbers int 624.69 621
** wrong
**  28 102
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  29 102
** answer: 4.67, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  4.67
** groundtruth_num is (int, float)
** compare_two_numbers int 4.67 2
** wrong
**  29 103
** answer: 95.64%, groundtruth_str: 95.24
** groundtruth_num is not None
** is_fraction:  95.64%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.9564 95.24
** wrong
**  29 104
** answer: 27.46, groundtruth_str: 27.47
** groundtruth_num is not None
** is_fraction:  27.46
** groundtruth_num is (int, float)
** compare_two_numbers float 27.46 27.47
** wrong
**  29 105
** answer: 5.625, groundtruth_str: 5.63
** groundtruth_num is not None
** is_fraction:  5.625
** groundtruth_num is (int, float)
** compare_two_numbers float 5.625 5.63
** wrong
**  29 106
** answer: 1, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 18
** wrong
**  29 107
** answer: 4, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 12
** wrong
**  29 108
** answer: 0.16665, groundtruth_str: 0.165
** groundtruth_num is not None
** is_fraction:  0.16665
** groundtruth_num is (int, float)
** compare_two_numbers float 0.16665 0.165
** wrong
**  29 109
** answer: 145.04323, groundtruth_str: 145
** groundtruth_num is not None
** is_fraction:  145.04323
** groundtruth_num is (int, float)
** compare_two_numbers int 145.04323 145
** correct
**  30 109
** answer: 11562, groundtruth_str: 11562
** compare on lower
** correct
**  31 109
** answer: 21.48, groundtruth_str: 21.62
** groundtruth_num is not None
** is_fraction:  21.48
** groundtruth_num is (int, float)
** compare_two_numbers float 21.48 21.62
** wrong
**  31 110
** answer: 30.04%, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  30.04%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.3004 30
** wrong
**  31 111
** answer: 0.32, groundtruth_str: 0.32
** compare on lower
** correct
**  32 111
** answer: 12, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 9
** wrong
**  32 112
** answer: none, groundtruth_str: 1440
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  32 113
** answer: 4, groundtruth_str: B
** wrong
**  32 114
** answer: 26.24, groundtruth_str: B
** wrong
**  32 115
** answer: 5, groundtruth_str: A
** wrong
**  32 116
** answer: A, groundtruth_str: B
** wrong
**  32 117
** answer: 16.55, groundtruth_str: B
** wrong
**  32 118
** answer: 14, groundtruth_str: 126
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers int 14 126
** wrong
**  32 119
** answer: 64.73%, groundtruth_str: 64.96
** groundtruth_num is not None
** is_fraction:  64.73%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.6473 64.96
** wrong
**  32 120
** answer: 2, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 1
** wrong
**  32 121
** answer: A, groundtruth_str: B
** wrong
**  32 122
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  33 122
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  34 122
** answer: 856.71, groundtruth_str: 855
** groundtruth_num is not None
** is_fraction:  856.71
** groundtruth_num is (int, float)
** compare_two_numbers int 856.71 855
** wrong
**  34 123
** answer: 48.05%, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  48.05%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.4805 48
** wrong
**  34 124
** answer: 15, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 8
** wrong
**  34 125
** answer: B, groundtruth_str: A
** wrong
**  34 126
** answer: 714.96, groundtruth_str: 222
** groundtruth_num is not None
** is_fraction:  714.96
** groundtruth_num is (int, float)
** compare_two_numbers int 714.96 222
** wrong
**  34 127
** answer: 14.31, groundtruth_str: 14.29
** groundtruth_num is not None
** is_fraction:  14.31
** groundtruth_num is (int, float)
** compare_two_numbers float 14.31 14.29
** wrong
**  34 128
** answer: 2.33, groundtruth_str: 2.333333333
** groundtruth_num is not None
** is_fraction:  2.33
** groundtruth_num is (int, float)
** compare_two_numbers float 2.33 2.333333333
** wrong
**  34 129
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  35 129
** answer: 37, groundtruth_str: B
** wrong
**  35 130
** answer: 6, groundtruth_str: 54
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 54
** wrong
**  35 131
** answer: 4180.0, groundtruth_str: 4180
** groundtruth_num is not None
** is_fraction:  4180.0
** groundtruth_num is (int, float)
** compare_two_numbers int 4180 4180
** correct
**  36 131
** answer: 166.96, groundtruth_str: 672
** groundtruth_num is not None
** is_fraction:  166.96
** groundtruth_num is (int, float)
** compare_two_numbers int 166.96 672
** wrong
**  36 132
** answer: 45, groundtruth_str: 115
** groundtruth_num is not None
** is_fraction:  45
** groundtruth_num is (int, float)
** compare_two_numbers int 45 115
** wrong
**  36 133
** answer: 83.02, groundtruth_str: 81
** groundtruth_num is not None
** is_fraction:  83.02
** groundtruth_num is (int, float)
** compare_two_numbers int 83.02 81
** wrong
**  36 134
** answer: 5, groundtruth_str: 125
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 125
** wrong
**  36 135
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  36 136
** answer: 1, groundtruth_str: A
** wrong
**  36 137
** answer: x+y-6, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  x+y-6
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  36 138
** answer: (A)asphalt, groundtruth_str: B
** wrong
**  36 139
** answer: 223.125, groundtruth_str: 223.13
** groundtruth_num is not None
** is_fraction:  223.125
** groundtruth_num is (int, float)
** compare_two_numbers float 223.125 223.13
** wrong
**  36 140
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  37 140
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  38 140
** answer: 840, groundtruth_str: A
** wrong
**  38 141
** answer: 0.83, groundtruth_str: 1.2
** groundtruth_num is not None
** is_fraction:  0.83
** groundtruth_num is (int, float)
** compare_two_numbers float 0.83 1.2
** wrong
**  38 142
** answer: 53.77, groundtruth_str: 53.87
** groundtruth_num is not None
** is_fraction:  53.77
** groundtruth_num is (int, float)
** compare_two_numbers float 53.77 53.87
** wrong
**  38 143
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  39 143
** answer: 417, groundtruth_str: 417
** compare on lower
** correct
**  40 143
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  41 143
** answer: 11.74, groundtruth_str: 11.74
** compare on lower
** correct
**  42 143
** answer: 60.0, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  60.0
** groundtruth_num is (int, float)
** compare_two_numbers int 60 4
** wrong
**  42 144
** answer: 19.0, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  19.0
** groundtruth_num is (int, float)
** compare_two_numbers int 19 19
** correct
**  43 144
** answer: 2, groundtruth_str: B
** wrong
**  43 145
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  44 145
** answer: 82.7%, groundtruth_str: 73.85
** groundtruth_num is not None
** is_fraction:  82.7%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.8270000000000001 73.85
** wrong
**  44 146
** answer: 117, groundtruth_str: 195
** groundtruth_num is not None
** is_fraction:  117
** groundtruth_num is (int, float)
** compare_two_numbers int 117 195
** wrong
**  44 147
** answer: 5, groundtruth_str: B
** wrong
**  44 148
** answer: 18.01528, groundtruth_str: 90
** groundtruth_num is not None
** is_fraction:  18.01528
** groundtruth_num is (int, float)
** compare_two_numbers int 18.01528 90
** wrong
**  44 149
** answer: 99, groundtruth_str: 55
** groundtruth_num is not None
** is_fraction:  99
** groundtruth_num is (int, float)
** compare_two_numbers int 99 55
** wrong
**  44 150
** answer: 4, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 12
** wrong
**  44 151
** answer: 8.97, groundtruth_str: 8.95
** groundtruth_num is not None
** is_fraction:  8.97
** groundtruth_num is (int, float)
** compare_two_numbers float 8.97 8.95
** wrong
**  44 152
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  45 152
** answer: 8.64, groundtruth_str: 8.619
** groundtruth_num is not None
** is_fraction:  8.64
** groundtruth_num is (int, float)
** compare_two_numbers float 8.64 8.619
** wrong
**  45 153
** answer: 126.30, groundtruth_str: 126
** groundtruth_num is not None
** is_fraction:  126.30
** groundtruth_num is (int, float)
** compare_two_numbers int 126.3 126
** correct
**  46 153
** answer: 869.67, groundtruth_str: 869.67
** compare on lower
** correct
**  47 153
** answer: A, groundtruth_str: B
** wrong
**  47 154
** answer: A, groundtruth_str: B
** wrong
**  47 155
** answer: 1, groundtruth_str: 74
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 74
** wrong
**  47 156
** answer: 24.6, groundtruth_str: 24.6
** compare on lower
** correct
**  48 156
** answer: 127.9022, groundtruth_str: 129
** groundtruth_num is not None
** is_fraction:  127.9022
** groundtruth_num is (int, float)
** compare_two_numbers int 127.9022 129
** wrong
**  48 157
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  49 157
** answer: 110, groundtruth_str: A
** wrong
**  49 158
** answer: 6, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 2
** wrong
**  49 159
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  50 159
** answer: 1, groundtruth_str: A
** wrong
**  50 160
** answer: 6, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 1
** wrong
**  50 161
** answer: (A)morefriction, groundtruth_str: B
** wrong
**  50 162
** answer: more, groundtruth_str: B
** wrong
**  50 163
** answer: B, groundtruth_str: A
** wrong
**  50 164
** answer: 39, groundtruth_str: B
** wrong
**  50 165
** answer: 52.23%, groundtruth_str: 52.46
** groundtruth_num is not None
** is_fraction:  52.23%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5223 52.46
** wrong
**  50 166
** answer: 5.70, groundtruth_str: 5.7
** groundtruth_num is not None
** is_fraction:  5.70
** groundtruth_num is (int, float)
** compare_two_numbers float 5.7 5.7
** correct
**  51 166
** answer: 13.5, groundtruth_str: 13.5
** compare on lower
** correct
**  52 166
** answer: 16.2, groundtruth_str: 16.2
** compare on lower
** correct
**  53 166
** answer: 1, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 18
** wrong
**  53 167
** answer: x, groundtruth_str: A
** wrong
**  53 168
** answer: none, groundtruth_str: 128
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  53 169
** answer: 12.02, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  12.02
** groundtruth_num is (int, float)
** compare_two_numbers int 12.02 12
** correct
**  54 169
** answer: 10.43%, groundtruth_str: 10.34
** groundtruth_num is not None
** is_fraction:  10.43%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1043 10.34
** wrong
**  54 170
** answer: A, groundtruth_str: B
** wrong
**  54 171
** answer: 27, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers int 27 21
** wrong
**  54 172
** answer: 2.72%, groundtruth_str: 2.7
** groundtruth_num is not None
** is_fraction:  2.72%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.027200000000000002 2.7
** wrong
**  54 173
** answer: 2, groundtruth_str: 148
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 148
** wrong
**  54 174
** answer: 85.155, groundtruth_str: 90
** groundtruth_num is not None
** is_fraction:  85.155
** groundtruth_num is (int, float)
** compare_two_numbers int 85.155 90
** wrong
**  54 175
** answer: 4.0, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  4.0
** groundtruth_num is (int, float)
** compare_two_numbers int 4 10
** wrong
**  54 176
** answer: 57.14%, groundtruth_str: 57.14
** groundtruth_num is not None
** is_fraction:  57.14%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5714 57.14
** wrong
**  54 177
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  55 177
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  56 177
** answer: 1.71, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1.71
** groundtruth_num is (int, float)
** compare_two_numbers int 1.71 3
** wrong
**  56 178
** answer: 3, groundtruth_str: 54
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 54
** wrong
**  56 179
** answer: 666.65, groundtruth_str: 660
** groundtruth_num is not None
** is_fraction:  666.65
** groundtruth_num is (int, float)
** compare_two_numbers int 666.65 660
** wrong
**  56 180
** answer: 3, groundtruth_str: 456
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 456
** wrong
**  56 181
** answer: 3976.448, groundtruth_str: B
** wrong
**  56 182
** answer: 53.50, groundtruth_str: 53
** groundtruth_num is not None
** is_fraction:  53.50
** groundtruth_num is (int, float)
** compare_two_numbers int 53.5 53
** wrong
**  56 183
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  57 183
** answer: (A)tracks, groundtruth_str: B
** wrong
**  57 184
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  58 184
** answer: more, groundtruth_str: B
** wrong
**  58 185
** answer: 3, groundtruth_str: A
** wrong
**  58 186
** answer: 6048, groundtruth_str: 6241
** groundtruth_num is not None
** is_fraction:  6048
** groundtruth_num is (int, float)
** compare_two_numbers int 6048 6241
** wrong
**  58 187
** answer: (A)more, groundtruth_str: B
** wrong
**  58 188
** answer: 3, groundtruth_str: 186
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 186
** wrong
**  58 189
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  59 189
** answer: 61.833, groundtruth_str: 434
** groundtruth_num is not None
** is_fraction:  61.833
** groundtruth_num is (int, float)
** compare_two_numbers int 61.833 434
** wrong
**  59 190
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  60 190
** answer: 65057, groundtruth_str: 65057
** compare on lower
** correct
**  61 190
** answer: 46.26%, groundtruth_str: 46.13
** groundtruth_num is not None
** is_fraction:  46.26%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.46259999999999996 46.13
** wrong
**  61 191
** answer: 1680, groundtruth_str: A
** wrong
**  61 192
** answer: 13.19, groundtruth_str: 22.33
** groundtruth_num is not None
** is_fraction:  13.19
** groundtruth_num is (int, float)
** compare_two_numbers float 13.19 22.33
** wrong
**  61 193
** answer: 455, groundtruth_str: B
** wrong
**  61 194
** answer: 744.425, groundtruth_str: 740
** groundtruth_num is not None
** is_fraction:  744.425
** groundtruth_num is (int, float)
** compare_two_numbers int 744.425 740
** wrong
**  61 195
** answer: 8, groundtruth_str: A
** wrong
**  61 196
** answer: 854, groundtruth_str: 854
** compare on lower
** correct
**  62 196
** answer: 10.2, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  10.2
** groundtruth_num is (int, float)
** compare_two_numbers int 10.2 17
** wrong
**  62 197
** answer: NotEnoughInformation, groundtruth_str: A
** wrong
**  62 198
** answer: 35.95, groundtruth_str: 35.95
** compare on lower
** correct
**  63 198
** answer: 13.6%, groundtruth_str: 13.61
** groundtruth_num is not None
** is_fraction:  13.6%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.136 13.61
** wrong
**  63 199
** answer: 30.77%, groundtruth_str: 43.24
** groundtruth_num is not None
** is_fraction:  30.77%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.3077 43.24
** wrong
**  63 200
** answer: 12, groundtruth_str: A
** wrong
**  63 201
** answer: A(watermelon), groundtruth_str: B
** wrong
**  63 202
** answer: 580, groundtruth_str: 525
** groundtruth_num is not None
** is_fraction:  580
** groundtruth_num is (int, float)
** compare_two_numbers int 580 525
** wrong
**  63 203
** answer: A, groundtruth_str: B
** wrong
**  63 204
** answer: B, groundtruth_str: A
** wrong
**  63 205
** answer: 1, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 5
** wrong
**  63 206
** answer: 56, groundtruth_str: 56
** compare on lower
** correct
**  64 206
** answer: A, groundtruth_str: B
** wrong
**  64 207
** answer: 2, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 4
** wrong
**  64 208
** answer: B, groundtruth_str: A
** wrong
**  64 209
** answer: ?, groundtruth_str: 44.07
** groundtruth_num is not None
** is_fraction:  ?
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  64 210
** answer: 3, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 24
** wrong
**  64 211
** answer: 1, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 18
** wrong
**  64 212
** answer: 13.74, groundtruth_str: 13.73
** groundtruth_num is not None
** is_fraction:  13.74
** groundtruth_num is (int, float)
** compare_two_numbers float 13.74 13.73
** wrong
**  64 213
** answer: 781.2, groundtruth_str: 780
** groundtruth_num is not None
** is_fraction:  781.2
** groundtruth_num is (int, float)
** compare_two_numbers int 781.2 780
** wrong
**  64 214
** answer: B(thick), groundtruth_str: A
** wrong
**  64 215
** answer: 54.04%, groundtruth_str: 54.24
** groundtruth_num is not None
** is_fraction:  54.04%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.5404 54.24
** wrong
**  64 216
** answer: 24.6%, groundtruth_str: 24.62
** groundtruth_num is not None
** is_fraction:  24.6%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.24600000000000002 24.62
** wrong
**  64 217
** answer: 4, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 30
** wrong
**  64 218
** answer: 617.85, groundtruth_str: 620
** groundtruth_num is not None
** is_fraction:  617.85
** groundtruth_num is (int, float)
** compare_two_numbers int 617.85 620
** wrong
**  64 219
** answer: 4, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 26
** wrong
**  64 220
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  65 220
** answer: 90.06%, groundtruth_str: 89.89
** groundtruth_num is not None
** is_fraction:  90.06%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.9006000000000001 89.89
** wrong
**  65 221
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  66 221
** answer: B)Hare, groundtruth_str: A
** compare on lower in
** correct
**  67 221
** answer: 78.43%, groundtruth_str: 78.29
** groundtruth_num is not None
** is_fraction:  78.43%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.7843000000000001 78.29
** wrong
**  67 222
** answer: 18.417.6, groundtruth_str: 17.6
** groundtruth_num is not None
** is_fraction:  18.417.6
** groundtruth_num is (int, float)
** compare_two_numbers float 11.0502 17.6
** wrong
**  67 223
** answer: none, groundtruth_str: 366
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  67 224
** answer: none, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  67 225
** answer: 2, groundtruth_str: 106
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 106
** wrong
**  67 226
** answer: 19.3%, groundtruth_str: 15.38
** groundtruth_num is not None
** is_fraction:  19.3%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.193 15.38
** wrong
**  67 227
** answer: 208.233, groundtruth_str: 207
** groundtruth_num is not None
** is_fraction:  208.233
** groundtruth_num is (int, float)
** compare_two_numbers int 208.233 207
** wrong
**  67 228
** answer: B)Thesportscarwould, groundtruth_str: A
** compare on lower in
** correct
**  68 228
** answer: 1027.98, groundtruth_str: 1026
** groundtruth_num is not None
** is_fraction:  1027.98
** groundtruth_num is (int, float)
** compare_two_numbers int 1027.98 1026
** wrong
**  68 229
** answer: 234.99, groundtruth_str: 234
** groundtruth_num is not None
** is_fraction:  234.99
** groundtruth_num is (int, float)
** compare_two_numbers int 234.99 234
** wrong
**  68 230
** answer: A, groundtruth_str: A
** compare on lower
** correct
**  69 230
** answer: 74.10, groundtruth_str: 518
** groundtruth_num is not None
** is_fraction:  74.10
** groundtruth_num is (int, float)
** compare_two_numbers int 74.1 518
** wrong
**  69 231
** answer: 67.9%, groundtruth_str: 67.86
** groundtruth_num is not None
** is_fraction:  67.9%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.679 67.86
** wrong
**  69 232
** answer: 133.3405386, groundtruth_str: 132
** groundtruth_num is not None
** is_fraction:  133.3405386
** groundtruth_num is (int, float)
** compare_two_numbers int 133.3405386 132
** wrong
**  69 233
** answer: 7.74, groundtruth_str: 7.75
** groundtruth_num is not None
** is_fraction:  7.74
** groundtruth_num is (int, float)
** compare_two_numbers float 7.74 7.75
** wrong
**  69 234
** answer: A, groundtruth_str: B
** wrong
**  69 235
** answer: Cannotbedetermined(sincethequestionisflawed), groundtruth_str: A
** compare on lower in
** correct
**  70 235
** answer: 3.25, groundtruth_str: 3.25
** compare on lower
** correct
**  71 235
** answer: 7.47, groundtruth_str: A
** wrong
**  71 236
** answer: 61.53%, groundtruth_str: 61.54
** groundtruth_num is not None
** is_fraction:  61.53%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.6153 61.54
** wrong
**  71 237
** answer: 6, groundtruth_str: B
** wrong
**  71 238
** answer: 240.20, groundtruth_str: 240
** groundtruth_num is not None
** is_fraction:  240.20
** groundtruth_num is (int, float)
** compare_two_numbers int 240.2 240
** correct
**  72 238
** answer: 166.91, groundtruth_str: 168
** groundtruth_num is not None
** is_fraction:  166.91
** groundtruth_num is (int, float)
** compare_two_numbers int 166.91 168
** wrong
**  72 239
** answer: B, groundtruth_str: A
** wrong
**  72 240
** answer: 34.5%, groundtruth_str: 34.62
** groundtruth_num is not None
** is_fraction:  34.5%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.345 34.62
** wrong
**  72 241
** answer: B)morefriction, groundtruth_str: A
** wrong
**  72 242
** answer: B, groundtruth_str: A
** wrong
**  72 243
** answer: 1, groundtruth_str: 53
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 53
** wrong
**  72 244
** answer: 25.0, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  25.0
** groundtruth_num is (int, float)
** compare_two_numbers int 25 25
** correct
**  73 244
** answer: none, groundtruth_str: 1450
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  73 245
** answer: B)morefriction, groundtruth_str: B
** compare on lower in
** correct
**  74 245
** answer: 9.19%, groundtruth_str: 9.09
** groundtruth_num is not None
** is_fraction:  9.19%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0919 9.09
** wrong
**  74 246
** answer: 558.2122, groundtruth_str: 558
** groundtruth_num is not None
** is_fraction:  558.2122
** groundtruth_num is (int, float)
** compare_two_numbers int 558.2122 558
** correct
**  75 246
** answer: (A)tracks, groundtruth_str: B
** wrong
**  75 247
** answer: (B)Lessfriction, groundtruth_str: B
** compare on lower in
** correct
**  76 247
** answer: 4, groundtruth_str: 144
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 144
** wrong
**  76 248
** answer: 40.03%, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  40.03%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.4003 40
** wrong
**  76 249
** answer: 4.13%, groundtruth_str: 4.08
** groundtruth_num is not None
** is_fraction:  4.13%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.041299999999999996 4.08
** wrong
**  76 250
** answer: 88.81, groundtruth_str: 88.89
** groundtruth_num is not None
** is_fraction:  88.81
** groundtruth_num is (int, float)
** compare_two_numbers float 88.81 88.89
** wrong
**  76 251
** answer: 79.93%, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  79.93%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.7993000000000001 80
** wrong
**  76 252
** answer: 80.04%, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  80.04%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.8004000000000001 80
** wrong
**  76 253
** answer: 528, groundtruth_str: 236
** groundtruth_num is not None
** is_fraction:  528
** groundtruth_num is (int, float)
** compare_two_numbers int 528 236
** wrong
**  76 254
** answer: 32.2%, groundtruth_str: 32.14
** groundtruth_num is not None
** is_fraction:  32.2%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.322 32.14
** wrong
**  76 255
** answer: none, groundtruth_str: 53.33
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  76 256
** answer: 10, groundtruth_str: October
** wrong
**  76 257
** answer: A(faster), groundtruth_str: A
** compare on lower in
** correct
**  77 257
** answer: 36.33%, groundtruth_str: 36.36
** groundtruth_num is not None
** is_fraction:  36.33%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.36329999999999996 36.36
** wrong
**  77 258
** answer: 1.5, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  1.5
** groundtruth_num is (int, float)
** compare_two_numbers int 1.5 3
** wrong
**  77 259
** answer: B)Lessfriction, groundtruth_str: A
** wrong
**  77 260
** answer: none, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  77 261
** answer: 468.72, groundtruth_str: 468
** groundtruth_num is not None
** is_fraction:  468.72
** groundtruth_num is (int, float)
** compare_two_numbers int 468.72 468
** wrong
**  77 262
** answer: 55, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  55
** groundtruth_num is (int, float)
** compare_two_numbers int 55 40
** wrong
**  77 263
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  78 263
** answer: B(flatground), groundtruth_str: A
** compare on lower in
** correct
**  79 263
** answer: 2.78%, groundtruth_str: 2.76
** groundtruth_num is not None
** is_fraction:  2.78%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0278 2.76
** wrong
**  79 264
** answer: 618.4, groundtruth_str: 620
** groundtruth_num is not None
** is_fraction:  618.4
** groundtruth_num is (int, float)
** compare_two_numbers int 618.4 620
** wrong
**  79 265
** answer: B, groundtruth_str: B
** compare on lower
** correct
**  80 265
** answer: 3, groundtruth_str: 159
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 159
** wrong
**  80 266
** answer: 176, groundtruth_str: 128
** groundtruth_num is not None
** is_fraction:  176
** groundtruth_num is (int, float)
** compare_two_numbers int 176 128
** wrong
**  80 267
** answer: 27004, groundtruth_str: 26866
** groundtruth_num is not None
** is_fraction:  27004
** groundtruth_num is (int, float)
** compare_two_numbers int 27004 26866
** wrong
**  80 268
** answer: 180.1528, groundtruth_str: 180
** groundtruth_num is not None
** is_fraction:  180.1528
** groundtruth_num is (int, float)
** compare_two_numbers int 180.1528 180
** correct
**  81 268
** answer: 163.65, groundtruth_str: 155
** groundtruth_num is not None
** is_fraction:  163.65
** groundtruth_num is (int, float)
** compare_two_numbers int 163.65 155
** wrong
**  81 269
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  82 269
** answer: (A)doormat, groundtruth_str: B
** wrong
**  82 270
** answer: 93.43%, groundtruth_str: 93.38
** groundtruth_num is not None
** is_fraction:  93.43%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.9343 93.38
** wrong
**  82 271
** answer: 1955.65, groundtruth_str: 1955
** groundtruth_num is not None
** is_fraction:  1955.65
** groundtruth_num is (int, float)
** compare_two_numbers int 1955.65 1955
** wrong
**  82 272
** answer: 7.55, groundtruth_str: 7.56
** groundtruth_num is not None
** is_fraction:  7.55
** groundtruth_num is (int, float)
** compare_two_numbers float 7.55 7.56
** wrong
**  82 273
** answer: 2, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 1
** wrong
**  82 274
** answer: 7.87%, groundtruth_str: 7.89
** groundtruth_num is not None
** is_fraction:  7.87%
** groundtruth_num is (int, float)
** compare_two_numbers float 0.0787 7.89
** wrong
**  82 275
Second Accuracy:  0.22969187675070027
Accuracy:  0.736084452975048
