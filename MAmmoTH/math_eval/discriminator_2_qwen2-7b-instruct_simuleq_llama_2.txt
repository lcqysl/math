INFO 09-19 21:56:35 llm_engine.py:174] Initializing an LLM engine (v0.5.4) with config: model='/cpfs/29f69eb5e2e60f26/user/sft_intern/slz/Qwen2-7B-Instruct', speculative_config=None, tokenizer='/cpfs/29f69eb5e2e60f26/user/sft_intern/slz/Qwen2-7B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None), seed=0, served_model_name=/cpfs/29f69eb5e2e60f26/user/sft_intern/slz/Qwen2-7B-Instruct, use_v2_block_manager=False, enable_prefix_caching=False)
INFO 09-19 21:56:36 model_runner.py:720] Starting to load model /cpfs/29f69eb5e2e60f26/user/sft_intern/slz/Qwen2-7B-Instruct...
INFO 09-19 21:56:52 model_runner.py:732] Loading model weights took 14.2487 GB
INFO 09-19 21:56:54 gpu_executor.py:102] # GPU blocks: 61183, # CPU blocks: 4681
INFO 09-19 21:56:56 model_runner.py:1024] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 09-19 21:56:56 model_runner.py:1028] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 09-19 21:57:04 model_runner.py:1225] Graph capturing finished in 8 secs.
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
{'question': 'A writing workshop enrolls novelists and poets in a ratio of 5 to 3. There are 24 people at the workshop. How many novelists are there? How many poets are there?', 'tree_solution': [['A writing workshop enrolls novelists and poets in a ratio of 5 to 3. There are 24 people at the workshop. How many novelists are there? How many poets are there?', "I'm ready to help! Here's the next step in solving the given question:\n\nSTEP: Let's use the ratio of 5 novelists to 3 poets to set up an equation. Let N be the number of novelists and P be the number of poets. Then, we can write the equation: N : P = 5 : 3.", 'STEP: Write the equation in the form "N = x" by converting the ratio to a fraction and cross-multiplying: 5N = 3P.', 'Here is the next step:\n\nSTEP: Divide both sides of the equation 5N = 3P by 3 to solve for N:', "Here is the next step:\n\nSTEP: Divide both sides of the equation 5N = 3P by 3 to solve for N:\n\n5N = 3P\n÷ 3\n-------------------\nN = ?\n\nPlease let me know what's next!", "STEP: ÷ 3\n\n(I'll wait for your confirmation before proceeding!)", 'SOLUTION: \n\nWe are given that the ratio of novelists to poets is 5:3. We can write the equation: N : P = 5 : 3. \n\nTo convert the ratio to a fraction, we can write it as: 5/3.\n\nWe can then cross-multiply the fraction to get: 5N = 3P.\n\nTo solve for N, we can divide both sides of the equation by 3: \n\n5N = 3P\n÷ 3\n-------------------\nN = P/5\n\nFINAL ANSWER: The answer is 4'], ['A writing workshop enrolls novelists and poets in a ratio of 5 to 3. There are 24 people at the workshop. How many novelists are there? How many poets are there?', "I'm ready to help! Here's the next step in solving the given question:\n\nSTEP: Let's use the ratio of 5 novelists to 3 poets to set up an equation. Let N be the number of novelists and P be the number of poets. Then, we can write the equation: N : P = 5 : 3.", 'STEP: Write the equation in the form "N = x" by converting the ratio to a fraction and cross-multiplying: 5N = 3P.', 'Here is the next step:\n\nSTEP: Divide both sides of the equation 5N = 3P by 3 to solve for N:', "SOLUTION:\nLet's start by using the ratio of 5 novelists to 3 poets to set up an equation. Let N be the number of novelists and P be the number of poets. Then, we can write the equation: N : P = 5 : 3.\n\nTo convert the ratio to a fraction, we can write it as:\n\nN/P = 5/3\n\nNext, we can cross-multiply to get:\n\n5N = 3P\n\nNow, we can solve for N by dividing both sides of the equation by 3:\n\n5N/3 = P\n\nN = 3P/5\n\nSince we know that the total number of people at the workshop is 24, we can set up the equation:\n\nN + P = 24\n\nSubstituting N = 3P/5 into this equation, we get:\n\n3P/5 + P = 24\n\nCombine like terms:\n\n4P/5 = 24\n\nMultiply both sides by 5 to eliminate the fraction:\n\n4P = 120\n\nDivide both sides by 4:\n\nP = 30\n\nNow that we know P, we can find N:\n\nN = 3P/5\n= 3(30)/5\n= 90/5\n= 18\n\nFINAL ANSWER: The answer is 18."], ['A writing workshop enrolls novelists and poets in a ratio of 5 to 3. There are 24 people at the workshop. How many novelists are there? How many poets are there?', "I'm ready to help! Here's the next step in solving the given question:\n\nSTEP: Let's use the ratio of 5 novelists to 3 poets to set up an equation. Let N be the number of novelists and P be the number of poets. Then, we can write the equation: N : P = 5 : 3.", 'STEP: Write the equation in the form "N = x" by converting the ratio to a fraction and cross-multiplying: 5N = 3P.', 'SOLUTION:\n\nLet\'s use the ratio of 5 novelists to 3 poets to set up an equation. Let N be the number of novelists and P be the number of poets. Then, we can write the equation: N : P = 5 : 3.\n\nNext, we can write the equation in the form "N = x" by converting the ratio to a fraction and cross-multiplying:\n\n5N = 3P\n\nTo solve for N, we can divide both sides of the equation by 5:\n\nN = 3P/5\n\nSince there are 24 people at the workshop, we can set up an equation using the total number of people:\n\nN + P = 24\n\nWe can substitute the expression for N from the first equation into this equation:\n\n(3P/5) + P = 24\n\nCombine like terms:\n\n(3P/5 + 5P)/5 = 24\n\nMultiply both sides by 5 to eliminate the fraction:\n\n3P + 5P = 120\n\nCombine like terms:\n\n8P = 120\n\nDivide both sides by 8:\n\nP = 15\n\nNow that we have found the number of poets, we can find the number of novelists by substituting P back into one of the original equations. We will use the equation N = 3P/5:\n\nN = 3(15)/5\n\nN = 45/5\n\nN = 9\n\nFINAL ANSWER: The answer is 9.'], ['A writing workshop enrolls novelists and poets in a ratio of 5 to 3. There are 24 people at the workshop. How many novelists are there? How many poets are there?', "I'm ready to help! Here's the next step in solving the given question:\n\nSTEP: Let's use the ratio of 5 novelists to 3 poets to set up an equation. Let N be the number of novelists and P be the number of poets. Then, we can write the equation: N : P = 5 : 3.", "SOLUTION:\n\nLet's use the ratio of 5 novelists to 3 poets to set up an equation. Let N be the number of novelists and P be the number of poets. Then, we can write the equation:\n\nN : P = 5 : 3\n\nWe can convert the ratio to an equation by using the common denominator, which is 15. This gives us:\n\n5N = 3P\n\nSince there are 24 people in total, the total number of novelists and poets is 24. We can set up an equation using the sum of N and P:\n\nN + P = 24\n\nWe can substitute the equation 5N = 3P into the equation N + P = 24 to eliminate P:\n\n5N + P = 24\n\nSubtract P from both sides:\n\n5N = 24 - P\n\nNow, we can substitute the equation 5N = 3P into the equation 5N = 24 - P to solve for N:\n\n3P = 24 - P\n\nAdd P to both sides:\n\n4P = 24\n\nDivide both sides by 4:\n\nP = 6\n\nNow that we know the number of poets (P = 6), we can find the number of novelists (N) by substituting P into the equation 5N = 3P:\n\n5N = 3(6)\n5N = 18\n\nDivide both sides by 5:\n\nN = 3.6\n\nHowever, since we cannot have a fraction of a person, we can round down to the nearest whole number. Therefore, there are 3 novelists and 6 poets.\n\nFINAL ANSWER: The answer is 3."], ['A writing workshop enrolls novelists and poets in a ratio of 5 to 3. There are 24 people at the workshop. How many novelists are there? How many poets are there?', "SOLUTION:\n\nLet's start by identifying the ratio of novelists to poets as 5:3. This means that for every 5 novelists, there are 3 poets. Let's assume the total number of people at the workshop is 5x + 3x, since the ratio is 5:3.\n\nWe know that the total number of people is 24, so we can set up the equation:\n\n5x + 3x = 24\n\nCombine like terms:\n\n8x = 24\n\nDivide both sides by 8:\n\nx = 3\n\nNow that we have found the value of x, we can find the number of novelists and poets:\n\nNumber of novelists = 5x = 5(3) = 15\n\nNumber of poets = 3x = 3(3) = 9\n\nFINAL ANSWER: The answer is 15."], ['A writing workshop enrolls novelists and poets in a ratio of 5 to 3. There are 24 people at the workshop. How many novelists are there? How many poets are there?', 'CLARIFIED QUESTION: A writing workshop has a ratio of 5 novelists to 3 poets, and in total there are 24 people attending the workshop. How many novelists and poets are there, respectively?', "STEP: Let's start by using the given ratio to set up an equation. Let the number of novelists be 5x, and the number of poets be 3x.", 'STEP: The total number of people at the workshop is the sum of the number of novelists and poets, so we can set up the equation: 5x + 3x = 24.', 'STEP: Simplify the equation by combining like terms: 5x + 3x = 8x = 24.', 'STEP: Simplify the equation by combining like terms: 5x + 3x = 8x = 24', 'STEP: Simplify the equation by combining like terms: 8x = 24.', "SOLUTION:\nLet's start by using the given ratio to set up an equation. Let the number of novelists be 5x, and the number of poets be 3x. The total number of people at the workshop is the sum of the number of novelists and poets, so we can set up the equation: 5x + 3x = 24. Simplify the equation by combining like terms: 8x = 24. To solve for x, divide both sides of the equation by 8: x = 24/8 = 3. Now that we have the value of x, we can find the number of novelists and poets: Number of novelists = 5x = 5(3) = 15. Number of poets = 3x = 3(3) = 9.\n\nFINAL ANSWER: The answer is 15."], ['A writing workshop enrolls novelists and poets in a ratio of 5 to 3. There are 24 people at the workshop. How many novelists are there? How many poets are there?', 'CLARIFIED QUESTION: A writing workshop has a ratio of 5 novelists to 3 poets, and in total there are 24 people attending the workshop. How many novelists and poets are there, respectively?', "STEP: Let's start by using the given ratio to set up an equation. Let the number of novelists be 5x, and the number of poets be 3x.", 'STEP: The total number of people at the workshop is the sum of the number of novelists and poets, so we can set up the equation: 5x + 3x = 24.', 'STEP: Simplify the equation by combining like terms: 5x + 3x = 8x = 24.', 'STEP: Simplify the equation by combining like terms: 5x + 3x = 8x = 24', 'SOLUTION:\n\nA writing workshop enrolls novelists and poets in a ratio of 5 to 3. There are 24 people at the workshop. Let the number of novelists be 5x, and the number of poets be 3x. The total number of people at the workshop is the sum of the number of novelists and poets, so we can set up the equation:\n\n5x + 3x = 24\n\nSimplify the equation by combining like terms:\n\n8x = 24\n\nDivide both sides by 8 to solve for x:\n\nx = 3\n\nNow that we have found x, we can find the number of novelists and poets:\n\nNumber of novelists = 5x = 5(3) = 15\nNumber of poets = 3x = 3(3) = 9\n\nFINAL ANSWER: The answer is 15 novelists and 9 poets.'], ['A writing workshop enrolls novelists and poets in a ratio of 5 to 3. There are 24 people at the workshop. How many novelists are there? How many poets are there?', 'CLARIFIED QUESTION: A writing workshop has a ratio of 5 novelists to 3 poets, and in total there are 24 people attending the workshop. How many novelists and poets are there, respectively?', "STEP: Let's start by using the given ratio to set up an equation. Let the number of novelists be 5x, and the number of poets be 3x.", 'STEP: The total number of people at the workshop is the sum of the number of novelists and poets, so we can set up the equation: 5x + 3x = 24.', "SOLUTION:\n\nLet's start by using the given ratio to set up an equation. Let the number of novelists be 5x, and the number of poets be 3x.\n\nThe total number of people at the workshop is the sum of the number of novelists and poets, so we can set up the equation:\n\n5x + 3x = 24\n\nCombine like terms:\n\n8x = 24\n\nDivide both sides by 8:\n\nx = 3\n\nNow that we know the value of x, we can find the number of novelists and poets:\n\nNumber of novelists = 5x = 5(3) = 15\n\nNumber of poets = 3x = 3(3) = 9\n\nFINAL ANSWER: The answer is 15."], ['A writing workshop enrolls novelists and poets in a ratio of 5 to 3. There are 24 people at the workshop. How many novelists are there? How many poets are there?', 'CLARIFIED QUESTION: A writing workshop has a ratio of 5 novelists to 3 poets, and in total there are 24 people attending the workshop. How many novelists and poets are there, respectively?', "STEP: Let's start by using the given ratio to set up an equation. Let the number of novelists be 5x, and the number of poets be 3x.", 'Here is the solution:\n\nSOLUTION:\n\nLet the number of novelists be 5x, and the number of poets be 3x. Since the ratio of novelists to poets is 5:3, we can set up the equation:\n\n5x / 3x = 5/3\n\nTo simplify the equation, we can cross-multiply:\n\n5x = (5/3) × 3x\n\nThis simplifies to:\n\n5x = 5x\n\nSince the equation is true for any value of x, we can set up an equation for the total number of people at the workshop:\n\n5x + 3x = 24\n\nCombine like terms:\n\n8x = 24\n\nDivide both sides by 8:\n\nx = 3\n\nNow that we have found the value of x, we can find the number of novelists and poets:\n\nNumber of novelists = 5x = 5(3) = 15\n\nNumber of poets = 3x = 3(3) = 9\n\nFINAL ANSWER: The answer is 15.'], ['A writing workshop enrolls novelists and poets in a ratio of 5 to 3. There are 24 people at the workshop. How many novelists are there? How many poets are there?', 'CLARIFIED QUESTION: A writing workshop has a ratio of 5 novelists to 3 poets, and in total there are 24 people attending the workshop. How many novelists and poets are there, respectively?', "SOLUTION:\n\nLet's start by using the given ratio to set up a proportion. Let the number of novelists be 5x and the number of poets be 3x. We can set up the proportion as follows:\n\n5x / 3x = 5/3\n\nWe can simplify the proportion by canceling out the x's:\n\n5/3 = 5/3\n\nSince the ratio is equal to the given ratio, we can set up an equation using the total number of people:\n\n5x + 3x = 24\n\nCombine like terms:\n\n8x = 24\n\nDivide both sides by 8:\n\nx = 3\n\nNow that we have found the value of x, we can find the number of novelists and poets:\n\nNumber of novelists = 5x = 5(3) = 15\n\nNumber of poets = 3x = 3(3) = 9\n\nFINAL ANSWER: The answer is 15"]], 'type': 'deepmind', 'answer': '15'}
dict_keys(['question', 'tree_solution', 'type', 'answer'])
BackVerify: 0
** most_common: ('15', 5), gold_ans: 15
** most_common: ('137', 4), gold_ans: 137
** most_common: ('4', 4), gold_ans: 4
** most_common: ('3900', 9), gold_ans: 3900
** most_common: ('30', 8), gold_ans: 30
** most_common: ('25', 11), gold_ans: 25
** most_common: ('63', 4), gold_ans: 63
** most_common: ('6.67', 5), gold_ans: 8
** most_common: ('234.0', 3), gold_ans: 156
** most_common: ('11.2poundsofColombiancoffeebeansand28.8poundsofPeruviancoffeebeans', 2), gold_ans: 11.2
** most_common: ('3500', 6), gold_ans: 3500
** most_common: ('178', 11), gold_ans: 178
** most_common: ('583.35', 5), gold_ans: 583.3333
** most_common: ('18', 9), gold_ans: 18
** most_common: ('20,000', 8), gold_ans: 20000
** most_common: ('200', 4), gold_ans: 200
** most_common: ('31', 9), gold_ans: 19
** most_common: ('7', 7), gold_ans: 7
** most_common: ('61', 5), gold_ans: 61
** most_common: ('12.5', 3), gold_ans: 12.5
** most_common: ('444', 1), gold_ans: 300
** most_common: ('7750', 10), gold_ans: 7750
** most_common: ('28', 11), gold_ans: 28
** most_common: ('30', 2), gold_ans: 30
** most_common: ('8.61538461538462', 1), gold_ans: 5
** most_common: ('18', 9), gold_ans: 18
** most_common: ('150', 6), gold_ans: 150
** most_common: ('30', 7), gold_ans: 30
** most_common: ('17', 2), gold_ans: 35
** most_common: ('24.0', 6), gold_ans: 24
** most_common: ('Nosolution', 1), gold_ans: 0.45
** most_common: ('32', 6), gold_ans: 32
** most_common: ('23', 5), gold_ans: 23
** most_common: ('21', 8), gold_ans: 21
** most_common: ('520', 3), gold_ans: 520
** most_common: ('1.5', 6), gold_ans: 0.3
** most_common: ('27.0', 2), gold_ans: 27.2
** most_common: ('54', 2), gold_ans: 20
** most_common: ('4000', 9), gold_ans: 4000
** most_common: ('12', 11), gold_ans: 12
** most_common: ('76', 6), gold_ans: 83
** most_common: ('73.5', 5), gold_ans: 73.5
** most_common: ('6', 4), gold_ans: 12
** most_common: ('14', 6), gold_ans: 34
** most_common: ('214', 9), gold_ans: 214
** most_common: ('10', 10), gold_ans: 10
** most_common: ('2.67', 6), gold_ans: 8
** most_common: ('10', 6), gold_ans: 10
** most_common: ('25', 8), gold_ans: 25
** most_common: ('64', 3), gold_ans: 64
BackVerify: 50
** most_common: ('30', 3), gold_ans: 30
** most_common: ('0.4', 3), gold_ans: 0.4
** most_common: ('10000', 12), gold_ans: 10000
** most_common: ('5000', 8), gold_ans: 5000
** most_common: ('16bluecardsand1redcard', 4), gold_ans: 12
** most_common: ('12', 8), gold_ans: 12
** most_common: ('10', 3), gold_ans: 5
** most_common: ('9', 5), gold_ans: 26
** most_common: ('20', 12), gold_ans: 20
** most_common: ('85.21', 11), gold_ans: 85
** most_common: ('4000', 7), gold_ans: 4000
** most_common: ('8', 6), gold_ans: 8
** most_common: ('4071.2', 2), gold_ans: 4072
** most_common: ('200', 9), gold_ans: 200
** most_common: ('16', 8), gold_ans: 16
** most_common: ('30.55', 7), gold_ans: 30
** most_common: ('4.90', 9), gold_ans: 4.9
** most_common: ('70', 2), gold_ans: 80
** most_common: ('300', 4), gold_ans: 299
** most_common: ('127', 4), gold_ans: 25
** most_common: ('24', 2), gold_ans: 24
** most_common: ('5', 12), gold_ans: 5
** most_common: ('150', 6), gold_ans: 150
** most_common: ('3.5', 7), gold_ans: 3.5
** most_common: ('-2', 12), gold_ans: -10
** most_common: ('37.5', 10), gold_ans: 37.5
** most_common: ('50', 8), gold_ans: 50
** most_common: ('37,500', 11), gold_ans: 37500
** most_common: ('600400', 3), gold_ans: 600
** most_common: ('83', 6), gold_ans: 83
** most_common: ('150', 12), gold_ans: 150
** most_common: ('585', 1), gold_ans: 565
** most_common: ('5', 4), gold_ans: 5
** most_common: ('-7', 6), gold_ans: -7
** most_common: ('-72.48', 7), gold_ans: -72
** most_common: ('35', 4), gold_ans: 35
** most_common: ('10', 12), gold_ans: 10
** most_common: ('6', 2), gold_ans: 6
** most_common: ('4', 9), gold_ans: 4
** most_common: ('2060', 1), gold_ans: 700
** most_common: ('128', 4), gold_ans: 128
** most_common: ('30.0', 4), gold_ans: 30
** most_common: ('16', 2), gold_ans: 9
** most_common: ('48', 8), gold_ans: 48
** most_common: ('8', 3), gold_ans: 8
** most_common: ('12', 8), gold_ans: 12
** most_common: ('390', 6), gold_ans: 390
** most_common: ('500', 7), gold_ans: 500
** most_common: ('16.70', 1), gold_ans: 1.85
** most_common: ('17', 10), gold_ans: 17
BackVerify: 100
** most_common: ('270', 3), gold_ans: 270
** most_common: ('12ouncesof25%acidsolutionand18ouncesof50%acidsolution', 4), gold_ans: 18
** most_common: ('83', 8), gold_ans: 117
** most_common: ('5', 3), gold_ans: 5
** most_common: ('31', 4), gold_ans: 31
** most_common: ('28', 2), gold_ans: 5
** most_common: ('48', 6), gold_ans: 48
** most_common: ('43', 11), gold_ans: 43
** most_common: ('3192500.0', 2), gold_ans: 3192500
** most_common: ('1', 5), gold_ans: 1
** most_common: ('800', 4), gold_ans: 800
** most_common: ('1200', 4), gold_ans: 1200
** most_common: ('164', 12), gold_ans: 164
** most_common: ('30', 7), gold_ans: 30
** most_common: ('15', 10), gold_ans: 15
** most_common: ('18', 7), gold_ans: 18
** most_common: ('0.75', 12), gold_ans: 0.75
** most_common: ('12', 10), gold_ans: 12
** most_common: ('68.25', 11), gold_ans: 68.25
** most_common: ('50', 8), gold_ans: 50
** most_common: ('16', 5), gold_ans: 16
** most_common: ('0.9', 9), gold_ans: 0.9
** most_common: ('0.625(forthecostofoneapple)and-1(forthecostofoneorange)', 1), gold_ans: 0.2
** most_common: ('490', 8), gold_ans: 710
** most_common: ('3', 6), gold_ans: 3
** most_common: ('65.0', 5), gold_ans: 65
** most_common: ('3', 3), gold_ans: 3
** most_common: ('2400000', 8), gold_ans: 2400000
** most_common: ('5', 3), gold_ans: 5
** most_common: ('87.0', 1), gold_ans: 48
** most_common: ('5000', 11), gold_ans: 5000
** most_common: ('10', 5), gold_ans: 10
** most_common: ('0.67', 2), gold_ans: 7
** most_common: ('0', 3), gold_ans: 16
** most_common: ('150', 9), gold_ans: 150
** most_common: ('12000', 7), gold_ans: 12000
** most_common: ('13', 7), gold_ans: 13
** most_common: ('2.5', 12), gold_ans: 2.5
** most_common: ('4', 4), gold_ans: 4
** most_common: ('8', 9), gold_ans: 8
** most_common: ('6.99', 2), gold_ans: 9.99
** most_common: ('150', 11), gold_ans: 150
** most_common: ('9.75', 6), gold_ans: 9.75
** most_common: ('17.0', 5), gold_ans: 17
** most_common: ('25', 5), gold_ans: 25
** most_common: ('8993.67', 1), gold_ans: 887
** most_common: ('7.01', 6), gold_ans: 7.03
** most_common: ('199,731.2', 1), gold_ans: 8695.65
** most_common: ('10', 9), gold_ans: 10
** most_common: ('3000and5000', 2), gold_ans: 3000
BackVerify: 150
** most_common: ('155', 2), gold_ans: 140
** most_common: ('8.75', 2), gold_ans: 8.75
** most_common: ('5', 12), gold_ans: 5
** most_common: ('15', 3), gold_ans: 15
** most_common: ('7.0', 5), gold_ans: 7
** most_common: ('200', 6), gold_ans: 180
** most_common: ('280', 3), gold_ans: 280
** most_common: ('1.35', 2), gold_ans: 1.35
** most_common: ('320poundsofsoybeanmealand40poundsofcornmeal', 4), gold_ans: 320
** most_common: ('64', 8), gold_ans: 64
** most_common: ('82', 3), gold_ans: 70
** most_common: ('30', 12), gold_ans: 30
** most_common: ('80', 11), gold_ans: 80
** most_common: ('0.6667', 6), gold_ans: 0.6667
** most_common: ('2.625', 12), gold_ans: 2.625
** most_common: ('108,375', 5), gold_ans: 108375
** most_common: ('43.48', 3), gold_ans: 50
** most_common: ('262.5', 4), gold_ans: 262.5
** most_common: ('20', 4), gold_ans: 20
** most_common: ('80', 4), gold_ans: 80
** most_common: ('4', 9), gold_ans: 4
** most_common: ('100', 8), gold_ans: 100
** most_common: ('17', 7), gold_ans: 417
** most_common: ('100', 4), gold_ans: 104
** most_common: ('31.0', 5), gold_ans: 31
** most_common: ('250', 12), gold_ans: 250
** most_common: ('15', 12), gold_ans: 15
** most_common: ('586', 2), gold_ans: 219
** most_common: ('19', 3), gold_ans: 19
** most_common: ('325', 12), gold_ans: 325
** most_common: ('4.5(dailyfee)and0.18(mileagecharge)', 1), gold_ans: 15
** most_common: ('7', 3), gold_ans: 70
** most_common: ('11', 11), gold_ans: 11
** most_common: ('18', 12), gold_ans: 18
** most_common: ('22', 8), gold_ans: 22
** most_common: ('10', 10), gold_ans: 10
** most_common: ('64', 3), gold_ans: 64
** most_common: ('22.5', 3), gold_ans: 22.5
** most_common: ('3700', 2), gold_ans: 3100
** most_common: ('4800', 7), gold_ans: 4800
** most_common: ('17', 5), gold_ans: 17
** most_common: ('274', 3), gold_ans: 275
** most_common: ('15', 11), gold_ans: 15
** most_common: ('26', 5), gold_ans: 26
** most_common: ('9goatsand6ducks', 2), gold_ans: 9
** most_common: ('30.5', 1), gold_ans: 30
** most_common: ('84', 7), gold_ans: 84
** most_common: ('15', 7), gold_ans: 15
** most_common: ('310', 5), gold_ans: 77
** most_common: ('4', 7), gold_ans: 4
BackVerify: 200
** most_common: ('16', 12), gold_ans: 16
** most_common: ('27.5', 6), gold_ans: 27.5
** most_common: ('78', 8), gold_ans: 78
** most_common: ('366', 2), gold_ans: 366
** most_common: ('2.25', 2), gold_ans: 2.12
** most_common: ('30', 8), gold_ans: 30
** most_common: ('19', 9), gold_ans: 19
** most_common: ('60', 3), gold_ans: 55
** most_common: ('11', 4), gold_ans: 6.11
** most_common: ('7', 6), gold_ans: 7
** most_common: ('3', 6), gold_ans: 3
** most_common: ('8', 6), gold_ans: 8
** most_common: ('715', 2), gold_ans: 672
** most_common: ('4', 7), gold_ans: 4
** most_common: ('20', 12), gold_ans: 20
** most_common: ('37', 12), gold_ans: 37
** most_common: ('28.08', 12), gold_ans: 28.08
** most_common: ('2400', 2), gold_ans: 1100
** most_common: ('21', 8), gold_ans: 21
** most_common: ('500', 3), gold_ans: 530
** most_common: ('6', 4), gold_ans: 7
** most_common: ('5', 10), gold_ans: 5
** most_common: ('104', 4), gold_ans: 43
** most_common: ('7', 3), gold_ans: 7
** most_common: ('190', 10), gold_ans: 190
** most_common: ('60', 3), gold_ans: 60
** most_common: ('7', 5), gold_ans: 7
** most_common: ('26', 4), gold_ans: 26
** most_common: ('23', 10), gold_ans: 23
** most_common: ('25', 6), gold_ans: 25
** most_common: ('10', 5), gold_ans: 10
** most_common: ('3.5', 12), gold_ans: 3.5
** most_common: ('17000', 7), gold_ans: 17000
** most_common: ('17', 6), gold_ans: 17
** most_common: ('18', 12), gold_ans: 18
** most_common: ('41', 6), gold_ans: 41
** most_common: ('50', 5), gold_ans: 50
** most_common: ('22', 5), gold_ans: 22
** most_common: ('3.6', 5), gold_ans: 3.615
** most_common: ('13.12', 2), gold_ans: 13
** most_common: ('3', 6), gold_ans: 3
** most_common: ('36.67', 2), gold_ans: 30
** most_common: ('127', 11), gold_ans: 127
** most_common: ('60', 10), gold_ans: 60
** most_common: ('5', 12), gold_ans: 5
** most_common: ('5100', 5), gold_ans: 4700
** most_common: ('450', 3), gold_ans: 450
** most_common: ('820', 9), gold_ans: 820
** most_common: ('4960', 1), gold_ans: 7
** most_common: ('71.37', 1), gold_ans: 16
BackVerify: 250
** most_common: ('102', 10), gold_ans: 102
** most_common: ('65', 7), gold_ans: 65
** most_common: ('7', 6), gold_ans: 7
** most_common: ('17', 7), gold_ans: 17
** most_common: ('12', 11), gold_ans: 12
** most_common: ('14', 6), gold_ans: 25
** most_common: ('175', 3), gold_ans: 175
** most_common: ('130', 2), gold_ans: 130
** most_common: ('50', 5), gold_ans: 50
** most_common: ('135', 12), gold_ans: 135
** most_common: ('850', 3), gold_ans: 100
** most_common: ('2.5', 5), gold_ans: 2.5
** most_common: ('4.5', 6), gold_ans: -4.5
** most_common: ('6270', 3), gold_ans: 6258
** most_common: ('65', 4), gold_ans: 65
** most_common: ('19', 7), gold_ans: 19
** most_common: ('9', 5), gold_ans: 9
** most_common: ('0.75', 11), gold_ans: 0.75
** most_common: ('3.5', 5), gold_ans: 3.5
** most_common: ('130', 4), gold_ans: 130
** most_common: ('0', 1), gold_ans: 98
** most_common: ('12', 8), gold_ans: 12
** most_common: ('4', 11), gold_ans: 4
** most_common: ('1', 12), gold_ans: 1
** most_common: ('20', 12), gold_ans: 20
** most_common: ('29.23', 4), gold_ans: 29
** most_common: ('250', 11), gold_ans: 250
** most_common: ('31', 5), gold_ans: 31
** most_common: ('28', 7), gold_ans: 28
** most_common: ('180.0', 3), gold_ans: 180
** most_common: ('236adultsand342children', 3), gold_ans: 236
** most_common: ('14', 2), gold_ans: 14
** most_common: ('15', 5), gold_ans: 15
** most_common: ('1.375', 7), gold_ans: 1.375
** most_common: ('17.0', 4), gold_ans: 17
** most_common: ('1283', 1), gold_ans: 1500
** most_common: ('116.67', 1), gold_ans: 525
** most_common: ('18000', 7), gold_ans: 18000
** most_common: ('1311', 3), gold_ans: 13
** most_common: ('63', 11), gold_ans: 63
** most_common: ('7.00and$28.67', 1), gold_ans: 13
** most_common: ('112', 2), gold_ans: 80
** most_common: ('15', 9), gold_ans: 15
** most_common: ('12.0', 6), gold_ans: 12
** most_common: ('1.6', 6), gold_ans: 2.2857
** most_common: ('14.25and47.75', 2), gold_ans: 19
** most_common: ('60.73', 2), gold_ans: 77.4
** most_common: ('200', 1), gold_ans: 100
** most_common: ('0.24975', 5), gold_ans: 0.25
** most_common: ('11', 11), gold_ans: 11
BackVerify: 300
** most_common: ('13', 7), gold_ans: 13
** most_common: ('7.5', 2), gold_ans: 2
** most_common: ('0', 2), gold_ans: 50
** most_common: ('3', 12), gold_ans: 3
** most_common: ('35.0', 6), gold_ans: 35
** most_common: ('280', 10), gold_ans: 280
** most_common: ('168', 12), gold_ans: 168
** most_common: ('420', 7), gold_ans: 420
** most_common: ('20', 8), gold_ans: 20
** most_common: ('30', 7), gold_ans: 30
** most_common: ('140', 10), gold_ans: 140
** most_common: ('5', 2), gold_ans: 5
** most_common: ('N/A(sincethegiveninformationisinconsistent)', 1), gold_ans: 4
** most_common: ('22', 3), gold_ans: 22
** most_common: ('0.10', 3), gold_ans: 0.1
** most_common: ('16', 2), gold_ans: 18
** most_common: ('21800', 2), gold_ans: 21800
** most_common: ('3.75,6.25', 2), gold_ans: 3.75
** most_common: ('8.0', 7), gold_ans: 8
** most_common: ('12', 8), gold_ans: 12
** most_common: ('269', 2), gold_ans: 294
** most_common: ('23.9', 8), gold_ans: 23
** most_common: ('20', 7), gold_ans: 20
** most_common: ('19', 7), gold_ans: 19
** most_common: ('0.90', 2), gold_ans: 0.9
** most_common: ('200', 3), gold_ans: 200
** most_common: ('10', 3), gold_ans: 10
** most_common: ('28', 12), gold_ans: 28
** most_common: ('5.65', 4), gold_ans: 5.647
** most_common: ('16', 8), gold_ans: 16
** most_common: ('2547', 5), gold_ans: 1910
** most_common: ('1100', 3), gold_ans: 4400
** most_common: ('22', 12), gold_ans: 22
** most_common: ('29and109', 3), gold_ans: 29
** most_common: ('3.5', 3), gold_ans: 3.5
** most_common: ('20', 5), gold_ans: 20
** most_common: ('23', 5), gold_ans: 23
** most_common: ('22', 10), gold_ans: 22
** most_common: ('15', 10), gold_ans: 15
** most_common: ('1.15', 2), gold_ans: 1.15
** most_common: ('36.45', 7), gold_ans: 36.46
** most_common: ('20', 9), gold_ans: 20
** most_common: ('20', 7), gold_ans: 20
** most_common: ('19', 1), gold_ans: 9
** most_common: ('28', 10), gold_ans: 28
** most_common: ('18', 7), gold_ans: 18
** most_common: ('44', 10), gold_ans: 44
** most_common: ('6', 12), gold_ans: 6
** most_common: ('1', 7), gold_ans: 1
** most_common: ('4', 12), gold_ans: 4
BackVerify: 350
** most_common: ('20000', 6), gold_ans: 20000
** most_common: ('14and16', 5), gold_ans: 14
** most_common: ('66.0', 5), gold_ans: 42
** most_common: ('201', 2), gold_ans: 17
** most_common: ('61.25', 1), gold_ans: 10
** most_common: ('28', 8), gold_ans: 28
** most_common: ('4200', 4), gold_ans: 4180
** most_common: ('11', 2), gold_ans: 14
** most_common: ('330', 3), gold_ans: 330
** most_common: ('1500', 2), gold_ans: 1500
** most_common: ('10', 9), gold_ans: 10
** most_common: ('8.00foranadultticketand15.00forastudentticket', 2), gold_ans: 8
** most_common: ('12', 2), gold_ans: 14
** most_common: ('30', 8), gold_ans: 30
** most_common: ('250', 9), gold_ans: 250
** most_common: ('200', 7), gold_ans: 200
** most_common: ('180', 2), gold_ans: 180
** most_common: ('40', 10), gold_ans: 40
** most_common: ('2', 5), gold_ans: 2
** most_common: ('6', 4), gold_ans: 4
** most_common: ('6', 12), gold_ans: 6
** most_common: ('12', 4), gold_ans: 12
** most_common: ('47', 6), gold_ans: 46.61607
** most_common: ('30.0', 3), gold_ans: 30
** most_common: ('3000', 6), gold_ans: 3000
** most_common: ('17', 4), gold_ans: 17
** most_common: ('23', 6), gold_ans: 23
** most_common: ('35', 7), gold_ans: 35
** most_common: ('12000', 6), gold_ans: 12000
** most_common: ('-21', 7), gold_ans: -21
** most_common: ('99', 8), gold_ans: 99
** most_common: ('80', 9), gold_ans: 80
** most_common: ('11', 2), gold_ans: 11
** most_common: ('40', 4), gold_ans: 60
** most_common: ('36.43', 2), gold_ans: 13
** most_common: ('222.22', 2), gold_ans: 450
** most_common: ('6', 3), gold_ans: 8
** most_common: ('260', 2), gold_ans: 65
** most_common: ('10', 2), gold_ans: 10
** most_common: ('161', 7), gold_ans: 161
** most_common: ('3', 11), gold_ans: 3
** most_common: ('52', 2), gold_ans: 52
** most_common: ('54', 1), gold_ans: 22
** most_common: ('80', 2), gold_ans: 80
** most_common: ('8', 9), gold_ans: 8
** most_common: ('137', 9), gold_ans: 137
** most_common: ('120', 2), gold_ans: 120
** most_common: ('10', 3), gold_ans: 10
** most_common: ('35', 2), gold_ans: 35
** most_common: ('8.65', 1), gold_ans: 12
BackVerify: 400
** most_common: ('None(sincethereisnouniquesolution)', 1), gold_ans: 4
** most_common: ('25', 4), gold_ans: 25
** most_common: ('20', 6), gold_ans: 20
** most_common: ('20', 4), gold_ans: 20
** most_common: ('804', 5), gold_ans: 804
** most_common: ('18800', 2), gold_ans: 13000
** most_common: ('1', 6), gold_ans: 5
** most_common: ('44', 8), gold_ans: 44
** most_common: ('10', 5), gold_ans: 10
** most_common: ('9', 8), gold_ans: 9
** most_common: ('63', 3), gold_ans: 63
** most_common: ('N/A(sincethegiveninformationisincorrect)', 1), gold_ans: 327
** most_common: ('104.0', 5), gold_ans: 39
** most_common: ('2.5', 12), gold_ans: 2.5
** most_common: ('3.5', 8), gold_ans: 3.5
** most_common: ('75', 9), gold_ans: 75
** most_common: ('0', 2), gold_ans: 51
** most_common: ('115', 4), gold_ans: 115
** most_common: ('420', 11), gold_ans: 420
** most_common: ('40', 3), gold_ans: 40
** most_common: ('7200', 8), gold_ans: 7200
** most_common: ('0.16665', 6), gold_ans: 0.165
** most_common: ('9', 3), gold_ans: 9
** most_common: ('2120', 8), gold_ans: 2120
** most_common: ('5000', 11), gold_ans: 5000
** most_common: ('2030', 3), gold_ans: 20
** most_common: ('26', 7), gold_ans: 26
** most_common: ('26', 11), gold_ans: 26
** most_common: ('27', 2), gold_ans: 1000
** most_common: ('61', 1), gold_ans: 81
** most_common: ('8.0', 6), gold_ans: 8
** most_common: ('8', 5), gold_ans: 7
** most_common: ('5', 10), gold_ans: 5
** most_common: ('3', 4), gold_ans: 3
** most_common: ('300', 3), gold_ans: 300
** most_common: ('28', 12), gold_ans: 28
** most_common: ('14', 4), gold_ans: 14
** most_common: ('83.33', 4), gold_ans: 83.33
** most_common: ('6', 5), gold_ans: 6
** most_common: ('137', 3), gold_ans: 137
** most_common: ('34', 7), gold_ans: 34
** most_common: ('50', 2), gold_ans: 50
** most_common: ('69', 5), gold_ans: 69
** most_common: ('160', 10), gold_ans: 160
** most_common: ('40', 10), gold_ans: 40
** most_common: ('13', 12), gold_ans: 13
** most_common: ('340and151', 2), gold_ans: 178
** most_common: ('32', 4), gold_ans: 22
** most_common: ('7', 5), gold_ans: 7
** most_common: ('1', 3), gold_ans: 1
BackVerify: 450
** most_common: ('40', 3), gold_ans: 40
** most_common: ('96', 5), gold_ans: 96
** most_common: ('5500', 7), gold_ans: 5500
** most_common: ('40.5', 2), gold_ans: 1.35
** most_common: ('8', 5), gold_ans: 8
** most_common: ('427', 12), gold_ans: 427
** most_common: ('200', 2), gold_ans: 200
** most_common: ('10', 9), gold_ans: 10
** most_common: ('13', 4), gold_ans: 13
** most_common: ('2520.00', 6), gold_ans: 2520
** most_common: ('8', 2), gold_ans: 8
** most_common: ('550014500', 1), gold_ans: 5500
** most_common: ('208', 12), gold_ans: 208
** most_common: ('10.88', 2), gold_ans: 16.85
** most_common: ('24.48', 3), gold_ans: 26
** most_common: ('102', 6), gold_ans: 102
** most_common: ('2.5', 7), gold_ans: 2.5
** most_common: ('299', 1), gold_ans: 488
** most_common: ('1400', 2), gold_ans: 128
** most_common: ('40', 6), gold_ans: 40
** most_common: ('25.0', 4), gold_ans: 25
** most_common: ('290', 4), gold_ans: 350
** most_common: ('12', 4), gold_ans: 12
** most_common: ('8000', 8), gold_ans: 8000
** most_common: ('116', 5), gold_ans: 116
** most_common: ('nointegersolutionexists', 1), gold_ans: 5.41
** most_common: ('3.0', 8), gold_ans: 3
** most_common: ('15.53', 2), gold_ans: 15.62
** most_common: ('425', 5), gold_ans: 425
** most_common: ('3800', 3), gold_ans: 3200
** most_common: ('6', 2), gold_ans: 6
** most_common: ('20', 9), gold_ans: 20
** most_common: ('0.10', 5), gold_ans: 0.05
** most_common: ('3.91', 1), gold_ans: 3.25
** most_common: ('122', 12), gold_ans: 122
** most_common: ('13.5', 12), gold_ans: 13.5
** most_common: ('16', 11), gold_ans: 16
** most_common: ('20.0', 5), gold_ans: 20
** most_common: ('9', 6), gold_ans: 9
** most_common: ('36', 5), gold_ans: 24
** most_common: ('2.5', 9), gold_ans: 2.5
** most_common: ('0.21forthecostofeachappleand0.17forthecostofeachorange', 1), gold_ans: 0.21
** most_common: ('3050', 2), gold_ans: 30
** most_common: ('100.0', 2), gold_ans: 100
** most_common: ('7', 11), gold_ans: 7
** most_common: ('7000', 6), gold_ans: 7000
** most_common: ('18.4and17.6', 4), gold_ans: 18.4
** most_common: ('17', 3), gold_ans: 17
** most_common: ('35', 6), gold_ans: 20
** most_common: ('76', 6), gold_ans: 152
BackVerify: 500
** most_common: ('202', 7), gold_ans: 202
** most_common: ('30', 1), gold_ans: 12
** most_common: ('59', 5), gold_ans: 59
** most_common: ('125', 5), gold_ans: 95
** most_common: ('60', 11), gold_ans: 60
** most_common: ('6800.0', 2), gold_ans: 8200
** most_common: ('9', 6), gold_ans: 9
** most_common: ('11', 8), gold_ans: 11
** most_common: ('2000', 12), gold_ans: 2000
** most_common: ('9', 11), gold_ans: 9
** most_common: ('150', 6), gold_ans: 75
** most_common: ('99', 6), gold_ans: 99
** most_common: ('32', 5), gold_ans: 32
** most_common: ('20', 7), gold_ans: 20
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  1 0
** answer: 137, groundtruth_str: 137
** compare on lower
** correct
**  2 0
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  3 0
** answer: 3900, groundtruth_str: 3900
** compare on lower
** correct
**  4 0
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  5 0
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  6 0
** answer: 63, groundtruth_str: 63
** compare on lower
** correct
**  7 0
** answer: 6.67, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  6.67
** groundtruth_num is (int, float)
** compare_two_numbers int 6.67 8
** wrong
**  7 1
** answer: 234.0, groundtruth_str: 156
** groundtruth_num is not None
** is_fraction:  234.0
** groundtruth_num is (int, float)
** compare_two_numbers int 234 156
** wrong
**  7 2
** answer: 11.2poundsofColombiancoffeebeansand28.8poundsofPeruviancoffeebeans, groundtruth_str: 11.2
** groundtruth_num is not None
** is_fraction:  11.2poundsofColombiancoffeebeansand28.8poundsofPeruviancoffeebeans
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  7 3
** answer: 3500, groundtruth_str: 3500
** compare on lower
** correct
**  8 3
** answer: 178, groundtruth_str: 178
** compare on lower
** correct
**  9 3
** answer: 583.35, groundtruth_str: 583.3333
** groundtruth_num is not None
** is_fraction:  583.35
** groundtruth_num is (int, float)
** compare_two_numbers float 583.35 583.3333
** wrong
**  9 4
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  10 4
** answer: 20,000, groundtruth_str: 20000
** groundtruth_num is not None
** is_fraction:  20,000
** groundtruth_num is (int, float)
** compare_two_numbers int 20000 20000
** correct
**  11 4
** answer: 200, groundtruth_str: 200
** compare on lower
** correct
**  12 4
** answer: 31, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  31
** groundtruth_num is (int, float)
** compare_two_numbers int 31 19
** wrong
**  12 5
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  13 5
** answer: 61, groundtruth_str: 61
** compare on lower
** correct
**  14 5
** answer: 12.5, groundtruth_str: 12.5
** compare on lower
** correct
**  15 5
** answer: 444, groundtruth_str: 300
** groundtruth_num is not None
** is_fraction:  444
** groundtruth_num is (int, float)
** compare_two_numbers int 444 300
** wrong
**  15 6
** answer: 7750, groundtruth_str: 7750
** compare on lower
** correct
**  16 6
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  17 6
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  18 6
** answer: 8.61538461538462, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  8.61538461538462
** groundtruth_num is (int, float)
** compare_two_numbers int 8.61538461538462 5
** wrong
**  18 7
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  19 7
** answer: 150, groundtruth_str: 150
** compare on lower
** correct
**  20 7
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  21 7
** answer: 17, groundtruth_str: 35
** groundtruth_num is not None
** is_fraction:  17
** groundtruth_num is (int, float)
** compare_two_numbers int 17 35
** wrong
**  21 8
** answer: 24.0, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  24.0
** groundtruth_num is (int, float)
** compare_two_numbers int 24 24
** correct
**  22 8
** answer: Nosolution, groundtruth_str: 0.45
** groundtruth_num is not None
** is_fraction:  Nosolution
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  22 9
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  23 9
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  24 9
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  25 9
** answer: 520, groundtruth_str: 520
** compare on lower
** correct
**  26 9
** answer: 1.5, groundtruth_str: 0.3
** groundtruth_num is not None
** is_fraction:  1.5
** groundtruth_num is (int, float)
** compare_two_numbers float 1.5 0.3
** wrong
**  26 10
** answer: 27.0, groundtruth_str: 27.2
** groundtruth_num is not None
** is_fraction:  27.0
** groundtruth_num is (int, float)
** compare_two_numbers float 27 27.2
** wrong
**  26 11
** answer: 54, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  54
** groundtruth_num is (int, float)
** compare_two_numbers int 54 20
** wrong
**  26 12
** answer: 4000, groundtruth_str: 4000
** compare on lower
** correct
**  27 12
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  28 12
** answer: 76, groundtruth_str: 83
** groundtruth_num is not None
** is_fraction:  76
** groundtruth_num is (int, float)
** compare_two_numbers int 76 83
** wrong
**  28 13
** answer: 73.5, groundtruth_str: 73.5
** compare on lower
** correct
**  29 13
** answer: 6, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 12
** wrong
**  29 14
** answer: 14, groundtruth_str: 34
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers int 14 34
** wrong
**  29 15
** answer: 214, groundtruth_str: 214
** compare on lower
** correct
**  30 15
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  31 15
** answer: 2.67, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  2.67
** groundtruth_num is (int, float)
** compare_two_numbers int 2.67 8
** wrong
**  31 16
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  32 16
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  33 16
** answer: 64, groundtruth_str: 64
** compare on lower
** correct
**  34 16
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  35 16
** answer: 0.4, groundtruth_str: 0.4
** compare on lower
** correct
**  36 16
** answer: 10000, groundtruth_str: 10000
** compare on lower
** correct
**  37 16
** answer: 5000, groundtruth_str: 5000
** compare on lower
** correct
**  38 16
** answer: 16bluecardsand1redcard, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  16bluecardsand1redcard
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  38 17
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  39 17
** answer: 10, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 5
** wrong
**  39 18
** answer: 9, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 26
** wrong
**  39 19
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  40 19
** answer: 85.21, groundtruth_str: 85
** groundtruth_num is not None
** is_fraction:  85.21
** groundtruth_num is (int, float)
** compare_two_numbers int 85.21 85
** correct
**  41 19
** answer: 4000, groundtruth_str: 4000
** compare on lower
** correct
**  42 19
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  43 19
** answer: 4071.2, groundtruth_str: 4072
** groundtruth_num is not None
** is_fraction:  4071.2
** groundtruth_num is (int, float)
** compare_two_numbers int 4071.2 4072
** wrong
**  43 20
** answer: 200, groundtruth_str: 200
** compare on lower
** correct
**  44 20
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  45 20
** answer: 30.55, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  30.55
** groundtruth_num is (int, float)
** compare_two_numbers int 30.55 30
** wrong
**  45 21
** answer: 4.90, groundtruth_str: 4.9
** groundtruth_num is not None
** is_fraction:  4.90
** groundtruth_num is (int, float)
** compare_two_numbers float 4.9 4.9
** correct
**  46 21
** answer: 70, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  70
** groundtruth_num is (int, float)
** compare_two_numbers int 70 80
** wrong
**  46 22
** answer: 300, groundtruth_str: 299
** groundtruth_num is not None
** is_fraction:  300
** groundtruth_num is (int, float)
** compare_two_numbers int 300 299
** wrong
**  46 23
** answer: 127, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  127
** groundtruth_num is (int, float)
** compare_two_numbers int 127 25
** wrong
**  46 24
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  47 24
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  48 24
** answer: 150, groundtruth_str: 150
** compare on lower
** correct
**  49 24
** answer: 3.5, groundtruth_str: 3.5
** compare on lower
** correct
**  50 24
** answer: -2, groundtruth_str: -10
** groundtruth_num is not None
** is_fraction:  -2
** groundtruth_num is (int, float)
** compare_two_numbers int -2 -10
** wrong
**  50 25
** answer: 37.5, groundtruth_str: 37.5
** compare on lower
** correct
**  51 25
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  52 25
** answer: 37,500, groundtruth_str: 37500
** groundtruth_num is not None
** is_fraction:  37,500
** groundtruth_num is (int, float)
** compare_two_numbers int 37500 37500
** correct
**  53 25
** answer: 600400, groundtruth_str: 600
** groundtruth_num is not None
** is_fraction:  600400
** groundtruth_num is (int, float)
** compare_two_numbers int 600400 600
** wrong
**  53 26
** answer: 83, groundtruth_str: 83
** compare on lower
** correct
**  54 26
** answer: 150, groundtruth_str: 150
** compare on lower
** correct
**  55 26
** answer: 585, groundtruth_str: 565
** groundtruth_num is not None
** is_fraction:  585
** groundtruth_num is (int, float)
** compare_two_numbers int 585 565
** wrong
**  55 27
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  56 27
** answer: -7, groundtruth_str: -7
** compare on lower
** correct
**  57 27
** answer: -72.48, groundtruth_str: -72
** groundtruth_num is not None
** is_fraction:  -72.48
** groundtruth_num is (int, float)
** compare_two_numbers int -72.48 -72
** correct
**  58 27
** answer: 35, groundtruth_str: 35
** compare on lower
** correct
**  59 27
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  60 27
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  61 27
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  62 27
** answer: 2060, groundtruth_str: 700
** groundtruth_num is not None
** is_fraction:  2060
** groundtruth_num is (int, float)
** compare_two_numbers int 2060 700
** wrong
**  62 28
** answer: 128, groundtruth_str: 128
** compare on lower
** correct
**  63 28
** answer: 30.0, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  30.0
** groundtruth_num is (int, float)
** compare_two_numbers int 30 30
** correct
**  64 28
** answer: 16, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 9
** wrong
**  64 29
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  65 29
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  66 29
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  67 29
** answer: 390, groundtruth_str: 390
** compare on lower
** correct
**  68 29
** answer: 500, groundtruth_str: 500
** compare on lower
** correct
**  69 29
** answer: 16.70, groundtruth_str: 1.85
** groundtruth_num is not None
** is_fraction:  16.70
** groundtruth_num is (int, float)
** compare_two_numbers float 16.7 1.85
** wrong
**  69 30
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  70 30
** answer: 270, groundtruth_str: 270
** compare on lower
** correct
**  71 30
** answer: 12ouncesof25%acidsolutionand18ouncesof50%acidsolution, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  12ouncesof25%acidsolutionand18ouncesof50%acidsolution
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  71 31
** answer: 83, groundtruth_str: 117
** groundtruth_num is not None
** is_fraction:  83
** groundtruth_num is (int, float)
** compare_two_numbers int 83 117
** wrong
**  71 32
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  72 32
** answer: 31, groundtruth_str: 31
** compare on lower
** correct
**  73 32
** answer: 28, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  28
** groundtruth_num is (int, float)
** compare_two_numbers int 28 5
** wrong
**  73 33
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  74 33
** answer: 43, groundtruth_str: 43
** compare on lower
** correct
**  75 33
** answer: 3192500.0, groundtruth_str: 3192500
** groundtruth_num is not None
** is_fraction:  3192500.0
** groundtruth_num is (int, float)
** compare_two_numbers int 3192500 3192500
** correct
**  76 33
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  77 33
** answer: 800, groundtruth_str: 800
** compare on lower
** correct
**  78 33
** answer: 1200, groundtruth_str: 1200
** compare on lower
** correct
**  79 33
** answer: 164, groundtruth_str: 164
** compare on lower
** correct
**  80 33
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  81 33
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  82 33
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  83 33
** answer: 0.75, groundtruth_str: 0.75
** compare on lower
** correct
**  84 33
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  85 33
** answer: 68.25, groundtruth_str: 68.25
** compare on lower
** correct
**  86 33
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  87 33
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  88 33
** answer: 0.9, groundtruth_str: 0.9
** compare on lower
** correct
**  89 33
** answer: 0.625(forthecostofoneapple)and-1(forthecostofoneorange), groundtruth_str: 0.2
** groundtruth_num is not None
** is_fraction:  0.625(forthecostofoneapple)and-1(forthecostofoneorange)
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  89 34
** answer: 490, groundtruth_str: 710
** groundtruth_num is not None
** is_fraction:  490
** groundtruth_num is (int, float)
** compare_two_numbers int 490 710
** wrong
**  89 35
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  90 35
** answer: 65.0, groundtruth_str: 65
** groundtruth_num is not None
** is_fraction:  65.0
** groundtruth_num is (int, float)
** compare_two_numbers int 65 65
** correct
**  91 35
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  92 35
** answer: 2400000, groundtruth_str: 2400000
** compare on lower
** correct
**  93 35
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  94 35
** answer: 87.0, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  87.0
** groundtruth_num is (int, float)
** compare_two_numbers int 87 48
** wrong
**  94 36
** answer: 5000, groundtruth_str: 5000
** compare on lower
** correct
**  95 36
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  96 36
** answer: 0.67, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  0.67
** groundtruth_num is (int, float)
** compare_two_numbers int 0.67 7
** wrong
**  96 37
** answer: 0, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 16
** wrong
**  96 38
** answer: 150, groundtruth_str: 150
** compare on lower
** correct
**  97 38
** answer: 12000, groundtruth_str: 12000
** compare on lower
** correct
**  98 38
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  99 38
** answer: 2.5, groundtruth_str: 2.5
** compare on lower
** correct
**  100 38
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  101 38
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  102 38
** answer: 6.99, groundtruth_str: 9.99
** groundtruth_num is not None
** is_fraction:  6.99
** groundtruth_num is (int, float)
** compare_two_numbers float 6.99 9.99
** wrong
**  102 39
** answer: 150, groundtruth_str: 150
** compare on lower
** correct
**  103 39
** answer: 9.75, groundtruth_str: 9.75
** compare on lower
** correct
**  104 39
** answer: 17.0, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  17.0
** groundtruth_num is (int, float)
** compare_two_numbers int 17 17
** correct
**  105 39
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  106 39
** answer: 8993.67, groundtruth_str: 887
** groundtruth_num is not None
** is_fraction:  8993.67
** groundtruth_num is (int, float)
** compare_two_numbers int 8993.67 887
** wrong
**  106 40
** answer: 7.01, groundtruth_str: 7.03
** groundtruth_num is not None
** is_fraction:  7.01
** groundtruth_num is (int, float)
** compare_two_numbers float 7.01 7.03
** wrong
**  106 41
** answer: 199,731.2, groundtruth_str: 8695.65
** groundtruth_num is not None
** is_fraction:  199,731.2
** groundtruth_num is (int, float)
** compare_two_numbers float 199731.2 8695.65
** wrong
**  106 42
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  107 42
** answer: 3000and5000, groundtruth_str: 3000
** groundtruth_num is not None
** is_fraction:  3000and5000
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  107 43
** answer: 155, groundtruth_str: 140
** groundtruth_num is not None
** is_fraction:  155
** groundtruth_num is (int, float)
** compare_two_numbers int 155 140
** wrong
**  107 44
** answer: 8.75, groundtruth_str: 8.75
** compare on lower
** correct
**  108 44
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  109 44
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  110 44
** answer: 7.0, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  7.0
** groundtruth_num is (int, float)
** compare_two_numbers int 7 7
** correct
**  111 44
** answer: 200, groundtruth_str: 180
** groundtruth_num is not None
** is_fraction:  200
** groundtruth_num is (int, float)
** compare_two_numbers int 200 180
** wrong
**  111 45
** answer: 280, groundtruth_str: 280
** compare on lower
** correct
**  112 45
** answer: 1.35, groundtruth_str: 1.35
** compare on lower
** correct
**  113 45
** answer: 320poundsofsoybeanmealand40poundsofcornmeal, groundtruth_str: 320
** groundtruth_num is not None
** is_fraction:  320poundsofsoybeanmealand40poundsofcornmeal
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  113 46
** answer: 64, groundtruth_str: 64
** compare on lower
** correct
**  114 46
** answer: 82, groundtruth_str: 70
** groundtruth_num is not None
** is_fraction:  82
** groundtruth_num is (int, float)
** compare_two_numbers int 82 70
** wrong
**  114 47
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  115 47
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  116 47
** answer: 0.6667, groundtruth_str: 0.6667
** compare on lower
** correct
**  117 47
** answer: 2.625, groundtruth_str: 2.625
** compare on lower
** correct
**  118 47
** answer: 108,375, groundtruth_str: 108375
** groundtruth_num is not None
** is_fraction:  108,375
** groundtruth_num is (int, float)
** compare_two_numbers int 108375 108375
** correct
**  119 47
** answer: 43.48, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  43.48
** groundtruth_num is (int, float)
** compare_two_numbers int 43.48 50
** wrong
**  119 48
** answer: 262.5, groundtruth_str: 262.5
** compare on lower
** correct
**  120 48
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  121 48
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  122 48
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  123 48
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  124 48
** answer: 17, groundtruth_str: 417
** groundtruth_num is not None
** is_fraction:  17
** groundtruth_num is (int, float)
** compare_two_numbers int 17 417
** wrong
**  124 49
** answer: 100, groundtruth_str: 104
** groundtruth_num is not None
** is_fraction:  100
** groundtruth_num is (int, float)
** compare_two_numbers int 100 104
** wrong
**  124 50
** answer: 31.0, groundtruth_str: 31
** groundtruth_num is not None
** is_fraction:  31.0
** groundtruth_num is (int, float)
** compare_two_numbers int 31 31
** correct
**  125 50
** answer: 250, groundtruth_str: 250
** compare on lower
** correct
**  126 50
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  127 50
** answer: 586, groundtruth_str: 219
** groundtruth_num is not None
** is_fraction:  586
** groundtruth_num is (int, float)
** compare_two_numbers int 586 219
** wrong
**  127 51
** answer: 19, groundtruth_str: 19
** compare on lower
** correct
**  128 51
** answer: 325, groundtruth_str: 325
** compare on lower
** correct
**  129 51
** answer: 4.5(dailyfee)and0.18(mileagecharge), groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  4.5(dailyfee)and0.18(mileagecharge)
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  129 52
** answer: 7, groundtruth_str: 70
** groundtruth_num is not None
** is_fraction:  7
** groundtruth_num is (int, float)
** compare_two_numbers int 7 70
** wrong
**  129 53
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  130 53
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  131 53
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  132 53
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  133 53
** answer: 64, groundtruth_str: 64
** compare on lower
** correct
**  134 53
** answer: 22.5, groundtruth_str: 22.5
** compare on lower
** correct
**  135 53
** answer: 3700, groundtruth_str: 3100
** groundtruth_num is not None
** is_fraction:  3700
** groundtruth_num is (int, float)
** compare_two_numbers int 3700 3100
** wrong
**  135 54
** answer: 4800, groundtruth_str: 4800
** compare on lower
** correct
**  136 54
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  137 54
** answer: 274, groundtruth_str: 275
** groundtruth_num is not None
** is_fraction:  274
** groundtruth_num is (int, float)
** compare_two_numbers int 274 275
** wrong
**  137 55
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  138 55
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  139 55
** answer: 9goatsand6ducks, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  9goatsand6ducks
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  139 56
** answer: 30.5, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  30.5
** groundtruth_num is (int, float)
** compare_two_numbers int 30.5 30
** correct
**  140 56
** answer: 84, groundtruth_str: 84
** compare on lower
** correct
**  141 56
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  142 56
** answer: 310, groundtruth_str: 77
** groundtruth_num is not None
** is_fraction:  310
** groundtruth_num is (int, float)
** compare_two_numbers int 310 77
** wrong
**  142 57
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  143 57
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  144 57
** answer: 27.5, groundtruth_str: 27.5
** compare on lower
** correct
**  145 57
** answer: 78, groundtruth_str: 78
** compare on lower
** correct
**  146 57
** answer: 366, groundtruth_str: 366
** compare on lower
** correct
**  147 57
** answer: 2.25, groundtruth_str: 2.12
** groundtruth_num is not None
** is_fraction:  2.25
** groundtruth_num is (int, float)
** compare_two_numbers float 2.25 2.12
** wrong
**  147 58
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  148 58
** answer: 19, groundtruth_str: 19
** compare on lower
** correct
**  149 58
** answer: 60, groundtruth_str: 55
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 55
** wrong
**  149 59
** answer: 11, groundtruth_str: 6.11
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers float 11 6.11
** wrong
**  149 60
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  150 60
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  151 60
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  152 60
** answer: 715, groundtruth_str: 672
** groundtruth_num is not None
** is_fraction:  715
** groundtruth_num is (int, float)
** compare_two_numbers int 715 672
** wrong
**  152 61
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  153 61
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  154 61
** answer: 37, groundtruth_str: 37
** compare on lower
** correct
**  155 61
** answer: 28.08, groundtruth_str: 28.08
** compare on lower
** correct
**  156 61
** answer: 2400, groundtruth_str: 1100
** groundtruth_num is not None
** is_fraction:  2400
** groundtruth_num is (int, float)
** compare_two_numbers int 2400 1100
** wrong
**  156 62
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  157 62
** answer: 500, groundtruth_str: 530
** groundtruth_num is not None
** is_fraction:  500
** groundtruth_num is (int, float)
** compare_two_numbers int 500 530
** wrong
**  157 63
** answer: 6, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 7
** wrong
**  157 64
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  158 64
** answer: 104, groundtruth_str: 43
** groundtruth_num is not None
** is_fraction:  104
** groundtruth_num is (int, float)
** compare_two_numbers int 104 43
** wrong
**  158 65
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  159 65
** answer: 190, groundtruth_str: 190
** compare on lower
** correct
**  160 65
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  161 65
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  162 65
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  163 65
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  164 65
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  165 65
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  166 65
** answer: 3.5, groundtruth_str: 3.5
** compare on lower
** correct
**  167 65
** answer: 17000, groundtruth_str: 17000
** compare on lower
** correct
**  168 65
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  169 65
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  170 65
** answer: 41, groundtruth_str: 41
** compare on lower
** correct
**  171 65
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  172 65
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  173 65
** answer: 3.6, groundtruth_str: 3.615
** groundtruth_num is not None
** is_fraction:  3.6
** groundtruth_num is (int, float)
** compare_two_numbers float 3.6 3.615
** wrong
**  173 66
** answer: 13.12, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  13.12
** groundtruth_num is (int, float)
** compare_two_numbers int 13.12 13
** correct
**  174 66
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  175 66
** answer: 36.67, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  36.67
** groundtruth_num is (int, float)
** compare_two_numbers int 36.67 30
** wrong
**  175 67
** answer: 127, groundtruth_str: 127
** compare on lower
** correct
**  176 67
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  177 67
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  178 67
** answer: 5100, groundtruth_str: 4700
** groundtruth_num is not None
** is_fraction:  5100
** groundtruth_num is (int, float)
** compare_two_numbers int 5100 4700
** wrong
**  178 68
** answer: 450, groundtruth_str: 450
** compare on lower
** correct
**  179 68
** answer: 820, groundtruth_str: 820
** compare on lower
** correct
**  180 68
** answer: 4960, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  4960
** groundtruth_num is (int, float)
** compare_two_numbers int 4960 7
** wrong
**  180 69
** answer: 71.37, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  71.37
** groundtruth_num is (int, float)
** compare_two_numbers int 71.37 16
** wrong
**  180 70
** answer: 102, groundtruth_str: 102
** compare on lower
** correct
**  181 70
** answer: 65, groundtruth_str: 65
** compare on lower
** correct
**  182 70
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  183 70
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  184 70
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  185 70
** answer: 14, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers int 14 25
** wrong
**  185 71
** answer: 175, groundtruth_str: 175
** compare on lower
** correct
**  186 71
** answer: 130, groundtruth_str: 130
** compare on lower
** correct
**  187 71
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  188 71
** answer: 135, groundtruth_str: 135
** compare on lower
** correct
**  189 71
** answer: 850, groundtruth_str: 100
** groundtruth_num is not None
** is_fraction:  850
** groundtruth_num is (int, float)
** compare_two_numbers int 850 100
** wrong
**  189 72
** answer: 2.5, groundtruth_str: 2.5
** compare on lower
** correct
**  190 72
** answer: 4.5, groundtruth_str: -4.5
** groundtruth_num is not None
** is_fraction:  4.5
** groundtruth_num is (int, float)
** compare_two_numbers float 4.5 -4.5
** wrong
**  190 73
** answer: 6270, groundtruth_str: 6258
** groundtruth_num is not None
** is_fraction:  6270
** groundtruth_num is (int, float)
** compare_two_numbers int 6270 6258
** wrong
**  190 74
** answer: 65, groundtruth_str: 65
** compare on lower
** correct
**  191 74
** answer: 19, groundtruth_str: 19
** compare on lower
** correct
**  192 74
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  193 74
** answer: 0.75, groundtruth_str: 0.75
** compare on lower
** correct
**  194 74
** answer: 3.5, groundtruth_str: 3.5
** compare on lower
** correct
**  195 74
** answer: 130, groundtruth_str: 130
** compare on lower
** correct
**  196 74
** answer: 0, groundtruth_str: 98
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 98
** wrong
**  196 75
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  197 75
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  198 75
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  199 75
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  200 75
** answer: 29.23, groundtruth_str: 29
** groundtruth_num is not None
** is_fraction:  29.23
** groundtruth_num is (int, float)
** compare_two_numbers int 29.23 29
** correct
**  201 75
** answer: 250, groundtruth_str: 250
** compare on lower
** correct
**  202 75
** answer: 31, groundtruth_str: 31
** compare on lower
** correct
**  203 75
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  204 75
** answer: 180.0, groundtruth_str: 180
** groundtruth_num is not None
** is_fraction:  180.0
** groundtruth_num is (int, float)
** compare_two_numbers int 180 180
** correct
**  205 75
** answer: 236adultsand342children, groundtruth_str: 236
** groundtruth_num is not None
** is_fraction:  236adultsand342children
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  205 76
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  206 76
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  207 76
** answer: 1.375, groundtruth_str: 1.375
** compare on lower
** correct
**  208 76
** answer: 17.0, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  17.0
** groundtruth_num is (int, float)
** compare_two_numbers int 17 17
** correct
**  209 76
** answer: 1283, groundtruth_str: 1500
** groundtruth_num is not None
** is_fraction:  1283
** groundtruth_num is (int, float)
** compare_two_numbers int 1283 1500
** wrong
**  209 77
** answer: 116.67, groundtruth_str: 525
** groundtruth_num is not None
** is_fraction:  116.67
** groundtruth_num is (int, float)
** compare_two_numbers int 116.67 525
** wrong
**  209 78
** answer: 18000, groundtruth_str: 18000
** compare on lower
** correct
**  210 78
** answer: 1311, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  1311
** groundtruth_num is (int, float)
** compare_two_numbers int 1311 13
** wrong
**  210 79
** answer: 63, groundtruth_str: 63
** compare on lower
** correct
**  211 79
** answer: 7.00and$28.67, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  7.00and$28.67
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  211 80
** answer: 112, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  112
** groundtruth_num is (int, float)
** compare_two_numbers int 112 80
** wrong
**  211 81
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  212 81
** answer: 12.0, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  12.0
** groundtruth_num is (int, float)
** compare_two_numbers int 12 12
** correct
**  213 81
** answer: 1.6, groundtruth_str: 2.2857
** groundtruth_num is not None
** is_fraction:  1.6
** groundtruth_num is (int, float)
** compare_two_numbers float 1.6 2.2857
** wrong
**  213 82
** answer: 14.25and47.75, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  14.25and47.75
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  213 83
** answer: 60.73, groundtruth_str: 77.4
** groundtruth_num is not None
** is_fraction:  60.73
** groundtruth_num is (int, float)
** compare_two_numbers float 60.73 77.4
** wrong
**  213 84
** answer: 200, groundtruth_str: 100
** groundtruth_num is not None
** is_fraction:  200
** groundtruth_num is (int, float)
** compare_two_numbers int 200 100
** wrong
**  213 85
** answer: 0.24975, groundtruth_str: 0.25
** groundtruth_num is not None
** is_fraction:  0.24975
** groundtruth_num is (int, float)
** compare_two_numbers float 0.24975 0.25
** wrong
**  213 86
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  214 86
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  215 86
** answer: 7.5, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  7.5
** groundtruth_num is (int, float)
** compare_two_numbers int 7.5 2
** wrong
**  215 87
** answer: 0, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 50
** wrong
**  215 88
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  216 88
** answer: 35.0, groundtruth_str: 35
** groundtruth_num is not None
** is_fraction:  35.0
** groundtruth_num is (int, float)
** compare_two_numbers int 35 35
** correct
**  217 88
** answer: 280, groundtruth_str: 280
** compare on lower
** correct
**  218 88
** answer: 168, groundtruth_str: 168
** compare on lower
** correct
**  219 88
** answer: 420, groundtruth_str: 420
** compare on lower
** correct
**  220 88
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  221 88
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  222 88
** answer: 140, groundtruth_str: 140
** compare on lower
** correct
**  223 88
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  224 88
** answer: N/A(sincethegiveninformationisinconsistent), groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  N/A(sincethegiveninformationisinconsistent)
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  224 89
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  225 89
** answer: 0.10, groundtruth_str: 0.1
** groundtruth_num is not None
** is_fraction:  0.10
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1 0.1
** correct
**  226 89
** answer: 16, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 18
** wrong
**  226 90
** answer: 21800, groundtruth_str: 21800
** compare on lower
** correct
**  227 90
** answer: 3.75,6.25, groundtruth_str: 3.75
** groundtruth_num is not None
** is_fraction:  3.75,6.25
** groundtruth_num is (int, float)
** compare_two_numbers float 3.75 3.75
** correct
**  228 90
** answer: 8.0, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  8.0
** groundtruth_num is (int, float)
** compare_two_numbers int 8 8
** correct
**  229 90
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  230 90
** answer: 269, groundtruth_str: 294
** groundtruth_num is not None
** is_fraction:  269
** groundtruth_num is (int, float)
** compare_two_numbers int 269 294
** wrong
**  230 91
** answer: 23.9, groundtruth_str: 23
** groundtruth_num is not None
** is_fraction:  23.9
** groundtruth_num is (int, float)
** compare_two_numbers int 23.9 23
** wrong
**  230 92
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  231 92
** answer: 19, groundtruth_str: 19
** compare on lower
** correct
**  232 92
** answer: 0.90, groundtruth_str: 0.9
** groundtruth_num is not None
** is_fraction:  0.90
** groundtruth_num is (int, float)
** compare_two_numbers float 0.9 0.9
** correct
**  233 92
** answer: 200, groundtruth_str: 200
** compare on lower
** correct
**  234 92
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  235 92
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  236 92
** answer: 5.65, groundtruth_str: 5.647
** groundtruth_num is not None
** is_fraction:  5.65
** groundtruth_num is (int, float)
** compare_two_numbers float 5.65 5.647
** wrong
**  236 93
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  237 93
** answer: 2547, groundtruth_str: 1910
** groundtruth_num is not None
** is_fraction:  2547
** groundtruth_num is (int, float)
** compare_two_numbers int 2547 1910
** wrong
**  237 94
** answer: 1100, groundtruth_str: 4400
** groundtruth_num is not None
** is_fraction:  1100
** groundtruth_num is (int, float)
** compare_two_numbers int 1100 4400
** wrong
**  237 95
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  238 95
** answer: 29and109, groundtruth_str: 29
** groundtruth_num is not None
** is_fraction:  29and109
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  238 96
** answer: 3.5, groundtruth_str: 3.5
** compare on lower
** correct
**  239 96
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  240 96
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  241 96
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  242 96
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  243 96
** answer: 1.15, groundtruth_str: 1.15
** compare on lower
** correct
**  244 96
** answer: 36.45, groundtruth_str: 36.46
** groundtruth_num is not None
** is_fraction:  36.45
** groundtruth_num is (int, float)
** compare_two_numbers float 36.45 36.46
** wrong
**  244 97
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  245 97
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  246 97
** answer: 19, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  19
** groundtruth_num is (int, float)
** compare_two_numbers int 19 9
** wrong
**  246 98
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  247 98
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  248 98
** answer: 44, groundtruth_str: 44
** compare on lower
** correct
**  249 98
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  250 98
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  251 98
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  252 98
** answer: 20000, groundtruth_str: 20000
** compare on lower
** correct
**  253 98
** answer: 14and16, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  14and16
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  253 99
** answer: 66.0, groundtruth_str: 42
** groundtruth_num is not None
** is_fraction:  66.0
** groundtruth_num is (int, float)
** compare_two_numbers int 66 42
** wrong
**  253 100
** answer: 201, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  201
** groundtruth_num is (int, float)
** compare_two_numbers int 201 17
** wrong
**  253 101
** answer: 61.25, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  61.25
** groundtruth_num is (int, float)
** compare_two_numbers int 61.25 10
** wrong
**  253 102
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  254 102
** answer: 4200, groundtruth_str: 4180
** groundtruth_num is not None
** is_fraction:  4200
** groundtruth_num is (int, float)
** compare_two_numbers int 4200 4180
** wrong
**  254 103
** answer: 11, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 14
** wrong
**  254 104
** answer: 330, groundtruth_str: 330
** compare on lower
** correct
**  255 104
** answer: 1500, groundtruth_str: 1500
** compare on lower
** correct
**  256 104
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  257 104
** answer: 8.00foranadultticketand15.00forastudentticket, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  8.00foranadultticketand15.00forastudentticket
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  257 105
** answer: 12, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 14
** wrong
**  257 106
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  258 106
** answer: 250, groundtruth_str: 250
** compare on lower
** correct
**  259 106
** answer: 200, groundtruth_str: 200
** compare on lower
** correct
**  260 106
** answer: 180, groundtruth_str: 180
** compare on lower
** correct
**  261 106
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  262 106
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  263 106
** answer: 6, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 4
** wrong
**  263 107
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  264 107
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  265 107
** answer: 47, groundtruth_str: 46.61607
** groundtruth_num is not None
** is_fraction:  47
** groundtruth_num is (int, float)
** compare_two_numbers float 47 46.61607
** wrong
**  265 108
** answer: 30.0, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  30.0
** groundtruth_num is (int, float)
** compare_two_numbers int 30 30
** correct
**  266 108
** answer: 3000, groundtruth_str: 3000
** compare on lower
** correct
**  267 108
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  268 108
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  269 108
** answer: 35, groundtruth_str: 35
** compare on lower
** correct
**  270 108
** answer: 12000, groundtruth_str: 12000
** compare on lower
** correct
**  271 108
** answer: -21, groundtruth_str: -21
** compare on lower
** correct
**  272 108
** answer: 99, groundtruth_str: 99
** compare on lower
** correct
**  273 108
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  274 108
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  275 108
** answer: 40, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  40
** groundtruth_num is (int, float)
** compare_two_numbers int 40 60
** wrong
**  275 109
** answer: 36.43, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  36.43
** groundtruth_num is (int, float)
** compare_two_numbers int 36.43 13
** wrong
**  275 110
** answer: 222.22, groundtruth_str: 450
** groundtruth_num is not None
** is_fraction:  222.22
** groundtruth_num is (int, float)
** compare_two_numbers int 222.22 450
** wrong
**  275 111
** answer: 6, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 8
** wrong
**  275 112
** answer: 260, groundtruth_str: 65
** groundtruth_num is not None
** is_fraction:  260
** groundtruth_num is (int, float)
** compare_two_numbers int 260 65
** wrong
**  275 113
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  276 113
** answer: 161, groundtruth_str: 161
** compare on lower
** correct
**  277 113
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  278 113
** answer: 52, groundtruth_str: 52
** compare on lower
** correct
**  279 113
** answer: 54, groundtruth_str: 22
** groundtruth_num is not None
** is_fraction:  54
** groundtruth_num is (int, float)
** compare_two_numbers int 54 22
** wrong
**  279 114
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  280 114
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  281 114
** answer: 137, groundtruth_str: 137
** compare on lower
** correct
**  282 114
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  283 114
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  284 114
** answer: 35, groundtruth_str: 35
** compare on lower
** correct
**  285 114
** answer: 8.65, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  8.65
** groundtruth_num is (int, float)
** compare_two_numbers int 8.65 12
** wrong
**  285 115
** answer: None(sincethereisnouniquesolution), groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  None(sincethereisnouniquesolution)
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  285 116
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  286 116
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  287 116
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  288 116
** answer: 804, groundtruth_str: 804
** compare on lower
** correct
**  289 116
** answer: 18800, groundtruth_str: 13000
** groundtruth_num is not None
** is_fraction:  18800
** groundtruth_num is (int, float)
** compare_two_numbers int 18800 13000
** wrong
**  289 117
** answer: 1, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 5
** wrong
**  289 118
** answer: 44, groundtruth_str: 44
** compare on lower
** correct
**  290 118
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  291 118
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  292 118
** answer: 63, groundtruth_str: 63
** compare on lower
** correct
**  293 118
** answer: N/A(sincethegiveninformationisincorrect), groundtruth_str: 327
** groundtruth_num is not None
** is_fraction:  N/A(sincethegiveninformationisincorrect)
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  293 119
** answer: 104.0, groundtruth_str: 39
** groundtruth_num is not None
** is_fraction:  104.0
** groundtruth_num is (int, float)
** compare_two_numbers int 104 39
** wrong
**  293 120
** answer: 2.5, groundtruth_str: 2.5
** compare on lower
** correct
**  294 120
** answer: 3.5, groundtruth_str: 3.5
** compare on lower
** correct
**  295 120
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  296 120
** answer: 0, groundtruth_str: 51
** groundtruth_num is not None
** is_fraction:  0
** groundtruth_num is (int, float)
** compare_two_numbers int 0 51
** wrong
**  296 121
** answer: 115, groundtruth_str: 115
** compare on lower
** correct
**  297 121
** answer: 420, groundtruth_str: 420
** compare on lower
** correct
**  298 121
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  299 121
** answer: 7200, groundtruth_str: 7200
** compare on lower
** correct
**  300 121
** answer: 0.16665, groundtruth_str: 0.165
** groundtruth_num is not None
** is_fraction:  0.16665
** groundtruth_num is (int, float)
** compare_two_numbers float 0.16665 0.165
** wrong
**  300 122
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  301 122
** answer: 2120, groundtruth_str: 2120
** compare on lower
** correct
**  302 122
** answer: 5000, groundtruth_str: 5000
** compare on lower
** correct
**  303 122
** answer: 2030, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  2030
** groundtruth_num is (int, float)
** compare_two_numbers int 2030 20
** wrong
**  303 123
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  304 123
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  305 123
** answer: 27, groundtruth_str: 1000
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers int 27 1000
** wrong
**  305 124
** answer: 61, groundtruth_str: 81
** groundtruth_num is not None
** is_fraction:  61
** groundtruth_num is (int, float)
** compare_two_numbers int 61 81
** wrong
**  305 125
** answer: 8.0, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  8.0
** groundtruth_num is (int, float)
** compare_two_numbers int 8 8
** correct
**  306 125
** answer: 8, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 7
** wrong
**  306 126
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  307 126
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  308 126
** answer: 300, groundtruth_str: 300
** compare on lower
** correct
**  309 126
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  310 126
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  311 126
** answer: 83.33, groundtruth_str: 83.33
** compare on lower
** correct
**  312 126
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  313 126
** answer: 137, groundtruth_str: 137
** compare on lower
** correct
**  314 126
** answer: 34, groundtruth_str: 34
** compare on lower
** correct
**  315 126
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  316 126
** answer: 69, groundtruth_str: 69
** compare on lower
** correct
**  317 126
** answer: 160, groundtruth_str: 160
** compare on lower
** correct
**  318 126
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  319 126
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  320 126
** answer: 340and151, groundtruth_str: 178
** groundtruth_num is not None
** is_fraction:  340and151
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  320 127
** answer: 32, groundtruth_str: 22
** groundtruth_num is not None
** is_fraction:  32
** groundtruth_num is (int, float)
** compare_two_numbers int 32 22
** wrong
**  320 128
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  321 128
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  322 128
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  323 128
** answer: 96, groundtruth_str: 96
** compare on lower
** correct
**  324 128
** answer: 5500, groundtruth_str: 5500
** compare on lower
** correct
**  325 128
** answer: 40.5, groundtruth_str: 1.35
** groundtruth_num is not None
** is_fraction:  40.5
** groundtruth_num is (int, float)
** compare_two_numbers float 40.5 1.35
** wrong
**  325 129
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  326 129
** answer: 427, groundtruth_str: 427
** compare on lower
** correct
**  327 129
** answer: 200, groundtruth_str: 200
** compare on lower
** correct
**  328 129
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  329 129
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  330 129
** answer: 2520.00, groundtruth_str: 2520
** groundtruth_num is not None
** is_fraction:  2520.00
** groundtruth_num is (int, float)
** compare_two_numbers int 2520 2520
** correct
**  331 129
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  332 129
** answer: 550014500, groundtruth_str: 5500
** groundtruth_num is not None
** is_fraction:  550014500
** groundtruth_num is (int, float)
** compare_two_numbers int 550014500 5500
** wrong
**  332 130
** answer: 208, groundtruth_str: 208
** compare on lower
** correct
**  333 130
** answer: 10.88, groundtruth_str: 16.85
** groundtruth_num is not None
** is_fraction:  10.88
** groundtruth_num is (int, float)
** compare_two_numbers float 10.88 16.85
** wrong
**  333 131
** answer: 24.48, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  24.48
** groundtruth_num is (int, float)
** compare_two_numbers int 24.48 26
** wrong
**  333 132
** answer: 102, groundtruth_str: 102
** compare on lower
** correct
**  334 132
** answer: 2.5, groundtruth_str: 2.5
** compare on lower
** correct
**  335 132
** answer: 299, groundtruth_str: 488
** groundtruth_num is not None
** is_fraction:  299
** groundtruth_num is (int, float)
** compare_two_numbers int 299 488
** wrong
**  335 133
** answer: 1400, groundtruth_str: 128
** groundtruth_num is not None
** is_fraction:  1400
** groundtruth_num is (int, float)
** compare_two_numbers int 1400 128
** wrong
**  335 134
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  336 134
** answer: 25.0, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  25.0
** groundtruth_num is (int, float)
** compare_two_numbers int 25 25
** correct
**  337 134
** answer: 290, groundtruth_str: 350
** groundtruth_num is not None
** is_fraction:  290
** groundtruth_num is (int, float)
** compare_two_numbers int 290 350
** wrong
**  337 135
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  338 135
** answer: 8000, groundtruth_str: 8000
** compare on lower
** correct
**  339 135
** answer: 116, groundtruth_str: 116
** compare on lower
** correct
**  340 135
** answer: nointegersolutionexists, groundtruth_str: 5.41
** groundtruth_num is not None
** is_fraction:  nointegersolutionexists
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  340 136
** answer: 3.0, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  3.0
** groundtruth_num is (int, float)
** compare_two_numbers int 3 3
** correct
**  341 136
** answer: 15.53, groundtruth_str: 15.62
** groundtruth_num is not None
** is_fraction:  15.53
** groundtruth_num is (int, float)
** compare_two_numbers float 15.53 15.62
** wrong
**  341 137
** answer: 425, groundtruth_str: 425
** compare on lower
** correct
**  342 137
** answer: 3800, groundtruth_str: 3200
** groundtruth_num is not None
** is_fraction:  3800
** groundtruth_num is (int, float)
** compare_two_numbers int 3800 3200
** wrong
**  342 138
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  343 138
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  344 138
** answer: 0.10, groundtruth_str: 0.05
** groundtruth_num is not None
** is_fraction:  0.10
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1 0.05
** wrong
**  344 139
** answer: 3.91, groundtruth_str: 3.25
** groundtruth_num is not None
** is_fraction:  3.91
** groundtruth_num is (int, float)
** compare_two_numbers float 3.91 3.25
** wrong
**  344 140
** answer: 122, groundtruth_str: 122
** compare on lower
** correct
**  345 140
** answer: 13.5, groundtruth_str: 13.5
** compare on lower
** correct
**  346 140
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  347 140
** answer: 20.0, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  20.0
** groundtruth_num is (int, float)
** compare_two_numbers int 20 20
** correct
**  348 140
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  349 140
** answer: 36, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  36
** groundtruth_num is (int, float)
** compare_two_numbers int 36 24
** wrong
**  349 141
** answer: 2.5, groundtruth_str: 2.5
** compare on lower
** correct
**  350 141
** answer: 0.21forthecostofeachappleand0.17forthecostofeachorange, groundtruth_str: 0.21
** groundtruth_num is not None
** is_fraction:  0.21forthecostofeachappleand0.17forthecostofeachorange
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  350 142
** answer: 3050, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  3050
** groundtruth_num is (int, float)
** compare_two_numbers int 3050 30
** wrong
**  350 143
** answer: 100.0, groundtruth_str: 100
** groundtruth_num is not None
** is_fraction:  100.0
** groundtruth_num is (int, float)
** compare_two_numbers int 100 100
** correct
**  351 143
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  352 143
** answer: 7000, groundtruth_str: 7000
** compare on lower
** correct
**  353 143
** answer: 18.4and17.6, groundtruth_str: 18.4
** groundtruth_num is not None
** is_fraction:  18.4and17.6
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  353 144
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  354 144
** answer: 35, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  35
** groundtruth_num is (int, float)
** compare_two_numbers int 35 20
** wrong
**  354 145
** answer: 76, groundtruth_str: 152
** groundtruth_num is not None
** is_fraction:  76
** groundtruth_num is (int, float)
** compare_two_numbers int 76 152
** wrong
**  354 146
** answer: 202, groundtruth_str: 202
** compare on lower
** correct
**  355 146
** answer: 30, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 12
** wrong
**  355 147
** answer: 59, groundtruth_str: 59
** compare on lower
** correct
**  356 147
** answer: 125, groundtruth_str: 95
** groundtruth_num is not None
** is_fraction:  125
** groundtruth_num is (int, float)
** compare_two_numbers int 125 95
** wrong
**  356 148
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  357 148
** answer: 6800.0, groundtruth_str: 8200
** groundtruth_num is not None
** is_fraction:  6800.0
** groundtruth_num is (int, float)
** compare_two_numbers int 6800 8200
** wrong
**  357 149
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  358 149
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  359 149
** answer: 2000, groundtruth_str: 2000
** compare on lower
** correct
**  360 149
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  361 149
** answer: 150, groundtruth_str: 75
** groundtruth_num is not None
** is_fraction:  150
** groundtruth_num is (int, float)
** compare_two_numbers int 150 75
** wrong
**  361 150
** answer: 99, groundtruth_str: 99
** compare on lower
** correct
**  362 150
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  363 150
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  364 150
BackVerify: 0
** most_common: ('8', 2), gold_ans: 8
** most_common: ('78.0', 1), gold_ans: 156
** most_common: ('11.2poundsofColombiancoffeebeansand28.8poundsofPeruviancoffeebeans', 2), gold_ans: 11.2
** most_common: ('583.35', 5), gold_ans: 583.3333
** most_common: ('31', 5), gold_ans: 19
** most_common: ('125.0', 1), gold_ans: 300
** most_common: ['none'], gold_ans: 5
** most_common: ('35hotdogsand52sodasweresold', 2), gold_ans: 35
** most_common: ('0.45', 1), gold_ans: 0.45
** most_common: ('0.3', 4), gold_ans: 0.3
** most_common: ('27.3', 1), gold_ans: 27.2
** most_common: ('20', 2), gold_ans: 20
** most_common: ['none'], gold_ans: 83
** most_common: ('6.0', 2), gold_ans: 12
** most_common: ('14', 2), gold_ans: 34
** most_common: ('2.67', 2), gold_ans: 8
** most_common: ('12bluecardsand8redcards', 2), gold_ans: 12
** most_common: ('5', 2), gold_ans: 5
** most_common: ('9', 4), gold_ans: 26
** most_common: ('4071.2', 2), gold_ans: 4072
** most_common: ('30,55', 1), gold_ans: 30
** most_common: ('90', 1), gold_ans: 80
** most_common: ('299', 4), gold_ans: 299
** most_common: ('127', 1), gold_ans: 25
** most_common: ('-2', 2), gold_ans: -10
** most_common: ('600400', 3), gold_ans: 600
** most_common: ('565(adulttickets)and40(studenttickets)', 1), gold_ans: 565
** most_common: ('700ModelAtoysand1000ModelBtoys', 1), gold_ans: 700
** most_common: ('22catfishdinnersand4ordersofpopcornshrimp', 1), gold_ans: 9
** most_common: ['none'], gold_ans: 1.85
** most_common: ('12ouncesof25%acidsolutionand18ouncesof50%acidsolution', 4), gold_ans: 18
** most_common: ('83', 3), gold_ans: 117
** most_common: ('0200-dollarviolinsand800300-dollarviolins', 1), gold_ans: 5
** most_common: ('0.1333forthecostofeachappleand0.2667forthecostofeachorange', 1), gold_ans: 0.2
** most_common: ('490', 3), gold_ans: 710
** most_common: ('48.0,52.0', 1), gold_ans: 48
** most_common: ('0.07', 1), gold_ans: 7
** most_common: ('16', 3), gold_ans: 16
** most_common: ['none'], gold_ans: 9.99
** most_common: ('901', 1), gold_ans: 887
** most_common: ('7.01', 2), gold_ans: 7.03
** most_common: ('11,250', 1), gold_ans: 8695.65
** most_common: ('3000and5000', 2), gold_ans: 3000
** most_common: ('140.0', 1), gold_ans: 140
** most_common: ('220', 1), gold_ans: 180
** most_common: ('320poundsofsoybeanmealand40poundsofcornmeal', 3), gold_ans: 320
** most_common: ['none'], gold_ans: 70
** most_common: ('43.48', 1), gold_ans: 50
** most_common: ('417', 5), gold_ans: 417
** most_common: ['none'], gold_ans: 104
BackVerify: 50
** most_common: ('-1(sincetheproblemisinconsistent,wecannotfindavalidsolution)', 1), gold_ans: 219
** most_common: ('22.84', 1), gold_ans: 15
** most_common: ('70', 2), gold_ans: 70
** most_common: ('3100', 2), gold_ans: 3100
** most_common: ['none'], gold_ans: 275
** most_common: ('9goatsand6ducks', 2), gold_ans: 9
** most_common: ('310', 5), gold_ans: 77
** most_common: ('2.25', 1), gold_ans: 2.12
** most_common: ('65', 1), gold_ans: 55
** most_common: ('6.11', 1), gold_ans: 6.11
** most_common: ('770.67', 1), gold_ans: 672
** most_common: ('600', 1), gold_ans: 1100
** most_common: ('530', 1), gold_ans: 530
** most_common: ('7', 3), gold_ans: 7
** most_common: ('104', 2), gold_ans: 43
** most_common: ('3.62', 4), gold_ans: 3.615
** most_common: ('0.83', 1), gold_ans: 30
** most_common: ('5100', 4), gold_ans: 4700
** most_common: ('8', 1), gold_ans: 7
** most_common: ['none'], gold_ans: 16
** most_common: ('14', 4), gold_ans: 25
** most_common: ('850', 3), gold_ans: 100
** most_common: ('-4.5', 2), gold_ans: -4.5
** most_common: ('6,262', 1), gold_ans: 6258
** most_common: ('98.0', 1), gold_ans: 98
** most_common: ('236adultsand342children', 3), gold_ans: 236
** most_common: ('1500', 1), gold_ans: 1500
** most_common: ('508', 1), gold_ans: 525
** most_common: ('13,11', 2), gold_ans: 13
** most_common: ('(79-3y)/4', 1), gold_ans: 13
** most_common: ['none'], gold_ans: 80
** most_common: ('1.6', 2), gold_ans: 2.2857
** most_common: ('19and43', 2), gold_ans: 19
** most_common: ('"Thereisnosolution"', 1), gold_ans: 77.4
** most_common: ('80,100', 1), gold_ans: 100
** most_common: ('0.24975', 3), gold_ans: 0.25
** most_common: ['none'], gold_ans: 2
** most_common: ('740', 1), gold_ans: 50
** most_common: ('N/A(sincethegiveninformationisinconsistent)', 1), gold_ans: 4
** most_common: ('16', 1), gold_ans: 18
** most_common: ('269', 2), gold_ans: 294
** most_common: ('23and9', 2), gold_ans: 23
** most_common: ('5.65', 4), gold_ans: 5.647
** most_common: ('1910', 2), gold_ans: 1910
** most_common: ('4400', 3), gold_ans: 4400
** most_common: ('29and109', 3), gold_ans: 29
** most_common: ('36.45', 7), gold_ans: 36.46
** most_common: ('9', 1), gold_ans: 9
** most_common: ('14', 4), gold_ans: 14
** most_common: ('66.0', 4), gold_ans: 42
BackVerify: 100
** most_common: ('173', 1), gold_ans: 17
** most_common: ['none'], gold_ans: 10
** most_common: ('4191', 1), gold_ans: 4180
** most_common: ('25', 2), gold_ans: 14
** most_common: ('8.00foranadultticketand15.00forastudentticket', 2), gold_ans: 8
** most_common: ('14', 1), gold_ans: 14
** most_common: ('6', 2), gold_ans: 4
** most_common: ('59.67', 1), gold_ans: 46.61607
** most_common: ('60', 4), gold_ans: 60
** most_common: ('13', 1), gold_ans: 13
** most_common: ('400', 2), gold_ans: 450
** most_common: ('8', 3), gold_ans: 8
** most_common: ('65', 1), gold_ans: 65
** most_common: ('54', 1), gold_ans: 22
** most_common: ('8.65', 1), gold_ans: 12
** most_common: ('0.0,8.57', 1), gold_ans: 4
** most_common: ['none'], gold_ans: 13000
** most_common: ('1', 5), gold_ans: 5
** most_common: ('327', 1), gold_ans: 327
** most_common: ('104.0', 5), gold_ans: 39
** most_common: ('93', 1), gold_ans: 51
** most_common: ('0.16665', 6), gold_ans: 0.165
** most_common: ('20,30', 1), gold_ans: 20
** most_common: ('1000', 1), gold_ans: 1000
** most_common: ('155', 1), gold_ans: 81
** most_common: ('8', 5), gold_ans: 7
** most_common: ('100and150', 1), gold_ans: 178
** most_common: ('32', 3), gold_ans: 22
** most_common: ('1.35(forregulargasoline)and1.57(forpremiumgasoline)', 1), gold_ans: 1.35
** most_common: ('550014500', 1), gold_ans: 5500
** most_common: ['none'], gold_ans: 16.85
** most_common: ('24.48', 2), gold_ans: 26
** most_common: ('500', 1), gold_ans: 488
** most_common: ('128.0', 1), gold_ans: 128
** most_common: ('350', 2), gold_ans: 350
** most_common: ('nointegersolutionexists', 1), gold_ans: 5.41
** most_common: ('15.608', 1), gold_ans: 15.62
** most_common: ('2691.5', 1), gold_ans: 3200
** most_common: ('0.10', 1), gold_ans: 0.05
** most_common: ('3.25forthecostofonecupofcoffeeand1.50forthecostofonebagel', 1), gold_ans: 3.25
** most_common: ('24', 3), gold_ans: 24
** most_common: ('0.21forthecostofeachappleand0.17forthecostofeachorange', 1), gold_ans: 0.21
** most_common: ('80', 1), gold_ans: 30
** most_common: ('18.4and17.6', 4), gold_ans: 18.4
** most_common: ('35', 6), gold_ans: 20
** most_common: ('152', 3), gold_ans: 152
** most_common: ['none'], gold_ans: 12
** most_common: ('125', 5), gold_ans: 95
** most_common: ('6800.0', 2), gold_ans: 8200
** most_common: ('75', 5), gold_ans: 75
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  1 0
** answer: 78.0, groundtruth_str: 156
** groundtruth_num is not None
** is_fraction:  78.0
** groundtruth_num is (int, float)
** compare_two_numbers int 78 156
** wrong
**  1 1
** answer: 11.2poundsofColombiancoffeebeansand28.8poundsofPeruviancoffeebeans, groundtruth_str: 11.2
** groundtruth_num is not None
** is_fraction:  11.2poundsofColombiancoffeebeansand28.8poundsofPeruviancoffeebeans
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1 2
** answer: 583.35, groundtruth_str: 583.3333
** groundtruth_num is not None
** is_fraction:  583.35
** groundtruth_num is (int, float)
** compare_two_numbers float 583.35 583.3333
** wrong
**  1 3
** answer: 31, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  31
** groundtruth_num is (int, float)
** compare_two_numbers int 31 19
** wrong
**  1 4
** answer: 125.0, groundtruth_str: 300
** groundtruth_num is not None
** is_fraction:  125.0
** groundtruth_num is (int, float)
** compare_two_numbers int 125 300
** wrong
**  1 5
** answer: none, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1 6
** answer: 35hotdogsand52sodasweresold, groundtruth_str: 35
** groundtruth_num is not None
** is_fraction:  35hotdogsand52sodasweresold
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1 7
** answer: 0.45, groundtruth_str: 0.45
** compare on lower
** correct
**  2 7
** answer: 0.3, groundtruth_str: 0.3
** compare on lower
** correct
**  3 7
** answer: 27.3, groundtruth_str: 27.2
** groundtruth_num is not None
** is_fraction:  27.3
** groundtruth_num is (int, float)
** compare_two_numbers float 27.3 27.2
** wrong
**  3 8
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  4 8
** answer: none, groundtruth_str: 83
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  4 9
** answer: 6.0, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  6.0
** groundtruth_num is (int, float)
** compare_two_numbers int 6 12
** wrong
**  4 10
** answer: 14, groundtruth_str: 34
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers int 14 34
** wrong
**  4 11
** answer: 2.67, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  2.67
** groundtruth_num is (int, float)
** compare_two_numbers int 2.67 8
** wrong
**  4 12
** answer: 12bluecardsand8redcards, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  12bluecardsand8redcards
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  4 13
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  5 13
** answer: 9, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 26
** wrong
**  5 14
** answer: 4071.2, groundtruth_str: 4072
** groundtruth_num is not None
** is_fraction:  4071.2
** groundtruth_num is (int, float)
** compare_two_numbers int 4071.2 4072
** wrong
**  5 15
** answer: 30,55, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  30,55
** groundtruth_num is (int, float)
** compare_two_numbers int 30 30
** correct
**  6 15
** answer: 90, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  90
** groundtruth_num is (int, float)
** compare_two_numbers int 90 80
** wrong
**  6 16
** answer: 299, groundtruth_str: 299
** compare on lower
** correct
**  7 16
** answer: 127, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  127
** groundtruth_num is (int, float)
** compare_two_numbers int 127 25
** wrong
**  7 17
** answer: -2, groundtruth_str: -10
** groundtruth_num is not None
** is_fraction:  -2
** groundtruth_num is (int, float)
** compare_two_numbers int -2 -10
** wrong
**  7 18
** answer: 600400, groundtruth_str: 600
** groundtruth_num is not None
** is_fraction:  600400
** groundtruth_num is (int, float)
** compare_two_numbers int 600400 600
** wrong
**  7 19
** answer: 565(adulttickets)and40(studenttickets), groundtruth_str: 565
** compare on lower in
** correct
**  8 19
** answer: 700ModelAtoysand1000ModelBtoys, groundtruth_str: 700
** groundtruth_num is not None
** is_fraction:  700ModelAtoysand1000ModelBtoys
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  8 20
** answer: 22catfishdinnersand4ordersofpopcornshrimp, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  22catfishdinnersand4ordersofpopcornshrimp
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  8 21
** answer: none, groundtruth_str: 1.85
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  8 22
** answer: 12ouncesof25%acidsolutionand18ouncesof50%acidsolution, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  12ouncesof25%acidsolutionand18ouncesof50%acidsolution
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  8 23
** answer: 83, groundtruth_str: 117
** groundtruth_num is not None
** is_fraction:  83
** groundtruth_num is (int, float)
** compare_two_numbers int 83 117
** wrong
**  8 24
** answer: 0200-dollarviolinsand800300-dollarviolins, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  0200-dollarviolinsand800300-dollarviolins
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  8 25
** answer: 0.1333forthecostofeachappleand0.2667forthecostofeachorange, groundtruth_str: 0.2
** groundtruth_num is not None
** is_fraction:  0.1333forthecostofeachappleand0.2667forthecostofeachorange
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  8 26
** answer: 490, groundtruth_str: 710
** groundtruth_num is not None
** is_fraction:  490
** groundtruth_num is (int, float)
** compare_two_numbers int 490 710
** wrong
**  8 27
** answer: 48.0,52.0, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  48.0,52.0
** groundtruth_num is (int, float)
** compare_two_numbers int 48 48
** correct
**  9 27
** answer: 0.07, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  0.07
** groundtruth_num is (int, float)
** compare_two_numbers int 0.07 7
** wrong
**  9 28
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  10 28
** answer: none, groundtruth_str: 9.99
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  10 29
** answer: 901, groundtruth_str: 887
** groundtruth_num is not None
** is_fraction:  901
** groundtruth_num is (int, float)
** compare_two_numbers int 901 887
** wrong
**  10 30
** answer: 7.01, groundtruth_str: 7.03
** groundtruth_num is not None
** is_fraction:  7.01
** groundtruth_num is (int, float)
** compare_two_numbers float 7.01 7.03
** wrong
**  10 31
** answer: 11,250, groundtruth_str: 8695.65
** groundtruth_num is not None
** is_fraction:  11,250
** groundtruth_num is (int, float)
** compare_two_numbers float 11250 8695.65
** wrong
**  10 32
** answer: 3000and5000, groundtruth_str: 3000
** groundtruth_num is not None
** is_fraction:  3000and5000
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  10 33
** answer: 140.0, groundtruth_str: 140
** groundtruth_num is not None
** is_fraction:  140.0
** groundtruth_num is (int, float)
** compare_two_numbers int 140 140
** correct
**  11 33
** answer: 220, groundtruth_str: 180
** groundtruth_num is not None
** is_fraction:  220
** groundtruth_num is (int, float)
** compare_two_numbers int 220 180
** wrong
**  11 34
** answer: 320poundsofsoybeanmealand40poundsofcornmeal, groundtruth_str: 320
** groundtruth_num is not None
** is_fraction:  320poundsofsoybeanmealand40poundsofcornmeal
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  11 35
** answer: none, groundtruth_str: 70
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  11 36
** answer: 43.48, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  43.48
** groundtruth_num is (int, float)
** compare_two_numbers int 43.48 50
** wrong
**  11 37
** answer: 417, groundtruth_str: 417
** compare on lower
** correct
**  12 37
** answer: none, groundtruth_str: 104
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  12 38
** answer: -1(sincetheproblemisinconsistent,wecannotfindavalidsolution), groundtruth_str: 219
** groundtruth_num is not None
** is_fraction:  -1(sincetheproblemisinconsistent,wecannotfindavalidsolution)
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  12 39
** answer: 22.84, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  22.84
** groundtruth_num is (int, float)
** compare_two_numbers int 22.84 15
** wrong
**  12 40
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  13 40
** answer: 3100, groundtruth_str: 3100
** compare on lower
** correct
**  14 40
** answer: none, groundtruth_str: 275
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  14 41
** answer: 9goatsand6ducks, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  9goatsand6ducks
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  14 42
** answer: 310, groundtruth_str: 77
** groundtruth_num is not None
** is_fraction:  310
** groundtruth_num is (int, float)
** compare_two_numbers int 310 77
** wrong
**  14 43
** answer: 2.25, groundtruth_str: 2.12
** groundtruth_num is not None
** is_fraction:  2.25
** groundtruth_num is (int, float)
** compare_two_numbers float 2.25 2.12
** wrong
**  14 44
** answer: 65, groundtruth_str: 55
** groundtruth_num is not None
** is_fraction:  65
** groundtruth_num is (int, float)
** compare_two_numbers int 65 55
** wrong
**  14 45
** answer: 6.11, groundtruth_str: 6.11
** compare on lower
** correct
**  15 45
** answer: 770.67, groundtruth_str: 672
** groundtruth_num is not None
** is_fraction:  770.67
** groundtruth_num is (int, float)
** compare_two_numbers int 770.67 672
** wrong
**  15 46
** answer: 600, groundtruth_str: 1100
** groundtruth_num is not None
** is_fraction:  600
** groundtruth_num is (int, float)
** compare_two_numbers int 600 1100
** wrong
**  15 47
** answer: 530, groundtruth_str: 530
** compare on lower
** correct
**  16 47
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  17 47
** answer: 104, groundtruth_str: 43
** groundtruth_num is not None
** is_fraction:  104
** groundtruth_num is (int, float)
** compare_two_numbers int 104 43
** wrong
**  17 48
** answer: 3.62, groundtruth_str: 3.615
** groundtruth_num is not None
** is_fraction:  3.62
** groundtruth_num is (int, float)
** compare_two_numbers float 3.62 3.615
** wrong
**  17 49
** answer: 0.83, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  0.83
** groundtruth_num is (int, float)
** compare_two_numbers int 0.83 30
** wrong
**  17 50
** answer: 5100, groundtruth_str: 4700
** groundtruth_num is not None
** is_fraction:  5100
** groundtruth_num is (int, float)
** compare_two_numbers int 5100 4700
** wrong
**  17 51
** answer: 8, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 7
** wrong
**  17 52
** answer: none, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  17 53
** answer: 14, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers int 14 25
** wrong
**  17 54
** answer: 850, groundtruth_str: 100
** groundtruth_num is not None
** is_fraction:  850
** groundtruth_num is (int, float)
** compare_two_numbers int 850 100
** wrong
**  17 55
** answer: -4.5, groundtruth_str: -4.5
** compare on lower
** correct
**  18 55
** answer: 6,262, groundtruth_str: 6258
** groundtruth_num is not None
** is_fraction:  6,262
** groundtruth_num is (int, float)
** compare_two_numbers int 6262 6258
** wrong
**  18 56
** answer: 98.0, groundtruth_str: 98
** groundtruth_num is not None
** is_fraction:  98.0
** groundtruth_num is (int, float)
** compare_two_numbers int 98 98
** correct
**  19 56
** answer: 236adultsand342children, groundtruth_str: 236
** groundtruth_num is not None
** is_fraction:  236adultsand342children
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  19 57
** answer: 1500, groundtruth_str: 1500
** compare on lower
** correct
**  20 57
** answer: 508, groundtruth_str: 525
** groundtruth_num is not None
** is_fraction:  508
** groundtruth_num is (int, float)
** compare_two_numbers int 508 525
** wrong
**  20 58
** answer: 13,11, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  13,11
** groundtruth_num is (int, float)
** compare_two_numbers int 13 13
** correct
**  21 58
** answer: (79-3y)/4, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  (79-3y)/4
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  21 59
** answer: none, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  21 60
** answer: 1.6, groundtruth_str: 2.2857
** groundtruth_num is not None
** is_fraction:  1.6
** groundtruth_num is (int, float)
** compare_two_numbers float 1.6 2.2857
** wrong
**  21 61
** answer: 19and43, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  19and43
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  21 62
** answer: "Thereisnosolution", groundtruth_str: 77.4
** groundtruth_num is not None
** is_fraction:  "Thereisnosolution"
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  21 63
** answer: 80,100, groundtruth_str: 100
** groundtruth_num is not None
** is_fraction:  80,100
** groundtruth_num is (int, float)
** compare_two_numbers int 80100 100
** wrong
**  21 64
** answer: 0.24975, groundtruth_str: 0.25
** groundtruth_num is not None
** is_fraction:  0.24975
** groundtruth_num is (int, float)
** compare_two_numbers float 0.24975 0.25
** wrong
**  21 65
** answer: none, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  21 66
** answer: 740, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  740
** groundtruth_num is (int, float)
** compare_two_numbers int 740 50
** wrong
**  21 67
** answer: N/A(sincethegiveninformationisinconsistent), groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  N/A(sincethegiveninformationisinconsistent)
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  21 68
** answer: 16, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 18
** wrong
**  21 69
** answer: 269, groundtruth_str: 294
** groundtruth_num is not None
** is_fraction:  269
** groundtruth_num is (int, float)
** compare_two_numbers int 269 294
** wrong
**  21 70
** answer: 23and9, groundtruth_str: 23
** groundtruth_num is not None
** is_fraction:  23and9
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  21 71
** answer: 5.65, groundtruth_str: 5.647
** groundtruth_num is not None
** is_fraction:  5.65
** groundtruth_num is (int, float)
** compare_two_numbers float 5.65 5.647
** wrong
**  21 72
** answer: 1910, groundtruth_str: 1910
** compare on lower
** correct
**  22 72
** answer: 4400, groundtruth_str: 4400
** compare on lower
** correct
**  23 72
** answer: 29and109, groundtruth_str: 29
** groundtruth_num is not None
** is_fraction:  29and109
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  23 73
** answer: 36.45, groundtruth_str: 36.46
** groundtruth_num is not None
** is_fraction:  36.45
** groundtruth_num is (int, float)
** compare_two_numbers float 36.45 36.46
** wrong
**  23 74
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  24 74
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  25 74
** answer: 66.0, groundtruth_str: 42
** groundtruth_num is not None
** is_fraction:  66.0
** groundtruth_num is (int, float)
** compare_two_numbers int 66 42
** wrong
**  25 75
** answer: 173, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  173
** groundtruth_num is (int, float)
** compare_two_numbers int 173 17
** wrong
**  25 76
** answer: none, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  25 77
** answer: 4191, groundtruth_str: 4180
** groundtruth_num is not None
** is_fraction:  4191
** groundtruth_num is (int, float)
** compare_two_numbers int 4191 4180
** wrong
**  25 78
** answer: 25, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  25
** groundtruth_num is (int, float)
** compare_two_numbers int 25 14
** wrong
**  25 79
** answer: 8.00foranadultticketand15.00forastudentticket, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  8.00foranadultticketand15.00forastudentticket
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  25 80
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  26 80
** answer: 6, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 4
** wrong
**  26 81
** answer: 59.67, groundtruth_str: 46.61607
** groundtruth_num is not None
** is_fraction:  59.67
** groundtruth_num is (int, float)
** compare_two_numbers float 59.67 46.61607
** wrong
**  26 82
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  27 82
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  28 82
** answer: 400, groundtruth_str: 450
** groundtruth_num is not None
** is_fraction:  400
** groundtruth_num is (int, float)
** compare_two_numbers int 400 450
** wrong
**  28 83
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  29 83
** answer: 65, groundtruth_str: 65
** compare on lower
** correct
**  30 83
** answer: 54, groundtruth_str: 22
** groundtruth_num is not None
** is_fraction:  54
** groundtruth_num is (int, float)
** compare_two_numbers int 54 22
** wrong
**  30 84
** answer: 8.65, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  8.65
** groundtruth_num is (int, float)
** compare_two_numbers int 8.65 12
** wrong
**  30 85
** answer: 0.0,8.57, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  0.0,8.57
** groundtruth_num is (int, float)
** compare_two_numbers int 0 4
** wrong
**  30 86
** answer: none, groundtruth_str: 13000
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  30 87
** answer: 1, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 5
** wrong
**  30 88
** answer: 327, groundtruth_str: 327
** compare on lower
** correct
**  31 88
** answer: 104.0, groundtruth_str: 39
** groundtruth_num is not None
** is_fraction:  104.0
** groundtruth_num is (int, float)
** compare_two_numbers int 104 39
** wrong
**  31 89
** answer: 93, groundtruth_str: 51
** groundtruth_num is not None
** is_fraction:  93
** groundtruth_num is (int, float)
** compare_two_numbers int 93 51
** wrong
**  31 90
** answer: 0.16665, groundtruth_str: 0.165
** groundtruth_num is not None
** is_fraction:  0.16665
** groundtruth_num is (int, float)
** compare_two_numbers float 0.16665 0.165
** wrong
**  31 91
** answer: 20,30, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  20,30
** groundtruth_num is (int, float)
** compare_two_numbers int 20 20
** correct
**  32 91
** answer: 1000, groundtruth_str: 1000
** compare on lower
** correct
**  33 91
** answer: 155, groundtruth_str: 81
** groundtruth_num is not None
** is_fraction:  155
** groundtruth_num is (int, float)
** compare_two_numbers int 155 81
** wrong
**  33 92
** answer: 8, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 7
** wrong
**  33 93
** answer: 100and150, groundtruth_str: 178
** groundtruth_num is not None
** is_fraction:  100and150
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  33 94
** answer: 32, groundtruth_str: 22
** groundtruth_num is not None
** is_fraction:  32
** groundtruth_num is (int, float)
** compare_two_numbers int 32 22
** wrong
**  33 95
** answer: 1.35(forregulargasoline)and1.57(forpremiumgasoline), groundtruth_str: 1.35
** compare on lower in
** correct
**  34 95
** answer: 550014500, groundtruth_str: 5500
** groundtruth_num is not None
** is_fraction:  550014500
** groundtruth_num is (int, float)
** compare_two_numbers int 550014500 5500
** wrong
**  34 96
** answer: none, groundtruth_str: 16.85
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  34 97
** answer: 24.48, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  24.48
** groundtruth_num is (int, float)
** compare_two_numbers int 24.48 26
** wrong
**  34 98
** answer: 500, groundtruth_str: 488
** groundtruth_num is not None
** is_fraction:  500
** groundtruth_num is (int, float)
** compare_two_numbers int 500 488
** wrong
**  34 99
** answer: 128.0, groundtruth_str: 128
** groundtruth_num is not None
** is_fraction:  128.0
** groundtruth_num is (int, float)
** compare_two_numbers int 128 128
** correct
**  35 99
** answer: 350, groundtruth_str: 350
** compare on lower
** correct
**  36 99
** answer: nointegersolutionexists, groundtruth_str: 5.41
** groundtruth_num is not None
** is_fraction:  nointegersolutionexists
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  36 100
** answer: 15.608, groundtruth_str: 15.62
** groundtruth_num is not None
** is_fraction:  15.608
** groundtruth_num is (int, float)
** compare_two_numbers float 15.608 15.62
** wrong
**  36 101
** answer: 2691.5, groundtruth_str: 3200
** groundtruth_num is not None
** is_fraction:  2691.5
** groundtruth_num is (int, float)
** compare_two_numbers int 2691.5 3200
** wrong
**  36 102
** answer: 0.10, groundtruth_str: 0.05
** groundtruth_num is not None
** is_fraction:  0.10
** groundtruth_num is (int, float)
** compare_two_numbers float 0.1 0.05
** wrong
**  36 103
** answer: 3.25forthecostofonecupofcoffeeand1.50forthecostofonebagel, groundtruth_str: 3.25
** groundtruth_num is not None
** is_fraction:  3.25forthecostofonecupofcoffeeand1.50forthecostofonebagel
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  36 104
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  37 104
** answer: 0.21forthecostofeachappleand0.17forthecostofeachorange, groundtruth_str: 0.21
** groundtruth_num is not None
** is_fraction:  0.21forthecostofeachappleand0.17forthecostofeachorange
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  37 105
** answer: 80, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  80
** groundtruth_num is (int, float)
** compare_two_numbers int 80 30
** wrong
**  37 106
** answer: 18.4and17.6, groundtruth_str: 18.4
** groundtruth_num is not None
** is_fraction:  18.4and17.6
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  37 107
** answer: 35, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  35
** groundtruth_num is (int, float)
** compare_two_numbers int 35 20
** wrong
**  37 108
** answer: 152, groundtruth_str: 152
** compare on lower
** correct
**  38 108
** answer: none, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  38 109
** answer: 125, groundtruth_str: 95
** groundtruth_num is not None
** is_fraction:  125
** groundtruth_num is (int, float)
** compare_two_numbers int 125 95
** wrong
**  38 110
** answer: 6800.0, groundtruth_str: 8200
** groundtruth_num is not None
** is_fraction:  6800.0
** groundtruth_num is (int, float)
** compare_two_numbers int 6800 8200
** wrong
**  38 111
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  39 111
Second Accuracy:  0.26
Accuracy:  0.7840466926070039
