INFO 09-18 07:42:53 llm_engine.py:174] Initializing an LLM engine (v0.5.4) with config: model='/cpfs/29f69eb5e2e60f26/user/sft_intern/slz/Qwen2-7B-Instruct', speculative_config=None, tokenizer='/cpfs/29f69eb5e2e60f26/user/sft_intern/slz/Qwen2-7B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None), seed=0, served_model_name=/cpfs/29f69eb5e2e60f26/user/sft_intern/slz/Qwen2-7B-Instruct, use_v2_block_manager=False, enable_prefix_caching=False)
INFO 09-18 07:42:53 model_runner.py:720] Starting to load model /cpfs/29f69eb5e2e60f26/user/sft_intern/slz/Qwen2-7B-Instruct...
INFO 09-18 07:43:08 model_runner.py:732] Loading model weights took 14.2487 GB
INFO 09-18 07:43:10 gpu_executor.py:102] # GPU blocks: 61183, # CPU blocks: 4681
INFO 09-18 07:43:12 model_runner.py:1024] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 09-18 07:43:12 model_runner.py:1028] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 09-18 07:43:21 model_runner.py:1225] Graph capturing finished in 9 secs.
{'question': "Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", 'tree_solution': [["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "STEP: First, let's calculate the number of duck eggs Janet has left after eating 3 for breakfast and baking 4 muffins, which is a total of 7 duck eggs.", 'STEP: Since Janet lays 16 eggs per day and she eats 3 for breakfast and bakes 4 muffins, she uses a total of 7 eggs (3 + 4 = 7). To find the number of eggs left, subtract 7 from the total number of eggs laid: 16 - 7 = ?', 'STEP: 16 - 7 = ?', 'STEP: 16 - 7 = 9', 'STEP: Subtract 7 from the total number of eggs laid:', "Here is the solution to the given question:\n\nSOLUTION:\n\nJanet's ducks lay 16 eggs per day. She eats 3 for breakfast and bakes 4 muffins, which is a total of 7 duck eggs. To find the number of eggs left, we need to subtract 7 from the total number of eggs laid:\n\n16 - 7 = ?\n\nTo solve this, we can subtract 7 from 16:\n\n16 - 7 = 9\n\nSo, Janet has 9 duck eggs left after eating 3 for breakfast and baking 4 muffins.\n\nShe sells the remainder at the farmers' market daily for $2 per fresh duck egg. To find out how much she makes, we need to multiply the number of eggs left by the price per egg:\n\n9 eggs × $2 per egg = ?\n\nTo solve this, we can multiply 9 by 2:\n\n9 × 2 = 18\n\nTherefore, Janet makes $18 every day at the farmers' market.\n\nFINAL ANSWER: The answer is 18."], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "STEP: First, let's calculate the number of duck eggs Janet has left after eating 3 for breakfast and baking 4 muffins, which is a total of 7 duck eggs.", 'STEP: Since Janet lays 16 eggs per day and she eats 3 for breakfast and bakes 4 muffins, she uses a total of 7 eggs (3 + 4 = 7). To find the number of eggs left, subtract 7 from the total number of eggs laid: 16 - 7 = ?', 'STEP: 16 - 7 = ?', 'STEP: 16 - 7 = 9', "SOLUTION:\n\nJanet's ducks lay 16 eggs per day. She eats 3 eggs for breakfast and bakes 4 muffins, which is a total of 7 eggs. To find the number of eggs left, we subtract the number of eggs used (7) from the total number of eggs laid (16).\n\n16 - 7 = 9\n\nThis means Janet has 9 eggs left. She sells these eggs at the farmers' market for $2 per egg. To find the total amount of money she makes, we multiply the number of eggs left (9) by the price per egg ($2).\n\n9 x 2 = 18\n\nFINAL ANSWER: The answer is 18."], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "STEP: First, let's calculate the number of duck eggs Janet has left after eating 3 for breakfast and baking 4 muffins, which is a total of 7 duck eggs.", 'STEP: Since Janet lays 16 eggs per day and she eats 3 for breakfast and bakes 4 muffins, she uses a total of 7 eggs (3 + 4 = 7). To find the number of eggs left, subtract 7 from the total number of eggs laid: 16 - 7 = ?', 'STEP: 16 - 7 = ?', "SOLUTION:\n\nJanet's ducks lay 16 eggs per day. She eats 3 eggs for breakfast and bakes 4 muffins, which is a total of 7 eggs. To find the number of eggs left, subtract 7 from the total number of eggs laid: 16 - 7 = ?\n\nTo perform this subtraction, I will subtract 7 from 16:\n\n16 - 7 = 9\n\nSo, Janet has 9 duck eggs left after eating 3 for breakfast and baking 4 muffins.\n\nFINAL ANSWER: The answer is 9"], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "STEP: First, let's calculate the number of duck eggs Janet has left after eating 3 for breakfast and baking 4 muffins, which is a total of 7 duck eggs.", 'STEP: Since Janet lays 16 eggs per day and she eats 3 for breakfast and bakes 4 muffins, she uses a total of 7 eggs (3 + 4 = 7). To find the number of eggs left, subtract 7 from the total number of eggs laid: 16 - 7 = ?', "SOLUTION:\n\nFirst, let's calculate the number of duck eggs Janet has left after eating 3 for breakfast and baking 4 muffins, which is a total of 7 duck eggs. Since Janet lays 16 eggs per day and she eats 3 for breakfast and bakes 4 muffins, she uses a total of 7 eggs (3 + 4 = 7). To find the number of eggs left, subtract 7 from the total number of eggs laid: 16 - 7 = 9\n\nJanet has 9 duck eggs left. She sells them at the farmers' market for $2 per fresh duck egg. To find the total amount she makes, multiply the number of eggs left by the price per egg: 9 x 2 = 18\n\nFINAL ANSWER: The answer is 18."], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "STEP: First, let's calculate the number of duck eggs Janet has left after eating 3 for breakfast and baking 4 muffins, which is a total of 7 duck eggs.", "SOLUTION:\n\nJanet's ducks lay 16 eggs per day. She eats 3 eggs for breakfast, and bakes muffins using 4 eggs. This means she uses a total of 7 eggs (3 + 4) for breakfast and baking muffins.\n\nTo find the number of eggs left, we subtract the number of eggs used from the total number of eggs laid:\n\n16 (total eggs) - 7 (eggs used) = 9\n\nSo, Janet has 9 eggs left after eating 3 for breakfast and baking 4 muffins.\n\nShe sells the remaining 9 eggs at the farmers' market for $2 per egg. To find the total amount she makes, we multiply the number of eggs sold by the price per egg:\n\n9 (eggs sold) × $2 (price per egg) = $18\n\nFINAL ANSWER: The answer is 18."], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "SOLUTION:\nJanet's ducks lay 16 eggs per day. She eats 3 eggs for breakfast, and bakes 4 eggs into muffins. This means she has 16 - 3 - 4 = 9 eggs left to sell.\n\nSince she sells each egg for $2, her daily profit is 9 eggs x $2 per egg = $18.\n\nFINAL ANSWER: The answer is 18."], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "Here is the clarified question:\n\nCLARIFIED QUESTION: What is the total amount of money, in dollars, that Janet makes by selling the remaining duck eggs at the farmers' market every day, given that she lays 16 eggs per day, eats 3 for breakfast, and bakes 4 muffins for her friends?", 'STEP: First, determine the number of duck eggs left over after Janet eats 3 for breakfast and bakes 4 muffins for her friends. This can be done by subtracting the number of eggs eaten and baked from the total number of eggs laid per day: 16 - 3 - 4 = ?', 'STEP: 16 - 3 - 4 = ?', 'STEP: 16 - 3 - 4 =', 'STEP: 16 - 3 - 4 =', 'STEP: 16 - 3 =', "SOLUTION:\n\nJanet lays 16 eggs per day. She eats 3 for breakfast and bakes 4 muffins for her friends, which means she uses a total of 3 + 4 = 7 eggs. To find the number of eggs left over, we subtract the number of eggs used from the total number of eggs laid:\n\n16 - 7 = 9\n\nSo, Janet has 9 eggs left over to sell at the farmers' market. She sells each egg for $2, so she makes a total of:\n\n9 x 2 = 18\n\ndollars by selling the remaining duck eggs.\n\nFINAL ANSWER: The answer is 18."], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "Here is the clarified question:\n\nCLARIFIED QUESTION: What is the total amount of money, in dollars, that Janet makes by selling the remaining duck eggs at the farmers' market every day, given that she lays 16 eggs per day, eats 3 for breakfast, and bakes 4 muffins for her friends?", 'STEP: First, determine the number of duck eggs left over after Janet eats 3 for breakfast and bakes 4 muffins for her friends. This can be done by subtracting the number of eggs eaten and baked from the total number of eggs laid per day: 16 - 3 - 4 = ?', 'STEP: 16 - 3 - 4 = ?', 'STEP: 16 - 3 - 4 =', 'STEP: 16 - 3 - 4 =', 'SOLUTION:\n\nFirst, we need to determine the number of duck eggs left over after Janet eats 3 for breakfast and bakes 4 muffins for her friends. This can be done by subtracting the number of eggs eaten and baked from the total number of eggs laid per day:\n\n16 - 3 - 4 = ?\n\nTo evaluate this expression, we start by subtracting 3 from 16:\n16 - 3 = 13\n\nThen, we subtract 4 from the result:\n13 - 4 = 9\n\nSo, the number of duck eggs left over is 9.\n\nSince Janet sells each remaining duck egg for $2, we multiply the number of eggs left over by the price per egg:\n9 x $2 = ?\n\nTo evaluate this expression, we multiply 9 by 2:\n9 x $2 = $18\n\nFINAL ANSWER: The answer is 18.'], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "Here is the clarified question:\n\nCLARIFIED QUESTION: What is the total amount of money, in dollars, that Janet makes by selling the remaining duck eggs at the farmers' market every day, given that she lays 16 eggs per day, eats 3 for breakfast, and bakes 4 muffins for her friends?", 'STEP: First, determine the number of duck eggs left over after Janet eats 3 for breakfast and bakes 4 muffins for her friends. This can be done by subtracting the number of eggs eaten and baked from the total number of eggs laid per day: 16 - 3 - 4 = ?', 'STEP: 16 - 3 - 4 = ?', 'STEP: 16 - 3 - 4 =', "SOLUTION:\n\nTo find the number of duck eggs left over, we need to subtract the number of eggs eaten for breakfast (3) and the number of eggs used for baking muffins (4) from the total number of eggs laid per day (16).\n\n16 - 3 - 4 = ?\n\nFirst, we can combine the numbers being subtracted:\n\n16 - 7 = ?\n\nNow, we can perform the subtraction:\n\n16 - 7 = 9\n\nSo, Janet has 9 duck eggs left over after eating 3 for breakfast and baking 4 muffins for her friends.\n\nTo find out how much money she makes by selling these eggs at the farmers' market, we need to multiply the number of eggs left over by the price per egg:\n\n9 eggs x $2 per egg = ?\n\nFirst, we can multiply the numbers:\n\n9 x 2 = ?\n\nNow, we can perform the multiplication:\n\n9 x 2 = 18\n\nTherefore, Janet makes $18 by selling the remaining duck eggs at the farmers' market every day.\n\nFINAL ANSWER: The answer is 18."], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "Here is the clarified question:\n\nCLARIFIED QUESTION: What is the total amount of money, in dollars, that Janet makes by selling the remaining duck eggs at the farmers' market every day, given that she lays 16 eggs per day, eats 3 for breakfast, and bakes 4 muffins for her friends?", 'STEP: First, determine the number of duck eggs left over after Janet eats 3 for breakfast and bakes 4 muffins for her friends. This can be done by subtracting the number of eggs eaten and baked from the total number of eggs laid per day: 16 - 3 - 4 = ?', 'STEP: 16 - 3 - 4 = ?', 'Here is the solution:\n\nSOLUTION:\nTo find the number of duck eggs left over after Janet eats 3 for breakfast and bakes 4 muffins for her friends, we need to subtract the number of eggs eaten and baked from the total number of eggs laid per day.\n\nThe total number of eggs laid per day is 16.\nThe number of eggs eaten for breakfast is 3.\nThe number of eggs baked for her friends is 4.\n\nSo, we subtract 3 and 4 from 16:\n\n16 - 3 - 4 = ?\n\nFirst, we subtract 3 from 16:\n16 - 3 = 13\n\nThen, we subtract 4 from 13:\n13 - 4 = 9\n\nSo, there are 9 duck eggs left over after Janet eats 3 for breakfast and bakes 4 muffins for her friends.\n\nFINAL ANSWER: The answer is 9'], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "Here is the clarified question:\n\nCLARIFIED QUESTION: What is the total amount of money, in dollars, that Janet makes by selling the remaining duck eggs at the farmers' market every day, given that she lays 16 eggs per day, eats 3 for breakfast, and bakes 4 muffins for her friends?", 'STEP: First, determine the number of duck eggs left over after Janet eats 3 for breakfast and bakes 4 muffins for her friends. This can be done by subtracting the number of eggs eaten and baked from the total number of eggs laid per day: 16 - 3 - 4 = ?', "SOLUTION:\n\nGiven that Janet lays 16 eggs per day, eats 3 for breakfast, and bakes 4 muffins for her friends, we need to determine the number of duck eggs left over after these activities. We can do this by subtracting the number of eggs eaten and baked from the total number of eggs laid per day:\n\n16 - 3 - 4 = ?\n\nFirst, let's perform the subtraction:\n\n16 - 3 = 13\n\nThen, subtract 4 from the result:\n\n13 - 4 = 9\n\nSo, Janet has 9 duck eggs left over after eating 3 for breakfast and baking 4 muffins for her friends.\n\nSince Janet sells these remaining duck eggs at the farmers' market for $2 per egg, we can find the total amount of money she makes by multiplying the number of eggs left over by the price per egg:\n\n9 eggs x $2 per egg = $18\n\nFINAL ANSWER: The answer is 18."], ["Janet’s ducks lay 16 eggs per day. She eats three for breakfast every morning and bakes muffins for her friends every day with four. She sells the remainder at the farmers' market daily for $2 per fresh duck egg. How much in dollars does she make every day at the farmers' market?", "Here is the clarified question:\n\nCLARIFIED QUESTION: What is the total amount of money, in dollars, that Janet makes by selling the remaining duck eggs at the farmers' market every day, given that she lays 16 eggs per day, eats 3 for breakfast, and bakes 4 muffins for her friends?", "SOLUTION:\n\nLet's start by identifying the number of eggs Janet has left after eating 3 for breakfast and baking 4 muffins for her friends. She lays 16 eggs per day, so she has a total of 16 eggs initially.\n\nShe eats 3 eggs for breakfast, leaving her with:\n16 - 3 = 13 eggs\n\nShe bakes 4 muffins for her friends, using 4 eggs. This leaves her with:\n13 - 4 = 9 eggs\n\nJanet sells the remaining 9 eggs at the farmers' market for $2 per egg. To find the total amount she makes, we multiply the number of eggs sold by the price per egg:\n9 eggs x $2 per egg = $18\n\nFINAL ANSWER: The answer is 18.00"]], 'type': 'gsm8k', 'answer': '18'}
dict_keys(['question', 'tree_solution', 'type', 'answer'])
BackVerify: 0
** most_common: ('18', 9), gold_ans: 18
** most_common: ('3', 11), gold_ans: 3
** most_common: ['none'], gold_ans: 70000
** most_common: ('540', 9), gold_ans: 540
** most_common: ('20', 8), gold_ans: 20
** most_common: ('64', 3), gold_ans: 64
** most_common: ('260', 11), gold_ans: 260
** most_common: ('80', 1), gold_ans: 160
** most_common: ('315', 3), gold_ans: 45
** most_common: ('460', 11), gold_ans: 460
** most_common: ('366', 10), gold_ans: 366
** most_common: ('694', 6), gold_ans: 694
** most_common: ('28', 1), gold_ans: 13
** most_common: ('18', 3), gold_ans: 18
** most_common: ('60', 4), gold_ans: 60
** most_common: ('125', 5), gold_ans: 125
** most_common: ('230.0', 3), gold_ans: 230
** most_common: ('57,500', 7), gold_ans: 57500
** most_common: ('7', 9), gold_ans: 7
** most_common: ('6', 3), gold_ans: 6
** most_common: ('14.67', 1), gold_ans: 15
** most_common: ('2', 2), gold_ans: 14
** most_common: ('7', 12), gold_ans: 7
** most_common: ('8', 11), gold_ans: 8
** most_common: ('26.00', 4), gold_ans: 26
** most_common: ('2', 11), gold_ans: 2
** most_common: ('243', 4), gold_ans: 243
** most_common: ('16', 6), gold_ans: 16
** most_common: ('25', 2), gold_ans: 25
** most_common: ('104', 6), gold_ans: 104
** most_common: ('109', 5), gold_ans: 109
** most_common: ('80', 6), gold_ans: 80
** most_common: ('35', 6), gold_ans: 35
** most_common: ('70', 12), gold_ans: 70
** most_common: ('23', 6), gold_ans: 23
** most_common: ('9', 12), gold_ans: 9
** most_common: ('75.00', 7), gold_ans: 75
** most_common: ('2', 1), gold_ans: 2
** most_common: ('10', 4), gold_ans: 10
** most_common: ('18', 6), gold_ans: 18
** most_common: ('8', 11), gold_ans: 8
** most_common: ('200', 4), gold_ans: 200
** most_common: ('26', 12), gold_ans: 26
** most_common: ('48', 2), gold_ans: 48
** most_common: ('20.00', 5), gold_ans: 20
** most_common: ('104', 11), gold_ans: 104
** most_common: ['none'], gold_ans: 163
** most_common: ('800', 12), gold_ans: 800
** most_common: ('8', 11), gold_ans: 8
** most_common: ('30', 12), gold_ans: 30
BackVerify: 50
** most_common: ('294', 6), gold_ans: 294
** most_common: ('5', 3), gold_ans: 5
** most_common: ('15', 7), gold_ans: 15
** most_common: ('40', 7), gold_ans: 40
** most_common: ('40', 10), gold_ans: 40
** most_common: ('14', 11), gold_ans: 14
** most_common: ('3', 9), gold_ans: 3
** most_common: ('82', 2), gold_ans: 83
** most_common: ('57.00', 7), gold_ans: 57
** most_common: ('187', 12), gold_ans: 187
** most_common: ('17', 10), gold_ans: 17
** most_common: ('1430', 8), gold_ans: 1430
** most_common: ('75,000', 1), gold_ans: 25000
** most_common: ('1596', 7), gold_ans: 1596
** most_common: ('300', 1), gold_ans: 300
** most_common: ('36', 6), gold_ans: 36
** most_common: ('48', 8), gold_ans: 48
** most_common: ('595', 11), gold_ans: 595
** most_common: ('36', 11), gold_ans: 36
** most_common: ('60', 12), gold_ans: 60
** most_common: ('7425', 3), gold_ans: 7425
** most_common: ('60', 11), gold_ans: 60
** most_common: ('221', 11), gold_ans: 221
** most_common: ('255.0', 3), gold_ans: 255
** most_common: ('88.00', 1), gold_ans: 88
** most_common: ('7.5', 7), gold_ans: 60
** most_common: ('5', 8), gold_ans: 5
** most_common: ('100', 11), gold_ans: 100
** most_common: ('6.00', 4), gold_ans: 6
** most_common: ('70', 11), gold_ans: 70
** most_common: ('10', 3), gold_ans: 10
** most_common: ('17', 11), gold_ans: 17
** most_common: ('623', 11), gold_ans: 623
** most_common: ('600', 11), gold_ans: 600
** most_common: ('15', 10), gold_ans: 15
** most_common: ('44', 12), gold_ans: 44
** most_common: ('22', 11), gold_ans: 22
** most_common: ('8712', 1), gold_ans: 9360
** most_common: ('8000', 9), gold_ans: 8000
** most_common: ('18', 4), gold_ans: 24
** most_common: ('225', 12), gold_ans: 225
** most_common: ('28', 11), gold_ans: 28
** most_common: ('4', 10), gold_ans: 4
** most_common: ('36', 3), gold_ans: 36
** most_common: ('348', 10), gold_ans: 348
** most_common: ('40', 8), gold_ans: 40
** most_common: ('3', 11), gold_ans: 3
** most_common: ('12', 7), gold_ans: 12
** most_common: ('5', 3), gold_ans: 5
** most_common: ('58', 7), gold_ans: 58
BackVerify: 100
** most_common: ('175', 8), gold_ans: 175
** most_common: ['none'], gold_ans: 6
** most_common: ('20.0', 1), gold_ans: 26
** most_common: ('140', 11), gold_ans: 140
** most_common: ('500', 11), gold_ans: 500
** most_common: ('20', 12), gold_ans: 20
** most_common: ('72', 1), gold_ans: 72
** most_common: ('2', 2), gold_ans: 3
** most_common: ('50', 3), gold_ans: 50
** most_common: ('28.00', 9), gold_ans: 28
** most_common: ('45', 7), gold_ans: 45
** most_common: ('16', 9), gold_ans: 16
** most_common: ('24', 9), gold_ans: 24
** most_common: ('25', 12), gold_ans: 25
** most_common: ('6', 10), gold_ans: 6
** most_common: ('90', 4), gold_ans: 90
** most_common: ('42', 8), gold_ans: 42
** most_common: ('360', 12), gold_ans: 360
** most_common: ('4', 8), gold_ans: 4
** most_common: ('96000', 1), gold_ans: 95200
** most_common: ('240', 7), gold_ans: 240
** most_common: ('27', 12), gold_ans: 27
** most_common: ('41', 3), gold_ans: 48
** most_common: ('50', 7), gold_ans: 50
** most_common: ('10', 8), gold_ans: 10
** most_common: ('10', 1), gold_ans: 10
** most_common: ('82', 12), gold_ans: 82
** most_common: ('120', 10), gold_ans: 120
** most_common: ('880', 10), gold_ans: 880
** most_common: ('10000', 3), gold_ans: 10000
** most_common: ('30', 12), gold_ans: 30
** most_common: ('940', 10), gold_ans: 940
** most_common: ('60', 11), gold_ans: 60
** most_common: ('13', 9), gold_ans: 13
** most_common: ('720', 10), gold_ans: 720
** most_common: ('40', 6), gold_ans: 40
** most_common: ('6', 11), gold_ans: 6
** most_common: ('29.00', 8), gold_ans: 29
** most_common: ('105', 8), gold_ans: 105
** most_common: ('70', 12), gold_ans: 70
** most_common: ('20%', 4), gold_ans: 20
** most_common: ('400', 8), gold_ans: 400
** most_common: ('140', 9), gold_ans: 140
** most_common: ('16', 1), gold_ans: 16
** most_common: ('20', 11), gold_ans: 20
** most_common: ('4000', 6), gold_ans: 4000
** most_common: ('2125', 10), gold_ans: 2,125
** most_common: ('15', 2), gold_ans: 75
** most_common: ('30', 9), gold_ans: 30
** most_common: ('16', 12), gold_ans: 16
BackVerify: 150
** most_common: ('4', 2), gold_ans: 4
** most_common: ('5', 9), gold_ans: 5
** most_common: ('4.00', 10), gold_ans: 4
** most_common: ('48', 1), gold_ans: 48
** most_common: ('272', 5), gold_ans: 272
** most_common: ('280', 5), gold_ans: 280
** most_common: ('1400', 9), gold_ans: 1400
** most_common: ('3000', 1), gold_ans: 80
** most_common: ('34.00', 6), gold_ans: 34
** most_common: ('15', 9), gold_ans: 15
** most_common: ('16', 9), gold_ans: 16
** most_common: ('32', 11), gold_ans: 32
** most_common: ('41.472', 1), gold_ans: 92
** most_common: ('50', 8), gold_ans: 50
** most_common: ('15', 5), gold_ans: 15
** most_common: ('77.00', 1), gold_ans: 77
** most_common: ('5', 9), gold_ans: 5
** most_common: ('16', 9), gold_ans: 16
** most_common: ('18', 12), gold_ans: 18
** most_common: ('120', 7), gold_ans: 120
** most_common: ('150', 11), gold_ans: 150
** most_common: ('1210', 12), gold_ans: 1210
** most_common: ('51', 5), gold_ans: 51
** most_common: ('18000', 7), gold_ans: 18000
** most_common: ('5700', 5), gold_ans: 95
** most_common: ('15', 6), gold_ans: 15
** most_common: ('100', 10), gold_ans: 100
** most_common: ['none'], gold_ans: 350
** most_common: ('122', 10), gold_ans: 122
** most_common: ('130', 12), gold_ans: 130
** most_common: ('20', 9), gold_ans: 20
** most_common: ('160', 10), gold_ans: 160
** most_common: ('23', 6), gold_ans: 23
** most_common: ('2.0', 1), gold_ans: 2
** most_common: ('25%', 2), gold_ans: 25
** most_common: ('30', 10), gold_ans: 30
** most_common: ('5', 1), gold_ans: 5
** most_common: ('106.12', 7), gold_ans: 106
** most_common: ('50', 11), gold_ans: 50
** most_common: ('34.0', 4), gold_ans: 34
** most_common: ('360', 10), gold_ans: 360
** most_common: ('0.5', 3), gold_ans: 5
** most_common: ('91', 8), gold_ans: 91
** most_common: ('24', 4), gold_ans: 24
** most_common: ('10', 9), gold_ans: 10
** most_common: ('12.00', 9), gold_ans: 12
** most_common: ('120', 9), gold_ans: 120
** most_common: ('6277', 6), gold_ans: 6277
** most_common: ('320', 6), gold_ans: 320
** most_common: ('7500', 7), gold_ans: 7500
BackVerify: 200
** most_common: ('55', 9), gold_ans: 55
** most_common: ('114200', 3), gold_ans: 114,200
** most_common: ('100', 11), gold_ans: 100
** most_common: ('31', 10), gold_ans: 31
** most_common: ('98', 6), gold_ans: 98
** most_common: ('191.0', 1), gold_ans: 98
** most_common: ('860', 8), gold_ans: 860
** most_common: ('2600', 11), gold_ans: 2600
** most_common: ('76', 12), gold_ans: 76
** most_common: ('1450', 1), gold_ans: 145
** most_common: ('10', 5), gold_ans: 10
** most_common: ('4', 11), gold_ans: 4
** most_common: ('5', 5), gold_ans: 5
** most_common: ('250', 7), gold_ans: 250
** most_common: ('8', 3), gold_ans: 8
** most_common: ('44', 8), gold_ans: 44
** most_common: ('220', 4), gold_ans: 220
** most_common: ('15', 10), gold_ans: 15
** most_common: ('45', 8), gold_ans: 45
** most_common: ('54', 5), gold_ans: 54
** most_common: ('70', 9), gold_ans: 70
** most_common: ('90', 5), gold_ans: 90
** most_common: ('140', 12), gold_ans: 140
** most_common: ('20000', 7), gold_ans: 20000
** most_common: ('180', 10), gold_ans: 180
** most_common: ('9', 4), gold_ans: 9
** most_common: ('33', 8), gold_ans: 33
** most_common: ('9.00', 1), gold_ans: 9
** most_common: ('1', 6), gold_ans: 1
** most_common: ('21', 11), gold_ans: 21
** most_common: ('276,000', 10), gold_ans: 276,000
** most_common: ('50', 12), gold_ans: 50
** most_common: ('75', 10), gold_ans: 75
** most_common: ('12', 9), gold_ans: 12
** most_common: ('21', 5), gold_ans: 21
** most_common: ('10', 8), gold_ans: 10
** most_common: ('30', 1), gold_ans: 31
** most_common: ('90', 12), gold_ans: 90
** most_common: ('68', 8), gold_ans: 68
** most_common: ('280', 12), gold_ans: 280
** most_common: ('21', 11), gold_ans: 21
** most_common: ('6', 6), gold_ans: 6
** most_common: ('3', 4), gold_ans: 3
** most_common: ('250', 7), gold_ans: 250
** most_common: ('20', 5), gold_ans: 20
** most_common: ('14', 5), gold_ans: 7
** most_common: ('27000', 4), gold_ans: 27000
** most_common: ('32', 8), gold_ans: 32
** most_common: ('300', 8), gold_ans: 300
** most_common: ('5600', 2), gold_ans: 5,600
BackVerify: 250
** most_common: ('17', 2), gold_ans: 17
** most_common: ('70', 11), gold_ans: 70
** most_common: ('73', 8), gold_ans: 73
** most_common: ('18', 11), gold_ans: 18
** most_common: ('84', 11), gold_ans: 84
** most_common: ('192', 1), gold_ans: 192
** most_common: ('45', 5), gold_ans: 45
** most_common: ('5600', 12), gold_ans: 5600
** most_common: ('6.00', 11), gold_ans: 6
** most_common: ('168', 2), gold_ans: 168
** most_common: ('11', 4), gold_ans: 11
** most_common: ('62.00', 5), gold_ans: 62
** most_common: ('270', 12), gold_ans: 270
** most_common: ('8', 12), gold_ans: 8
** most_common: ('400', 4), gold_ans: 400
** most_common: ('9,500', 8), gold_ans: 9500
** most_common: ('118,000', 7), gold_ans: 118000
** most_common: ('71', 1), gold_ans: 91
** most_common: ('1375', 11), gold_ans: 1375
** most_common: ('4', 11), gold_ans: 4
** most_common: ('762', 12), gold_ans: 762
** most_common: ('20', 10), gold_ans: 20
** most_common: ('5.05', 2), gold_ans: 5
** most_common: ('315', 6), gold_ans: 315
** most_common: ('3200', 11), gold_ans: 3200
** most_common: ('138', 3), gold_ans: 138
** most_common: ('9', 7), gold_ans: 9
** most_common: ('4', 7), gold_ans: 4
** most_common: ('40', 4), gold_ans: 40
** most_common: ('6', 9), gold_ans: 6
** most_common: ('7.00', 5), gold_ans: 7
** most_common: ('2450', 11), gold_ans: 2450
** most_common: ('195', 11), gold_ans: 195
** most_common: ('68', 9), gold_ans: 68
** most_common: ('360', 6), gold_ans: 360
** most_common: ('21', 11), gold_ans: 21
** most_common: ('90', 8), gold_ans: 90
** most_common: ('8', 10), gold_ans: 8
** most_common: ('3', 9), gold_ans: 3
** most_common: ('16', 7), gold_ans: 16
** most_common: ('390', 6), gold_ans: 390
** most_common: ('2', 11), gold_ans: 2
** most_common: ('75', 6), gold_ans: 75
** most_common: ('83', 1), gold_ans: 83
** most_common: ('3', 9), gold_ans: 3
** most_common: ('370', 11), gold_ans: 370
** most_common: ('3', 12), gold_ans: 3
** most_common: ('55', 5), gold_ans: 55
** most_common: ('400', 1), gold_ans: 500
** most_common: ('31,800', 5), gold_ans: 31800
BackVerify: 300
** most_common: ('78', 6), gold_ans: 78
** most_common: ('16', 2), gold_ans: 8
** most_common: ('15', 6), gold_ans: 15
** most_common: ['none'], gold_ans: 1300
** most_common: ('3200', 11), gold_ans: 3200
** most_common: ('4', 10), gold_ans: 4
** most_common: ('10', 6), gold_ans: 10
** most_common: ('4', 8), gold_ans: 16
** most_common: ('6', 9), gold_ans: 6
** most_common: ('8', 9), gold_ans: 8
** most_common: ('4000', 2), gold_ans: 2050
** most_common: ('91', 12), gold_ans: 91
** most_common: ('32', 10), gold_ans: 32
** most_common: ('120000', 4), gold_ans: 120000
** most_common: ('30', 9), gold_ans: 30
** most_common: ('14', 11), gold_ans: 14
** most_common: ('156', 10), gold_ans: 156
** most_common: ('12.0', 6), gold_ans: 12
** most_common: ('123', 11), gold_ans: 123
** most_common: ('15', 8), gold_ans: 15
** most_common: ('8', 5), gold_ans: 8
** most_common: ('1', 12), gold_ans: 1
** most_common: ('9', 6), gold_ans: 9
** most_common: ('75', 8), gold_ans: 75
** most_common: ('14', 3), gold_ans: 14
** most_common: ('224,000', 6), gold_ans: 224000
** most_common: ('14', 9), gold_ans: 14
** most_common: ('31', 10), gold_ans: 31
** most_common: ('2', 7), gold_ans: 2
** most_common: ('14', 10), gold_ans: 14
** most_common: ('31', 3), gold_ans: 31
** most_common: ('8,400', 7), gold_ans: 8400
** most_common: ('44', 9), gold_ans: 44
** most_common: ('100', 9), gold_ans: 100
** most_common: ('6', 10), gold_ans: 6
** most_common: ('310.0', 7), gold_ans: 310
** most_common: ('72', 10), gold_ans: 72
** most_common: ('1', 11), gold_ans: 1
** most_common: ('60', 9), gold_ans: 60
** most_common: ('160', 11), gold_ans: 160
** most_common: ('4', 1), gold_ans: 4
** most_common: ('260', 4), gold_ans: 260
** most_common: ('87', 12), gold_ans: 87
** most_common: ('180,000', 7), gold_ans: 180000
** most_common: ('2', 12), gold_ans: 2
** most_common: ('310', 10), gold_ans: 310
** most_common: ('9', 8), gold_ans: 9
** most_common: ('36', 6), gold_ans: 36
** most_common: ('10.0', 6), gold_ans: 10
** most_common: ('2640', 9), gold_ans: 2640
BackVerify: 350
** most_common: ('8', 4), gold_ans: 8
** most_common: ('10', 11), gold_ans: 10
** most_common: ('21', 10), gold_ans: 21
** most_common: ('16', 1), gold_ans: 20
** most_common: ('45', 7), gold_ans: 45
** most_common: ('34', 10), gold_ans: 34
** most_common: ('21', 8), gold_ans: 21
** most_common: ('60', 1), gold_ans: 2
** most_common: ('20.00', 6), gold_ans: 20
** most_common: ('4', 1), gold_ans: 4
** most_common: ('25', 6), gold_ans: 25
** most_common: ('900', 3), gold_ans: 20
** most_common: ('23', 8), gold_ans: 23
** most_common: ('6.0', 2), gold_ans: 6
** most_common: ('49', 11), gold_ans: 49
** most_common: ('18', 12), gold_ans: 18
** most_common: ('9', 8), gold_ans: 9
** most_common: ('19', 7), gold_ans: 19
** most_common: ('10', 8), gold_ans: 18
** most_common: ('1198', 4), gold_ans: 1198
** most_common: ('320', 10), gold_ans: 320
** most_common: ('50', 11), gold_ans: 50
** most_common: ('5', 8), gold_ans: 5
** most_common: ('240,000', 4), gold_ans: 240000
** most_common: ('45', 12), gold_ans: 45
** most_common: ('48', 11), gold_ans: 48
** most_common: ('15', 8), gold_ans: 15
** most_common: ('50', 10), gold_ans: 50
** most_common: ('15', 10), gold_ans: 15
** most_common: ('21', 10), gold_ans: 21
** most_common: ('760.53', 1), gold_ans: 803
** most_common: ('67', 12), gold_ans: 67
** most_common: ('350', 11), gold_ans: 350
** most_common: ('2', 2), gold_ans: 2
** most_common: ('32', 9), gold_ans: 32
** most_common: ('16', 8), gold_ans: 16
** most_common: ('400', 2), gold_ans: 80
** most_common: ('36', 11), gold_ans: 36
** most_common: ('88', 10), gold_ans: 88
** most_common: ('6', 4), gold_ans: 6
** most_common: ('12', 9), gold_ans: 12
** most_common: ('15', 7), gold_ans: 15
** most_common: ('34', 6), gold_ans: 34
** most_common: ('20.0', 7), gold_ans: 20
** most_common: ('92', 8), gold_ans: 92
** most_common: ('38', 8), gold_ans: 38
** most_common: ('3', 9), gold_ans: 3
** most_common: ('25', 10), gold_ans: 25
** most_common: ('168', 9), gold_ans: 168
** most_common: ('12', 11), gold_ans: 12
BackVerify: 400
** most_common: ('48', 11), gold_ans: 48
** most_common: ('14400', 6), gold_ans: 14400
** most_common: ('4', 11), gold_ans: 4
** most_common: ('135', 11), gold_ans: 81
** most_common: ('22', 3), gold_ans: 22
** most_common: ('50.00', 7), gold_ans: 50
** most_common: ('200', 2), gold_ans: 200
** most_common: ('2000', 3), gold_ans: 2000
** most_common: ('20', 9), gold_ans: 20
** most_common: ('42,000', 2), gold_ans: 168000
** most_common: ('3.00', 7), gold_ans: 3
** most_common: ('1110', 6), gold_ans: 1110
** most_common: ('5', 6), gold_ans: 5
** most_common: ('25', 2), gold_ans: 25
** most_common: ('56', 10), gold_ans: 56
** most_common: ('350', 5), gold_ans: 350
** most_common: ('56', 4), gold_ans: 56
** most_common: ('3140.0', 5), gold_ans: 3140
** most_common: ('40', 11), gold_ans: 40
** most_common: ('3000', 8), gold_ans: 3000
** most_common: ('17000', 7), gold_ans: 17000
** most_common: ('12', 12), gold_ans: 12
** most_common: ('256', 1), gold_ans: 284
** most_common: ('6', 2), gold_ans: 8
** most_common: ('570', 10), gold_ans: 570
** most_common: ('150', 11), gold_ans: 150
** most_common: ('11', 12), gold_ans: 11
** most_common: ('150', 3), gold_ans: 150
** most_common: ('22', 2), gold_ans: 26
** most_common: ('13', 12), gold_ans: 13
** most_common: ('132.00', 7), gold_ans: 132
** most_common: ('1', 12), gold_ans: 1
** most_common: ('30', 8), gold_ans: 30
** most_common: ('6', 11), gold_ans: 6
** most_common: ('5', 8), gold_ans: 5
** most_common: ('5', 9), gold_ans: 5
** most_common: ('15', 7), gold_ans: 15
** most_common: ('7', 10), gold_ans: 7
** most_common: ('2', 4), gold_ans: 2
** most_common: ['none'], gold_ans: 17
** most_common: ('98', 11), gold_ans: 98
** most_common: ('80', 9), gold_ans: 80
** most_common: ('49', 12), gold_ans: 49
** most_common: ('49', 1), gold_ans: 59
** most_common: ('20', 10), gold_ans: 20
** most_common: ('6', 6), gold_ans: 6
** most_common: ('2', 9), gold_ans: 2
** most_common: ('5', 12), gold_ans: 5
** most_common: ('539', 9), gold_ans: 539
** most_common: ('112', 11), gold_ans: 112
BackVerify: 450
** most_common: ('4', 2), gold_ans: 4
** most_common: ('11050', 5), gold_ans: 11050
** most_common: ('50', 11), gold_ans: 50
** most_common: ('6400', 11), gold_ans: 6400
** most_common: ('240', 9), gold_ans: 150
** most_common: ('1920', 6), gold_ans: 1920
** most_common: ('78', 12), gold_ans: 78
** most_common: ('45', 12), gold_ans: 45
** most_common: ('35', 6), gold_ans: 35
** most_common: ('2', 2), gold_ans: 2
** most_common: ('84', 12), gold_ans: 84
** most_common: ('9', 10), gold_ans: 9
** most_common: ('71', 12), gold_ans: 71
** most_common: ('18', 10), gold_ans: 18
** most_common: ('6', 4), gold_ans: 6
** most_common: ('30', 11), gold_ans: 30
** most_common: ('1.00', 6), gold_ans: 1
** most_common: ('1200', 6), gold_ans: 1200
** most_common: ('120', 10), gold_ans: 120
** most_common: ('4', 9), gold_ans: 4
** most_common: ('3', 11), gold_ans: 3
** most_common: ('80', 9), gold_ans: 80
** most_common: ('6', 6), gold_ans: 6
** most_common: ('10', 7), gold_ans: 10
** most_common: ('80', 11), gold_ans: 80
** most_common: ('60', 1), gold_ans: 20
** most_common: ('5', 12), gold_ans: 5
** most_common: ('20', 6), gold_ans: 20
** most_common: ('621', 6), gold_ans: 621
** most_common: ('15400', 2), gold_ans: 15400
** most_common: ('11', 12), gold_ans: 11
** most_common: ('84', 12), gold_ans: 84
** most_common: ('26', 8), gold_ans: 26
** most_common: ('40', 8), gold_ans: 40
** most_common: ('240', 10), gold_ans: 240
** most_common: ('220', 11), gold_ans: 220
** most_common: ('6', 7), gold_ans: 6
** most_common: ('4', 11), gold_ans: 4
** most_common: ('6', 12), gold_ans: 6
** most_common: ('-10.0', 3), gold_ans: -10
** most_common: ('4', 11), gold_ans: 4
** most_common: ('16', 10), gold_ans: 16
** most_common: ('32', 11), gold_ans: 32
** most_common: ('25', 2), gold_ans: 25
** most_common: ('53.0', 1), gold_ans: 21
** most_common: ('200', 9), gold_ans: 200
** most_common: ('38', 9), gold_ans: 38
** most_common: ('112', 5), gold_ans: 112
** most_common: ('40', 12), gold_ans: 40
** most_common: ('10', 11), gold_ans: 10
BackVerify: 500
** most_common: ('16', 2), gold_ans: 16
** most_common: ('273', 12), gold_ans: 273
** most_common: ('26', 10), gold_ans: 26
** most_common: ('18', 6), gold_ans: 18
** most_common: ('2', 5), gold_ans: 2
** most_common: ('1200', 3), gold_ans: 1,600
** most_common: ('144', 1), gold_ans: 144
** most_common: ('2.00', 9), gold_ans: 2
** most_common: ('120', 3), gold_ans: 120
** most_common: ('4', 4), gold_ans: 4
** most_common: ['none'], gold_ans: 525
** most_common: ('110', 11), gold_ans: 110
** most_common: ('120', 7), gold_ans: 120
** most_common: ('300', 12), gold_ans: 300
** most_common: ('90,000', 10), gold_ans: 90000
** most_common: ('160', 2), gold_ans: 160
** most_common: ('375', 10), gold_ans: 375
** most_common: ('18', 12), gold_ans: 18
** most_common: ('32', 11), gold_ans: 32
** most_common: ('280', 11), gold_ans: 280
** most_common: ('63', 2), gold_ans: 63
** most_common: ('39', 8), gold_ans: 39
** most_common: ('29', 9), gold_ans: 29
** most_common: ('74', 5), gold_ans: 74
** most_common: ('9', 10), gold_ans: 9
** most_common: ('36', 1), gold_ans: 12
** most_common: ('21', 3), gold_ans: 21
** most_common: ('48', 5), gold_ans: 48
** most_common: ('172', 4), gold_ans: 172
** most_common: ('11', 9), gold_ans: 11
** most_common: ('40', 3), gold_ans: 36
** most_common: ['none'], gold_ans: 66
** most_common: ('35', 1), gold_ans: 25
** most_common: ('300', 10), gold_ans: 300
** most_common: ('300', 4), gold_ans: 300
** most_common: ('16', 9), gold_ans: 16
** most_common: ('8', 10), gold_ans: 8
** most_common: ('188', 8), gold_ans: 188
** most_common: ('18', 8), gold_ans: 18
** most_common: ('60', 3), gold_ans: 35
** most_common: ('39', 6), gold_ans: 39
** most_common: ('25', 4), gold_ans: 50
** most_common: ('7.00', 9), gold_ans: 7
** most_common: ('6', 10), gold_ans: 6
** most_common: ('80', 11), gold_ans: 80
** most_common: ('30', 8), gold_ans: 30
** most_common: ('65', 5), gold_ans: 130
** most_common: ('81', 6), gold_ans: 81
** most_common: ('100', 8), gold_ans: 100
** most_common: ('398', 11), gold_ans: 398
BackVerify: 550
** most_common: ('27.00', 1), gold_ans: 27
** most_common: ('17.00', 7), gold_ans: 17
** most_common: ('450', 12), gold_ans: 450
** most_common: ('92', 11), gold_ans: 92
** most_common: ('54', 11), gold_ans: 54
** most_common: ('2', 12), gold_ans: 2
** most_common: ('160', 7), gold_ans: 160
** most_common: ('70', 10), gold_ans: 70
** most_common: ('3', 12), gold_ans: 3
** most_common: ('16', 4), gold_ans: 16
** most_common: ('45', 12), gold_ans: 45
** most_common: ('180', 11), gold_ans: 180
** most_common: ('82', 9), gold_ans: 82
** most_common: ('12', 6), gold_ans: 12
** most_common: ('240', 4), gold_ans: 240
** most_common: ('5', 6), gold_ans: 5
** most_common: ('8', 1), gold_ans: 10
** most_common: ('9.00', 2), gold_ans: 9
** most_common: ('175', 9), gold_ans: 175
** most_common: ('21', 11), gold_ans: 21
** most_common: ('20', 1), gold_ans: 23
** most_common: ('308', 6), gold_ans: 308
** most_common: ('100', 9), gold_ans: 100
** most_common: ('600', 10), gold_ans: 600
** most_common: ('37.00', 5), gold_ans: 37
** most_common: ('36.00', 5), gold_ans: 36
** most_common: ('11232', 1), gold_ans: 11232
** most_common: ('40.0', 2), gold_ans: 40
** most_common: ('48', 8), gold_ans: 48
** most_common: ('7', 12), gold_ans: 7
** most_common: ('499.2', 1), gold_ans: 500
** most_common: ('215', 10), gold_ans: 215
** most_common: ('129,200', 9), gold_ans: 129200
** most_common: ('120', 9), gold_ans: 120
** most_common: ('2.00', 2), gold_ans: 2
** most_common: ('40', 12), gold_ans: 40
** most_common: ('800', 8), gold_ans: 800
** most_common: ('30', 1), gold_ans: 30
** most_common: ('52.0', 7), gold_ans: 52
** most_common: ('2.5', 2), gold_ans: 15
** most_common: ('318', 2), gold_ans: 319
** most_common: ('220', 11), gold_ans: 220
** most_common: ('1', 11), gold_ans: 1
** most_common: ('3', 3), gold_ans: 3
** most_common: ('42', 5), gold_ans: 42
** most_common: ('13', 6), gold_ans: 13
** most_common: ('260', 5), gold_ans: 260
** most_common: ('90', 8), gold_ans: 90
** most_common: ('69', 4), gold_ans: 69
** most_common: ('48', 11), gold_ans: 48
BackVerify: 600
** most_common: ('10', 11), gold_ans: 10
** most_common: ('104', 2), gold_ans: 104
** most_common: ('5', 10), gold_ans: 5
** most_common: ('1260', 5), gold_ans: 1800
** most_common: ('12', 8), gold_ans: 12
** most_common: ('42', 11), gold_ans: 42
** most_common: ('6.005', 1), gold_ans: 6
** most_common: ('40', 1), gold_ans: 10
** most_common: ('8', 4), gold_ans: 8
** most_common: ('7', 6), gold_ans: 7
** most_common: ('65960.0', 2), gold_ans: 65,960
** most_common: ('775000.0', 1), gold_ans: 1,450,000
** most_common: ('30', 10), gold_ans: 30
** most_common: ('93,000', 8), gold_ans: 93000
** most_common: ('312', 9), gold_ans: 312
** most_common: ('33.00', 5), gold_ans: 33
** most_common: ('10', 6), gold_ans: 10
** most_common: ('5', 12), gold_ans: 5
** most_common: ('36', 11), gold_ans: 36
** most_common: ('76', 9), gold_ans: 76
** most_common: ('1509', 6), gold_ans: 1509
** most_common: ('3000', 10), gold_ans: 3000
** most_common: ('7', 9), gold_ans: 7
** most_common: ('8', 7), gold_ans: 8
** most_common: ('85', 12), gold_ans: 85
** most_common: ('160', 10), gold_ans: 160
** most_common: ('72', 7), gold_ans: 72
** most_common: ('54', 11), gold_ans: 54
** most_common: ('4', 11), gold_ans: 4
** most_common: ('17,500', 2), gold_ans: 17500
** most_common: ('10', 7), gold_ans: 10
** most_common: ('4800', 4), gold_ans: 4800
** most_common: ('45', 12), gold_ans: 45
** most_common: ('5', 6), gold_ans: 5
** most_common: ('14', 11), gold_ans: 14
** most_common: ('9', 2), gold_ans: 4
** most_common: ('1050', 8), gold_ans: 1050
** most_common: ('17', 8), gold_ans: 17
** most_common: ('12.0', 7), gold_ans: 12
** most_common: ('216', 6), gold_ans: 216
** most_common: ('43,500', 7), gold_ans: 43,500
** most_common: ('372,000', 6), gold_ans: 262500
** most_common: ('10800', 6), gold_ans: 10,800
** most_common: ('840', 10), gold_ans: 840
** most_common: ('29', 7), gold_ans: 29
** most_common: ('48', 10), gold_ans: 48
** most_common: ('79', 8), gold_ans: 79
** most_common: ('10', 5), gold_ans: 10
** most_common: ('54', 3), gold_ans: 54
** most_common: ['none'], gold_ans: 162000
BackVerify: 650
** most_common: ('142', 3), gold_ans: 142
** most_common: ('2100', 4), gold_ans: 2100
** most_common: ('105', 1), gold_ans: 75
** most_common: ('80', 8), gold_ans: 80
** most_common: ('2', 3), gold_ans: 2
** most_common: ('10', 11), gold_ans: 10
** most_common: ('10', 5), gold_ans: 10
** most_common: ('330,000', 11), gold_ans: 330000
** most_common: ('120', 6), gold_ans: 120
** most_common: ('3', 9), gold_ans: 3
** most_common: ('15', 12), gold_ans: 15
** most_common: ('44', 6), gold_ans: 44
** most_common: ('7.00', 11), gold_ans: 7
** most_common: ('193', 6), gold_ans: 193
** most_common: ('32', 3), gold_ans: 32
** most_common: ('360', 9), gold_ans: 360
** most_common: ('120', 9), gold_ans: 120
** most_common: ('53', 9), gold_ans: 53
** most_common: ('3', 12), gold_ans: 3
** most_common: ('132', 12), gold_ans: 132
** most_common: ('4', 7), gold_ans: 4
** most_common: ('4.00', 10), gold_ans: 4
** most_common: ('5', 1), gold_ans: 2
** most_common: ('9', 12), gold_ans: 9
** most_common: ('12', 11), gold_ans: 12
** most_common: ('21', 1), gold_ans: 33
** most_common: ('240', 11), gold_ans: 240
** most_common: ('36', 9), gold_ans: 36
** most_common: ('120', 11), gold_ans: 120
** most_common: ('576', 7), gold_ans: 576
** most_common: ('20', 4), gold_ans: 20
** most_common: ('298', 6), gold_ans: 298
** most_common: ('80', 11), gold_ans: 80
** most_common: ('50', 2), gold_ans: 50
** most_common: ('11', 12), gold_ans: 11
** most_common: ('14', 11), gold_ans: 14
** most_common: ('80', 12), gold_ans: 80
** most_common: ('22', 1), gold_ans: 13
** most_common: ('100', 8), gold_ans: 100
** most_common: ('7.0', 2), gold_ans: 7
** most_common: ('5760', 10), gold_ans: 5760
** most_common: ('25', 4), gold_ans: 25
** most_common: ('32.00', 5), gold_ans: 32
** most_common: ('68', 8), gold_ans: 68
** most_common: ('9', 4), gold_ans: 9
** most_common: ('5', 11), gold_ans: 5
** most_common: ('145', 8), gold_ans: 145
** most_common: ('27', 11), gold_ans: 27
** most_common: ('720.00', 12), gold_ans: 720
** most_common: ('8', 12), gold_ans: 8
BackVerify: 700
** most_common: ('135', 9), gold_ans: 135
** most_common: ['none'], gold_ans: 200
** most_common: ('2,800', 10), gold_ans: 2800
** most_common: ('50', 9), gold_ans: 50
** most_common: ('50', 9), gold_ans: 50
** most_common: ('120', 6), gold_ans: 120
** most_common: ('6', 6), gold_ans: 9
** most_common: ('8.0', 4), gold_ans: 8
** most_common: ('168', 9), gold_ans: 168
** most_common: ('3000', 10), gold_ans: 3000
** most_common: ('45.00', 5), gold_ans: 45
** most_common: ('3', 3), gold_ans: 6
** most_common: ('14', 6), gold_ans: 14
** most_common: ('576', 9), gold_ans: 576
** most_common: ('10', 5), gold_ans: 10
** most_common: ('385000', 7), gold_ans: 385000
** most_common: ('770', 10), gold_ans: 770
** most_common: ('5.00', 10), gold_ans: 5
** most_common: ('2', 12), gold_ans: 2
** most_common: ('175', 9), gold_ans: 175
** most_common: ('4', 8), gold_ans: 4
** most_common: ('2050', 1), gold_ans: 2450
** most_common: ('195', 3), gold_ans: 255
** most_common: ('160', 11), gold_ans: 160
** most_common: ['none'], gold_ans: 18
** most_common: ('25', 2), gold_ans: 25
** most_common: ('10', 6), gold_ans: 10
** most_common: ('112', 12), gold_ans: 112
** most_common: ('40', 7), gold_ans: 40
** most_common: ('1000', 11), gold_ans: 1000
** most_common: ('8', 7), gold_ans: 8
** most_common: ('1', 8), gold_ans: 1
** most_common: ('87', 9), gold_ans: 87
** most_common: ('5', 4), gold_ans: 5
** most_common: ('17', 8), gold_ans: 17
** most_common: ('50', 12), gold_ans: 50
** most_common: ('3', 6), gold_ans: 3
** most_common: ('2.0', 3), gold_ans: 2
** most_common: ('4', 11), gold_ans: 4
** most_common: ('98', 8), gold_ans: 98
** most_common: ('20', 1), gold_ans: 25
** most_common: ('28', 9), gold_ans: 28
** most_common: ('24', 7), gold_ans: 24
** most_common: ('8', 11), gold_ans: 8
** most_common: ('4', 7), gold_ans: 4
** most_common: ('1100', 9), gold_ans: 1100
** most_common: ('28', 8), gold_ans: 28
** most_common: ('350', 7), gold_ans: 350
** most_common: ('336', 11), gold_ans: 336
** most_common: ('6', 6), gold_ans: 3
BackVerify: 750
** most_common: ('4000', 4), gold_ans: 4000
** most_common: ('43', 10), gold_ans: 43
** most_common: ('300', 1), gold_ans: 240
** most_common: ('128.0', 1), gold_ans: 128
** most_common: ('107', 1), gold_ans: 89
** most_common: ('7', 12), gold_ans: 7
** most_common: ('22', 11), gold_ans: 22
** most_common: ('75', 9), gold_ans: 75
** most_common: ('133', 6), gold_ans: 133
** most_common: ('60000', 6), gold_ans: 60000
** most_common: ('16', 12), gold_ans: 16
** most_common: ('27', 9), gold_ans: 27
** most_common: ('85', 12), gold_ans: 85
** most_common: ('100', 4), gold_ans: 100
** most_common: ('14', 10), gold_ans: 14
** most_common: ('490', 7), gold_ans: 490
** most_common: ('12', 12), gold_ans: 12
** most_common: ('60', 12), gold_ans: 60
** most_common: ('600', 7), gold_ans: 675
** most_common: ('110', 1), gold_ans: 110
** most_common: ('4', 2), gold_ans: 4
** most_common: ('3', 4), gold_ans: 3
** most_common: ('50.0', 6), gold_ans: 50
** most_common: ('10', 12), gold_ans: 10
** most_common: ('10', 8), gold_ans: 10
** most_common: ('276', 6), gold_ans: 276
** most_common: ('800', 11), gold_ans: 800
** most_common: ('4400', 4), gold_ans: 4400
** most_common: ('38.00', 10), gold_ans: 38
** most_common: ('255', 4), gold_ans: 255
** most_common: ('11', 1), gold_ans: 25
** most_common: ('17', 2), gold_ans: 17
** most_common: ('27', 7), gold_ans: 54
** most_common: ('5', 2), gold_ans: 4
** most_common: ('7.50', 1), gold_ans: 15
** most_common: ('155', 5), gold_ans: 155
** most_common: ('142', 9), gold_ans: 142
** most_common: ('25', 12), gold_ans: 25
** most_common: ('100', 6), gold_ans: 100
** most_common: ('4', 3), gold_ans: 4
** most_common: ('12', 9), gold_ans: 108
** most_common: ('100', 5), gold_ans: 100
** most_common: ('75.00', 6), gold_ans: 75
** most_common: ('250', 9), gold_ans: 250
** most_common: ('32', 11), gold_ans: 32
** most_common: ('20', 9), gold_ans: 20
** most_common: ('1040000', 5), gold_ans: 2880000
** most_common: ('540', 9), gold_ans: 540
** most_common: ('20', 1), gold_ans: 20
** most_common: ('4', 12), gold_ans: 4
BackVerify: 800
** most_common: ('428', 9), gold_ans: 428
** most_common: ('1240', 8), gold_ans: 1240
** most_common: ('5', 3), gold_ans: 6
** most_common: ('9.0', 7), gold_ans: 9
** most_common: ('20', 11), gold_ans: 20
** most_common: ('1170', 11), gold_ans: 1170
** most_common: ('0.5111', 1), gold_ans: 70
** most_common: ('4', 3), gold_ans: 4
** most_common: ('12', 4), gold_ans: 12
** most_common: ('50', 6), gold_ans: 50
** most_common: ('310', 3), gold_ans: 310
** most_common: ('60', 5), gold_ans: 60
** most_common: ('79', 5), gold_ans: 79
** most_common: ('7', 6), gold_ans: 7
** most_common: ('68', 1), gold_ans: 11
** most_common: ('4', 2), gold_ans: 4
** most_common: ('4500', 10), gold_ans: 4500
** most_common: ('15', 11), gold_ans: 15
** most_common: ('16', 11), gold_ans: 16
** most_common: ('6,250', 6), gold_ans: 6,250
** most_common: ('720', 12), gold_ans: 720
** most_common: ('35', 11), gold_ans: 35
** most_common: ('1260', 5), gold_ans: 1260
** most_common: ('18', 12), gold_ans: 14
** most_common: ('52', 12), gold_ans: 52
** most_common: ('153', 7), gold_ans: 153
** most_common: ('27', 12), gold_ans: 27
** most_common: ['none'], gold_ans: 11
** most_common: ('60', 11), gold_ans: 60
** most_common: ('14,000', 9), gold_ans: 14,000
** most_common: ('1128', 9), gold_ans: 1128
** most_common: ('324.00', 3), gold_ans: 324
** most_common: ('42', 6), gold_ans: 42
** most_common: ('40', 11), gold_ans: 40
** most_common: ('80', 10), gold_ans: 80
** most_common: ('unknown(sincethedistanceisnotgiven)', 1), gold_ans: 48
** most_common: ('140', 9), gold_ans: 140
** most_common: ('170', 1), gold_ans: 120
** most_common: ('15', 9), gold_ans: 15
** most_common: ('2', 11), gold_ans: 2
** most_common: ('16', 3), gold_ans: 16
** most_common: ('5600', 10), gold_ans: 5600
** most_common: ('10', 7), gold_ans: 10
** most_common: ('19', 12), gold_ans: 19
** most_common: ('180', 4), gold_ans: 180
** most_common: ('12', 3), gold_ans: 12
** most_common: ('11', 4), gold_ans: 11
** most_common: ['none'], gold_ans: 975
** most_common: ('10', 12), gold_ans: 10
** most_common: ('75', 7), gold_ans: 75
BackVerify: 850
** most_common: ('70', 12), gold_ans: 70
** most_common: ('110', 10), gold_ans: 110
** most_common: ('123', 8), gold_ans: 123
** most_common: ('15', 9), gold_ans: 15
** most_common: ('144', 9), gold_ans: 144
** most_common: ['none'], gold_ans: 13
** most_common: ('7', 12), gold_ans: 7
** most_common: ('14000', 10), gold_ans: 14000
** most_common: ('3430', 6), gold_ans: 3430
** most_common: ('1520', 11), gold_ans: 1520
** most_common: ('3', 9), gold_ans: 3
** most_common: ('30', 6), gold_ans: 30
** most_common: ('40', 10), gold_ans: 40
** most_common: ('110', 10), gold_ans: 110
** most_common: ('80', 5), gold_ans: 80
** most_common: ('23', 12), gold_ans: 23
** most_common: ('28', 8), gold_ans: 28
** most_common: ('7', 8), gold_ans: 7
** most_common: ('15.00', 8), gold_ans: 15
** most_common: ('500', 11), gold_ans: 500
** most_common: ('40', 5), gold_ans: 40
** most_common: ('48', 6), gold_ans: 48
** most_common: ('13.00', 8), gold_ans: 13
** most_common: ('12.00', 6), gold_ans: 12
** most_common: ('132', 4), gold_ans: 132
** most_common: ('60', 12), gold_ans: 60
** most_common: ('41', 11), gold_ans: 41
** most_common: ('7000', 8), gold_ans: 7000
** most_common: ('5', 10), gold_ans: 5
** most_common: ('575', 10), gold_ans: 575
** most_common: ('10', 2), gold_ans: 10
** most_common: ('16', 6), gold_ans: 16
** most_common: ('17', 1), gold_ans: 5
** most_common: ('25', 9), gold_ans: 25
** most_common: ('50', 12), gold_ans: 50
** most_common: ('500', 2), gold_ans: 500
** most_common: ('20', 8), gold_ans: 20
** most_common: ('34', 12), gold_ans: 34
** most_common: ('10', 9), gold_ans: 10
** most_common: ('15', 10), gold_ans: 15
** most_common: ('25', 9), gold_ans: 25
** most_common: ('55', 2), gold_ans: 55
** most_common: ('1', 12), gold_ans: 1
** most_common: ('480', 10), gold_ans: 480
** most_common: ('74', 2), gold_ans: 26
** most_common: ('74', 12), gold_ans: 74
** most_common: ('250', 8), gold_ans: 250
** most_common: ('1', 10), gold_ans: 1
** most_common: ('110', 9), gold_ans: 110
** most_common: ('16', 12), gold_ans: 16
BackVerify: 900
** most_common: ('15', 5), gold_ans: 15
** most_common: ('2.0', 3), gold_ans: 1
** most_common: ('8.00', 9), gold_ans: 8
** most_common: ('16.05', 1), gold_ans: 16
** most_common: ('8', 9), gold_ans: 8
** most_common: ('5', 9), gold_ans: 5
** most_common: ('4blueand6redshoeboxes', 3), gold_ans: 10
** most_common: ('16', 12), gold_ans: 16
** most_common: ('14', 12), gold_ans: 14
** most_common: ('38', 6), gold_ans: 38
** most_common: ('700', 12), gold_ans: 700
** most_common: ('64.00', 8), gold_ans: 64
** most_common: ('7.5', 3), gold_ans: 6
** most_common: ('6', 6), gold_ans: 6
** most_common: ('3', 11), gold_ans: 3
** most_common: ('23', 12), gold_ans: 23
** most_common: ('14', 1), gold_ans: 14
** most_common: ('12', 11), gold_ans: 12
** most_common: ('56', 11), gold_ans: 56
** most_common: ('90', 8), gold_ans: 90
** most_common: ('47', 8), gold_ans: 47
** most_common: ('4', 10), gold_ans: 4
** most_common: ('60', 12), gold_ans: 60
** most_common: ('9', 3), gold_ans: 2
** most_common: ('12', 9), gold_ans: 12
** most_common: ('2000', 7), gold_ans: 2000
** most_common: ('2', 1), gold_ans: 1
** most_common: ('85,000', 7), gold_ans: 85000
** most_common: ('60', 1), gold_ans: 60
** most_common: ('60', 6), gold_ans: 60
** most_common: ('14', 9), gold_ans: 14
** most_common: ('50', 4), gold_ans: 50
** most_common: ('24', 6), gold_ans: 24
** most_common: ('15', 10), gold_ans: 15
** most_common: ('410', 6), gold_ans: 410
** most_common: ('64,800', 3), gold_ans: 64800
** most_common: ('250', 5), gold_ans: 250
** most_common: ('159', 10), gold_ans: 159
** most_common: ('4', 3), gold_ans: 4
** most_common: ('650', 8), gold_ans: 650
** most_common: ('280', 11), gold_ans: 280
** most_common: ('842', 10), gold_ans: 842
** most_common: ('178.75', 6), gold_ans: 205
** most_common: ['none'], gold_ans: 50
** most_common: ('34.00', 9), gold_ans: 34
** most_common: ('17', 10), gold_ans: 17
** most_common: ('450', 12), gold_ans: 450
** most_common: ('13', 12), gold_ans: 13
** most_common: ('15', 8), gold_ans: 15
** most_common: ('42', 8), gold_ans: 42
BackVerify: 950
** most_common: ('5', 3), gold_ans: 5
** most_common: ('150', 4), gold_ans: 300
** most_common: ('1800', 3), gold_ans: 360
** most_common: ('452', 1), gold_ans: 452
** most_common: ('34', 10), gold_ans: 34
** most_common: ('100', 9), gold_ans: 100
** most_common: ('1', 2), gold_ans: 1
** most_common: ('45', 6), gold_ans: 45
** most_common: ('40', 4), gold_ans: 40
** most_common: ('7', 8), gold_ans: 7
** most_common: ('11', 6), gold_ans: 11
** most_common: ('225', 5), gold_ans: 225
** most_common: ('600', 10), gold_ans: 1000
** most_common: ('147', 4), gold_ans: 147
** most_common: ('200', 8), gold_ans: 200
** most_common: ('446', 1), gold_ans: 374
** most_common: ('48', 10), gold_ans: 48
** most_common: ('30', 8), gold_ans: 30
** most_common: ('227', 7), gold_ans: 227
** most_common: ('1800', 2), gold_ans: 1800
** most_common: ('33', 12), gold_ans: 33
** most_common: ('100', 12), gold_ans: 100
** most_common: ('120', 4), gold_ans: 120
** most_common: ('79', 5), gold_ans: 79
** most_common: ('5', 12), gold_ans: 5
** most_common: ('20', 7), gold_ans: 20
** most_common: ['none'], gold_ans: 540
** most_common: ('4', 10), gold_ans: 4
** most_common: ('160', 8), gold_ans: 160
** most_common: ('50', 2), gold_ans: 50
** most_common: ('90', 11), gold_ans: 90
** most_common: ('7', 9), gold_ans: 7
** most_common: ('12', 11), gold_ans: 12
** most_common: ('15', 10), gold_ans: 15
** most_common: ['none'], gold_ans: 342
** most_common: ('63', 10), gold_ans: 63
** most_common: ('70.00', 9), gold_ans: 70
** most_common: ('3', 12), gold_ans: 3
** most_common: ('6', 10), gold_ans: 6
** most_common: ('45', 2), gold_ans: 45
** most_common: ('14', 2), gold_ans: 14
** most_common: ('75', 1), gold_ans: 15
** most_common: ('52', 2), gold_ans: 52
** most_common: ('11', 5), gold_ans: 11
** most_common: ('2', 7), gold_ans: 2
** most_common: ('12', 12), gold_ans: 12
** most_common: ('3', 5), gold_ans: 3
** most_common: ('6000', 4), gold_ans: 6,600
** most_common: ('50', 12), gold_ans: 50
** most_common: ('25%', 1), gold_ans: 25
BackVerify: 1000
** most_common: ('1', 9), gold_ans: 1
** most_common: ('2.0', 3), gold_ans: 2
** most_common: ('8', 12), gold_ans: 8
** most_common: ('480', 5), gold_ans: 480
** most_common: ('8', 9), gold_ans: 8
** most_common: ('1490', 11), gold_ans: 1490
** most_common: ('828', 1), gold_ans: 826
** most_common: ('34', 12), gold_ans: 34
** most_common: ('230', 5), gold_ans: 230
** most_common: ('1875', 7), gold_ans: 1,875
** most_common: ('5', 9), gold_ans: 5
** most_common: ('6000', 5), gold_ans: 6000
** most_common: ['none'], gold_ans: 94
** most_common: ('2', 11), gold_ans: 2
** most_common: ('3', 7), gold_ans: 3
** most_common: ('78', 10), gold_ans: 78
** most_common: ('139', 3), gold_ans: 138
** most_common: ('9', 1), gold_ans: 45
** most_common: ('60', 8), gold_ans: 60
** most_common: ('98', 7), gold_ans: 98
** most_common: ('22', 12), gold_ans: 22
** most_common: ('27', 2), gold_ans: 36
** most_common: ('12', 5), gold_ans: 12
** most_common: ('77', 9), gold_ans: 77
** most_common: ('300', 9), gold_ans: 300
** most_common: ('30', 8), gold_ans: 30
** most_common: ('43200', 6), gold_ans: 43200
** most_common: ('12', 7), gold_ans: 12
** most_common: ('200', 7), gold_ans: 200
** most_common: ('34', 2), gold_ans: 34
** most_common: ['none'], gold_ans: 24
** most_common: ('5', 6), gold_ans: 5
** most_common: ('450', 6), gold_ans: 450
** most_common: ('2', 7), gold_ans: 2
** most_common: ('66', 11), gold_ans: 66
** most_common: ('40', 9), gold_ans: 35
** most_common: ('10', 8), gold_ans: 10
** most_common: ('10.0', 5), gold_ans: 10
** most_common: ('4', 2), gold_ans: 4
** most_common: ('160', 7), gold_ans: 160
** most_common: ('736', 9), gold_ans: 736
** most_common: ('101.00', 8), gold_ans: 101
** most_common: ('7.17', 1), gold_ans: 3
** most_common: ('130000', 6), gold_ans: 130000
** most_common: ('1', 7), gold_ans: 1
** most_common: ('420', 7), gold_ans: 420
** most_common: ('1.97', 1), gold_ans: 189
** most_common: ('10', 5), gold_ans: 10
** most_common: ('9,860.58', 1), gold_ans: 7400
** most_common: ('20', 10), gold_ans: 20
BackVerify: 1050
** most_common: ('1630.0', 2), gold_ans: 655
** most_common: ('15', 7), gold_ans: 15
** most_common: ('110', 11), gold_ans: 110
** most_common: ('55', 8), gold_ans: 55
** most_common: ('2400', 5), gold_ans: 2400
** most_common: ('2304', 9), gold_ans: 2304
** most_common: ('156', 5), gold_ans: 156
** most_common: ('24', 6), gold_ans: 24
** most_common: ('250', 12), gold_ans: 250
** most_common: ('2', 7), gold_ans: 2
** most_common: ('31', 10), gold_ans: 31
** most_common: ('58', 11), gold_ans: 58
** most_common: ('482', 6), gold_ans: 482
** most_common: ('320', 9), gold_ans: 320
** most_common: ('247', 8), gold_ans: 247
** most_common: ('95.0', 5), gold_ans: 95
** most_common: ('14', 10), gold_ans: 14
** most_common: ('245', 6), gold_ans: 245
** most_common: ('24', 5), gold_ans: 24
** most_common: ('300', 12), gold_ans: 300
** most_common: ('18.00', 3), gold_ans: 18
** most_common: ('251', 7), gold_ans: 251
** most_common: ('288', 1), gold_ans: 85
** most_common: ('21', 6), gold_ans: 21
** most_common: ('750', 12), gold_ans: 750
** most_common: ('20', 1), gold_ans: 16
** most_common: ('162.00', 6), gold_ans: 162
** most_common: ['none'], gold_ans: 145
** most_common: ('8', 12), gold_ans: 8
** most_common: ('10', 5), gold_ans: 10
** most_common: ('72,000', 3), gold_ans: 72000
** most_common: ('195', 11), gold_ans: 195
** most_common: ('1', 2), gold_ans: 2
** most_common: ('2.00', 11), gold_ans: 2
** most_common: ('20', 9), gold_ans: 20
** most_common: ('26', 10), gold_ans: 26
** most_common: ('131,250', 4), gold_ans: 131250
** most_common: ('48', 1), gold_ans: 12
** most_common: ('28.33', 3), gold_ans: 30
** most_common: ('32', 3), gold_ans: 32
** most_common: ('72', 11), gold_ans: 72
** most_common: ('1000', 7), gold_ans: 1000
** most_common: ('1080', 6), gold_ans: 1080
** most_common: ('144', 7), gold_ans: 144
** most_common: ['none'], gold_ans: 25
** most_common: ('270', 10), gold_ans: 270
** most_common: ('240', 5), gold_ans: 240
** most_common: ('480', 12), gold_ans: 480
** most_common: ('30', 12), gold_ans: 30
** most_common: ('2', 9), gold_ans: 2
BackVerify: 1100
** most_common: ('5', 9), gold_ans: 5
** most_common: ('16', 5), gold_ans: 16
** most_common: ('113.00', 8), gold_ans: 113
** most_common: ('90', 7), gold_ans: 90
** most_common: ('24', 12), gold_ans: 24
** most_common: ['none'], gold_ans: 40
** most_common: ('5', 9), gold_ans: 5
** most_common: ('600', 4), gold_ans: 360
** most_common: ('38', 8), gold_ans: 38
** most_common: ('3', 5), gold_ans: 3
** most_common: ('60', 8), gold_ans: 60
** most_common: ('157', 9), gold_ans: 157
** most_common: ('5', 11), gold_ans: 5
** most_common: ('-3', 9), gold_ans: -3
** most_common: ('8', 5), gold_ans: 8
** most_common: ('5', 2), gold_ans: 5
** most_common: ('60', 12), gold_ans: 60
** most_common: ('9.0', 4), gold_ans: 9
** most_common: ('5', 7), gold_ans: 5
** most_common: ('18', 6), gold_ans: 18
** most_common: ('560', 3), gold_ans: 560
** most_common: ('35', 11), gold_ans: 35
** most_common: ('18', 4), gold_ans: 18
** most_common: ('105', 9), gold_ans: 105
** most_common: ('64', 7), gold_ans: 64
** most_common: ('90', 9), gold_ans: 90
** most_common: ('50', 11), gold_ans: 50
** most_common: ('750', 7), gold_ans: 750
** most_common: ('9', 9), gold_ans: 9
** most_common: ('8', 2), gold_ans: 8
** most_common: ('25', 9), gold_ans: 25
** most_common: ('96', 7), gold_ans: 96
** most_common: ('45000', 3), gold_ans: 45000
** most_common: ('50', 8), gold_ans: 50
** most_common: ('7', 12), gold_ans: 7
** most_common: ('32', 12), gold_ans: 32
** most_common: ('26', 6), gold_ans: 26
** most_common: ('68', 3), gold_ans: 68
** most_common: ('700', 4), gold_ans: 700
** most_common: ('1.0', 8), gold_ans: 1
** most_common: ('27', 2), gold_ans: 27
** most_common: ('20', 10), gold_ans: 20
** most_common: ('9', 12), gold_ans: 9
** most_common: ('300', 11), gold_ans: 300
** most_common: ('34', 4), gold_ans: 34
** most_common: ('291', 3), gold_ans: 291
** most_common: ('16', 8), gold_ans: 16
** most_common: ['none'], gold_ans: 22
** most_common: ('9', 9), gold_ans: 9
** most_common: ('93', 7), gold_ans: 93
BackVerify: 1150
** most_common: ('21', 12), gold_ans: 21
** most_common: ('50', 7), gold_ans: 50
** most_common: ('12', 7), gold_ans: 12
** most_common: ('20', 6), gold_ans: 20
** most_common: ('30', 11), gold_ans: 30
** most_common: ('13', 9), gold_ans: 13
** most_common: ('120', 12), gold_ans: 120
** most_common: ('3', 11), gold_ans: 3
** most_common: ('7300', 3), gold_ans: 7300
** most_common: ('50', 3), gold_ans: 50
** most_common: ('1125', 9), gold_ans: 1125
** most_common: ('140', 5), gold_ans: 170
** most_common: ('3', 11), gold_ans: 3
** most_common: ('12', 7), gold_ans: 12
** most_common: ('9', 9), gold_ans: 9
** most_common: ('1248', 1), gold_ans: 1248
** most_common: ('2550', 2), gold_ans: 2350
** most_common: ('120', 12), gold_ans: 120
** most_common: ('20', 7), gold_ans: 20
** most_common: ('2', 2), gold_ans: 2
** most_common: ('2', 9), gold_ans: 2
** most_common: ('3160', 8), gold_ans: 3160
** most_common: ('93', 12), gold_ans: 93
** most_common: ('10', 3), gold_ans: 10
** most_common: ('240', 2), gold_ans: 240
** most_common: ('16', 10), gold_ans: 16
** most_common: ('5', 2), gold_ans: 2
** most_common: ('17', 9), gold_ans: 17
** most_common: ('17', 11), gold_ans: 17
** most_common: ('50', 7), gold_ans: 50
** most_common: ('5600', 9), gold_ans: 5600
** most_common: ('20', 3), gold_ans: 20
** most_common: ('18', 3), gold_ans: 1800
** most_common: ('13', 1), gold_ans: 11
** most_common: ('306', 9), gold_ans: 306
** most_common: ('6', 5), gold_ans: 6
** most_common: ('19', 10), gold_ans: 19
** most_common: ('5', 3), gold_ans: 5
** most_common: ('24', 3), gold_ans: 24
** most_common: ('6', 12), gold_ans: 6
** most_common: ('194', 1), gold_ans: 19
** most_common: ('100', 10), gold_ans: 100
** most_common: ('280', 6), gold_ans: 280
** most_common: ('9.00', 6), gold_ans: 9
** most_common: ('1200', 9), gold_ans: 1200
** most_common: ('320', 10), gold_ans: 320
** most_common: ('75', 9), gold_ans: 75
** most_common: ('2400', 10), gold_ans: 2400
** most_common: ('140', 1), gold_ans: 140
** most_common: ('2.67', 4), gold_ans: 2
BackVerify: 1200
** most_common: ('8', 12), gold_ans: 8
** most_common: ('42', 8), gold_ans: 42
** most_common: ('19', 9), gold_ans: 19
** most_common: ('240', 4), gold_ans: 240
** most_common: ('168', 10), gold_ans: 168
** most_common: ('4', 8), gold_ans: 4
** most_common: ('40,000', 9), gold_ans: 40,000
** most_common: ('64', 4), gold_ans: 64
** most_common: ('27', 7), gold_ans: 27
** most_common: ('29', 12), gold_ans: 29
** most_common: ('288', 10), gold_ans: 288
** most_common: ('448', 3), gold_ans: 448
** most_common: ('150', 12), gold_ans: 150
** most_common: ('31', 6), gold_ans: 31
** most_common: ('5', 11), gold_ans: 5
** most_common: ('36', 1), gold_ans: 36
** most_common: ['none'], gold_ans: 20
** most_common: ('75', 5), gold_ans: 75
** most_common: ('225', 1), gold_ans: 225
** most_common: ('100', 10), gold_ans: 100
** most_common: ('32', 9), gold_ans: 32
** most_common: ('10', 12), gold_ans: 10
** most_common: ('350', 11), gold_ans: 350
** most_common: ('8.00', 5), gold_ans: 8
** most_common: ('5', 10), gold_ans: 5
** most_common: ('3', 11), gold_ans: 3
** most_common: ('90', 5), gold_ans: 90
** most_common: ('66', 10), gold_ans: 66
** most_common: ('31', 10), gold_ans: 31
** most_common: ('36', 9), gold_ans: 36
** most_common: ('440', 11), gold_ans: 440
** most_common: ('70.0', 1), gold_ans: 70
** most_common: ('15', 9), gold_ans: 15
** most_common: ('81', 12), gold_ans: 81
** most_common: ('12', 8), gold_ans: 12
** most_common: ('60.0', 6), gold_ans: 60
** most_common: ('84', 5), gold_ans: 84
** most_common: ('78', 9), gold_ans: 78
** most_common: ('520.0', 4), gold_ans: 520
** most_common: ('50', 2), gold_ans: 50
** most_common: ('2', 4), gold_ans: 2
** most_common: ('8.00', 7), gold_ans: 8
** most_common: ('20', 12), gold_ans: 20
** most_common: ('50', 10), gold_ans: 50
** most_common: ('35', 3), gold_ans: 35
** most_common: ('96', 10), gold_ans: 96
** most_common: ('3360', 9), gold_ans: 3360
** most_common: ('7', 1), gold_ans: 7
** most_common: ('187.5', 1), gold_ans: 750
** most_common: ('56', 5), gold_ans: 56
BackVerify: 1250
** most_common: ('22', 5), gold_ans: 22
** most_common: ('30', 8), gold_ans: 30
** most_common: ('70', 8), gold_ans: 70
** most_common: ('120', 6), gold_ans: 120
** most_common: ('30', 10), gold_ans: 30
** most_common: ('12', 10), gold_ans: 12
** most_common: ('15', 8), gold_ans: 15
** most_common: ('14.00', 9), gold_ans: 14
** most_common: ('60', 8), gold_ans: 60
** most_common: ('7200', 7), gold_ans: 7200
** most_common: ('5', 6), gold_ans: 5
** most_common: ('235.00', 4), gold_ans: 235
** most_common: ('12', 9), gold_ans: 12
** most_common: ('500', 7), gold_ans: 500
** most_common: ('210', 6), gold_ans: 210
** most_common: ('36', 3), gold_ans: 36
** most_common: ('147', 11), gold_ans: 147
** most_common: ('80', 3), gold_ans: 40
** most_common: ('20', 10), gold_ans: 20
** most_common: ('54', 3), gold_ans: 54
** most_common: ('3528', 11), gold_ans: 3528
** most_common: ('43', 12), gold_ans: 43
** most_common: ('296', 9), gold_ans: 296
** most_common: ('27', 4), gold_ans: 27
** most_common: ('38', 9), gold_ans: 38
** most_common: ('16', 7), gold_ans: 16
** most_common: ('70', 7), gold_ans: 70
** most_common: ('48', 8), gold_ans: 48
** most_common: ('665', 11), gold_ans: 665
** most_common: ('180.00', 9), gold_ans: 180
** most_common: ('7', 8), gold_ans: 7
** most_common: ('20', 11), gold_ans: 20
** most_common: ('12', 2), gold_ans: 12
** most_common: ('60', 10), gold_ans: 60
** most_common: ('25', 6), gold_ans: 25
** most_common: ('1,218', 5), gold_ans: 1218
** most_common: ('105', 11), gold_ans: 105
** most_common: ('84', 12), gold_ans: 84
** most_common: ['none'], gold_ans: 34
** most_common: ('101', 6), gold_ans: 101
** most_common: ('90', 8), gold_ans: 90
** most_common: ('27', 11), gold_ans: 27
** most_common: ('67', 10), gold_ans: 67
** most_common: ('140,000', 9), gold_ans: 140000
** most_common: ('36', 7), gold_ans: 36
** most_common: ('2', 6), gold_ans: 2
** most_common: ('335', 8), gold_ans: 335
** most_common: ('60', 12), gold_ans: 60
** most_common: ('31.00', 3), gold_ans: 31
** most_common: ('13.00', 5), gold_ans: 13
BackVerify: 1300
** most_common: ('120', 12), gold_ans: 120
** most_common: ('23', 6), gold_ans: 23
** most_common: ('72', 12), gold_ans: 72
** most_common: ('4', 5), gold_ans: 4
** most_common: ('1000', 12), gold_ans: 1000
** most_common: ('2325', 4), gold_ans: 2325
** most_common: ('2', 2), gold_ans: 2
** most_common: ('8', 11), gold_ans: 8
** most_common: ('30', 11), gold_ans: 30
** most_common: ('2180', 5), gold_ans: 2280
** most_common: ('32', 2), gold_ans: 64
** most_common: ('594', 3), gold_ans: 594
** most_common: ('180', 3), gold_ans: 180
** most_common: ('2.0', 6), gold_ans: 2
** most_common: ('8', 2), gold_ans: 8
** most_common: ('5', 9), gold_ans: 5
** most_common: ('230', 4), gold_ans: 230
** most_common: ('5', 10), gold_ans: 5
** most_common: ('14', 9), gold_ans: 14
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  1 0
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  2 0
** answer: none, groundtruth_str: 70000
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  2 1
** answer: 540, groundtruth_str: 540
** compare on lower
** correct
**  3 1
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  4 1
** answer: 64, groundtruth_str: 64
** compare on lower
** correct
**  5 1
** answer: 260, groundtruth_str: 260
** compare on lower
** correct
**  6 1
** answer: 80, groundtruth_str: 160
** groundtruth_num is not None
** is_fraction:  80
** groundtruth_num is (int, float)
** compare_two_numbers int 80 160
** wrong
**  6 2
** answer: 315, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  315
** groundtruth_num is (int, float)
** compare_two_numbers int 315 45
** wrong
**  6 3
** answer: 460, groundtruth_str: 460
** compare on lower
** correct
**  7 3
** answer: 366, groundtruth_str: 366
** compare on lower
** correct
**  8 3
** answer: 694, groundtruth_str: 694
** compare on lower
** correct
**  9 3
** answer: 28, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  28
** groundtruth_num is (int, float)
** compare_two_numbers int 28 13
** wrong
**  9 4
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  10 4
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  11 4
** answer: 125, groundtruth_str: 125
** compare on lower
** correct
**  12 4
** answer: 230.0, groundtruth_str: 230
** groundtruth_num is not None
** is_fraction:  230.0
** groundtruth_num is (int, float)
** compare_two_numbers int 230 230
** correct
**  13 4
** answer: 57,500, groundtruth_str: 57500
** groundtruth_num is not None
** is_fraction:  57,500
** groundtruth_num is (int, float)
** compare_two_numbers int 57500 57500
** correct
**  14 4
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  15 4
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  16 4
** answer: 14.67, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  14.67
** groundtruth_num is (int, float)
** compare_two_numbers int 14.67 15
** correct
**  17 4
** answer: 2, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 14
** wrong
**  17 5
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  18 5
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  19 5
** answer: 26.00, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  26.00
** groundtruth_num is (int, float)
** compare_two_numbers int 26 26
** correct
**  20 5
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  21 5
** answer: 243, groundtruth_str: 243
** compare on lower
** correct
**  22 5
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  23 5
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  24 5
** answer: 104, groundtruth_str: 104
** compare on lower
** correct
**  25 5
** answer: 109, groundtruth_str: 109
** compare on lower
** correct
**  26 5
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  27 5
** answer: 35, groundtruth_str: 35
** compare on lower
** correct
**  28 5
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  29 5
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  30 5
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  31 5
** answer: 75.00, groundtruth_str: 75
** groundtruth_num is not None
** is_fraction:  75.00
** groundtruth_num is (int, float)
** compare_two_numbers int 75 75
** correct
**  32 5
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  33 5
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  34 5
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  35 5
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  36 5
** answer: 200, groundtruth_str: 200
** compare on lower
** correct
**  37 5
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  38 5
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  39 5
** answer: 20.00, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  20.00
** groundtruth_num is (int, float)
** compare_two_numbers int 20 20
** correct
**  40 5
** answer: 104, groundtruth_str: 104
** compare on lower
** correct
**  41 5
** answer: none, groundtruth_str: 163
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  41 6
** answer: 800, groundtruth_str: 800
** compare on lower
** correct
**  42 6
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  43 6
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  44 6
** answer: 294, groundtruth_str: 294
** compare on lower
** correct
**  45 6
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  46 6
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  47 6
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  48 6
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  49 6
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  50 6
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  51 6
** answer: 82, groundtruth_str: 83
** groundtruth_num is not None
** is_fraction:  82
** groundtruth_num is (int, float)
** compare_two_numbers int 82 83
** wrong
**  51 7
** answer: 57.00, groundtruth_str: 57
** groundtruth_num is not None
** is_fraction:  57.00
** groundtruth_num is (int, float)
** compare_two_numbers int 57 57
** correct
**  52 7
** answer: 187, groundtruth_str: 187
** compare on lower
** correct
**  53 7
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  54 7
** answer: 1430, groundtruth_str: 1430
** compare on lower
** correct
**  55 7
** answer: 75,000, groundtruth_str: 25000
** groundtruth_num is not None
** is_fraction:  75,000
** groundtruth_num is (int, float)
** compare_two_numbers int 75000 25000
** wrong
**  55 8
** answer: 1596, groundtruth_str: 1596
** compare on lower
** correct
**  56 8
** answer: 300, groundtruth_str: 300
** compare on lower
** correct
**  57 8
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  58 8
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  59 8
** answer: 595, groundtruth_str: 595
** compare on lower
** correct
**  60 8
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  61 8
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  62 8
** answer: 7425, groundtruth_str: 7425
** compare on lower
** correct
**  63 8
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  64 8
** answer: 221, groundtruth_str: 221
** compare on lower
** correct
**  65 8
** answer: 255.0, groundtruth_str: 255
** groundtruth_num is not None
** is_fraction:  255.0
** groundtruth_num is (int, float)
** compare_two_numbers int 255 255
** correct
**  66 8
** answer: 88.00, groundtruth_str: 88
** groundtruth_num is not None
** is_fraction:  88.00
** groundtruth_num is (int, float)
** compare_two_numbers int 88 88
** correct
**  67 8
** answer: 7.5, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  7.5
** groundtruth_num is (int, float)
** compare_two_numbers int 7.5 60
** wrong
**  67 9
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  68 9
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  69 9
** answer: 6.00, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  6.00
** groundtruth_num is (int, float)
** compare_two_numbers int 6 6
** correct
**  70 9
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  71 9
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  72 9
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  73 9
** answer: 623, groundtruth_str: 623
** compare on lower
** correct
**  74 9
** answer: 600, groundtruth_str: 600
** compare on lower
** correct
**  75 9
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  76 9
** answer: 44, groundtruth_str: 44
** compare on lower
** correct
**  77 9
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  78 9
** answer: 8712, groundtruth_str: 9360
** groundtruth_num is not None
** is_fraction:  8712
** groundtruth_num is (int, float)
** compare_two_numbers int 8712 9360
** wrong
**  78 10
** answer: 8000, groundtruth_str: 8000
** compare on lower
** correct
**  79 10
** answer: 18, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 24
** wrong
**  79 11
** answer: 225, groundtruth_str: 225
** compare on lower
** correct
**  80 11
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  81 11
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  82 11
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  83 11
** answer: 348, groundtruth_str: 348
** compare on lower
** correct
**  84 11
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  85 11
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  86 11
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  87 11
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  88 11
** answer: 58, groundtruth_str: 58
** compare on lower
** correct
**  89 11
** answer: 175, groundtruth_str: 175
** compare on lower
** correct
**  90 11
** answer: none, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  90 12
** answer: 20.0, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  20.0
** groundtruth_num is (int, float)
** compare_two_numbers int 20 26
** wrong
**  90 13
** answer: 140, groundtruth_str: 140
** compare on lower
** correct
**  91 13
** answer: 500, groundtruth_str: 500
** compare on lower
** correct
**  92 13
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  93 13
** answer: 72, groundtruth_str: 72
** compare on lower
** correct
**  94 13
** answer: 2, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 3
** wrong
**  94 14
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  95 14
** answer: 28.00, groundtruth_str: 28
** groundtruth_num is not None
** is_fraction:  28.00
** groundtruth_num is (int, float)
** compare_two_numbers int 28 28
** correct
**  96 14
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  97 14
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  98 14
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  99 14
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  100 14
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  101 14
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  102 14
** answer: 42, groundtruth_str: 42
** compare on lower
** correct
**  103 14
** answer: 360, groundtruth_str: 360
** compare on lower
** correct
**  104 14
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  105 14
** answer: 96000, groundtruth_str: 95200
** groundtruth_num is not None
** is_fraction:  96000
** groundtruth_num is (int, float)
** compare_two_numbers int 96000 95200
** wrong
**  105 15
** answer: 240, groundtruth_str: 240
** compare on lower
** correct
**  106 15
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  107 15
** answer: 41, groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  41
** groundtruth_num is (int, float)
** compare_two_numbers int 41 48
** wrong
**  107 16
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  108 16
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  109 16
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  110 16
** answer: 82, groundtruth_str: 82
** compare on lower
** correct
**  111 16
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  112 16
** answer: 880, groundtruth_str: 880
** compare on lower
** correct
**  113 16
** answer: 10000, groundtruth_str: 10000
** compare on lower
** correct
**  114 16
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  115 16
** answer: 940, groundtruth_str: 940
** compare on lower
** correct
**  116 16
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  117 16
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  118 16
** answer: 720, groundtruth_str: 720
** compare on lower
** correct
**  119 16
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  120 16
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  121 16
** answer: 29.00, groundtruth_str: 29
** groundtruth_num is not None
** is_fraction:  29.00
** groundtruth_num is (int, float)
** compare_two_numbers int 29 29
** correct
**  122 16
** answer: 105, groundtruth_str: 105
** compare on lower
** correct
**  123 16
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  124 16
** answer: 20%, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  20%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.2 20
** wrong
**  124 17
** answer: 400, groundtruth_str: 400
** compare on lower
** correct
**  125 17
** answer: 140, groundtruth_str: 140
** compare on lower
** correct
**  126 17
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  127 17
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  128 17
** answer: 4000, groundtruth_str: 4000
** compare on lower
** correct
**  129 17
** answer: 2125, groundtruth_str: 2,125
** groundtruth_num is not None
** is_fraction:  2125
** groundtruth_num is (int, float)
** compare_two_numbers int 2125 2125
** correct
**  130 17
** answer: 15, groundtruth_str: 75
** groundtruth_num is not None
** is_fraction:  15
** groundtruth_num is (int, float)
** compare_two_numbers int 15 75
** wrong
**  130 18
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  131 18
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  132 18
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  133 18
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  134 18
** answer: 4.00, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  4.00
** groundtruth_num is (int, float)
** compare_two_numbers int 4 4
** correct
**  135 18
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  136 18
** answer: 272, groundtruth_str: 272
** compare on lower
** correct
**  137 18
** answer: 280, groundtruth_str: 280
** compare on lower
** correct
**  138 18
** answer: 1400, groundtruth_str: 1400
** compare on lower
** correct
**  139 18
** answer: 3000, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  3000
** groundtruth_num is (int, float)
** compare_two_numbers int 3000 80
** wrong
**  139 19
** answer: 34.00, groundtruth_str: 34
** groundtruth_num is not None
** is_fraction:  34.00
** groundtruth_num is (int, float)
** compare_two_numbers int 34 34
** correct
**  140 19
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  141 19
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  142 19
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  143 19
** answer: 41.472, groundtruth_str: 92
** groundtruth_num is not None
** is_fraction:  41.472
** groundtruth_num is (int, float)
** compare_two_numbers int 41.472 92
** wrong
**  143 20
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  144 20
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  145 20
** answer: 77.00, groundtruth_str: 77
** groundtruth_num is not None
** is_fraction:  77.00
** groundtruth_num is (int, float)
** compare_two_numbers int 77 77
** correct
**  146 20
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  147 20
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  148 20
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  149 20
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  150 20
** answer: 150, groundtruth_str: 150
** compare on lower
** correct
**  151 20
** answer: 1210, groundtruth_str: 1210
** compare on lower
** correct
**  152 20
** answer: 51, groundtruth_str: 51
** compare on lower
** correct
**  153 20
** answer: 18000, groundtruth_str: 18000
** compare on lower
** correct
**  154 20
** answer: 5700, groundtruth_str: 95
** groundtruth_num is not None
** is_fraction:  5700
** groundtruth_num is (int, float)
** compare_two_numbers int 5700 95
** wrong
**  154 21
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  155 21
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  156 21
** answer: none, groundtruth_str: 350
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  156 22
** answer: 122, groundtruth_str: 122
** compare on lower
** correct
**  157 22
** answer: 130, groundtruth_str: 130
** compare on lower
** correct
**  158 22
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  159 22
** answer: 160, groundtruth_str: 160
** compare on lower
** correct
**  160 22
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  161 22
** answer: 2.0, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  2.0
** groundtruth_num is (int, float)
** compare_two_numbers int 2 2
** correct
**  162 22
** answer: 25%, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  25%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.25 25
** wrong
**  162 23
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  163 23
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  164 23
** answer: 106.12, groundtruth_str: 106
** groundtruth_num is not None
** is_fraction:  106.12
** groundtruth_num is (int, float)
** compare_two_numbers int 106.12 106
** correct
**  165 23
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  166 23
** answer: 34.0, groundtruth_str: 34
** groundtruth_num is not None
** is_fraction:  34.0
** groundtruth_num is (int, float)
** compare_two_numbers int 34 34
** correct
**  167 23
** answer: 360, groundtruth_str: 360
** compare on lower
** correct
**  168 23
** answer: 0.5, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  0.5
** groundtruth_num is (int, float)
** compare_two_numbers int 0.5 5
** wrong
**  168 24
** answer: 91, groundtruth_str: 91
** compare on lower
** correct
**  169 24
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  170 24
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  171 24
** answer: 12.00, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  12.00
** groundtruth_num is (int, float)
** compare_two_numbers int 12 12
** correct
**  172 24
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  173 24
** answer: 6277, groundtruth_str: 6277
** compare on lower
** correct
**  174 24
** answer: 320, groundtruth_str: 320
** compare on lower
** correct
**  175 24
** answer: 7500, groundtruth_str: 7500
** compare on lower
** correct
**  176 24
** answer: 55, groundtruth_str: 55
** compare on lower
** correct
**  177 24
** answer: 114200, groundtruth_str: 114,200
** groundtruth_num is not None
** is_fraction:  114200
** groundtruth_num is (int, float)
** compare_two_numbers int 114200 114200
** correct
**  178 24
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  179 24
** answer: 31, groundtruth_str: 31
** compare on lower
** correct
**  180 24
** answer: 98, groundtruth_str: 98
** compare on lower
** correct
**  181 24
** answer: 191.0, groundtruth_str: 98
** groundtruth_num is not None
** is_fraction:  191.0
** groundtruth_num is (int, float)
** compare_two_numbers int 191 98
** wrong
**  181 25
** answer: 860, groundtruth_str: 860
** compare on lower
** correct
**  182 25
** answer: 2600, groundtruth_str: 2600
** compare on lower
** correct
**  183 25
** answer: 76, groundtruth_str: 76
** compare on lower
** correct
**  184 25
** answer: 1450, groundtruth_str: 145
** groundtruth_num is not None
** is_fraction:  1450
** groundtruth_num is (int, float)
** compare_two_numbers int 1450 145
** wrong
**  184 26
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  185 26
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  186 26
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  187 26
** answer: 250, groundtruth_str: 250
** compare on lower
** correct
**  188 26
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  189 26
** answer: 44, groundtruth_str: 44
** compare on lower
** correct
**  190 26
** answer: 220, groundtruth_str: 220
** compare on lower
** correct
**  191 26
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  192 26
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  193 26
** answer: 54, groundtruth_str: 54
** compare on lower
** correct
**  194 26
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  195 26
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  196 26
** answer: 140, groundtruth_str: 140
** compare on lower
** correct
**  197 26
** answer: 20000, groundtruth_str: 20000
** compare on lower
** correct
**  198 26
** answer: 180, groundtruth_str: 180
** compare on lower
** correct
**  199 26
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  200 26
** answer: 33, groundtruth_str: 33
** compare on lower
** correct
**  201 26
** answer: 9.00, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  9.00
** groundtruth_num is (int, float)
** compare_two_numbers int 9 9
** correct
**  202 26
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  203 26
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  204 26
** answer: 276,000, groundtruth_str: 276,000
** compare on lower
** correct
**  205 26
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  206 26
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  207 26
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  208 26
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  209 26
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  210 26
** answer: 30, groundtruth_str: 31
** groundtruth_num is not None
** is_fraction:  30
** groundtruth_num is (int, float)
** compare_two_numbers int 30 31
** wrong
**  210 27
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  211 27
** answer: 68, groundtruth_str: 68
** compare on lower
** correct
**  212 27
** answer: 280, groundtruth_str: 280
** compare on lower
** correct
**  213 27
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  214 27
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  215 27
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  216 27
** answer: 250, groundtruth_str: 250
** compare on lower
** correct
**  217 27
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  218 27
** answer: 14, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  14
** groundtruth_num is (int, float)
** compare_two_numbers int 14 7
** wrong
**  218 28
** answer: 27000, groundtruth_str: 27000
** compare on lower
** correct
**  219 28
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  220 28
** answer: 300, groundtruth_str: 300
** compare on lower
** correct
**  221 28
** answer: 5600, groundtruth_str: 5,600
** groundtruth_num is not None
** is_fraction:  5600
** groundtruth_num is (int, float)
** compare_two_numbers int 5600 5600
** correct
**  222 28
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  223 28
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  224 28
** answer: 73, groundtruth_str: 73
** compare on lower
** correct
**  225 28
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  226 28
** answer: 84, groundtruth_str: 84
** compare on lower
** correct
**  227 28
** answer: 192, groundtruth_str: 192
** compare on lower
** correct
**  228 28
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  229 28
** answer: 5600, groundtruth_str: 5600
** compare on lower
** correct
**  230 28
** answer: 6.00, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  6.00
** groundtruth_num is (int, float)
** compare_two_numbers int 6 6
** correct
**  231 28
** answer: 168, groundtruth_str: 168
** compare on lower
** correct
**  232 28
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  233 28
** answer: 62.00, groundtruth_str: 62
** groundtruth_num is not None
** is_fraction:  62.00
** groundtruth_num is (int, float)
** compare_two_numbers int 62 62
** correct
**  234 28
** answer: 270, groundtruth_str: 270
** compare on lower
** correct
**  235 28
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  236 28
** answer: 400, groundtruth_str: 400
** compare on lower
** correct
**  237 28
** answer: 9,500, groundtruth_str: 9500
** groundtruth_num is not None
** is_fraction:  9,500
** groundtruth_num is (int, float)
** compare_two_numbers int 9500 9500
** correct
**  238 28
** answer: 118,000, groundtruth_str: 118000
** groundtruth_num is not None
** is_fraction:  118,000
** groundtruth_num is (int, float)
** compare_two_numbers int 118000 118000
** correct
**  239 28
** answer: 71, groundtruth_str: 91
** groundtruth_num is not None
** is_fraction:  71
** groundtruth_num is (int, float)
** compare_two_numbers int 71 91
** wrong
**  239 29
** answer: 1375, groundtruth_str: 1375
** compare on lower
** correct
**  240 29
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  241 29
** answer: 762, groundtruth_str: 762
** compare on lower
** correct
**  242 29
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  243 29
** answer: 5.05, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  5.05
** groundtruth_num is (int, float)
** compare_two_numbers int 5.05 5
** correct
**  244 29
** answer: 315, groundtruth_str: 315
** compare on lower
** correct
**  245 29
** answer: 3200, groundtruth_str: 3200
** compare on lower
** correct
**  246 29
** answer: 138, groundtruth_str: 138
** compare on lower
** correct
**  247 29
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  248 29
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  249 29
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  250 29
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  251 29
** answer: 7.00, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  7.00
** groundtruth_num is (int, float)
** compare_two_numbers int 7 7
** correct
**  252 29
** answer: 2450, groundtruth_str: 2450
** compare on lower
** correct
**  253 29
** answer: 195, groundtruth_str: 195
** compare on lower
** correct
**  254 29
** answer: 68, groundtruth_str: 68
** compare on lower
** correct
**  255 29
** answer: 360, groundtruth_str: 360
** compare on lower
** correct
**  256 29
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  257 29
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  258 29
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  259 29
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  260 29
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  261 29
** answer: 390, groundtruth_str: 390
** compare on lower
** correct
**  262 29
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  263 29
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  264 29
** answer: 83, groundtruth_str: 83
** compare on lower
** correct
**  265 29
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  266 29
** answer: 370, groundtruth_str: 370
** compare on lower
** correct
**  267 29
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  268 29
** answer: 55, groundtruth_str: 55
** compare on lower
** correct
**  269 29
** answer: 400, groundtruth_str: 500
** groundtruth_num is not None
** is_fraction:  400
** groundtruth_num is (int, float)
** compare_two_numbers int 400 500
** wrong
**  269 30
** answer: 31,800, groundtruth_str: 31800
** groundtruth_num is not None
** is_fraction:  31,800
** groundtruth_num is (int, float)
** compare_two_numbers int 31800 31800
** correct
**  270 30
** answer: 78, groundtruth_str: 78
** compare on lower
** correct
**  271 30
** answer: 16, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 8
** wrong
**  271 31
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  272 31
** answer: none, groundtruth_str: 1300
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  272 32
** answer: 3200, groundtruth_str: 3200
** compare on lower
** correct
**  273 32
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  274 32
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  275 32
** answer: 4, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  4
** groundtruth_num is (int, float)
** compare_two_numbers int 4 16
** wrong
**  275 33
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  276 33
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  277 33
** answer: 4000, groundtruth_str: 2050
** groundtruth_num is not None
** is_fraction:  4000
** groundtruth_num is (int, float)
** compare_two_numbers int 4000 2050
** wrong
**  277 34
** answer: 91, groundtruth_str: 91
** compare on lower
** correct
**  278 34
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  279 34
** answer: 120000, groundtruth_str: 120000
** compare on lower
** correct
**  280 34
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  281 34
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  282 34
** answer: 156, groundtruth_str: 156
** compare on lower
** correct
**  283 34
** answer: 12.0, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  12.0
** groundtruth_num is (int, float)
** compare_two_numbers int 12 12
** correct
**  284 34
** answer: 123, groundtruth_str: 123
** compare on lower
** correct
**  285 34
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  286 34
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  287 34
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  288 34
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  289 34
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  290 34
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  291 34
** answer: 224,000, groundtruth_str: 224000
** groundtruth_num is not None
** is_fraction:  224,000
** groundtruth_num is (int, float)
** compare_two_numbers int 224000 224000
** correct
**  292 34
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  293 34
** answer: 31, groundtruth_str: 31
** compare on lower
** correct
**  294 34
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  295 34
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  296 34
** answer: 31, groundtruth_str: 31
** compare on lower
** correct
**  297 34
** answer: 8,400, groundtruth_str: 8400
** groundtruth_num is not None
** is_fraction:  8,400
** groundtruth_num is (int, float)
** compare_two_numbers int 8400 8400
** correct
**  298 34
** answer: 44, groundtruth_str: 44
** compare on lower
** correct
**  299 34
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  300 34
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  301 34
** answer: 310.0, groundtruth_str: 310
** groundtruth_num is not None
** is_fraction:  310.0
** groundtruth_num is (int, float)
** compare_two_numbers int 310 310
** correct
**  302 34
** answer: 72, groundtruth_str: 72
** compare on lower
** correct
**  303 34
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  304 34
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  305 34
** answer: 160, groundtruth_str: 160
** compare on lower
** correct
**  306 34
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  307 34
** answer: 260, groundtruth_str: 260
** compare on lower
** correct
**  308 34
** answer: 87, groundtruth_str: 87
** compare on lower
** correct
**  309 34
** answer: 180,000, groundtruth_str: 180000
** groundtruth_num is not None
** is_fraction:  180,000
** groundtruth_num is (int, float)
** compare_two_numbers int 180000 180000
** correct
**  310 34
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  311 34
** answer: 310, groundtruth_str: 310
** compare on lower
** correct
**  312 34
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  313 34
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  314 34
** answer: 10.0, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  10.0
** groundtruth_num is (int, float)
** compare_two_numbers int 10 10
** correct
**  315 34
** answer: 2640, groundtruth_str: 2640
** compare on lower
** correct
**  316 34
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  317 34
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  318 34
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  319 34
** answer: 16, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  16
** groundtruth_num is (int, float)
** compare_two_numbers int 16 20
** wrong
**  319 35
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  320 35
** answer: 34, groundtruth_str: 34
** compare on lower
** correct
**  321 35
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  322 35
** answer: 60, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 2
** wrong
**  322 36
** answer: 20.00, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  20.00
** groundtruth_num is (int, float)
** compare_two_numbers int 20 20
** correct
**  323 36
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  324 36
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  325 36
** answer: 900, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  900
** groundtruth_num is (int, float)
** compare_two_numbers int 900 20
** wrong
**  325 37
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  326 37
** answer: 6.0, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  6.0
** groundtruth_num is (int, float)
** compare_two_numbers int 6 6
** correct
**  327 37
** answer: 49, groundtruth_str: 49
** compare on lower
** correct
**  328 37
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  329 37
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  330 37
** answer: 19, groundtruth_str: 19
** compare on lower
** correct
**  331 37
** answer: 10, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  10
** groundtruth_num is (int, float)
** compare_two_numbers int 10 18
** wrong
**  331 38
** answer: 1198, groundtruth_str: 1198
** compare on lower
** correct
**  332 38
** answer: 320, groundtruth_str: 320
** compare on lower
** correct
**  333 38
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  334 38
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  335 38
** answer: 240,000, groundtruth_str: 240000
** groundtruth_num is not None
** is_fraction:  240,000
** groundtruth_num is (int, float)
** compare_two_numbers int 240000 240000
** correct
**  336 38
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  337 38
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  338 38
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  339 38
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  340 38
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  341 38
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  342 38
** answer: 760.53, groundtruth_str: 803
** groundtruth_num is not None
** is_fraction:  760.53
** groundtruth_num is (int, float)
** compare_two_numbers int 760.53 803
** wrong
**  342 39
** answer: 67, groundtruth_str: 67
** compare on lower
** correct
**  343 39
** answer: 350, groundtruth_str: 350
** compare on lower
** correct
**  344 39
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  345 39
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  346 39
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  347 39
** answer: 400, groundtruth_str: 80
** groundtruth_num is not None
** is_fraction:  400
** groundtruth_num is (int, float)
** compare_two_numbers int 400 80
** wrong
**  347 40
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  348 40
** answer: 88, groundtruth_str: 88
** compare on lower
** correct
**  349 40
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  350 40
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  351 40
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  352 40
** answer: 34, groundtruth_str: 34
** compare on lower
** correct
**  353 40
** answer: 20.0, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  20.0
** groundtruth_num is (int, float)
** compare_two_numbers int 20 20
** correct
**  354 40
** answer: 92, groundtruth_str: 92
** compare on lower
** correct
**  355 40
** answer: 38, groundtruth_str: 38
** compare on lower
** correct
**  356 40
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  357 40
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  358 40
** answer: 168, groundtruth_str: 168
** compare on lower
** correct
**  359 40
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  360 40
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  361 40
** answer: 14400, groundtruth_str: 14400
** compare on lower
** correct
**  362 40
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  363 40
** answer: 135, groundtruth_str: 81
** groundtruth_num is not None
** is_fraction:  135
** groundtruth_num is (int, float)
** compare_two_numbers int 135 81
** wrong
**  363 41
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  364 41
** answer: 50.00, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  50.00
** groundtruth_num is (int, float)
** compare_two_numbers int 50 50
** correct
**  365 41
** answer: 200, groundtruth_str: 200
** compare on lower
** correct
**  366 41
** answer: 2000, groundtruth_str: 2000
** compare on lower
** correct
**  367 41
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  368 41
** answer: 42,000, groundtruth_str: 168000
** groundtruth_num is not None
** is_fraction:  42,000
** groundtruth_num is (int, float)
** compare_two_numbers int 42000 168000
** wrong
**  368 42
** answer: 3.00, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  3.00
** groundtruth_num is (int, float)
** compare_two_numbers int 3 3
** correct
**  369 42
** answer: 1110, groundtruth_str: 1110
** compare on lower
** correct
**  370 42
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  371 42
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  372 42
** answer: 56, groundtruth_str: 56
** compare on lower
** correct
**  373 42
** answer: 350, groundtruth_str: 350
** compare on lower
** correct
**  374 42
** answer: 56, groundtruth_str: 56
** compare on lower
** correct
**  375 42
** answer: 3140.0, groundtruth_str: 3140
** groundtruth_num is not None
** is_fraction:  3140.0
** groundtruth_num is (int, float)
** compare_two_numbers int 3140 3140
** correct
**  376 42
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  377 42
** answer: 3000, groundtruth_str: 3000
** compare on lower
** correct
**  378 42
** answer: 17000, groundtruth_str: 17000
** compare on lower
** correct
**  379 42
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  380 42
** answer: 256, groundtruth_str: 284
** groundtruth_num is not None
** is_fraction:  256
** groundtruth_num is (int, float)
** compare_two_numbers int 256 284
** wrong
**  380 43
** answer: 6, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 8
** wrong
**  380 44
** answer: 570, groundtruth_str: 570
** compare on lower
** correct
**  381 44
** answer: 150, groundtruth_str: 150
** compare on lower
** correct
**  382 44
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  383 44
** answer: 150, groundtruth_str: 150
** compare on lower
** correct
**  384 44
** answer: 22, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  22
** groundtruth_num is (int, float)
** compare_two_numbers int 22 26
** wrong
**  384 45
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  385 45
** answer: 132.00, groundtruth_str: 132
** groundtruth_num is not None
** is_fraction:  132.00
** groundtruth_num is (int, float)
** compare_two_numbers int 132 132
** correct
**  386 45
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  387 45
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  388 45
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  389 45
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  390 45
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  391 45
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  392 45
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  393 45
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  394 45
** answer: none, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  394 46
** answer: 98, groundtruth_str: 98
** compare on lower
** correct
**  395 46
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  396 46
** answer: 49, groundtruth_str: 49
** compare on lower
** correct
**  397 46
** answer: 49, groundtruth_str: 59
** groundtruth_num is not None
** is_fraction:  49
** groundtruth_num is (int, float)
** compare_two_numbers int 49 59
** wrong
**  397 47
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  398 47
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  399 47
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  400 47
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  401 47
** answer: 539, groundtruth_str: 539
** compare on lower
** correct
**  402 47
** answer: 112, groundtruth_str: 112
** compare on lower
** correct
**  403 47
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  404 47
** answer: 11050, groundtruth_str: 11050
** compare on lower
** correct
**  405 47
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  406 47
** answer: 6400, groundtruth_str: 6400
** compare on lower
** correct
**  407 47
** answer: 240, groundtruth_str: 150
** groundtruth_num is not None
** is_fraction:  240
** groundtruth_num is (int, float)
** compare_two_numbers int 240 150
** wrong
**  407 48
** answer: 1920, groundtruth_str: 1920
** compare on lower
** correct
**  408 48
** answer: 78, groundtruth_str: 78
** compare on lower
** correct
**  409 48
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  410 48
** answer: 35, groundtruth_str: 35
** compare on lower
** correct
**  411 48
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  412 48
** answer: 84, groundtruth_str: 84
** compare on lower
** correct
**  413 48
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  414 48
** answer: 71, groundtruth_str: 71
** compare on lower
** correct
**  415 48
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  416 48
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  417 48
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  418 48
** answer: 1.00, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  1.00
** groundtruth_num is (int, float)
** compare_two_numbers int 1 1
** correct
**  419 48
** answer: 1200, groundtruth_str: 1200
** compare on lower
** correct
**  420 48
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  421 48
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  422 48
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  423 48
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  424 48
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  425 48
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  426 48
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  427 48
** answer: 60, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 20
** wrong
**  427 49
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  428 49
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  429 49
** answer: 621, groundtruth_str: 621
** compare on lower
** correct
**  430 49
** answer: 15400, groundtruth_str: 15400
** compare on lower
** correct
**  431 49
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  432 49
** answer: 84, groundtruth_str: 84
** compare on lower
** correct
**  433 49
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  434 49
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  435 49
** answer: 240, groundtruth_str: 240
** compare on lower
** correct
**  436 49
** answer: 220, groundtruth_str: 220
** compare on lower
** correct
**  437 49
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  438 49
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  439 49
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  440 49
** answer: -10.0, groundtruth_str: -10
** groundtruth_num is not None
** is_fraction:  -10.0
** groundtruth_num is (int, float)
** compare_two_numbers int -10 -10
** correct
**  441 49
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  442 49
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  443 49
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  444 49
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  445 49
** answer: 53.0, groundtruth_str: 21
** groundtruth_num is not None
** is_fraction:  53.0
** groundtruth_num is (int, float)
** compare_two_numbers int 53 21
** wrong
**  445 50
** answer: 200, groundtruth_str: 200
** compare on lower
** correct
**  446 50
** answer: 38, groundtruth_str: 38
** compare on lower
** correct
**  447 50
** answer: 112, groundtruth_str: 112
** compare on lower
** correct
**  448 50
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  449 50
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  450 50
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  451 50
** answer: 273, groundtruth_str: 273
** compare on lower
** correct
**  452 50
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  453 50
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  454 50
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  455 50
** answer: 1200, groundtruth_str: 1,600
** groundtruth_num is not None
** is_fraction:  1200
** groundtruth_num is (int, float)
** compare_two_numbers int 1200 1600
** wrong
**  455 51
** answer: 144, groundtruth_str: 144
** compare on lower
** correct
**  456 51
** answer: 2.00, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  2.00
** groundtruth_num is (int, float)
** compare_two_numbers int 2 2
** correct
**  457 51
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  458 51
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  459 51
** answer: none, groundtruth_str: 525
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  459 52
** answer: 110, groundtruth_str: 110
** compare on lower
** correct
**  460 52
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  461 52
** answer: 300, groundtruth_str: 300
** compare on lower
** correct
**  462 52
** answer: 90,000, groundtruth_str: 90000
** groundtruth_num is not None
** is_fraction:  90,000
** groundtruth_num is (int, float)
** compare_two_numbers int 90000 90000
** correct
**  463 52
** answer: 160, groundtruth_str: 160
** compare on lower
** correct
**  464 52
** answer: 375, groundtruth_str: 375
** compare on lower
** correct
**  465 52
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  466 52
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  467 52
** answer: 280, groundtruth_str: 280
** compare on lower
** correct
**  468 52
** answer: 63, groundtruth_str: 63
** compare on lower
** correct
**  469 52
** answer: 39, groundtruth_str: 39
** compare on lower
** correct
**  470 52
** answer: 29, groundtruth_str: 29
** compare on lower
** correct
**  471 52
** answer: 74, groundtruth_str: 74
** compare on lower
** correct
**  472 52
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  473 52
** answer: 36, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  36
** groundtruth_num is (int, float)
** compare_two_numbers int 36 12
** wrong
**  473 53
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  474 53
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  475 53
** answer: 172, groundtruth_str: 172
** compare on lower
** correct
**  476 53
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  477 53
** answer: 40, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  40
** groundtruth_num is (int, float)
** compare_two_numbers int 40 36
** wrong
**  477 54
** answer: none, groundtruth_str: 66
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  477 55
** answer: 35, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  35
** groundtruth_num is (int, float)
** compare_two_numbers int 35 25
** wrong
**  477 56
** answer: 300, groundtruth_str: 300
** compare on lower
** correct
**  478 56
** answer: 300, groundtruth_str: 300
** compare on lower
** correct
**  479 56
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  480 56
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  481 56
** answer: 188, groundtruth_str: 188
** compare on lower
** correct
**  482 56
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  483 56
** answer: 60, groundtruth_str: 35
** groundtruth_num is not None
** is_fraction:  60
** groundtruth_num is (int, float)
** compare_two_numbers int 60 35
** wrong
**  483 57
** answer: 39, groundtruth_str: 39
** compare on lower
** correct
**  484 57
** answer: 25, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  25
** groundtruth_num is (int, float)
** compare_two_numbers int 25 50
** wrong
**  484 58
** answer: 7.00, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  7.00
** groundtruth_num is (int, float)
** compare_two_numbers int 7 7
** correct
**  485 58
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  486 58
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  487 58
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  488 58
** answer: 65, groundtruth_str: 130
** groundtruth_num is not None
** is_fraction:  65
** groundtruth_num is (int, float)
** compare_two_numbers int 65 130
** wrong
**  488 59
** answer: 81, groundtruth_str: 81
** compare on lower
** correct
**  489 59
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  490 59
** answer: 398, groundtruth_str: 398
** compare on lower
** correct
**  491 59
** answer: 27.00, groundtruth_str: 27
** groundtruth_num is not None
** is_fraction:  27.00
** groundtruth_num is (int, float)
** compare_two_numbers int 27 27
** correct
**  492 59
** answer: 17.00, groundtruth_str: 17
** groundtruth_num is not None
** is_fraction:  17.00
** groundtruth_num is (int, float)
** compare_two_numbers int 17 17
** correct
**  493 59
** answer: 450, groundtruth_str: 450
** compare on lower
** correct
**  494 59
** answer: 92, groundtruth_str: 92
** compare on lower
** correct
**  495 59
** answer: 54, groundtruth_str: 54
** compare on lower
** correct
**  496 59
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  497 59
** answer: 160, groundtruth_str: 160
** compare on lower
** correct
**  498 59
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  499 59
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  500 59
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  501 59
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  502 59
** answer: 180, groundtruth_str: 180
** compare on lower
** correct
**  503 59
** answer: 82, groundtruth_str: 82
** compare on lower
** correct
**  504 59
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  505 59
** answer: 240, groundtruth_str: 240
** compare on lower
** correct
**  506 59
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  507 59
** answer: 8, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  8
** groundtruth_num is (int, float)
** compare_two_numbers int 8 10
** wrong
**  507 60
** answer: 9.00, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  9.00
** groundtruth_num is (int, float)
** compare_two_numbers int 9 9
** correct
**  508 60
** answer: 175, groundtruth_str: 175
** compare on lower
** correct
**  509 60
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  510 60
** answer: 20, groundtruth_str: 23
** groundtruth_num is not None
** is_fraction:  20
** groundtruth_num is (int, float)
** compare_two_numbers int 20 23
** wrong
**  510 61
** answer: 308, groundtruth_str: 308
** compare on lower
** correct
**  511 61
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  512 61
** answer: 600, groundtruth_str: 600
** compare on lower
** correct
**  513 61
** answer: 37.00, groundtruth_str: 37
** groundtruth_num is not None
** is_fraction:  37.00
** groundtruth_num is (int, float)
** compare_two_numbers int 37 37
** correct
**  514 61
** answer: 36.00, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  36.00
** groundtruth_num is (int, float)
** compare_two_numbers int 36 36
** correct
**  515 61
** answer: 11232, groundtruth_str: 11232
** compare on lower
** correct
**  516 61
** answer: 40.0, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  40.0
** groundtruth_num is (int, float)
** compare_two_numbers int 40 40
** correct
**  517 61
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  518 61
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  519 61
** answer: 499.2, groundtruth_str: 500
** groundtruth_num is not None
** is_fraction:  499.2
** groundtruth_num is (int, float)
** compare_two_numbers int 499.2 500
** wrong
**  519 62
** answer: 215, groundtruth_str: 215
** compare on lower
** correct
**  520 62
** answer: 129,200, groundtruth_str: 129200
** groundtruth_num is not None
** is_fraction:  129,200
** groundtruth_num is (int, float)
** compare_two_numbers int 129200 129200
** correct
**  521 62
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  522 62
** answer: 2.00, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  2.00
** groundtruth_num is (int, float)
** compare_two_numbers int 2 2
** correct
**  523 62
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  524 62
** answer: 800, groundtruth_str: 800
** compare on lower
** correct
**  525 62
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  526 62
** answer: 52.0, groundtruth_str: 52
** groundtruth_num is not None
** is_fraction:  52.0
** groundtruth_num is (int, float)
** compare_two_numbers int 52 52
** correct
**  527 62
** answer: 2.5, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  2.5
** groundtruth_num is (int, float)
** compare_two_numbers int 2.5 15
** wrong
**  527 63
** answer: 318, groundtruth_str: 319
** groundtruth_num is not None
** is_fraction:  318
** groundtruth_num is (int, float)
** compare_two_numbers int 318 319
** wrong
**  527 64
** answer: 220, groundtruth_str: 220
** compare on lower
** correct
**  528 64
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  529 64
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  530 64
** answer: 42, groundtruth_str: 42
** compare on lower
** correct
**  531 64
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  532 64
** answer: 260, groundtruth_str: 260
** compare on lower
** correct
**  533 64
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  534 64
** answer: 69, groundtruth_str: 69
** compare on lower
** correct
**  535 64
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  536 64
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  537 64
** answer: 104, groundtruth_str: 104
** compare on lower
** correct
**  538 64
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  539 64
** answer: 1260, groundtruth_str: 1800
** groundtruth_num is not None
** is_fraction:  1260
** groundtruth_num is (int, float)
** compare_two_numbers int 1260 1800
** wrong
**  539 65
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  540 65
** answer: 42, groundtruth_str: 42
** compare on lower
** correct
**  541 65
** answer: 6.005, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  6.005
** groundtruth_num is (int, float)
** compare_two_numbers int 6.005 6
** correct
**  542 65
** answer: 40, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  40
** groundtruth_num is (int, float)
** compare_two_numbers int 40 10
** wrong
**  542 66
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  543 66
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  544 66
** answer: 65960.0, groundtruth_str: 65,960
** groundtruth_num is not None
** is_fraction:  65960.0
** groundtruth_num is (int, float)
** compare_two_numbers int 65960 65960
** correct
**  545 66
** answer: 775000.0, groundtruth_str: 1,450,000
** groundtruth_num is not None
** is_fraction:  775000.0
** groundtruth_num is (int, float)
** compare_two_numbers int 775000 1450000
** wrong
**  545 67
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  546 67
** answer: 93,000, groundtruth_str: 93000
** groundtruth_num is not None
** is_fraction:  93,000
** groundtruth_num is (int, float)
** compare_two_numbers int 93000 93000
** correct
**  547 67
** answer: 312, groundtruth_str: 312
** compare on lower
** correct
**  548 67
** answer: 33.00, groundtruth_str: 33
** groundtruth_num is not None
** is_fraction:  33.00
** groundtruth_num is (int, float)
** compare_two_numbers int 33 33
** correct
**  549 67
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  550 67
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  551 67
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  552 67
** answer: 76, groundtruth_str: 76
** compare on lower
** correct
**  553 67
** answer: 1509, groundtruth_str: 1509
** compare on lower
** correct
**  554 67
** answer: 3000, groundtruth_str: 3000
** compare on lower
** correct
**  555 67
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  556 67
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  557 67
** answer: 85, groundtruth_str: 85
** compare on lower
** correct
**  558 67
** answer: 160, groundtruth_str: 160
** compare on lower
** correct
**  559 67
** answer: 72, groundtruth_str: 72
** compare on lower
** correct
**  560 67
** answer: 54, groundtruth_str: 54
** compare on lower
** correct
**  561 67
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  562 67
** answer: 17,500, groundtruth_str: 17500
** groundtruth_num is not None
** is_fraction:  17,500
** groundtruth_num is (int, float)
** compare_two_numbers int 17500 17500
** correct
**  563 67
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  564 67
** answer: 4800, groundtruth_str: 4800
** compare on lower
** correct
**  565 67
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  566 67
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  567 67
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  568 67
** answer: 9, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 4
** wrong
**  568 68
** answer: 1050, groundtruth_str: 1050
** compare on lower
** correct
**  569 68
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  570 68
** answer: 12.0, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  12.0
** groundtruth_num is (int, float)
** compare_two_numbers int 12 12
** correct
**  571 68
** answer: 216, groundtruth_str: 216
** compare on lower
** correct
**  572 68
** answer: 43,500, groundtruth_str: 43,500
** compare on lower
** correct
**  573 68
** answer: 372,000, groundtruth_str: 262500
** groundtruth_num is not None
** is_fraction:  372,000
** groundtruth_num is (int, float)
** compare_two_numbers int 372000 262500
** wrong
**  573 69
** answer: 10800, groundtruth_str: 10,800
** groundtruth_num is not None
** is_fraction:  10800
** groundtruth_num is (int, float)
** compare_two_numbers int 10800 10800
** correct
**  574 69
** answer: 840, groundtruth_str: 840
** compare on lower
** correct
**  575 69
** answer: 29, groundtruth_str: 29
** compare on lower
** correct
**  576 69
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  577 69
** answer: 79, groundtruth_str: 79
** compare on lower
** correct
**  578 69
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  579 69
** answer: 54, groundtruth_str: 54
** compare on lower
** correct
**  580 69
** answer: none, groundtruth_str: 162000
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  580 70
** answer: 142, groundtruth_str: 142
** compare on lower
** correct
**  581 70
** answer: 2100, groundtruth_str: 2100
** compare on lower
** correct
**  582 70
** answer: 105, groundtruth_str: 75
** groundtruth_num is not None
** is_fraction:  105
** groundtruth_num is (int, float)
** compare_two_numbers int 105 75
** wrong
**  582 71
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  583 71
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  584 71
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  585 71
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  586 71
** answer: 330,000, groundtruth_str: 330000
** groundtruth_num is not None
** is_fraction:  330,000
** groundtruth_num is (int, float)
** compare_two_numbers int 330000 330000
** correct
**  587 71
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  588 71
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  589 71
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  590 71
** answer: 44, groundtruth_str: 44
** compare on lower
** correct
**  591 71
** answer: 7.00, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  7.00
** groundtruth_num is (int, float)
** compare_two_numbers int 7 7
** correct
**  592 71
** answer: 193, groundtruth_str: 193
** compare on lower
** correct
**  593 71
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  594 71
** answer: 360, groundtruth_str: 360
** compare on lower
** correct
**  595 71
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  596 71
** answer: 53, groundtruth_str: 53
** compare on lower
** correct
**  597 71
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  598 71
** answer: 132, groundtruth_str: 132
** compare on lower
** correct
**  599 71
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  600 71
** answer: 4.00, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  4.00
** groundtruth_num is (int, float)
** compare_two_numbers int 4 4
** correct
**  601 71
** answer: 5, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 2
** wrong
**  601 72
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  602 72
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  603 72
** answer: 21, groundtruth_str: 33
** groundtruth_num is not None
** is_fraction:  21
** groundtruth_num is (int, float)
** compare_two_numbers int 21 33
** wrong
**  603 73
** answer: 240, groundtruth_str: 240
** compare on lower
** correct
**  604 73
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  605 73
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  606 73
** answer: 576, groundtruth_str: 576
** compare on lower
** correct
**  607 73
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  608 73
** answer: 298, groundtruth_str: 298
** compare on lower
** correct
**  609 73
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  610 73
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  611 73
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  612 73
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  613 73
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  614 73
** answer: 22, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  22
** groundtruth_num is (int, float)
** compare_two_numbers int 22 13
** wrong
**  614 74
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  615 74
** answer: 7.0, groundtruth_str: 7
** groundtruth_num is not None
** is_fraction:  7.0
** groundtruth_num is (int, float)
** compare_two_numbers int 7 7
** correct
**  616 74
** answer: 5760, groundtruth_str: 5760
** compare on lower
** correct
**  617 74
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  618 74
** answer: 32.00, groundtruth_str: 32
** groundtruth_num is not None
** is_fraction:  32.00
** groundtruth_num is (int, float)
** compare_two_numbers int 32 32
** correct
**  619 74
** answer: 68, groundtruth_str: 68
** compare on lower
** correct
**  620 74
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  621 74
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  622 74
** answer: 145, groundtruth_str: 145
** compare on lower
** correct
**  623 74
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  624 74
** answer: 720.00, groundtruth_str: 720
** groundtruth_num is not None
** is_fraction:  720.00
** groundtruth_num is (int, float)
** compare_two_numbers int 720 720
** correct
**  625 74
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  626 74
** answer: 135, groundtruth_str: 135
** compare on lower
** correct
**  627 74
** answer: none, groundtruth_str: 200
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  627 75
** answer: 2,800, groundtruth_str: 2800
** groundtruth_num is not None
** is_fraction:  2,800
** groundtruth_num is (int, float)
** compare_two_numbers int 2800 2800
** correct
**  628 75
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  629 75
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  630 75
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  631 75
** answer: 6, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 9
** wrong
**  631 76
** answer: 8.0, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  8.0
** groundtruth_num is (int, float)
** compare_two_numbers int 8 8
** correct
**  632 76
** answer: 168, groundtruth_str: 168
** compare on lower
** correct
**  633 76
** answer: 3000, groundtruth_str: 3000
** compare on lower
** correct
**  634 76
** answer: 45.00, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  45.00
** groundtruth_num is (int, float)
** compare_two_numbers int 45 45
** correct
**  635 76
** answer: 3, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  3
** groundtruth_num is (int, float)
** compare_two_numbers int 3 6
** wrong
**  635 77
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  636 77
** answer: 576, groundtruth_str: 576
** compare on lower
** correct
**  637 77
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  638 77
** answer: 385000, groundtruth_str: 385000
** compare on lower
** correct
**  639 77
** answer: 770, groundtruth_str: 770
** compare on lower
** correct
**  640 77
** answer: 5.00, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  5.00
** groundtruth_num is (int, float)
** compare_two_numbers int 5 5
** correct
**  641 77
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  642 77
** answer: 175, groundtruth_str: 175
** compare on lower
** correct
**  643 77
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  644 77
** answer: 2050, groundtruth_str: 2450
** groundtruth_num is not None
** is_fraction:  2050
** groundtruth_num is (int, float)
** compare_two_numbers int 2050 2450
** wrong
**  644 78
** answer: 195, groundtruth_str: 255
** groundtruth_num is not None
** is_fraction:  195
** groundtruth_num is (int, float)
** compare_two_numbers int 195 255
** wrong
**  644 79
** answer: 160, groundtruth_str: 160
** compare on lower
** correct
**  645 79
** answer: none, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  645 80
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  646 80
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  647 80
** answer: 112, groundtruth_str: 112
** compare on lower
** correct
**  648 80
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  649 80
** answer: 1000, groundtruth_str: 1000
** compare on lower
** correct
**  650 80
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  651 80
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  652 80
** answer: 87, groundtruth_str: 87
** compare on lower
** correct
**  653 80
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  654 80
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  655 80
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  656 80
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  657 80
** answer: 2.0, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  2.0
** groundtruth_num is (int, float)
** compare_two_numbers int 2 2
** correct
**  658 80
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  659 80
** answer: 98, groundtruth_str: 98
** compare on lower
** correct
**  660 80
** answer: 20, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  20
** groundtruth_num is (int, float)
** compare_two_numbers int 20 25
** wrong
**  660 81
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  661 81
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  662 81
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  663 81
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  664 81
** answer: 1100, groundtruth_str: 1100
** compare on lower
** correct
**  665 81
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  666 81
** answer: 350, groundtruth_str: 350
** compare on lower
** correct
**  667 81
** answer: 336, groundtruth_str: 336
** compare on lower
** correct
**  668 81
** answer: 6, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  6
** groundtruth_num is (int, float)
** compare_two_numbers int 6 3
** wrong
**  668 82
** answer: 4000, groundtruth_str: 4000
** compare on lower
** correct
**  669 82
** answer: 43, groundtruth_str: 43
** compare on lower
** correct
**  670 82
** answer: 300, groundtruth_str: 240
** groundtruth_num is not None
** is_fraction:  300
** groundtruth_num is (int, float)
** compare_two_numbers int 300 240
** wrong
**  670 83
** answer: 128.0, groundtruth_str: 128
** groundtruth_num is not None
** is_fraction:  128.0
** groundtruth_num is (int, float)
** compare_two_numbers int 128 128
** correct
**  671 83
** answer: 107, groundtruth_str: 89
** groundtruth_num is not None
** is_fraction:  107
** groundtruth_num is (int, float)
** compare_two_numbers int 107 89
** wrong
**  671 84
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  672 84
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  673 84
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  674 84
** answer: 133, groundtruth_str: 133
** compare on lower
** correct
**  675 84
** answer: 60000, groundtruth_str: 60000
** compare on lower
** correct
**  676 84
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  677 84
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  678 84
** answer: 85, groundtruth_str: 85
** compare on lower
** correct
**  679 84
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  680 84
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  681 84
** answer: 490, groundtruth_str: 490
** compare on lower
** correct
**  682 84
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  683 84
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  684 84
** answer: 600, groundtruth_str: 675
** groundtruth_num is not None
** is_fraction:  600
** groundtruth_num is (int, float)
** compare_two_numbers int 600 675
** wrong
**  684 85
** answer: 110, groundtruth_str: 110
** compare on lower
** correct
**  685 85
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  686 85
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  687 85
** answer: 50.0, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  50.0
** groundtruth_num is (int, float)
** compare_two_numbers int 50 50
** correct
**  688 85
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  689 85
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  690 85
** answer: 276, groundtruth_str: 276
** compare on lower
** correct
**  691 85
** answer: 800, groundtruth_str: 800
** compare on lower
** correct
**  692 85
** answer: 4400, groundtruth_str: 4400
** compare on lower
** correct
**  693 85
** answer: 38.00, groundtruth_str: 38
** groundtruth_num is not None
** is_fraction:  38.00
** groundtruth_num is (int, float)
** compare_two_numbers int 38 38
** correct
**  694 85
** answer: 255, groundtruth_str: 255
** compare on lower
** correct
**  695 85
** answer: 11, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  11
** groundtruth_num is (int, float)
** compare_two_numbers int 11 25
** wrong
**  695 86
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  696 86
** answer: 27, groundtruth_str: 54
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers int 27 54
** wrong
**  696 87
** answer: 5, groundtruth_str: 4
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 4
** wrong
**  696 88
** answer: 7.50, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  7.50
** groundtruth_num is (int, float)
** compare_two_numbers int 7.5 15
** wrong
**  696 89
** answer: 155, groundtruth_str: 155
** compare on lower
** correct
**  697 89
** answer: 142, groundtruth_str: 142
** compare on lower
** correct
**  698 89
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  699 89
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  700 89
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  701 89
** answer: 12, groundtruth_str: 108
** groundtruth_num is not None
** is_fraction:  12
** groundtruth_num is (int, float)
** compare_two_numbers int 12 108
** wrong
**  701 90
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  702 90
** answer: 75.00, groundtruth_str: 75
** groundtruth_num is not None
** is_fraction:  75.00
** groundtruth_num is (int, float)
** compare_two_numbers int 75 75
** correct
**  703 90
** answer: 250, groundtruth_str: 250
** compare on lower
** correct
**  704 90
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  705 90
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  706 90
** answer: 1040000, groundtruth_str: 2880000
** groundtruth_num is not None
** is_fraction:  1040000
** groundtruth_num is (int, float)
** compare_two_numbers int 1040000 2880000
** wrong
**  706 91
** answer: 540, groundtruth_str: 540
** compare on lower
** correct
**  707 91
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  708 91
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  709 91
** answer: 428, groundtruth_str: 428
** compare on lower
** correct
**  710 91
** answer: 1240, groundtruth_str: 1240
** compare on lower
** correct
**  711 91
** answer: 5, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 6
** wrong
**  711 92
** answer: 9.0, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  9.0
** groundtruth_num is (int, float)
** compare_two_numbers int 9 9
** correct
**  712 92
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  713 92
** answer: 1170, groundtruth_str: 1170
** compare on lower
** correct
**  714 92
** answer: 0.5111, groundtruth_str: 70
** groundtruth_num is not None
** is_fraction:  0.5111
** groundtruth_num is (int, float)
** compare_two_numbers int 0.5111 70
** wrong
**  714 93
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  715 93
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  716 93
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  717 93
** answer: 310, groundtruth_str: 310
** compare on lower
** correct
**  718 93
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  719 93
** answer: 79, groundtruth_str: 79
** compare on lower
** correct
**  720 93
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  721 93
** answer: 68, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  68
** groundtruth_num is (int, float)
** compare_two_numbers int 68 11
** wrong
**  721 94
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  722 94
** answer: 4500, groundtruth_str: 4500
** compare on lower
** correct
**  723 94
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  724 94
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  725 94
** answer: 6,250, groundtruth_str: 6,250
** compare on lower
** correct
**  726 94
** answer: 720, groundtruth_str: 720
** compare on lower
** correct
**  727 94
** answer: 35, groundtruth_str: 35
** compare on lower
** correct
**  728 94
** answer: 1260, groundtruth_str: 1260
** compare on lower
** correct
**  729 94
** answer: 18, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 14
** wrong
**  729 95
** answer: 52, groundtruth_str: 52
** compare on lower
** correct
**  730 95
** answer: 153, groundtruth_str: 153
** compare on lower
** correct
**  731 95
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  732 95
** answer: none, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  732 96
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  733 96
** answer: 14,000, groundtruth_str: 14,000
** compare on lower
** correct
**  734 96
** answer: 1128, groundtruth_str: 1128
** compare on lower
** correct
**  735 96
** answer: 324.00, groundtruth_str: 324
** groundtruth_num is not None
** is_fraction:  324.00
** groundtruth_num is (int, float)
** compare_two_numbers int 324 324
** correct
**  736 96
** answer: 42, groundtruth_str: 42
** compare on lower
** correct
**  737 96
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  738 96
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  739 96
** answer: unknown(sincethedistanceisnotgiven), groundtruth_str: 48
** groundtruth_num is not None
** is_fraction:  unknown(sincethedistanceisnotgiven)
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  739 97
** answer: 140, groundtruth_str: 140
** compare on lower
** correct
**  740 97
** answer: 170, groundtruth_str: 120
** groundtruth_num is not None
** is_fraction:  170
** groundtruth_num is (int, float)
** compare_two_numbers int 170 120
** wrong
**  740 98
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  741 98
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  742 98
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  743 98
** answer: 5600, groundtruth_str: 5600
** compare on lower
** correct
**  744 98
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  745 98
** answer: 19, groundtruth_str: 19
** compare on lower
** correct
**  746 98
** answer: 180, groundtruth_str: 180
** compare on lower
** correct
**  747 98
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  748 98
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  749 98
** answer: none, groundtruth_str: 975
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  749 99
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  750 99
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  751 99
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  752 99
** answer: 110, groundtruth_str: 110
** compare on lower
** correct
**  753 99
** answer: 123, groundtruth_str: 123
** compare on lower
** correct
**  754 99
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  755 99
** answer: 144, groundtruth_str: 144
** compare on lower
** correct
**  756 99
** answer: none, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  756 100
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  757 100
** answer: 14000, groundtruth_str: 14000
** compare on lower
** correct
**  758 100
** answer: 3430, groundtruth_str: 3430
** compare on lower
** correct
**  759 100
** answer: 1520, groundtruth_str: 1520
** compare on lower
** correct
**  760 100
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  761 100
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  762 100
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  763 100
** answer: 110, groundtruth_str: 110
** compare on lower
** correct
**  764 100
** answer: 80, groundtruth_str: 80
** compare on lower
** correct
**  765 100
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  766 100
** answer: 28, groundtruth_str: 28
** compare on lower
** correct
**  767 100
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  768 100
** answer: 15.00, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  15.00
** groundtruth_num is (int, float)
** compare_two_numbers int 15 15
** correct
**  769 100
** answer: 500, groundtruth_str: 500
** compare on lower
** correct
**  770 100
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  771 100
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  772 100
** answer: 13.00, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  13.00
** groundtruth_num is (int, float)
** compare_two_numbers int 13 13
** correct
**  773 100
** answer: 12.00, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  12.00
** groundtruth_num is (int, float)
** compare_two_numbers int 12 12
** correct
**  774 100
** answer: 132, groundtruth_str: 132
** compare on lower
** correct
**  775 100
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  776 100
** answer: 41, groundtruth_str: 41
** compare on lower
** correct
**  777 100
** answer: 7000, groundtruth_str: 7000
** compare on lower
** correct
**  778 100
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  779 100
** answer: 575, groundtruth_str: 575
** compare on lower
** correct
**  780 100
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  781 100
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  782 100
** answer: 17, groundtruth_str: 5
** groundtruth_num is not None
** is_fraction:  17
** groundtruth_num is (int, float)
** compare_two_numbers int 17 5
** wrong
**  782 101
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  783 101
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  784 101
** answer: 500, groundtruth_str: 500
** compare on lower
** correct
**  785 101
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  786 101
** answer: 34, groundtruth_str: 34
** compare on lower
** correct
**  787 101
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  788 101
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  789 101
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  790 101
** answer: 55, groundtruth_str: 55
** compare on lower
** correct
**  791 101
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  792 101
** answer: 480, groundtruth_str: 480
** compare on lower
** correct
**  793 101
** answer: 74, groundtruth_str: 26
** groundtruth_num is not None
** is_fraction:  74
** groundtruth_num is (int, float)
** compare_two_numbers int 74 26
** wrong
**  793 102
** answer: 74, groundtruth_str: 74
** compare on lower
** correct
**  794 102
** answer: 250, groundtruth_str: 250
** compare on lower
** correct
**  795 102
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  796 102
** answer: 110, groundtruth_str: 110
** compare on lower
** correct
**  797 102
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  798 102
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  799 102
** answer: 2.0, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  2.0
** groundtruth_num is (int, float)
** compare_two_numbers int 2 1
** wrong
**  799 103
** answer: 8.00, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  8.00
** groundtruth_num is (int, float)
** compare_two_numbers int 8 8
** correct
**  800 103
** answer: 16.05, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  16.05
** groundtruth_num is (int, float)
** compare_two_numbers int 16.05 16
** correct
**  801 103
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  802 103
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  803 103
** answer: 4blueand6redshoeboxes, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  4blueand6redshoeboxes
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  803 104
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  804 104
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  805 104
** answer: 38, groundtruth_str: 38
** compare on lower
** correct
**  806 104
** answer: 700, groundtruth_str: 700
** compare on lower
** correct
**  807 104
** answer: 64.00, groundtruth_str: 64
** groundtruth_num is not None
** is_fraction:  64.00
** groundtruth_num is (int, float)
** compare_two_numbers int 64 64
** correct
**  808 104
** answer: 7.5, groundtruth_str: 6
** groundtruth_num is not None
** is_fraction:  7.5
** groundtruth_num is (int, float)
** compare_two_numbers int 7.5 6
** wrong
**  808 105
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  809 105
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  810 105
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  811 105
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  812 105
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  813 105
** answer: 56, groundtruth_str: 56
** compare on lower
** correct
**  814 105
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  815 105
** answer: 47, groundtruth_str: 47
** compare on lower
** correct
**  816 105
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  817 105
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  818 105
** answer: 9, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 2
** wrong
**  818 106
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  819 106
** answer: 2000, groundtruth_str: 2000
** compare on lower
** correct
**  820 106
** answer: 2, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  2
** groundtruth_num is (int, float)
** compare_two_numbers int 2 1
** wrong
**  820 107
** answer: 85,000, groundtruth_str: 85000
** groundtruth_num is not None
** is_fraction:  85,000
** groundtruth_num is (int, float)
** compare_two_numbers int 85000 85000
** correct
**  821 107
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  822 107
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  823 107
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  824 107
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  825 107
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  826 107
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  827 107
** answer: 410, groundtruth_str: 410
** compare on lower
** correct
**  828 107
** answer: 64,800, groundtruth_str: 64800
** groundtruth_num is not None
** is_fraction:  64,800
** groundtruth_num is (int, float)
** compare_two_numbers int 64800 64800
** correct
**  829 107
** answer: 250, groundtruth_str: 250
** compare on lower
** correct
**  830 107
** answer: 159, groundtruth_str: 159
** compare on lower
** correct
**  831 107
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  832 107
** answer: 650, groundtruth_str: 650
** compare on lower
** correct
**  833 107
** answer: 280, groundtruth_str: 280
** compare on lower
** correct
**  834 107
** answer: 842, groundtruth_str: 842
** compare on lower
** correct
**  835 107
** answer: 178.75, groundtruth_str: 205
** groundtruth_num is not None
** is_fraction:  178.75
** groundtruth_num is (int, float)
** compare_two_numbers int 178.75 205
** wrong
**  835 108
** answer: none, groundtruth_str: 50
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  835 109
** answer: 34.00, groundtruth_str: 34
** groundtruth_num is not None
** is_fraction:  34.00
** groundtruth_num is (int, float)
** compare_two_numbers int 34 34
** correct
**  836 109
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  837 109
** answer: 450, groundtruth_str: 450
** compare on lower
** correct
**  838 109
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  839 109
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  840 109
** answer: 42, groundtruth_str: 42
** compare on lower
** correct
**  841 109
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  842 109
** answer: 150, groundtruth_str: 300
** groundtruth_num is not None
** is_fraction:  150
** groundtruth_num is (int, float)
** compare_two_numbers int 150 300
** wrong
**  842 110
** answer: 1800, groundtruth_str: 360
** groundtruth_num is not None
** is_fraction:  1800
** groundtruth_num is (int, float)
** compare_two_numbers int 1800 360
** wrong
**  842 111
** answer: 452, groundtruth_str: 452
** compare on lower
** correct
**  843 111
** answer: 34, groundtruth_str: 34
** compare on lower
** correct
**  844 111
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  845 111
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  846 111
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  847 111
** answer: 40, groundtruth_str: 40
** compare on lower
** correct
**  848 111
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  849 111
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  850 111
** answer: 225, groundtruth_str: 225
** compare on lower
** correct
**  851 111
** answer: 600, groundtruth_str: 1000
** groundtruth_num is not None
** is_fraction:  600
** groundtruth_num is (int, float)
** compare_two_numbers int 600 1000
** wrong
**  851 112
** answer: 147, groundtruth_str: 147
** compare on lower
** correct
**  852 112
** answer: 200, groundtruth_str: 200
** compare on lower
** correct
**  853 112
** answer: 446, groundtruth_str: 374
** groundtruth_num is not None
** is_fraction:  446
** groundtruth_num is (int, float)
** compare_two_numbers int 446 374
** wrong
**  853 113
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  854 113
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  855 113
** answer: 227, groundtruth_str: 227
** compare on lower
** correct
**  856 113
** answer: 1800, groundtruth_str: 1800
** compare on lower
** correct
**  857 113
** answer: 33, groundtruth_str: 33
** compare on lower
** correct
**  858 113
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  859 113
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  860 113
** answer: 79, groundtruth_str: 79
** compare on lower
** correct
**  861 113
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  862 113
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  863 113
** answer: none, groundtruth_str: 540
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  863 114
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  864 114
** answer: 160, groundtruth_str: 160
** compare on lower
** correct
**  865 114
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  866 114
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  867 114
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  868 114
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  869 114
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  870 114
** answer: none, groundtruth_str: 342
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  870 115
** answer: 63, groundtruth_str: 63
** compare on lower
** correct
**  871 115
** answer: 70.00, groundtruth_str: 70
** groundtruth_num is not None
** is_fraction:  70.00
** groundtruth_num is (int, float)
** compare_two_numbers int 70 70
** correct
**  872 115
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  873 115
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  874 115
** answer: 45, groundtruth_str: 45
** compare on lower
** correct
**  875 115
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  876 115
** answer: 75, groundtruth_str: 15
** groundtruth_num is not None
** is_fraction:  75
** groundtruth_num is (int, float)
** compare_two_numbers int 75 15
** wrong
**  876 116
** answer: 52, groundtruth_str: 52
** compare on lower
** correct
**  877 116
** answer: 11, groundtruth_str: 11
** compare on lower
** correct
**  878 116
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  879 116
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  880 116
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  881 116
** answer: 6000, groundtruth_str: 6,600
** groundtruth_num is not None
** is_fraction:  6000
** groundtruth_num is (int, float)
** compare_two_numbers int 6000 6600
** wrong
**  881 117
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  882 117
** answer: 25%, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  25%
** groundtruth_num is (int, float)
** compare_two_numbers int 0.25 25
** wrong
**  882 118
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  883 118
** answer: 2.0, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  2.0
** groundtruth_num is (int, float)
** compare_two_numbers int 2 2
** correct
**  884 118
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  885 118
** answer: 480, groundtruth_str: 480
** compare on lower
** correct
**  886 118
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  887 118
** answer: 1490, groundtruth_str: 1490
** compare on lower
** correct
**  888 118
** answer: 828, groundtruth_str: 826
** groundtruth_num is not None
** is_fraction:  828
** groundtruth_num is (int, float)
** compare_two_numbers int 828 826
** wrong
**  888 119
** answer: 34, groundtruth_str: 34
** compare on lower
** correct
**  889 119
** answer: 230, groundtruth_str: 230
** compare on lower
** correct
**  890 119
** answer: 1875, groundtruth_str: 1,875
** groundtruth_num is not None
** is_fraction:  1875
** groundtruth_num is (int, float)
** compare_two_numbers int 1875 1875
** correct
**  891 119
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  892 119
** answer: 6000, groundtruth_str: 6000
** compare on lower
** correct
**  893 119
** answer: none, groundtruth_str: 94
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  893 120
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  894 120
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  895 120
** answer: 78, groundtruth_str: 78
** compare on lower
** correct
**  896 120
** answer: 139, groundtruth_str: 138
** groundtruth_num is not None
** is_fraction:  139
** groundtruth_num is (int, float)
** compare_two_numbers int 139 138
** wrong
**  896 121
** answer: 9, groundtruth_str: 45
** groundtruth_num is not None
** is_fraction:  9
** groundtruth_num is (int, float)
** compare_two_numbers int 9 45
** wrong
**  896 122
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  897 122
** answer: 98, groundtruth_str: 98
** compare on lower
** correct
**  898 122
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  899 122
** answer: 27, groundtruth_str: 36
** groundtruth_num is not None
** is_fraction:  27
** groundtruth_num is (int, float)
** compare_two_numbers int 27 36
** wrong
**  899 123
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  900 123
** answer: 77, groundtruth_str: 77
** compare on lower
** correct
**  901 123
** answer: 300, groundtruth_str: 300
** compare on lower
** correct
**  902 123
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  903 123
** answer: 43200, groundtruth_str: 43200
** compare on lower
** correct
**  904 123
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  905 123
** answer: 200, groundtruth_str: 200
** compare on lower
** correct
**  906 123
** answer: 34, groundtruth_str: 34
** compare on lower
** correct
**  907 123
** answer: none, groundtruth_str: 24
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  907 124
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  908 124
** answer: 450, groundtruth_str: 450
** compare on lower
** correct
**  909 124
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  910 124
** answer: 66, groundtruth_str: 66
** compare on lower
** correct
**  911 124
** answer: 40, groundtruth_str: 35
** groundtruth_num is not None
** is_fraction:  40
** groundtruth_num is (int, float)
** compare_two_numbers int 40 35
** wrong
**  911 125
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  912 125
** answer: 10.0, groundtruth_str: 10
** groundtruth_num is not None
** is_fraction:  10.0
** groundtruth_num is (int, float)
** compare_two_numbers int 10 10
** correct
**  913 125
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  914 125
** answer: 160, groundtruth_str: 160
** compare on lower
** correct
**  915 125
** answer: 736, groundtruth_str: 736
** compare on lower
** correct
**  916 125
** answer: 101.00, groundtruth_str: 101
** groundtruth_num is not None
** is_fraction:  101.00
** groundtruth_num is (int, float)
** compare_two_numbers int 101 101
** correct
**  917 125
** answer: 7.17, groundtruth_str: 3
** groundtruth_num is not None
** is_fraction:  7.17
** groundtruth_num is (int, float)
** compare_two_numbers int 7.17 3
** wrong
**  917 126
** answer: 130000, groundtruth_str: 130000
** compare on lower
** correct
**  918 126
** answer: 1, groundtruth_str: 1
** compare on lower
** correct
**  919 126
** answer: 420, groundtruth_str: 420
** compare on lower
** correct
**  920 126
** answer: 1.97, groundtruth_str: 189
** groundtruth_num is not None
** is_fraction:  1.97
** groundtruth_num is (int, float)
** compare_two_numbers int 1.97 189
** wrong
**  920 127
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  921 127
** answer: 9,860.58, groundtruth_str: 7400
** groundtruth_num is not None
** is_fraction:  9,860.58
** groundtruth_num is (int, float)
** compare_two_numbers int 9860.58 7400
** wrong
**  921 128
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  922 128
** answer: 1630.0, groundtruth_str: 655
** groundtruth_num is not None
** is_fraction:  1630.0
** groundtruth_num is (int, float)
** compare_two_numbers int 1630 655
** wrong
**  922 129
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  923 129
** answer: 110, groundtruth_str: 110
** compare on lower
** correct
**  924 129
** answer: 55, groundtruth_str: 55
** compare on lower
** correct
**  925 129
** answer: 2400, groundtruth_str: 2400
** compare on lower
** correct
**  926 129
** answer: 2304, groundtruth_str: 2304
** compare on lower
** correct
**  927 129
** answer: 156, groundtruth_str: 156
** compare on lower
** correct
**  928 129
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  929 129
** answer: 250, groundtruth_str: 250
** compare on lower
** correct
**  930 129
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  931 129
** answer: 31, groundtruth_str: 31
** compare on lower
** correct
**  932 129
** answer: 58, groundtruth_str: 58
** compare on lower
** correct
**  933 129
** answer: 482, groundtruth_str: 482
** compare on lower
** correct
**  934 129
** answer: 320, groundtruth_str: 320
** compare on lower
** correct
**  935 129
** answer: 247, groundtruth_str: 247
** compare on lower
** correct
**  936 129
** answer: 95.0, groundtruth_str: 95
** groundtruth_num is not None
** is_fraction:  95.0
** groundtruth_num is (int, float)
** compare_two_numbers int 95 95
** correct
**  937 129
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  938 129
** answer: 245, groundtruth_str: 245
** compare on lower
** correct
**  939 129
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  940 129
** answer: 300, groundtruth_str: 300
** compare on lower
** correct
**  941 129
** answer: 18.00, groundtruth_str: 18
** groundtruth_num is not None
** is_fraction:  18.00
** groundtruth_num is (int, float)
** compare_two_numbers int 18 18
** correct
**  942 129
** answer: 251, groundtruth_str: 251
** compare on lower
** correct
**  943 129
** answer: 288, groundtruth_str: 85
** groundtruth_num is not None
** is_fraction:  288
** groundtruth_num is (int, float)
** compare_two_numbers int 288 85
** wrong
**  943 130
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  944 130
** answer: 750, groundtruth_str: 750
** compare on lower
** correct
**  945 130
** answer: 20, groundtruth_str: 16
** groundtruth_num is not None
** is_fraction:  20
** groundtruth_num is (int, float)
** compare_two_numbers int 20 16
** wrong
**  945 131
** answer: 162.00, groundtruth_str: 162
** groundtruth_num is not None
** is_fraction:  162.00
** groundtruth_num is (int, float)
** compare_two_numbers int 162 162
** correct
**  946 131
** answer: none, groundtruth_str: 145
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  946 132
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  947 132
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  948 132
** answer: 72,000, groundtruth_str: 72000
** groundtruth_num is not None
** is_fraction:  72,000
** groundtruth_num is (int, float)
** compare_two_numbers int 72000 72000
** correct
**  949 132
** answer: 195, groundtruth_str: 195
** compare on lower
** correct
**  950 132
** answer: 1, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  1
** groundtruth_num is (int, float)
** compare_two_numbers int 1 2
** wrong
**  950 133
** answer: 2.00, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  2.00
** groundtruth_num is (int, float)
** compare_two_numbers int 2 2
** correct
**  951 133
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  952 133
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  953 133
** answer: 131,250, groundtruth_str: 131250
** groundtruth_num is not None
** is_fraction:  131,250
** groundtruth_num is (int, float)
** compare_two_numbers int 131250 131250
** correct
**  954 133
** answer: 48, groundtruth_str: 12
** groundtruth_num is not None
** is_fraction:  48
** groundtruth_num is (int, float)
** compare_two_numbers int 48 12
** wrong
**  954 134
** answer: 28.33, groundtruth_str: 30
** groundtruth_num is not None
** is_fraction:  28.33
** groundtruth_num is (int, float)
** compare_two_numbers int 28.33 30
** wrong
**  954 135
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  955 135
** answer: 72, groundtruth_str: 72
** compare on lower
** correct
**  956 135
** answer: 1000, groundtruth_str: 1000
** compare on lower
** correct
**  957 135
** answer: 1080, groundtruth_str: 1080
** compare on lower
** correct
**  958 135
** answer: 144, groundtruth_str: 144
** compare on lower
** correct
**  959 135
** answer: none, groundtruth_str: 25
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  959 136
** answer: 270, groundtruth_str: 270
** compare on lower
** correct
**  960 136
** answer: 240, groundtruth_str: 240
** compare on lower
** correct
**  961 136
** answer: 480, groundtruth_str: 480
** compare on lower
** correct
**  962 136
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  963 136
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  964 136
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  965 136
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  966 136
** answer: 113.00, groundtruth_str: 113
** groundtruth_num is not None
** is_fraction:  113.00
** groundtruth_num is (int, float)
** compare_two_numbers int 113 113
** correct
**  967 136
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  968 136
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  969 136
** answer: none, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  969 137
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  970 137
** answer: 600, groundtruth_str: 360
** groundtruth_num is not None
** is_fraction:  600
** groundtruth_num is (int, float)
** compare_two_numbers int 600 360
** wrong
**  970 138
** answer: 38, groundtruth_str: 38
** compare on lower
** correct
**  971 138
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  972 138
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  973 138
** answer: 157, groundtruth_str: 157
** compare on lower
** correct
**  974 138
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  975 138
** answer: -3, groundtruth_str: -3
** compare on lower
** correct
**  976 138
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  977 138
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  978 138
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  979 138
** answer: 9.0, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  9.0
** groundtruth_num is (int, float)
** compare_two_numbers int 9 9
** correct
**  980 138
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  981 138
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  982 138
** answer: 560, groundtruth_str: 560
** compare on lower
** correct
**  983 138
** answer: 35, groundtruth_str: 35
** compare on lower
** correct
**  984 138
** answer: 18, groundtruth_str: 18
** compare on lower
** correct
**  985 138
** answer: 105, groundtruth_str: 105
** compare on lower
** correct
**  986 138
** answer: 64, groundtruth_str: 64
** compare on lower
** correct
**  987 138
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  988 138
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  989 138
** answer: 750, groundtruth_str: 750
** compare on lower
** correct
**  990 138
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  991 138
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  992 138
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  993 138
** answer: 96, groundtruth_str: 96
** compare on lower
** correct
**  994 138
** answer: 45000, groundtruth_str: 45000
** compare on lower
** correct
**  995 138
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  996 138
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  997 138
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  998 138
** answer: 26, groundtruth_str: 26
** compare on lower
** correct
**  999 138
** answer: 68, groundtruth_str: 68
** compare on lower
** correct
**  1000 138
** answer: 700, groundtruth_str: 700
** compare on lower
** correct
**  1001 138
** answer: 1.0, groundtruth_str: 1
** groundtruth_num is not None
** is_fraction:  1.0
** groundtruth_num is (int, float)
** compare_two_numbers int 1 1
** correct
**  1002 138
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  1003 138
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  1004 138
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  1005 138
** answer: 300, groundtruth_str: 300
** compare on lower
** correct
**  1006 138
** answer: 34, groundtruth_str: 34
** compare on lower
** correct
**  1007 138
** answer: 291, groundtruth_str: 291
** compare on lower
** correct
**  1008 138
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  1009 138
** answer: none, groundtruth_str: 22
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1009 139
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  1010 139
** answer: 93, groundtruth_str: 93
** compare on lower
** correct
**  1011 139
** answer: 21, groundtruth_str: 21
** compare on lower
** correct
**  1012 139
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  1013 139
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  1014 139
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  1015 139
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  1016 139
** answer: 13, groundtruth_str: 13
** compare on lower
** correct
**  1017 139
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  1018 139
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1019 139
** answer: 7300, groundtruth_str: 7300
** compare on lower
** correct
**  1020 139
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  1021 139
** answer: 1125, groundtruth_str: 1125
** compare on lower
** correct
**  1022 139
** answer: 140, groundtruth_str: 170
** groundtruth_num is not None
** is_fraction:  140
** groundtruth_num is (int, float)
** compare_two_numbers int 140 170
** wrong
**  1022 140
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1023 140
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  1024 140
** answer: 9, groundtruth_str: 9
** compare on lower
** correct
**  1025 140
** answer: 1248, groundtruth_str: 1248
** compare on lower
** correct
**  1026 140
** answer: 2550, groundtruth_str: 2350
** groundtruth_num is not None
** is_fraction:  2550
** groundtruth_num is (int, float)
** compare_two_numbers int 2550 2350
** wrong
**  1026 141
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  1027 141
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  1028 141
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1029 141
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1030 141
** answer: 3160, groundtruth_str: 3160
** compare on lower
** correct
**  1031 141
** answer: 93, groundtruth_str: 93
** compare on lower
** correct
**  1032 141
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  1033 141
** answer: 240, groundtruth_str: 240
** compare on lower
** correct
**  1034 141
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  1035 141
** answer: 5, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  5
** groundtruth_num is (int, float)
** compare_two_numbers int 5 2
** wrong
**  1035 142
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  1036 142
** answer: 17, groundtruth_str: 17
** compare on lower
** correct
**  1037 142
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  1038 142
** answer: 5600, groundtruth_str: 5600
** compare on lower
** correct
**  1039 142
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  1040 142
** answer: 18, groundtruth_str: 1800
** groundtruth_num is not None
** is_fraction:  18
** groundtruth_num is (int, float)
** compare_two_numbers int 18 1800
** wrong
**  1040 143
** answer: 13, groundtruth_str: 11
** groundtruth_num is not None
** is_fraction:  13
** groundtruth_num is (int, float)
** compare_two_numbers int 13 11
** wrong
**  1040 144
** answer: 306, groundtruth_str: 306
** compare on lower
** correct
**  1041 144
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  1042 144
** answer: 19, groundtruth_str: 19
** compare on lower
** correct
**  1043 144
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1044 144
** answer: 24, groundtruth_str: 24
** compare on lower
** correct
**  1045 144
** answer: 6, groundtruth_str: 6
** compare on lower
** correct
**  1046 144
** answer: 194, groundtruth_str: 19
** groundtruth_num is not None
** is_fraction:  194
** groundtruth_num is (int, float)
** compare_two_numbers int 194 19
** wrong
**  1046 145
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  1047 145
** answer: 280, groundtruth_str: 280
** compare on lower
** correct
**  1048 145
** answer: 9.00, groundtruth_str: 9
** groundtruth_num is not None
** is_fraction:  9.00
** groundtruth_num is (int, float)
** compare_two_numbers int 9 9
** correct
**  1049 145
** answer: 1200, groundtruth_str: 1200
** compare on lower
** correct
**  1050 145
** answer: 320, groundtruth_str: 320
** compare on lower
** correct
**  1051 145
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  1052 145
** answer: 2400, groundtruth_str: 2400
** compare on lower
** correct
**  1053 145
** answer: 140, groundtruth_str: 140
** compare on lower
** correct
**  1054 145
** answer: 2.67, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  2.67
** groundtruth_num is (int, float)
** compare_two_numbers int 2.67 2
** wrong
**  1054 146
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  1055 146
** answer: 42, groundtruth_str: 42
** compare on lower
** correct
**  1056 146
** answer: 19, groundtruth_str: 19
** compare on lower
** correct
**  1057 146
** answer: 240, groundtruth_str: 240
** compare on lower
** correct
**  1058 146
** answer: 168, groundtruth_str: 168
** compare on lower
** correct
**  1059 146
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1060 146
** answer: 40,000, groundtruth_str: 40,000
** compare on lower
** correct
**  1061 146
** answer: 64, groundtruth_str: 64
** compare on lower
** correct
**  1062 146
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  1063 146
** answer: 29, groundtruth_str: 29
** compare on lower
** correct
**  1064 146
** answer: 288, groundtruth_str: 288
** compare on lower
** correct
**  1065 146
** answer: 448, groundtruth_str: 448
** compare on lower
** correct
**  1066 146
** answer: 150, groundtruth_str: 150
** compare on lower
** correct
**  1067 146
** answer: 31, groundtruth_str: 31
** compare on lower
** correct
**  1068 146
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1069 146
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  1070 146
** answer: none, groundtruth_str: 20
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1070 147
** answer: 75, groundtruth_str: 75
** compare on lower
** correct
**  1071 147
** answer: 225, groundtruth_str: 225
** compare on lower
** correct
**  1072 147
** answer: 100, groundtruth_str: 100
** compare on lower
** correct
**  1073 147
** answer: 32, groundtruth_str: 32
** compare on lower
** correct
**  1074 147
** answer: 10, groundtruth_str: 10
** compare on lower
** correct
**  1075 147
** answer: 350, groundtruth_str: 350
** compare on lower
** correct
**  1076 147
** answer: 8.00, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  8.00
** groundtruth_num is (int, float)
** compare_two_numbers int 8 8
** correct
**  1077 147
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1078 147
** answer: 3, groundtruth_str: 3
** compare on lower
** correct
**  1079 147
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  1080 147
** answer: 66, groundtruth_str: 66
** compare on lower
** correct
**  1081 147
** answer: 31, groundtruth_str: 31
** compare on lower
** correct
**  1082 147
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  1083 147
** answer: 440, groundtruth_str: 440
** compare on lower
** correct
**  1084 147
** answer: 70.0, groundtruth_str: 70
** groundtruth_num is not None
** is_fraction:  70.0
** groundtruth_num is (int, float)
** compare_two_numbers int 70 70
** correct
**  1085 147
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  1086 147
** answer: 81, groundtruth_str: 81
** compare on lower
** correct
**  1087 147
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  1088 147
** answer: 60.0, groundtruth_str: 60
** groundtruth_num is not None
** is_fraction:  60.0
** groundtruth_num is (int, float)
** compare_two_numbers int 60 60
** correct
**  1089 147
** answer: 84, groundtruth_str: 84
** compare on lower
** correct
**  1090 147
** answer: 78, groundtruth_str: 78
** compare on lower
** correct
**  1091 147
** answer: 520.0, groundtruth_str: 520
** groundtruth_num is not None
** is_fraction:  520.0
** groundtruth_num is (int, float)
** compare_two_numbers int 520 520
** correct
**  1092 147
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  1093 147
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1094 147
** answer: 8.00, groundtruth_str: 8
** groundtruth_num is not None
** is_fraction:  8.00
** groundtruth_num is (int, float)
** compare_two_numbers int 8 8
** correct
**  1095 147
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  1096 147
** answer: 50, groundtruth_str: 50
** compare on lower
** correct
**  1097 147
** answer: 35, groundtruth_str: 35
** compare on lower
** correct
**  1098 147
** answer: 96, groundtruth_str: 96
** compare on lower
** correct
**  1099 147
** answer: 3360, groundtruth_str: 3360
** compare on lower
** correct
**  1100 147
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  1101 147
** answer: 187.5, groundtruth_str: 750
** groundtruth_num is not None
** is_fraction:  187.5
** groundtruth_num is (int, float)
** compare_two_numbers int 187.5 750
** wrong
**  1101 148
** answer: 56, groundtruth_str: 56
** compare on lower
** correct
**  1102 148
** answer: 22, groundtruth_str: 22
** compare on lower
** correct
**  1103 148
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  1104 148
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  1105 148
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  1106 148
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  1107 148
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  1108 148
** answer: 15, groundtruth_str: 15
** compare on lower
** correct
**  1109 148
** answer: 14.00, groundtruth_str: 14
** groundtruth_num is not None
** is_fraction:  14.00
** groundtruth_num is (int, float)
** compare_two_numbers int 14 14
** correct
**  1110 148
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  1111 148
** answer: 7200, groundtruth_str: 7200
** compare on lower
** correct
**  1112 148
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1113 148
** answer: 235.00, groundtruth_str: 235
** groundtruth_num is not None
** is_fraction:  235.00
** groundtruth_num is (int, float)
** compare_two_numbers int 235 235
** correct
**  1114 148
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  1115 148
** answer: 500, groundtruth_str: 500
** compare on lower
** correct
**  1116 148
** answer: 210, groundtruth_str: 210
** compare on lower
** correct
**  1117 148
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  1118 148
** answer: 147, groundtruth_str: 147
** compare on lower
** correct
**  1119 148
** answer: 80, groundtruth_str: 40
** groundtruth_num is not None
** is_fraction:  80
** groundtruth_num is (int, float)
** compare_two_numbers int 80 40
** wrong
**  1119 149
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  1120 149
** answer: 54, groundtruth_str: 54
** compare on lower
** correct
**  1121 149
** answer: 3528, groundtruth_str: 3528
** compare on lower
** correct
**  1122 149
** answer: 43, groundtruth_str: 43
** compare on lower
** correct
**  1123 149
** answer: 296, groundtruth_str: 296
** compare on lower
** correct
**  1124 149
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  1125 149
** answer: 38, groundtruth_str: 38
** compare on lower
** correct
**  1126 149
** answer: 16, groundtruth_str: 16
** compare on lower
** correct
**  1127 149
** answer: 70, groundtruth_str: 70
** compare on lower
** correct
**  1128 149
** answer: 48, groundtruth_str: 48
** compare on lower
** correct
**  1129 149
** answer: 665, groundtruth_str: 665
** compare on lower
** correct
**  1130 149
** answer: 180.00, groundtruth_str: 180
** groundtruth_num is not None
** is_fraction:  180.00
** groundtruth_num is (int, float)
** compare_two_numbers int 180 180
** correct
**  1131 149
** answer: 7, groundtruth_str: 7
** compare on lower
** correct
**  1132 149
** answer: 20, groundtruth_str: 20
** compare on lower
** correct
**  1133 149
** answer: 12, groundtruth_str: 12
** compare on lower
** correct
**  1134 149
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  1135 149
** answer: 25, groundtruth_str: 25
** compare on lower
** correct
**  1136 149
** answer: 1,218, groundtruth_str: 1218
** groundtruth_num is not None
** is_fraction:  1,218
** groundtruth_num is (int, float)
** compare_two_numbers int 1218 1218
** correct
**  1137 149
** answer: 105, groundtruth_str: 105
** compare on lower
** correct
**  1138 149
** answer: 84, groundtruth_str: 84
** compare on lower
** correct
**  1139 149
** answer: none, groundtruth_str: 34
** groundtruth_num is not None
** is_fraction:  none
** groundtruth_num is (int, float)
** compare_two_numbers Exception
** wrong
**  1139 150
** answer: 101, groundtruth_str: 101
** compare on lower
** correct
**  1140 150
** answer: 90, groundtruth_str: 90
** compare on lower
** correct
**  1141 150
** answer: 27, groundtruth_str: 27
** compare on lower
** correct
**  1142 150
** answer: 67, groundtruth_str: 67
** compare on lower
** correct
**  1143 150
** answer: 140,000, groundtruth_str: 140000
** groundtruth_num is not None
** is_fraction:  140,000
** groundtruth_num is (int, float)
** compare_two_numbers int 140000 140000
** correct
**  1144 150
** answer: 36, groundtruth_str: 36
** compare on lower
** correct
**  1145 150
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1146 150
** answer: 335, groundtruth_str: 335
** compare on lower
** correct
**  1147 150
** answer: 60, groundtruth_str: 60
** compare on lower
** correct
**  1148 150
** answer: 31.00, groundtruth_str: 31
** groundtruth_num is not None
** is_fraction:  31.00
** groundtruth_num is (int, float)
** compare_two_numbers int 31 31
** correct
**  1149 150
** answer: 13.00, groundtruth_str: 13
** groundtruth_num is not None
** is_fraction:  13.00
** groundtruth_num is (int, float)
** compare_two_numbers int 13 13
** correct
**  1150 150
** answer: 120, groundtruth_str: 120
** compare on lower
** correct
**  1151 150
** answer: 23, groundtruth_str: 23
** compare on lower
** correct
**  1152 150
** answer: 72, groundtruth_str: 72
** compare on lower
** correct
**  1153 150
** answer: 4, groundtruth_str: 4
** compare on lower
** correct
**  1154 150
** answer: 1000, groundtruth_str: 1000
** compare on lower
** correct
**  1155 150
** answer: 2325, groundtruth_str: 2325
** compare on lower
** correct
**  1156 150
** answer: 2, groundtruth_str: 2
** compare on lower
** correct
**  1157 150
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  1158 150
** answer: 30, groundtruth_str: 30
** compare on lower
** correct
**  1159 150
** answer: 2180, groundtruth_str: 2280
** groundtruth_num is not None
** is_fraction:  2180
** groundtruth_num is (int, float)
** compare_two_numbers int 2180 2280
** wrong
**  1159 151
** answer: 32, groundtruth_str: 64
** groundtruth_num is not None
** is_fraction:  32
** groundtruth_num is (int, float)
** compare_two_numbers int 32 64
** wrong
**  1159 152
** answer: 594, groundtruth_str: 594
** compare on lower
** correct
**  1160 152
** answer: 180, groundtruth_str: 180
** compare on lower
** correct
**  1161 152
** answer: 2.0, groundtruth_str: 2
** groundtruth_num is not None
** is_fraction:  2.0
** groundtruth_num is (int, float)
** compare_two_numbers int 2 2
** correct
**  1162 152
** answer: 8, groundtruth_str: 8
** compare on lower
** correct
**  1163 152
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1164 152
** answer: 230, groundtruth_str: 230
** compare on lower
** correct
**  1165 152
** answer: 5, groundtruth_str: 5
** compare on lower
** correct
**  1166 152
** answer: 14, groundtruth_str: 14
** compare on lower
** correct
**  1167 152
Accuracy:  0.8847611827141774
